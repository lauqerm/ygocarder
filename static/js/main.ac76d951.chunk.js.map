{"version":3,"sources":["model/canvas.ts","model/foil-finish-dye.tsx","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/flag.tsx","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/dye.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/color.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-batch-download.ts","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","service/use-carder-db/index.ts","service/use-color-picker/index.ts","service/use-global.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/mask.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","service/use-ocg-font.ts","service/use-preset-manager.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom/color.tsx","component/atom/copiable.tsx","component/atom/index.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/preset-option/index.tsx","component/card-layout-preview.tsx","component/preset-manager/index.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/inline-color-picker/index.tsx","component/inline-sketch-picker/index.tsx","component/lightbox/index.tsx","component/link-marker/index.tsx","component/setting-panel/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/attribute-input-group.tsx","page/input-panel/star-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/frame-setting-panel/frame-preset-panel.tsx","page/input-panel/frame-setting-panel/frame-behavior-setting-panel.tsx","page/input-panel/frame-setting-panel/index.tsx","page/common/index.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/batch-download-button.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","effectBox","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artFrameX","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","_objectSpread","distributionMode","result","type3CommonInstruction","blendMode","type8CommonInstruction","FinishMap","type1","partInstructionMap","pendulumSubstituteMap","type2","type3","type4","type5","type6","type7","type8","type9","type10","type11","type12","type13","ArtFinishMap","art","small","medium","large","OtherFinishTypeMap","key","labelKey","background","attribute","icon","sticker","FoilMap","color","isOption","gold","platinum","getFoilList","DyeIndexMap","topLeftFrame","topRightFrame","bottomLeftFrame","bottomRightFrame","effectBackground","pendulumEffectBackground","foil","NO_ATTRIBUTE","AttributeList","nameKey","isCreative","ExtraAttributeList","RegionMap","category","fileKey","DefaultFormatAttribute","tcg","en","ocg","jp","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","fullLabelKey","isMixable","showIcon","className","alt","src","concat","process","IconTypeList","Object","values","IconTypeAttributeMap","IconTypeAttributeList","IconTypeStMap","IconTypeStList","TotalIconTypeMap","MAX_STAR_LENGTH","AUTO_FONT","getDefaultNameStyle","font","fillStyle","headTextFillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","hasShadow","lineColor","lineWidth","lineOffsetY","lineOffsetX","hasOutline","gradientAngle","gradientColor","hasGradient","embossPitch","embossYaw","embossThickness","hasEmboss","preset","pattern","createPresetNameStyle","presetValue","PresetNameStyleMap","commonB","image","commonW","skillDefault","skillArial","rare","secretGradient","secret","platinum2","ultra","ultra2","animeRed","animeSilver","animeGold","promo","embossGold","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","overrideFill","PatternList","PendulumSizeMap","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","FlagInfoList","index","FlagIndexMap","FLAG_LENGTH","length","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","vietnameseFont","vietnameseFontRatio","letterOffsetMap","baseline","yRatio","DefaultTCGEffectFontData","fontStyle","fontList","variant","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","edge","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","DefaultFrameInfo","FramePositionMap","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","STYLING_TAG_SOURCE","ITALIC_CLOSE_TAG","WHOLE_WORD_SOURCE","WholeWordRegex","VietnameseDiacriticLetterRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","FULL_LINE_PLACEHOLDER","FLAVOR_LINE_PLACEHOLDER","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","region","leftFrame","rightFrame","pendulumRightFrame","finish","otherFinish","artFinish","nameStyleType","nameStyle","subFamily","cardIcon","star","starAlignment","starList","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","linkRating","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","minLine","justifyRatio","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","flag","dyeList","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","getSlindingTypeList","language","cardWidth","cardHeight","createCanvas","arguments","undefined","canvas","document","createElement","ctx","getContext","distanceTransform","array","exponent","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","dyeCanvas","baseCanvas","HexColorRegex","test","overlayContext","overlayCanvas","filter","drawImage","globalCompositeOperation","fillRect","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","checkLightFooter","includes","checkDiplayLinkRating","displayMode","showLinkRating","resolveFrameStyle","frameData","_ref2","_ref3","_ref4","_ref5","resolvedFrame","resolvedTopLeft","resolvedBottomLeft","resolveNameStyle","_ref6","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","isSpeedSkill","contextualFont","lightHeader","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","strokeStyle","foilStyle","frameStyle","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","kanjiHelper","defaultFlagList","currentFlagList","defaultDyeList","currentDyeList","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","normalizeCardName","replaceAll","normalizeCardEffect","downloadBlob","link","href","window","download","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","_objectWithoutProperties","_excluded","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","hexToRgba","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","componentToHex","c","toString","getContrastColor","rgbColor","_rgbColor$","_rgbColor$2","_rgbColor$3","MAX_CONDENSER_THRESHOLD","condense","worker","minThreshold","effectiveMedian","condenser","median","lastEffective","iterateCount","magnitude","maxThreshold","searchDown","reverseSearch","getMedian","setMedian","newMedian","setLastEffective","getLastEffective","applyLastEffective","getIterateCount","createCondenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","swapTextData","currentTextData","nextFontData","fontLevel","nextCurrentFont","combinedFontData","currentFont","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","cnt","setCnt","useState","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","random","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","forceRefocus","_document$querySelect","selector","querySelector","focus","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","_taggedTemplateLiteral","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","targetRegion","termMap","newSetId","_termMap$entry","useBatchDownload","create","batchName","batch","batchQueue","batchDataMap","isBatchDownloading","isReady","startBatchDownload","stopBatchDownload","clearQueue","addToBatch","cardId","cardName","cardBlob","nextQueue","nextBatchDataMap","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","guide.format.section-7.content","colorTab","scaleType","useI18N","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","startsWith","csvToCardList","headerIndexMap","_reader","_reader2","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader0","_reader1","_reader10","_reader11","_reader12","_reader13","_reader14","_reader15","_reader$split$filter","_reader16","_reader17","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_reader40","_reader41","_reader42","_reader43","_reader44","_emptyCard$isLink","_filter","_reader45","_reader47","_reader48","_reader49","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","finishBackground","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","effectMinLine","pendulumEffectMinLine","effectJustifyRatio","pendulumEffectJustifyRatio","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader46","baseFlag","Number","baseDyeList","String","getDefaultDyeList","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","selectedMap","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","artCropRight","backgroundCropRight","restRCard","_excluded2","equals","setActiveId","selectCard","_ref8","nextMap","setSelectMap","_ref9","prev","curr","setCardList","_cardList$","deleteCard","_ref0","_ref1","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","exportScheme","globalScale","mirrorPendulumScale","reduceMotionColor","resolution","showCreativeOption","showExtraAttribute","showExtraDecorativeOption","slidingType","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","getCardDataUrl","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","addToCurrentBatch","fetchedDataUrl","classList","_document$querySelect2","click","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","path","insertUrlParam","onSave","_document$querySelect3","queuingSize","isPipelineRunning","useCarderDb","db","setDb","dbReady","setDbReady","openDB","upgrade","objectStoreNames","contains","createObjectStore","keyPath","setupYgoCarderDb","useColorPicker","onChange","currentText","setCurrentText","internalValue","setInternalValue","rgb","normalizedText","inputText","setColor","useGlobalMemory","memory","activeDropzone","layoutPresetList","nameStylePresetList","content","updateGlobalMemory","useGlobal","targetMemory","useShallow","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","imageCacheMap","drawAsset","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawFrom","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","vietnameseFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyFuriganaFont","bold","stopApplyFuriganaFont","applyLargerText","fontRatio","stopApplyLargerText","applyNumberFont","stopApplyNumberFont","applyOrdinalFont","stopApplyOrdinalFont","applySymbolFont","nextRatio","stopApplySymbolFont","applyVietnameseFont","stopApplyVietnameseFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","_letterOffsetMap$curr","_letterOffsetMap$frag","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","_textData$fontData$va","_textData$fontData","italicFontData","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","defaultFontData","currentFontData","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","_defaultFontData$vari","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","_letterOffsetMap$frag2","_letterOffsetMap$frag3","fontSizeRatio","offsetBaseline","offsetEdge","normalizeCardText","multiline","dictionaryType","nonNullableText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","isNormal","fontDataKey","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","baseMinLine","baseJustifyRatio","sizeLevel","normalizedContent","lineList","fullLineListOption","effectFlavorCondition","_flavorConditionRegex","lineRegexSource","fullLineRegexSource","wholeLineRegex","effectText","potentialFlavorConditionText","exec","tryCnt","lineReplacement","lineContent","fullLineReplacement","fullLineContent","paragraphResult","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","precalculatedLine","finalTokenList","finalSpaceWidth","finalTextData","_fullLineListOption$s","shift","flavorFontData","dynamicFlavorFontData","flavorTextCurrentFont","flavorTextData","MaskPromise","right","applyAlphaMask","urlOrCanvas","maskData","layerData","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resolvedLayoutStyle","resolvedEffectBackground","resolvedPendulumEffectBackground","resultAPI","drawFrame","willReplaceFrame","topFrameCtx","topFrameCanvas","dyedTopFrameCanvas","dyedTopFrameCtx","topRightCanvas","dyedTopRightCanvas","bottomFrameCtx","bottomFrameCanvas","dyedBottomFrameCanvas","dyedBottomFrameCtx","bottomRightCanvas","dyedBottomRightCanvas","backgroundWidth","backgroundHeight","resetTransform","drawCardArt","externalCtx","imageWidth","imageHeight","drawBackground","_otherFinish$","hasArtBorder","backgroundFinish","loopBackgroundFinish","drawAttribute","_otherFinish$2","attributeCanvas","attributeCtx","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishCtx","drawStar","_otherFinish$3","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","normalizedStarList","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starCtx","all","_","cardIconName","starFinishCanvas","starFinishCtx","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconCtx","drawStatBorder","drawNameBackground","nameBackgroundCtx","nameBackgroundCanvas","dyedLeftNameCanvas","dyedLeftNameCtx","nameRightCanvas","dyedRightNameCanvas","drawEffectBackground","withPendulum","effectBackgroundCtx","effectBackgroundCanvas","effectBoxX","dyedEffectBackgroundCanvas","_PendulumSizeMapExcep","pendulumEffectBackgroundCtx","pendulumEffectBackgroundCanvas","dyedPendulumEffectBackgroundCanvas","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","willDye","validDyeColor","usedFoil","pendulumBorderCanvas","pendulumBorderCtx","dyedCardBorderFoilCanvas","pendulumBorderFoilCtx","pendulumBorderFoilCanvas","dyedPendulumBorderFoilCanvas","drawEffectBorder","drawCardBorder","cardBorderFoilCtx","cardBorderFoilCanvas","drawArtBorderFoil","artBorderFoilCtx","artBorderFoilCanvas","dyedArtBorderFoilCanvas","drawEffectBorderFoil","effectBorderFoilCtx","effectBorderFoilCanvas","dyedEffectBorderFoilCanvas","drawNameFinish","drawAttributeFinish","drawArtFinish","artCtx","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","digitList","digit","accLeft","firstDigit","secondDigit","firstDigitWidth","secondDigitWidth","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","nextWidth","condenseRatio","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","bottomFrame","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightRightFooter","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","foilDyeColor","normalizedSubFamily","normalizedTypeAbility","showDefAndLinkFlag","linkRatingDisplayMode","isLinkST","showDefAndLink","statInEffect","typeInEffect","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","normalizedOpacity","keepEffectBox","fillBaseColor","w","customFill","artOnCardCanvas","artOnCardCtx","combinedArtCanvas","combinedArtCtx","normalizedLinkRating","rating","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_statCanvasRef$curren","hasLink","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","actualEdge","actualBaseline","actualBaselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","useItalic","effectIndexSize","coordinateKey","getEffectFontAndCoordinate","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","iconCanvas","iconCtx","iconFinishCanvas","iconFinishCtx","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","positionType","isActive","baseLink","activeLink","baseDrawLinkArrowMap","withBorder","dyeColor","willDyed","drawFunction","linkMapFoilCtx","linkMapFoilCanvas","dyedLinkMapFoilCanvas","baseDrawLinkMapFoil","drawHistory","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","feedbackReminder","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","usePresetManager","setVisible","newStatus","StyledBatchConverterModal","Modal","BatchConverter","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","getDerivedStateFromError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","$freeSize","$size","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","ColorBlock","$static","$empty","StyledCode","CopiableOverlayStyle","StyledMono","_templateObject3","Copiable","CheckOutlined","container","Container","showFlashOverlay","setFlashOverlay","copyingContent","copy","CopiableCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","SolidLabel","_templateObject4","CombinedSliderContainer","_templateObject5","PopoverButton","_templateObject6","$active","$softMode","ResolutionLabelContainer","_templateObject7","$warning","ResolutionLabel","warning","backgroundMarch","keyframes","_templateObject8","DropZone","_templateObject9","$visible","_templateObject0","ManagerDrawer","Drawer","_templateObject1","SingleSliderContainer","_templateObject10","rotate","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","rel","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","a","b","majorA","minorA","patchA","majorB","minorB","patchB","onMouseOver","FAD_BUTTON_ID","StyledQuoteContainer","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","setFeedbackReminder","currentReminder","duration","onClose","footer","Tabs","TabPane","tab","answer","StyledPatternOption","OPTION_WIDTH","PresetOptionContainer","PresetOption","frameInfo","presetContent","onOverwrite","onActive","onDelete","canvasRef","backgroundImage","Popconfirm","onConfirm","SaveOutlined","CardLayoutContainer","$width","$height","$hoverable","$layoutHoverable","CardLayoutPreview","baseLayoutState","resolvedLayoutState","activeLayout","onLayoutSelect","vertical","_FrameInfoMap$frame","backgroundColor","boxShadow","LayoutPresetOptionContainer","LayoutPresetOption","PresetImportReviewModalContainer","PresetImportReviewModal","importData","setNameStylePresetList","setLayoutPresetList","layoutPresetMap","nameStylePresetMap","nextLayoutPresetList","nextNameStylePresetList","decisionMap","setDecisionMap","verdict","maskClosable","layoutVerdictList","nameStyleVerdictList","layoutReplaceMap","layoutFullList","layoutNewList","layoutPresetTx","transaction","put","done","nameStyleReplaceMap","nameStyleFullList","nameStyleNewList","nameStylePresetTx","_nameStylePresetMap$k","commonProps","currentContent","Button","_layoutPresetMap$key","_currentContent$effec","_currentContent$pendu","_content$effectStyle","_content$pendulumStyl","PresetManagerContainer","PresetManager","setImportData","inputKey","setInputKey","presetImportDirectInputRef","directUploadId","_presetImportDirectIn","getFileAndImport","tx","layoutState","currentKey","Affiliation","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","setPresetManagerVisible","presetManagerVisible","Radio","Group","onMouseOut","DatabaseFilled","AuditOutlined","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","naturalWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setActiveDropzone","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","applyOfflineSource","maxFileSize","readAsDataURL","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","alert","_fileInputRef$current","setValue","onDragOver","onDrop","currentTarget","dataTransfer","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledInlineColorPickerContainer","InlineColorList","InlineColorPicker","dotColor","SaturationBoardContainer","SaturationBoard","CustomPicker","Saturation","HorizontalSketchColorList","HorizontalSketchPickerContainer","HorizontalSketchPicker","noColor","nextColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","_objectDestructuringEmpty","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledLinkMarkChooser","LinkMarkerPicker","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","requestImport","cleanup","startImport","imageSurvey","isYgoprodeckImage","surveyedDecodedCard","writeOnCurrentCard","addToList","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","getFoilButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPresetContainer","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextLinkRating","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","destroyTooltipOnHide","BorderOuterOutlined","_language$tooltipKey","_opacity$type","_opacity$type2","activable","step","AttributeRegionTrain","AttributeInputGroup","changeAttribute","changeRegion","attributeList","getAttributeList","_RegionMap$region","extraAttributeList","getExtraAttributeList","DoubleRightOutlined","DoubleLeftOutlined","IconDropdownOverlay","StyledIconDropdown","IconDropdownContainer","StarTypeSelector","activeCardIcon","showMixableOnly","showRemove","filterFunction","StarListSelectPanel","StarListControlPanel","StarListContainer","StarPicker","changeStarList","transformer","nextStarList","slotList","use12","setSlot","slot","activeInformation","setActiveInformation","activeList","changeStatus","currentStarList","list","limit","padUnit","nextList","padRight","slotValue","starInfo","willChecked","TypeWithIconContainer","StyledCheckboxStarTrain","PopoverButtonInCardIconInput","CustomStarContainer","CardIconAlignmentPicker","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","CardIconInputGroup","starPickerRef","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconType","iconDropdownText","IconDropdownLabel","IconDropdown","_starPickerRef$curren","DropdownChildren","_starPickerRef$curren2","iconEntry","_starPickerRef$curren3","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","StyledLinkRatingInputContainer","FooterInputGroup","autoLinkRating","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","linkRatingInputRef","showAtkInput","showLinkInput","showDefInput","showPadding","copyrightList","changeATK","changeDEF","changeLinkRating","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","_linkRatingInputRef$c","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","LinkPickerContainer","$hover","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","minWidth","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","navigator","clipboard","writeText","_setIdInputRef$curren2","randomSetID","FramePresetPanelContainer","FramePresetPanel","FrameBehaviorSettingPanelContainer","FrameBehaviorSettingPanel","updateFlag","nextFlagList","_FlagInfoList$index","FrameLayoutContainer","FrameLayoutSettingPanel","_FramePositionMap$act","onFrameChange","recentCustomPendulumFrame","setActiveLayout","frameLayoutMainId","foilButtonList","changeFoil","changeBottomLeftFrame","changeBottomRightFrame","changeTopLeftFrame","changeTopRightFrame","changeEffectBackground","nextEffectStyle","changePendulumEffectBackground","nextPendulumEffectStyle","changeDyeList","changeLayout","layoutValue","activeFrame","_recentCustomPendulum","changeDye","nextDyeList","FlagPresentationList","valueDisplay","_value","sampleDisplay","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","flagList","willBecomePendulum","_bottomFrameOptionGri","ApartmentOutlined","willMirror","PostPendulumFirstLineContainer","AdvancedParagraphButton","AdvancedParagraphPanel","PostPendulumInputGroup","_IconTypeMap$cardIcon","typeAbilitySeparator","typeAbilityInputRef","setEffectMinLine","setPendulumEffectMinLine","setEffectJustifyRatio","setPendulumEffectJustifyRatio","changeTypeAbility","toggleFuriganaHelper","newEffectStyle","newPendulumEffectStyle","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","frameTrainRef","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","onFinishChange","changeOpacity","changeNameStyle","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","ClearOutlined","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","_frameTrainRef$curren","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$topLeft","_FrameInfoMap$topLeft2","_FrameInfoMap$topRigh","_FrameInfoMap$topRigh2","_FrameInfoMap$bottomL","_FrameInfoMap$bottomL2","_FrameInfoMap$bottomR","_FrameInfoMap$bottomR2","selected","onDuplicate","actionVisible","setActionVisible","normalizedCardName","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","exportableCard","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","ExportingListContainer","BatchDownloadButton","nextSelectedId","lastSelectedId","exportAllCard","LoadingOutlined","CheckCircleOutlined","HourglassOutlined","StyledMenuItem","StyledManagerCardList","CardThumbRow","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","CaretDownFilled","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledManagerSample","ManagerSample","FileTextOutlined","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_FramePositionMap$key","_FramePositionMap$key2","_ref25","_ref26","chanceToRemindBackup","seedIncrement","internalChance","check","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","stringifedFlag","stringifedDyeList","stringifedSubFamilyList","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","isMobile","isMobileDevice","userAgent","vendor","opera","substr","windowSlidable","maxTouchPoints","setInitializing","managerVisible","setManagerVisible","slidingWindowRef","containerWindowRef","moveableRef","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","stopDrag","timeoutHandle","checkDragHeartbeat","clearTimeout","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_iteratorError","_iteratorAbruptCompletion","_didIteratorError","_step","_iterator","_asyncIterator","store","next","cursor","err","return","_iteratorError2","_iteratorAbruptCompletion2","_didIteratorError2","_step2","_iterator2","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onScroll","currentScrollY","scrollTop","clientWidth","viewportHeight","getBoundingClientRect","slidingWindowHeight","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","onContextMenu","Moveable","draggable","throttleDrag","edgeDraggable","startDragRotate","throttleDragRotate","throttleScale","snappable","pinchable","snapContainer","bounds","bottom","onDrag","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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CID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,y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AAgB,GAChBC,MAAO,IACPC,QAAQ,GC2HJxqB,SAAUmqB,EAAgBlsC,WAC1BkwB,MAAO,KACPud,cAAc,EACdD,WAAW,EACXE,iBAAiB,EACjBC,SAAUlB,UAjGeA,WACzB,IACI,MAAMG,QAAiBC,MAAM,GAADzjC,OACrBC,aAAsB,6BACzB,CACIyjC,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBO,QAA8DT,EAASI,OAE7E,IAAKK,EAAqB,MAAO,IAAI/nB,MAAM,qBAE3Cd,EAAI,CACA6oB,sBACAK,iBAAiB,GAEzB,CAAE,MAAO1d,GACLC,QAAQC,MAAM,6EAA8EF,GAC5FxL,EAAI,CACA6oB,oBAAqB,CACjBH,IAAK,CACD3qC,KAAM,UACN4pC,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBmB,iBAAiB,GAEzB,GAgEIE,IAEJC,oBAAqBpB,gBAEXD,EAAa,aACbW,EAAe9B,GACrB7mB,EAAI,CACAipB,cAAc,KAGtBjB,eACAW,oBAIKW,GAAcA,IACN1C,GAAQ1f,IAAA,IAAC,SAAE3J,GAAU2J,EAAA,OAAK3J,IAIlCgsB,GAAcA,IAAM3C,GAAQ4C,WAAWjsB,S,cCvIpD,MAAMksB,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBACA,SAEA,YACA,iBACA,iBACA,cACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,uBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BA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","file":"static/js/main.ac76d951.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\n\nexport const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n    frame: string,\n}) => [\n        {\n            value: 'fit' as const,\n            label: dictionary?.fit,\n        },\n        {\n            value: 'full' as const,\n            label: dictionary?.full,\n        },\n        {\n            value: 'frame' as const,\n            label: dictionary?.frame,\n        },\n    ];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxRef: React.RefObject<{\n        draw: (exportCanvas: HTMLCanvasElement) => void,\n    }>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    maximumScale: 2,\n    topToPendulumStructure: 210,\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\n    topToPendulumStructureFrame: 185,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    pendulumIconFrameWidth: 813,\n    pendulumIconFrameHeight: 100,\n    pendulumFrameWidth: 753,\n    pendulumFrameHeight: 955,\n    leftToPendulumStructure: 56,\n    cardBorder: 28,\n    topToEffectBox: 885,\n    leftToEffectBox: 54,\n    effectBoxWidth: 705,\n    effectBoxHeight: 231,\n    finishTypeCardWidth: 702,\n    finishTypeCardHeight: 200,\n    stickerSize: 52,\n    attributeSize: 77,\n    attributeY: 55,\n    attributeX: 678,\n    stickerX: 739.1438,\n    stickerY: 1110.938,\n    iconWidth: 43,\n    iconHeight: 44,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    effectBox: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        backgroundRatio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        backgroundRatio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /**\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    pendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.236,\n        backgroundRatio: 1.236,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'pendulumSmall' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\n     * Even though the image size does not change, the image frame does become larger.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     *  */\n    extendedPendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'extendedPendulumSmall' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\n     * This results a taller visible image, but shorter image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'truePendulumSmall' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumLarge: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1,\n        backgroundRatio: 1,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulumLarge' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n    pendulumSize?: PendulumSize,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\n\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\n    if (normalizedBoundless || body < 100) {\n        distributionMode = isPendulum\n            ? 'fullPendulum'\n            : 'fullCard';\n    } else {\n        if (isPendulum) {\n            if (text < 100) {\n                distributionMode = pendulumSize === 'small'\n                    ? 'extendedPendulumSmall'\n                    : 'extendedPendulum';\n            } else {\n                if (pendulum < 100) {\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\n                } else {\n                    distributionMode = pendulumSize === 'small'\n                        ? 'pendulumSmall'\n                        : 'pendulum';\n                }\n            }\n        } else {\n            distributionMode = text < 100\n                ? 'extendedCard'\n                : 'normal';\n        }\n    }\n\n    const result = CardArtCanvasCoordinateMap[distributionMode];\n    return {\n        ...result,\n        /** Unlike span background, frame background replace the entire frame even under the border. So frame background start from 0,0 while span background start from 28,28. */\n        backgroundRatio: backgroundType === 'frame'\n            ? 0.686\n            : result.backgroundRatio,\n    };\n};\n","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport const ART_FINISH_TYPE = 'art';\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    labelKey?: string,\n    tooltipKey?: string,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n    pendulumSubstituteMap: Record<string, string>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'card-border': type3CommonInstruction,\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'card-border': type8CommonInstruction,\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type10: {\n        value: 'type10',\n        label: '10',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type11: {\n        value: 'type11',\n        label: '11',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type12: {\n        value: 'type12',\n        label: '12',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'source-over', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type13: {\n        value: 'type13',\n        label: '13',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            art: [\n                { blendMode: 'darken', opacity: 1 },\n                { blendMode: 'multiply', opacity: 1 },\n                { blendMode: 'overlay', opacity: 1 },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n};\n\nexport const OtherFinishTypeMap = {\n    art: {\n        key: 'art' as const,\n        labelKey: 'input.art-finish.label',\n    },\n    background: {\n        key: 'background' as const,\n        labelKey: 'input.background.label',\n    },\n    attribute: {\n        key: 'attribute' as const,\n        labelKey: 'input.attribute.label',\n    },\n    icon: {\n        key: 'icon' as const,\n        labelKey: 'input.icon-type.icon.label',\n    },\n    sticker: {\n        key: 'sticker' as const,\n        labelKey: 'input.sticker.label',\n    },\n};\nexport type OtherFinish = [attribute: string, icon: string, sticker: string, background: string];\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilMap = {\n    normal: {\n        name: 'normal' as const,\n        color: '#747b95',\n        isOption: false,\n    },\n    gold: {\n        name: 'gold' as const,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    platinum: {\n        name: 'platinum' as const,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        label: dictionary?.normal,\n        ...FoilMap.normal,\n    },\n    {\n        label: dictionary?.gold,\n        ...FoilMap.gold,\n    },\n    {\n        label: dictionary?.platinum,\n        ...FoilMap.platinum,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];\n\nexport type FrameDyeList = [\n    topLeft: string,\n    topRight: string,\n    bottomLeft: string,\n    bottomRight: string,\n    effect: string,\n    pendulumEffect: string,\n    foil: string,\n];\nexport const getDefaultDyeList = () => ['', '', '', '', '', '', ''] as FrameDyeList;\nexport const DYE_LIST_LENGTH = getDefaultDyeList().length;\n\nexport const DyeIndexMap = {\n    topLeftFrame: 0,\n    topRightFrame: 1,\n    bottomLeftFrame: 2,\n    bottomRightFrame: 3,\n    effectBackground: 4,\n    pendulumEffectBackground: 5,\n    foil: 6,\n};","import { CloseCircleOutlined } from '@ant-design/icons';\nimport { WithLanguage } from 'src/service';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n    },\n];\nexport const ExtraAttributeList = [\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'MAGIC',\n        nameKey: 'input.attribute.magic',\n        label: 'Laugh',\n        color: '#1b8f83',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-1',\n        nameKey: 'input.attribute.boss-1',\n        label: 'Boss 1',\n        color: '#9b325d',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-2',\n        nameKey: 'input.attribute.boss-2',\n        label: 'Boss 2',\n        color: '#942a56',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-3',\n        nameKey: 'input.attribute.boss-3',\n        label: 'Boss 3',\n        color: '#86214b',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-START',\n        nameKey: 'input.attribute.boss-start',\n        label: 'Boss Start',\n        color: '#a13864',\n        isCreative: true,\n        isOption: true,\n    },\n];\nexport const RegionMap: Record<string, { key: string, category: 'tcg' | 'ocg', fileKey: string }> = {\n    'jp': { key: 'jp', category: 'ocg', fileKey: 'ocg' },\n    'ch': { key: 'ch', category: 'ocg', fileKey: 'ch' },\n    'en': { key: 'en', category: 'tcg', fileKey: 'tcg' },\n    'fr': { key: 'fr', category: 'tcg', fileKey: 'fr' },\n    'de': { key: 'de', category: 'tcg', fileKey: 'de' },\n    'it': { key: 'it', category: 'tcg', fileKey: 'it' },\n    'sp': { key: 'sp', category: 'tcg', fileKey: 'sp' },\n};\nexport const DefaultFormatAttribute: Record<string, string> = {\n    tcg: RegionMap.en.key,\n    ocg: RegionMap.jp.key,\n};\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n    {\n        label: 'Normal',\n        value: 'NORMAL',\n        nameKey: 'input.icon.normal',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport type IconTypeInfo = {\n    value: string,\n    labelKey: string | ((language: WithLanguage) => React.ReactNode),\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n    isMixable: boolean,\n    showIcon: boolean,\n}\nexport const IconTypeMap: Record<string, IconTypeInfo> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.full.label',\n        icon: null,\n        isOption: false,\n        isMixable: false,\n        showIcon: false,\n    },\n    'custom': {\n        value: 'custom',\n        labelKey: 'input.icon-type.custom.label',\n        fullLabelKey: 'input.icon-type.custom.full.label',\n        icon: null,\n        isOption: false,\n        isMixable: false,\n        showIcon: false,\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-icon-list.png`}\n        />,\n        isOption: true,\n        isMixable: false,\n        showIcon: false,\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n    'level-rank': {\n        value: 'level-rank',\n        labelKey: 'input.icon-type.level-rank.label',\n        fullLabelKey: 'input.icon-type.level-rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level-rank.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);\n\nexport const IconTypeAttributeMap: Record<string, IconTypeInfo> = {\n    'dark': {\n        value: 'dark',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.dark',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"dark-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-dark.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'earth': {\n        value: 'earth',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.earth',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"earth-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-earth.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'fire': {\n        value: 'fire',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.fire',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"fire-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-fire.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'light': {\n        value: 'light',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.light',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"light-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-light.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'water': {\n        value: 'water',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.water',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"water-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-water.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'wind': {\n        value: 'wind',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.wind',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"wind-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-wind.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'divine': {\n        value: 'divine',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.divine',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"divine-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-divine.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'spell': {\n        value: 'spell',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.spell',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"spell-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-spell.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'trap': {\n        value: 'trap',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.trap',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"trap-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-trap.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n};\nexport const IconTypeAttributeList = Object.values(IconTypeAttributeMap);\n\nexport const IconTypeStMap: Record<string, IconTypeInfo> = {\n    'continuous-l': {\n        value: 'continuous-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.continuous',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"continuous-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'counter-l': {\n        value: 'counter-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.counter',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"counter-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-counter-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'equip-l': {\n        value: 'equip-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.equip',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"equip-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-equip-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'field-l': {\n        value: 'field-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.field',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"field-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-field-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'quick-play-l': {\n        value: 'quick-play-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.quick-play',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"quick-play-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-quick-play-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'ritual-l': {\n        value: 'ritual-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.ritual',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"ritual-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-ritual-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'normal-l': {\n        value: 'normal-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.normal',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"normal-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-normal-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n};\nexport const IconTypeStList = Object.values(IconTypeStMap);\n\nexport const TotalIconTypeMap = {\n    ...IconTypeMap,\n    ...IconTypeAttributeMap,\n    ...IconTypeStMap,\n};\nexport const MAX_STAR_LENGTH = 13;\nexport const NORMAL_STAR_LENGTH = 12;","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const AUTO_FONT = 'Auto';\nexport const getDefaultNameStyle = () => ({\n    font: AUTO_FONT,\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    embossPitch: 90,\n    embossYaw: 90,\n    embossThickness: 0,\n    hasEmboss: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nexport const createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    hasEmboss: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo'\n| 'embossGold' | 'embossPlatinum';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n    embossGold: {\n        key: 'embossGold',\n        label: 'Embossed Gold',\n        image: 'asset/image/other/name-emboss-gold.png',\n        value: createPresetNameStyle({\n            preset: 'embossGold',\n            fillStyle: '#d09b0e',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#333333',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n    embossPlatinum: {\n        key: 'embossPlatinum',\n        label: 'Embossed Platinum',\n        image: 'asset/image/other/name-emboss-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'embossPlatinum',\n            fillStyle: '#c0c0c0',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#4d4d4d',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\nexport const PendulumSizeMap = {\n    small: {\n        key: 'small' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.small.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 95,\n        pendulumBoxOffsetY: 50,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 816,\n        artlessFrameY: 594,\n        fontSize: 56.5,\n    },\n    medium: {\n        key: 'medium' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.medium.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 147,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 792,\n        artlessFrameY: 553,\n        fontSize: 56.5,\n    },\n    large: {\n        key: 'large' as const,\n        frameType: 'text',\n        labelKey: 'input.pendulum-size.large.label',\n        effectBoxOffsetY: 27,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 180,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 808,\n        artlessFrameY: 553,\n        fontSize: 56.5,\n    },\n};\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\n\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\n    exceptionPendulumBoxOffsetHeight?: number,\n    exceptionFrameType?: string,\n}>> = {\n    small: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: -13,\n        },\n    },\n    medium: {},\n    large: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: 15,\n        },\n        zarc: {\n            exceptionFrameType: 'pendulum-large',\n        }\n    },\n};\n\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CardFlag = [\n    ShowDefAndLink: number,\n    LinkRating: number,\n];\n/**\n * Remember, 0 is ALWAYS the default state.\n */\nexport const getDefaultCardFlag = (): CardFlag => [0, 0];\n\nexport const LINK_RATING_ALWAYS_AUTO = 0;\nexport const LINK_RATING_ALWAYS_SHOW = 1;\nexport const LINK_RATING_ALWAYS_HIDE = 2;\n\nexport const FlagInfoList = [\n    {\n        index: 0,\n        labelKey: 'input.flag.mix-def-link',\n        type: 'checkbox' as const,\n    },\n    {\n        index: 1,\n        labelKey: 'input.flag.link-rating-behavior',\n        type: 'link-rating-behavior' as const,\n    },\n];\nexport const FlagIndexMap = {\n    showDefAndLink: 0,\n    linkRating: 1,\n};\nexport const FLAG_LENGTH = FlagInfoList.length;","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n    trueHeightCap?: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'tcg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'tcg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'tcg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'tcg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'ocg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 951.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'ocg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n};\n\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\n    normal: {\n        small: [\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94, trueHeightCap: 80 },\n        ],\n        medium: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 122.6 },\n        ],\n        large: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 155.8 },\n        ],\n    },\n    scaleless: {\n        small: [\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5, trueHeightCap: 79.8 },\n        ],\n        medium: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 126.1 },\n        ],\n        large: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 155.5 },\n        ],\n    },\n};\n\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\n    tcg: {\n        smaller: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 950.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n    ocg: {\n        smaller: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 258,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    allRightSymbolOffset?: number,\n    bulletOffset?: number,\n    bulletWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    allRightSymbolOffset: 1,\n    bulletWidth: 23,\n    fontSize: 24.5,\n    lineHeight: 24.7,\n    lineCount: 6,\n    bulletOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport type FontDeviation = {\n    uniformBoxDescent?: number,\n};\nexport type FontDeviationMap = {\n    threshold: number,\n    letterMap: Record<string, FontDeviation>,\n}\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    letterDeviationMap?: Record<string, FontDeviationMap>,\n    letterOffsetMap?: Record<string, { ratio: number, baseline: number, edge?: number, yRatio?: number }>,\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    variant: string,\n    vietnameseFont?: string,\n    vietnameseFontRatio?: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextGapRatio: 0,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    vietnameseFont: 'Times New Roman',\n    vietnameseFontRatio: 1.1,\n    letterOffsetMap: {\n        '★': { ratio: 0.9, baseline: -0.05, yRatio: 1 },\n        '☆': { ratio: 0.9, baseline: -0.05, yRatio: 1 },\n        '¡': { ratio: 1.2, baseline: -0.0, yRatio: 1.05 },\n    },\n};\nexport const DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook, Times New Roman',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n    variant: 'default-tcg',\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"StoneSerif-Italic\", \"SVN-Times New Roman Italic\"',\n    vietnameseFont: '\"SVN-Times New Roman Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    vietnameseFontRatio: 1.08,\n    fontList: [],\n    variant: 'default-tcg-normal',\n};\nexport const DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact' as MetricMethod,\n    fontList: [],\n    variant: 'default-ocg',\n};\n\n/**\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\n * */\nexport const NormalFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg',\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-stat',\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-type-stat',\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ],\n    },\n    'tcg-type': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-type',\n        fontList: [\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-pendulumLarge',\n        fontList: [\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-pendulumLarge-stat',\n        fontList: [\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-pendulumLarge-type-stat',\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-pendulumLarge-type',\n        fontList: [\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg',\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-stat',\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-type-stat',\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-type',\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-pendulumLarge',\n        fontList: [\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-pendulumLarge-stat',\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-pendulumLarge-type-stat',\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-pendulumLarge-type',\n        fontList: [\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg',\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-stat',\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-type-stat',\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-type',\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-pendulumLarge',\n        fontList: [\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge-stat': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-pendulumLarge-stat',\n        fontList: [\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\n        ]\n    },\n    'ocg-pendulumLarge-type-stat': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-pendulumLarge-type-stat',\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\n        ]\n    },\n    'ocg-pendulumLarge-type': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-pendulumLarge-type',\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n};\n\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps, Times New Roman',\n            font: 'MatrixRegularSmallCaps, Times New Roman',\n            fontStyle: 'tcg',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.55,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix, Times New Roman',\n            symbolFontRatio: 0.775,\n            vietnameseFont: 'MatrixRegularSmallCaps',\n            vietnameseFontRatio: 1,\n            variant: 'default-name',\n            fontList: [{\n                bulletWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterOffsetMap: {\n                '★': { ratio: 0.55, baseline: -0.05, yRatio: 1 },\n                '☆': { ratio: 0.55, baseline: -0.05, yRatio: 1 },\n                '¡': { ratio: 1, baseline: -0.098, edge: 0.02, yRatio: 0.58 },\n            },\n            letterDeviationMap: {\n                '1': {\n                    threshold: 0.94,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 11 },\n                        ị: { uniformBoxDescent: 11 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 11 },\n                        e̩: { uniformBoxDescent: 11 },\n                        È̩: { uniformBoxDescent: 11 },\n                        É̩: { uniformBoxDescent: 11 },\n                        è̩: { uniformBoxDescent: 11 },\n                        Ẹ: { uniformBoxDescent: 11 },\n                        ẹ: { uniformBoxDescent: 11 },\n                        Ệ: { uniformBoxDescent: 11 },\n                        ệ: { uniformBoxDescent: 11 },\n                    },\n                },\n                '2': {\n                    threshold: 0,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 20 },\n                        ị: { uniformBoxDescent: 20 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 20 },\n                        e̩: { uniformBoxDescent: 20 },\n                        È̩: { uniformBoxDescent: 20 },\n                        É̩: { uniformBoxDescent: 20 },\n                        è̩: { uniformBoxDescent: 20 },\n                        Ẹ: { uniformBoxDescent: 20 },\n                        ẹ: { uniformBoxDescent: 20 },\n                        Ệ: { uniformBoxDescent: 20 },\n                        ệ: { uniformBoxDescent: 20 },\n                    },\n                },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            fontStyle: 'tcg',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.825,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            vietnameseFont: 'Arial',\n            vietnameseFontRatio: 1,\n            weight: 'bold',\n            variant: 'arial-name',\n            fontList: [{\n                bulletWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            fontStyle: 'ocg',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextBold: true,\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            vietnameseFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            vietnameseFontRatio: 1,\n            variant: 'ocg-name',\n            fontList: [{\n                bulletWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    variant: 'tcg-password',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    variant: 'ocg-creator',\n    fontList: [{\n        bulletWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    variant: 'tcg-password',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    variant: 'ocg-password',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    variant: 'tcg-type-ability',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    variant: 'ocg-type-ability',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","import {\n    DefaultOCGEffectFontData,\n    DefaultTCGEffectFontData,\n    DefaultTCGNormalFontData,\n    FontData,\n} from './font-data-effect';\n\n/** OCG does not have different fonts between normal and effect monsters */\nexport const PendulumNormalFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-small',\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-medium',\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGNormalFontData,\n        variant: 'tcg-large',\n        fontList: [\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\n        ],\n    },\n};\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-small',\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-medium',\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGEffectFontData,\n        variant: 'tcg-large',\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n        ],\n    },\n    'ocg-small': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-small',\n        fontList: [\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\n        ],\n    },\n    'ocg-medium': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-medium',\n        fontList: [\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\n        ],\n    },\n    'ocg-large': {\n        ...DefaultOCGEffectFontData,\n        variant: 'ocg-large',\n        fontList: [\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\n        ],\n    },\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n    'Ø': '∅',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n    '∅': 'Ø',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\nexport const passwordSentenceMap: Record<string, string> = {\n    ocg: '※デッキ構築には使用できません。',\n    tcg: 'This card cannot be in a Deck.',\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 49%',\n            'rgba(239,239,239,1) 51%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);\nexport const DefaultFrameInfo = FrameInfoMap['effect'];\n\nexport const FramePositionMap: Record<string, { labelKey: string }> = {\n    bottomLeftFrame: { labelKey: 'input.advanced-frame.name.bottom-left' },\n    bottomRightFrame: { labelKey: 'input.advanced-frame.name.bottom-right' },\n    effectBackground: { labelKey: 'input.advanced-frame.name.effect-background' },\n    pendulumEffectBackground: { labelKey: 'input.advanced-frame.name.pendulum-effect-background' },\n    frame: { labelKey: 'input.advanced-frame.name.primary' },\n    topLeftFrame: { labelKey: 'input.advanced-frame.name.top-left' },\n    topRightFrame: { labelKey: 'input.advanced-frame.name.top-right' },\n    foil: { labelKey: 'input.foil.label' },\n};","export const ArrowPositionMap = {\n    normal: [\n        { top: 175, left: 55, width: 100, height: 100 },\n        { top: 165, left: 323, width: 170, height: 80 },\n        { top: 175, left: 655, width: 100, height: 100 },\n        { top: 442, left: 45, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 442, left: 700, width: 70, height: 170 },\n        { top: 775, left: 55, width: 100, height: 100 },\n        { top: 810, left: 323, width: 170, height: 80 },\n        { top: 775, left: 655, width: 100, height: 100 },\n    ],\n    pendulum: [\n        { top: 169, left: 11, width: 100, height: 100 },\n        { top: 159, left: 323, width: 170, height: 80 },\n        { top: 169, left: 699, width: 100, height: 100 },\n        { top: 572, left: 1, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 572, left: 744, width: 70, height: 170 },\n        { top: 1054, left: 11, width: 100, height: 100 },\n        { top: 1093, left: 323, width: 170, height: 80 },\n        { top: 1054, left: 699, width: 100, height: 100 },\n    ],\n};\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-ＺÀ-Ö]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\nexport const StylingTagList = ['i'];\nexport const STYLING_TAG_SOURCE = `<(\\\\/?(${StylingTagList.join('|')}))( [^<]*|)>`;\nexport const StylingTagRegex = new RegExp(STYLING_TAG_SOURCE);\n\nexport const ITALIC_OPEN_TAG = '<i>';\nexport const ITALIC_CLOSE_TAG = '</i>';\n\n/** \n * Beside usual alphabet letter and number, we try to support accented letters and Japanese's version of alphabet too.\n * * Latin-1 Supplement block, without arithmetic symbol such as × and ÷\n * * Latin Extended-A\n * * Latin Extended-B\n * * Latin Extended Additional\n * \n * Multiple letter that is not used in normal word but have appear in YGO card is also included such as ∞.\n */\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９À-ÖÙ-öù-ÿĀ-žƀ-ɏḀ-ỿ!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const VIETNAMESE_DIACRITIC_LETTER = '[ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễếệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]';\nexport const VietnameseDiacriticLetterRegex = new RegExp(VIETNAMESE_DIACRITIC_LETTER);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⦉';\nexport const NB_WORD_CLOSE = '⦊';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_FULL_LINE_OPEN = '᚛';\nexport const NB_FULL_LINE_CLOSE = '᚜';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const FULL_LINE_PLACEHOLDER = '⸦⸧';\nexport const FLAVOR_LINE_PLACEHOLDER = '⸦⸦⸧⸧';\n\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\n/** Additional symbol including\n * * Greek Extended \n * * Greek and Coptic\n */\nexport const TCG_SYMBOL_JOINLIST = '¡Ø#★☆@∞Ͱ-Ͽἀ-῾';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil, getDefaultDyeList, OtherFinish } from './foil-finish-dye';\nimport { CondenseType } from './condense';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\nimport { getDefaultCardFlag } from './flag';\nimport { LanguageDataDictionary } from 'src/service';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\n/**\n * Check following things when adding new attributes:\n * * Default card and empty card\n * * Convert codec\n * * Shorten codec\n * * Card thumb\n * * Legacy version\n * * Import / export / template\n */\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 2,\n    format: 'tcg',\n    region: 'en',\n    frame: 'fusion',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    otherFinish: ['normal', 'normal', 'normal', 'normal'] as OtherFinish,\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    starList: [] as string[],\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    linkRating: '',\n    isLink: false as boolean | null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n        justifyRatio: 100,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n        justifyRatio: 100,\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    flag: getDefaultCardFlag(),\n    dyeList: getDefaultDyeList(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 3,\n    format: 'tcg',\n    region: 'en',\n    /** Why we split frame and left frame here? Because there is more nuance to the card other than individual frames, for example name bevel, border bevel, effect bevel etc..., so \"frame\" here is a kind of \"main frame\" that dictates all those nuance, why the actual card background is constructed from those 4 corner frames. */\n    frame: 'effect',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    otherFinish: ['normal', 'normal', 'normal', 'normal'],\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starList: [] as string[],\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    linkRating: '',\n    isLink: null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n        justifyRatio: 100,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n        justifyRatio: 100,\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    dyeList: getDefaultDyeList(),\n    flag: getDefaultCardFlag(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        subType: 'effectBox' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: 'input.opacity.effect-box.tooltip',\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport const ResolutionMap = {\n    '549x800': {\n        label: '549 × 800',\n        width: 549,\n        height: 800,\n        scale: 1,\n        settingValue: [549, 800] as [number, number],\n    },\n    '561x818': {\n        label: '561 × 818',\n        width: 561,\n        height: 818,\n        scale: 1,\n        settingValue: [561, 818] as [number, number],\n    },\n    '813x1185': {\n        label: '813 × 1185',\n        width: 813,\n        height: 1185,\n        scale: 1,\n        settingValue: [813, 1185] as [number, number],\n    },\n    '1122x1636': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\n        width: 1122,\n        height: 1636,\n        scale: 2,\n        settingValue: [1122, 1636] as [number, number],\n    },\n    '1388x2026': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\n        width: 1388,\n        height: 2026,\n        scale: 2,\n        settingValue: [1388, 2026] as [number, number],\n    },\n    '1626x2370': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\n        width: 1626,\n        height: 2370,\n        scale: 2,\n        settingValue: [1626, 2370] as [number, number],\n    },\n};\nexport const ResolutionList = [\n    ResolutionMap['549x800'],\n    ResolutionMap['561x818'],\n    ResolutionMap['813x1185'],\n    ResolutionMap['1122x1636'],\n    ResolutionMap['1388x2026'],\n    ResolutionMap['1626x2370'],\n];\n\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\nexport const ExportFormatList = [\n    {\n        value: 'csv' as const,\n        label: '.csv',\n    },\n    {\n        value: 'xlsx' as const,\n        label: '.xlsx',\n    },\n];\n\nexport type SlindingType = ReturnType<typeof getSlindingTypeList>[0]['value'];\nexport const getSlindingTypeList = (language: LanguageDataDictionary) => [\n    {\n        value: 'auto' as const,\n        label: language['setting.option.sliding-type.auto.label'],\n    },\n    {\n        value: 'manual' as const,\n        label: language['setting.option.sliding-type.manual.label'],\n    },\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './condense';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './flag';\nexport * from './foil-finish-dye';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './font-data-pendulum-effect';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './pendulum';\nexport * from './regex';","import { CanvasConst } from 'src/model';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n} = CanvasConst;\n\nexport const createCanvas = (width = cardWidth, height = cardHeight) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n\n    return {\n        canvas,\n        ctx,\n    };\n};","import ndarray, { NdArray } from 'ndarray';\nimport ops from 'ndarray-ops';\nimport pool from 'typedarray-pool';\nimport phase2_1 from 'distance-transform/lib/p1';\nimport phase2_2 from 'distance-transform/lib/p2';\nimport phase2_inf from 'distance-transform/lib/pinf';\nimport phase2_p from 'distance-transform/lib/pp';\n\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\n    for (i = 0; i < rowCount; ++i) {\n        nextPoint = array[ptr++];\n        for (j = 1; j < colCount; ++j) {\n            nextPoint = min(array[ptr], nextPoint + 1);\n            array[ptr++] = nextPoint;\n        }\n        for (j = 0; j < colCount; ++j) {\n            nextPoint = min(array[--ptr], nextPoint + 1);\n            array[ptr] = nextPoint;\n        }\n        ptr += colCount;\n    }\n}\n\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\n    var dimensionCount = array.shape.length,\n        shape = array.shape.slice(0),\n        stride = new Array(dimensionCount),\n        size = 1,\n        stackSize = 0,\n        infinityHeight = 0,\n        index: number,\n        j: number,\n        n: number,\n        strideList: number[],\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\n        currentDimensionSize: number;\n    exponent = exponent || 2;\n    for (index = dimensionCount - 1; index >= 0; --index) {\n        stride[index] = size;\n        size *= shape[index];\n        infinityHeight += shape[index];\n        stackSize = Math.max(stackSize, shape[index]);\n    }\n\n    // Allocate scratch buffers\n    var phase2ResultAllocation = pool.mallocDouble(size),\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\n        s_q = pool.mallocUint32(stackSize),\n        t_q = pool.mallocUint32(stackSize);\n\n    /**\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\n     * */\n    var phase1ResultAllocation = pool.mallocDouble(size),\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\n        }\n    }\n    //Perform first phase of distance transform\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\n\n    //Second passes\n    for (index = dimensionCount - 1; index > 0; --index) {\n        strideList = phase2ResultArray.stride;\n        n = 1;\n        for (j = index - 1; j < dimensionCount; ++j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        for (j = index - 2; j >= 0; --j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        ops.assign(phase2ResultArray, phase1ResultArray);\n\n        //Execute phase 2\n        currentDimensionSize = shape[index - 1];\n        if (!isFinite(exponent)) {\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 1) {\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 2) {\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent < 1) {\n            throw new Error('Values of exponent < 1 are not supported');\n        } else {\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\n        }\n\n        //Swap buffers\n        tmp = phase1ResultArray;\n        phase1ResultArray = phase2ResultArray;\n        phase2ResultArray = tmp;\n    }\n\n    //Copy phase1ResultArray to result\n    ops.assign(array, phase1ResultArray);\n\n    pool.freeDouble(phase1ResultAllocation);\n    pool.freeDouble(phase2ResultAllocation);\n    pool.freeUint32(s_q);\n    pool.freeUint32(t_q);\n    return array;\n}","import { CanvasConst } from 'src/model';\nimport { createCanvas } from './create';\nimport { HexColorRegex } from '..';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n} = CanvasConst;\nexport const dyeCanvas = (baseCanvas: HTMLCanvasElement, color: string, width = cardWidth, height = cardHeight) => {\n    if (!HexColorRegex.test(color)) return {\n        canvas: baseCanvas,\n        ctx: baseCanvas.getContext('2d'),\n    };\n\n    const { ctx: overlayContext, canvas: overlayCanvas } = createCanvas(width, height);\n\n    /** Draw the target image with grayscale */\n    overlayContext.filter = 'grayscale(1)';\n    overlayContext.drawImage(baseCanvas, 0, 0);\n    overlayContext.filter = 'none';\n\n    /** Overlay the color lens on top the grayscale layer to dye it */\n    overlayContext.fillStyle = color;\n    overlayContext.globalCompositeOperation = 'overlay';\n    overlayContext.fillRect(0, 0, cardWidth, cardHeight);\n\n    /** Draw the target image again but with destination-in mode to remove excess area */\n    overlayContext.globalCompositeOperation = 'destination-in';\n    overlayContext.drawImage(baseCanvas, 0, 0);\n    overlayContext.globalCompositeOperation = 'source-over';\n\n    return {\n        canvas: overlayCanvas,\n        ctx: overlayCanvas.getContext('2d'),\n    };\n};","import * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\n\nconst HorizontalBlurShader = {\n    uniforms: {\n        'tDiffuse': { type: 't', value: null },\n        'h': { type: 'f', value: 3.0 / 512.0 }\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float h;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float lef4 = vUv.x - 4.0 * h;',\n        'float lef3 = vUv.x - 3.0 * h;',\n        'float lef2 = vUv.x - 2.0 * h;',\n        'float lef1 = vUv.x - 1.0 * h;',\n        'float rig1 = vUv.x + 1.0 * h;',\n        'float rig2 = vUv.x + 2.0 * h;',\n        'float rig3 = vUv.x + 3.0 * h;',\n        'float rig4 = vUv.x + 4.0 * h;',\n\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\n        'if (h > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n        //\"gl_FragColor = vec4(1,0,0,1);\",\n\n        '}'\n    ].join('\\n')\n};\nconst VerticalBlurShader = {\n    uniforms: {\n        tDiffuse: { type: 't', value: null },\n        v: { type: 'f', value: 3.0 / 512.0 },\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}',\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float v;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float top4 = vUv.y - 4.0 * v;',\n        'float top3 = vUv.y - 3.0 * v;',\n        'float top2 = vUv.y - 2.0 * v;',\n        'float top1 = vUv.y - 1.0 * v;',\n        'float bot1 = vUv.y + 1.0 * v;',\n        'float bot2 = vUv.y + 2.0 * v;',\n        'float bot3 = vUv.y + 3.0 * v;',\n        'float bot4 = vUv.y + 4.0 * v;',\n\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\n        'if (v > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n\n        '}',\n    ].join('\\n'),\n};\nconst NormalMapShader = {\n    uniforms: {\n        'type': { type: '1i', value: 0 },\n        'invertR': { type: '1f', value: 1 },\n        'invertG': { type: '1f', value: 1 },\n        'invertH': { type: '1f', value: 1 },\n        'dz': { type: '1f', value: 0 },\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\n        'tHeightMap': { type: 't', value: null }\n    },\n    vertexShader: [\n        'precision mediump float;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform vec3 dimensions;',\n        'void main() {',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\n        'vUv = uv;',\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'precision mediump float;',\n        'uniform vec3 dimensions;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform float dz;',\n        'uniform float invertR;',\n        'uniform float invertG;',\n        'uniform float invertH;',\n        'uniform int type;',\n        'uniform sampler2D tHeightMap;',\n\n        'void main(void) {',\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\n        '   float dx = 0.0, dy = 0.0;',\n        '   if(type == 0){',\t// Sobel\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\n        '   }',\n        '   else{',\t\t\t\t// Scharr\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\n        '   }',\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\n        '}'\n    ].join('\\n')\n};\n\nexport const SHADER_FILTER_TYPE = {\n    SOBEL: 'sobel' as const,\n    SCHARR: 'scharr' as const,\n};\nexport const getDefaultHeightToNormalMapOption = () => ({\n    invertedRed: false,\n    invertedGreen: false,\n    invertedSource: false,\n    blurSharp: 0,\n    strength: 1,\n    level: 8.5,\n    type: SHADER_FILTER_TYPE.SOBEL,\n});\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\n\nexport class HeightToNormalMap {\n    renderer: THREE.WebGLRenderer;\n    effectComposer: EffectComposer;\n    normalMapUniform: typeof NormalMapShader['uniforms'];\n    material: THREE.ShaderMaterial;\n    option: Required<HeightToNormalMapOption>;\n    canvas!: HTMLCanvasElement;\n    gaussianShaderX!: ShaderPass;\n    gaussianShaderY!: ShaderPass;\n\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\n        this.canvas = resultCanvas;\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\n        this.init();\n    }\n\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\n        const { width, height } = image;\n        const texture = this.getTexture(image);\n        this.normalMapUniform.tHeightMap.value = texture;\n        this.normalMapUniform.dimensions.value = [width, height, 0];\n        this.renderer.setSize(width, height);\n        this.effectComposer.setSize(width, height);\n        this.effectComposer.reset(this.getRenderTarget(width, height));\n\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\n            ...this.option,\n            ...option,\n        };\n\n        this.invertRed(invertedRed);\n        this.invertGreen(invertedGreen);\n        this.invertSource(invertedSource);\n        this.setBlurSharp(blurSharp, width, height);\n        this.setStrengthAndLevel(strength, level);\n        this.setType(type);\n\n        this.effectComposer.render(1 / 60);\n    }\n\n    init() {\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\n        const scene = new THREE.Scene();\n        const normalRenderScene = new RenderPass(scene, camera);\n\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\n        this.renderer.setClearColor(0x000000, 0); // the default\n\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\n\n        this.material = new THREE.ShaderMaterial({\n            fragmentShader: NormalMapShader.fragmentShader,\n            vertexShader: NormalMapShader.vertexShader,\n            uniforms: this.normalMapUniform,\n        });\n        this.material.transparent = true;\n\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\n        scene.add(renderMesh);\n\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\n        this.gaussianShaderX.renderToScreen = true;\n\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\n        this.effectComposer.addPass(normalRenderScene);\n        this.effectComposer.addPass(this.gaussianShaderY);\n        this.effectComposer.addPass(this.gaussianShaderX);\n    }\n    getRenderTarget(width?: number, height?: number) {\n        return new THREE.WebGLRenderTarget(width, height, {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false,\n        });\n    }\n    getTexture(image: TexImageSource) {\n        const texture = new THREE.Texture(image);\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\n        texture.anisotropy = 2;\n        texture.needsUpdate = true;\n        return texture;\n    }\n\n    invertRed(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertR.value = -1;\n        } else {\n            this.normalMapUniform.invertR.value = 1;\n        }\n    }\n\n    invertGreen(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertG.value = -1;\n        } else {\n            this.normalMapUniform.invertG.value = 1;\n        }\n    }\n\n    invertSource(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertH.value = -1;\n        } else {\n            this.normalMapUniform.invertH.value = 1;\n        }\n    }\n\n    setBlurSharp(value: number, width: number, height: number) {\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\n    }\n\n    setStrengthAndLevel(strength: number, level: number) {\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\n    }\n\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\n    }\n}","// import distanceTransform from 'distance-transform';\nimport ndarray from 'ndarray';\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\nimport { bilateralFilter } from './bilateral-filter';\nimport { distanceTransform } from './distance-transform';\n\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\n    const z = Math.sin(verticalAngleRadian);\n\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\n};\nexport const applyEmboss = ({\n    inputCanvas,\n    affectedHeight,\n    affectedWidth,\n    maxHeight = 8,\n    lightColorVec = [255, 255, 255],\n    /** Shine parallel with the surface, from rightside. */\n    lightAngleVec,\n    lightPitch,\n    lightYaw,\n    minIntensity = -1,\n    maxIntensity = 1,\n}: {\n    inputCanvas: HTMLCanvasElement,\n    affectedWidth?: number,\n    affectedHeight?: number,\n    maxHeight?: number,\n    lightColorVec?: [number, number, number],\n    lightAngleVec?: [number, number, number],\n    lightPitch?: number,\n    lightYaw?: number,\n    minIntensity?: number,\n    maxIntensity?: number,\n}) => {\n    const ctx = inputCanvas.getContext('2d');\n\n    if (!ctx) return;\n\n    /** Support partial transform to increase transform speed and reduce stuttering */\n    const height = affectedHeight ?? inputCanvas.height;\n    const width = affectedWidth ?? inputCanvas.width;\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\n    const data = imageData.data;\n\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\n        ? lightAngleVec\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\n            ? angleToVector(lightPitch, lightYaw)\n            : [1, 0, 0];\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\n    const normalizedLightAngleVec = [\n        computedLightAngleVec[0] / angleVecMagnitude,\n        computedLightAngleVec[1] / angleVecMagnitude,\n        computedLightAngleVec[2] / angleVecMagnitude\n    ];\n\n    if (!data) return;\n\n    try {\n        /**\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\n         */\n        /** Any pixel that is not transparent will be the foreground. */\n        const validPixelList = new Uint8ClampedArray(width * height);\n        for (let i = 0; i < data.length; i += 4) {\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\n                validPixelList[i / 4] = 0;\n            } else {\n                validPixelList[i / 4] = 1;\n            }\n        }\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\n\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\n            for (let colIndex = 0; colIndex < column; colIndex++) {\n                const currentIndex = (rowIndex * width + colIndex) * 4;\n                const heightValue = dtImageData.get(rowIndex, colIndex);\n\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\n            }\n        }\n\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\n        const heightmapCanvas = document.createElement('canvas');\n        heightmapCanvas.width = width;\n        heightmapCanvas.height = height;\n        heightmapCanvas.getContext('2d').putImageData(\n            new ImageData(nextDtBitmap, width, height),\n            0,\n            0,\n        );\n\n        /**\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\n         */\n        const normalMapCanvas = document.createElement('canvas');\n        normalMapCanvas.width = width;\n        normalMapCanvas.height = height;\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\n        heightToNormalMapConverter.apply(heightmapCanvas, {\n            blurSharp: 0,\n            level: 9,\n            strength: 2.5,\n            invertedRed: false,\n            invertedGreen: false,\n            invertedSource: true,\n            type: SHADER_FILTER_TYPE.SOBEL,\n        });\n\n        /**\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\n         */\n        const softenNormalMapCanvas = document.createElement('canvas');\n        softenNormalMapCanvas.width = width;\n        softenNormalMapCanvas.height = height;\n\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\n        softenNormalMapContext.drawImage(\n            normalMapCanvas,\n            0,\n            0,\n            width,\n            height,\n        );\n        const filteredData = bilateralFilter(\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\n            width,\n            height,\n            9,\n            70,\n            20,\n        );\n\n        /**\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\n         * \n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\n         */\n        const resultData = new Uint8ClampedArray(width * height * 4);\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\n            const baseIntensity = nx * normalizedLightAngleVec[0]\n                + ny * normalizedLightAngleVec[1]\n                + nz * normalizedLightAngleVec[2];\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\n\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\n        }\n\n        return new ImageData(resultData, width, height);\n    } catch (e) {\n        console.error('Could not apply emboss effect', e);\n        return null;\n    }\n};","export const bilateralFilter = (\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\n    width: number,\n    height: number,\n    diameter: number,\n    sigmaColor: number,\n    sigmaSpace: number,\n) => {\n    const output = new Uint8ClampedArray(width * height * 4);\n    const halfD = Math.floor(diameter / 2);\n\n    // Helper function to calculate the Gaussian weight for spatial distance\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\n    }\n\n    // Helper function to calculate the Gaussian weight for color distance\n    function colorWeight(c1: number, c2: number) {\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\n    }\n\n    // Loop through each pixel in the image\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\n\n            // Apply the filter to a local neighborhood around the current pixel\n            for (let ky = -halfD; ky <= halfD; ky++) {\n                for (let kx = -halfD; kx <= halfD; kx++) {\n                    const nx = x + kx;\n                    const ny = y + ky;\n\n                    // Check if the neighbor is within the image bounds\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\n                        const centerPixel = (y * width + x) * 4;\n                        const neighborPixel = (ny * width + nx) * 4;\n\n                        // Get the color values for the center pixel and the neighbor pixel\n                        const rCenter = imageData[centerPixel];\n                        const gCenter = imageData[centerPixel + 1];\n                        const bCenter = imageData[centerPixel + 2];\n                        const rNeighbor = imageData[neighborPixel];\n                        const gNeighbor = imageData[neighborPixel + 1];\n                        const bNeighbor = imageData[neighborPixel + 2];\n\n                        // Compute spatial and color weights\n                        const spatial = spatialWeight(nx, ny, x, y);\n                        const colorR = colorWeight(rCenter, rNeighbor);\n                        const colorG = colorWeight(gCenter, gNeighbor);\n                        const colorB = colorWeight(bCenter, bNeighbor);\n\n                        const weight = spatial * colorR * colorG * colorB;\n\n                        // Accumulate weighted sum of colors\n                        rSum += rNeighbor * weight;\n                        gSum += gNeighbor * weight;\n                        bSum += bNeighbor * weight;\n                        wSum += weight;\n                    }\n                }\n            }\n\n            // Normalize the result and assign it to the output image\n            const outputPixel = (y * width + x) * 4;\n            output[outputPixel] = rSum / wSum;\n            output[outputPixel + 1] = gSum / wSum;\n            output[outputPixel + 2] = bSum / wSum;\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\n        }\n    }\n\n    return output;\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\nexport const generateLayer = (\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\n    exportCtx: CanvasRenderingContext2D | null | undefined,\n    delayQueue: number = 0,\n) => {\n    return new Promise<boolean>(resolve => {\n        setTimeout(() => {\n            if (!canvasLayer.current || !exportCtx) resolve(false);\n            else {\n                try {\n                    canvasLayer.current.toBlob(blob => {\n                        if (!blob) resolve(false);\n                        else {\n                            const url = URL.createObjectURL(blob);\n                            if (!url) resolve(false);\n                            else {\n                                const layer = new Image();\n                                layer.src = url;\n                                layer.onload = () => {\n                                    exportCtx.drawImage(layer, 0, 0);\n                                    URL.revokeObjectURL(url);\n                                    resolve(true);\n                                };\n                                layer.onerror = () => {\n                                    URL.revokeObjectURL(url);\n                                    resolve(false);\n                                };\n                            }\n                        }\n                    });\n                } catch (e) {\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\n                    console.error(e);\n                    resolve(false);\n                }\n            }\n        }, delayQueue * 25);\n    });\n};","import {\n    AUTO_FONT,\n    Card,\n    Foil,\n    frameList,\n    LINK_RATING_ALWAYS_AUTO,\n    LINK_RATING_ALWAYS_HIDE,\n    LINK_RATING_ALWAYS_SHOW,\n    NameStyle,\n    NameStyleType,\n    PresetNameStyleMap,\n} from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink === true;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\n    return [\n        'fusion',\n        'synchro',\n        'xyz',\n        'link',\n        'dark-synchro',\n        'zarc',\n    ].includes(card.frame);\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFooter = (frame: string) => {\n    return ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link'].includes(frame) || checkLightFooter(frame);\n};\n\nexport const checkDiplayLinkRating = (displayMode: number, isLink: boolean) => {\n    let showLinkRating = false;\n    switch (displayMode) {\n        case LINK_RATING_ALWAYS_SHOW: showLinkRating = true; break;\n        case LINK_RATING_ALWAYS_HIDE: showLinkRating = false; break;\n        case LINK_RATING_ALWAYS_AUTO: showLinkRating = isLink; break;\n    }\n\n    return showLinkRating;\n};\n\nexport const resolveFrameStyle = (frameData: Record<string, string | undefined>, isPendulum: boolean) => {\n    const {\n        frame,\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    } = frameData;\n    const resolvedFrame = frame ?? 'effect';\n    const resolvedTopLeft = topLeftFrame === 'auto' ? resolvedFrame : topLeftFrame;\n    const resolvedTopRight = (topRightFrame === 'auto' ? resolvedTopLeft : topRightFrame) ?? resolvedFrame;\n    const resolvedBottomLeft = (bottomLeftFrame === 'auto'\n        ? (isPendulum ? 'spell' : resolvedTopLeft)\n        : bottomLeftFrame) ?? resolvedFrame;\n    const resolvedBottomRight = (bottomRightFrame === 'auto'\n        ? resolvedBottomLeft\n        : bottomRightFrame) ?? resolvedFrame;\n    const resolvedEffectBackground = (effectBackground === 'auto'\n        ? resolvedBottomLeft\n        : effectBackground) ?? resolvedFrame;\n    const resolvedPendulumEffectBackground = (pendulumEffectBackground === 'auto'\n        ? resolvedBottomLeft\n        : pendulumEffectBackground) ?? resolvedFrame;\n\n    return {\n        topLeftFrame: resolvedTopLeft,\n        topRightFrame: resolvedTopRight,\n        bottomLeftFrame: resolvedBottomLeft,\n        bottomRightFrame: resolvedBottomRight,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    };\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    let contextualFont = nameStyle.font;\n    if (contextualFont === AUTO_FONT && format === 'ocg') contextualFont = 'OCG';\n    if (contextualFont === AUTO_FONT && format === 'tcg') contextualFont = 'Default';\n    if (contextualFont === AUTO_FONT && isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return {\n            ...nameStyle,\n            font: contextualFont,\n        };\n    }\n\n    const lightHeader = checkLightHeader(frame);\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { ART_FINISH_TYPE, RegionMap, Card, CardFlag, FrameDyeList, getDefaultCardFlag, getDefaultCardOpacity, getDefaultCrop, getDefaultDyeList, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\nimport { checkMonster } from './categorize';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    region: 'rg',\n    frame: 'fr',\n    rightFrame: 'rf',\n    leftFrame: 'lf',\n    pendulumRightFrame: 'rpf',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        artBorder: 'opab',\n        effectBox: 'opeb',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n        /** legacy */\n        artFrame: 'opaf',\n    },\n    finish: 'fn',\n    otherFinish: 'of',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        fontStyle: 'efs',\n        upSize: 'eus',\n        background: 'ebg',\n        minLine: 'eml',\n        justifyRatio: 'ejr',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        fontStyle: 'pfs',\n        upSize: 'pus',\n        background: 'pbg',\n        minLine: 'pml',\n        justifyRatio: 'pjr',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        embossPitch: 'nsep',\n        embossThickness: 'nset',\n        embossYaw: 'nsey',\n        fillStyle: 'nsfs',\n        font: 'nsft',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasEmboss: 'nshe',\n        hasGradient: 'nshg',\n        hasOutline: 'nshl',\n        hasShadow: 'nshs',\n        headTextFillStyle: 'nshfs',\n        lineColor: 'nslc',\n        lineOffsetX: 'nslox',\n        lineOffsetY: 'nsloy',\n        lineWidth: 'nslw',\n        pattern: 'nspt',\n        preset: 'nspr',\n        shadowBlur: 'nssb',\n        shadowColor: 'nssc',\n        shadowOffsetX: 'nssox',\n        shadowOffsetY: 'nssoy',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    starList: 'stl',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    linkRating: 'lr',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    pendulumSize: 'psi',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    dyeList: 'dl',\n    flag: 'fl',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const decompressedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                decompressedCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return decompressedCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const unshortenedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return unshortenedCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let rebuiltCard: Record<string, any>;\n    if (isCondensed) {\n        rebuiltCard = legacyReverseCardDataShortener(card);\n    } else {\n        rebuiltCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(rebuiltCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    /** Ensure that we detect the actual version from incoming cards. */\n    delete (baseCard as Record<string, unknown>).version;\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    } else {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n            ...migratedCard.pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (card.region == null) migratedCard.region = RegionMap[migratedCard.format === 'tcg' ? 'en' : 'jp'].key;\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\n    if (migratedCard.rightFrame == null) migratedCard.rightFrame = 'auto';\n    if (migratedCard.leftFrame == null) migratedCard.leftFrame = 'auto';\n    if (migratedCard.pendulumRightFrame == null) migratedCard.pendulumRightFrame = 'auto';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n    if (!Array.isArray(migratedCard.starList)) migratedCard.starList = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if (migratedCard.finish) {\n        const finishList = migratedCard.finish;\n\n        if (finishList.includes(ART_FINISH_TYPE)) {\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\n            migratedCard.otherFinish = [\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n            ];\n        }\n    }\n    if (Array.isArray(migratedCard.otherFinish)\n        && ((migratedCard.otherFinish as unknown[]).length === 3 || migratedCard.otherFinish[3] == null)\n    ) {\n        migratedCard.otherFinish[3] = getEmptyCard().otherFinish[3];\n    }\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n    migratedCard.backgroundCrop = {\n        ...getDefaultCrop(),\n        ...migratedCard.backgroundCrop,\n    };\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n    if (migratedCard.linkRating == null) migratedCard.linkRating = '';\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    const defaultFlagList = getDefaultCardFlag();\n    if (!Array.isArray(migratedCard.flag)) migratedCard.flag = defaultFlagList;\n    else if (migratedCard.flag.length < defaultFlagList.length) {\n        const currentFlagList = [...migratedCard.flag];\n        migratedCard.flag = defaultFlagList.map((entry, index) => {\n            if (typeof currentFlagList[index] === 'number') return currentFlagList[index];\n            return entry;\n        }) as CardFlag;\n    }\n\n    const defaultDyeList = getDefaultDyeList();\n    if (!Array.isArray(migratedCard.dyeList)) migratedCard.dyeList = defaultDyeList;\n    else if (migratedCard.dyeList.length < defaultDyeList.length) {\n        const currentDyeList = [...migratedCard.dyeList];\n        migratedCard.dyeList = defaultDyeList.map((entry, index) => {\n            if (typeof currentDyeList[index] === 'string') return currentDyeList[index];\n            return entry;\n        }) as FrameDyeList;\n    }\n\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\n        migratedCard.version = 2;\n\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\n        /**\n         * For older card, we have a detailed check to decide whether to display stats or not.\n         * \n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\n         */\n        const isMonster = checkMonster({ frame });\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n            ? !!(atk || def || (isLink && linkMap.length))\n            : isMonster;\n\n        if (!statInEffect) {\n            migratedCard.atk = '';\n            migratedCard.def = '';\n        }\n    }\n    if (migratedCard.version === 2) {\n        migratedCard.version = 3;\n        const font = migratedCard.nameStyle.font;\n        /**\n         * For older cards, we dynamically switch font every time user switch the format, which lead to ambiguous situation where user want to keep the font for whatever reason. From ver 3 onward we introduce \"Auto\" font for the switch behavior, and keep the current font otherwise.\n         */\n        if (font === 'Default' || font === 'OCG') migratedCard.nameStyle.font = 'Auto';\n    }\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n    const href = window.URL.createObjectURL(blob);\n\n    link.download = name;\n    link.href = href;\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n    window.URL.revokeObjectURL(href);\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const setCharAt = (str: string, index: number, chr: string) => {\n    if (index > str.length - 1) return str;\n    return str.substring(0, index) + chr + str.substring(index + 1);\n};\n\nexport const filterFromTrail = (list: (string | undefined | null)[]) => {\n    const nextList = [...list];\n    for (let cnt = list.length - 1; cnt >= 0; cnt--) {\n        if (nextList[cnt] == null || nextList[cnt] === '') {\n            nextList.pop();\n        } else {\n            break;\n        }\n    }\n\n    return nextList;\n};\n\nexport const padRight = (list: (string | undefined | null)[], limit: number, padUnit = '') => {\n    const nextList = [...list];\n    for (let cnt = list.length; cnt < limit; cnt++) {\n        nextList.push(padUnit);\n    }\n\n    return nextList;\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n    PendulumSize,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst boxSizeMap: Record<string, string> = {\n    large: 'Large',\n    medium: 'Normal',\n    small: 'Small',\n};\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue as PendulumSize;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: boxSizeMap[pendulumSize],\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\nimport { checkExtraDeckMonster } from './categorize';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\n    /** Try to being clever */\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\n    const formattedMonsterEffect = (checkExtraDeckMonster({\n        frame: normalizedFrame ?? 'normal'\n    }) && splittedMonsterEffect.length > 1)\n        ? [\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\n            ...splittedMonsterEffect.slice(1),\n        ].join('\\n')\n        : normalizedMonsterEffect;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: formattedMonsterEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","export const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRgba = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\nfunction componentToHex(c?: number) {\n    if (typeof c !== 'number') return '00';\n    const hex = Math.max(0, Math.min(c, 255)).toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\nexport const rgbToHex = (rgb: number[]) => {\n  return '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n};\n\n/** Contrast formula from google \\ :v / */\nexport const getContrastColor = (rgbColor: number[]) => {\n    return ((rgbColor[0] ?? 0) * 299 + (rgbColor[1] ?? 0) * 587 + (rgbColor[2] ?? 0) * 114) / 1000 >= 128\n        ? '#000000'\n        : '#FFFFFF';\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};\n\nexport const getDynamicFont = ({\n    heightCap,\n    lineCount,\n}: {\n    heightCap: number,\n    lineCount: number,\n}): FontSizeData => {\n    return {\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\n        fontSize: heightCap / lineCount * 0.9,\n        lineHeight: heightCap / lineCount,\n        lineCount,\n        bulletOffset: 1,\n    };\n};\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\n    return {\n        ...fontData,\n        fontList: [\n            ...fontData.fontList,\n            getDynamicFont(dynamicFontOption),\n        ]\n    };\n};\n\nexport const swapTextData = (\n    currentTextData: {\n        fontData: FontData;\n        fontLevel: number;\n        currentFont: FontGetter;\n    },\n    nextFontData: FontData,\n) => {\n    const {\n        fontData,\n        fontLevel,\n    } = currentTextData;\n    const nextCurrentFont = createFontGetter();\n    /** We use the font list of old font, avoiding merge font because it seems unnecessary, also avoiding redo dynamic font injection */\n    const combinedFontData: FontData = {\n        ...nextFontData,\n        fontList: [...fontData.fontList],\n    };\n    nextCurrentFont\n        .setSize(combinedFontData.fontList[fontLevel].fontSize)\n        .setFamily(combinedFontData.font)\n        .getFont();\n\n    return {\n        fontData: combinedFontData,\n        fontLevel,\n        currentFont: nextCurrentFont,\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};\n\nexport const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\n\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\n    const {\n        trueBaseline,\n        trueEdge,\n        trueWidth,\n        trueHeightCap,\n    } = coordinateData;\n\n    return {\n        ...coordinateData,\n        trueBaseline: trueBaseline * scale,\n        trueEdge: trueEdge * scale,\n        trueWidth: trueWidth * scale,\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\n    };\n};\n\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\n    return coordinate.map(value => value * scale) as [number, number, number, number];\n};\n\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\n    fontSizeData: FontData,\n    scale: number,\n): FontData => {\n    const {\n        allRightSymbolOffset,\n        bulletOffset,\n        bulletWidth,\n        fontSize,\n        headTextSpacing,\n        iconSymbolWidth,\n        lineHeight,\n        offsetY,\n        ordinalFontOffsetY,\n        wordLetterSpacing,\n    } = fontSizeData;\n\n    return {\n        ...fontSizeData,\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\n        bulletWidth: bulletWidth * scale,\n        fontSize: fontSize * scale,\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\n        lineHeight: lineHeight * scale,\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\n    };\n};\n\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\n    return {\n        ...fontData,\n        fontList: fontData.fontList.map(entry => {\n            return scaleFontSizeData(entry, scale);\n        }),\n    };\n};","export const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport const isTouchDevice = () => {\n    return (('ontouchstart' in window) || (navigator.maxTouchPoints > 0));\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './canvas';\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './color';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';\nexport * from './scale';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    cursor: pointer;\n    &:not(:disabled):hover {\n        background-color: var(--sub-primary);\n    }\n    &:disabled {\n        color: var(--color-dim);\n        cursor: not-allowed;\n        background-color: var(--color-contrast);\n        border: var(--bw) solid var(--color-contrast);\n        .anticon {\n            color: inherit;\n        }\n    }\n    input {\n        display: none;\n    }  \n`;","import { RegionMap, DefaultFormatAttribute, InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        region,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const targetRegion = RegionMap[region].category === targetFormat\n        ? region\n        : RegionMap[DefaultFormatAttribute[targetFormat]].key;\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        region: targetRegion,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n    };\n};","import { create } from 'zustand';\n\nexport type BatchDownloadStore = {\n    batchName: string,\n    batchQueue: string[],\n    batchDataMap: Record<string, { name: string, blob: Blob }>,\n    isBatchDownloading: boolean,\n    isReady: boolean,\n    startBatchDownload: (batchName: string, batchQueue: string[]) => void,\n    stopBatchDownload: () => void,\n    clearQueue: () => void,\n    addToBatch: (cardId: string, cardName: string, cardBlob: Blob) => void,\n};\nexport const useBatchDownload = create<BatchDownloadStore>((set, get) => {\n    return {\n        batchName: '',\n        batch: undefined,\n        batchQueue: [],\n        batchDataMap: {},\n        isBatchDownloading: false,\n        isReady: false,\n        startBatchDownload: (batchName, batchQueue) => {\n            set({\n                batchName,\n                batchQueue,\n                isBatchDownloading: true,\n            });\n        },\n        stopBatchDownload: () => {\n            set({\n                batchName: '',\n                batchQueue: [],\n                batchDataMap: {},\n                isBatchDownloading: false,\n                isReady: false,\n            });\n        },\n        clearQueue: () => {\n            set({\n                batchQueue: [],\n            });\n        },\n        addToBatch: (cardId, cardName, cardBlob) => {\n            set(({ batchQueue, batchDataMap }) => {\n                const nextQueue = batchQueue.filter(id => id !== cardId);\n                const nextBatchDataMap = { ...batchDataMap };\n                nextBatchDataMap[cardId] = { name: cardName, blob: cardBlob };\n\n                return {\n                    batchQueue: nextQueue,\n                    batchDataMap: nextBatchDataMap,\n                    isReady: nextQueue.length === 0 ? true : false,\n                };\n            });\n        },\n    };\n});","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\nexport type WithLanguage = {\n    language: LanguageDataDictionary\n};\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-6.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-6.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-7.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-7.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'input.name-style.emboss.color.alert': (\n            colorTab: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\n                { colorTab },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardFlag,\n    CardOpacity,\n    CondenseType,\n    DYE_LIST_LENGTH,\n    FLAG_LENGTH,\n    Foil,\n    FoilMap,\n    FrameDyeList,\n    getArtCanvasCoordinate,\n    getDefaultCardFlag,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultDyeList,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    MAX_STAR_LENGTH,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    'Region',\n    /** Creative customize stuff */\n    'Star Type',\n    'Star Alignment',\n    'Card Icon Type',\n    'Link Rating',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Effect Box',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Emboss Pitch',\n    'Name Style - Emboss Yaw',\n    'Name Style - Emboss Thickness',\n    'Name Style - Has Emboss',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Effect Style - Font Style',\n    'Effect Style - Background',\n    'Effect Style - Min Line',\n    'Effect Style - Justify Ratio',\n    'Pendulum Size',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Pendulum Effect Style - Font Style',\n    'Pendulum Effect Style - Background',\n    'Pendulum Effect Style - Min Line',\n    'Pendulum Effect Style - Justify Ratio',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'Other Finish - Attribute',\n    'Other Finish - Background',\n    'Other Finish - Icon',\n    'Other Finish - Sticker',\n    'Left Frame',\n    'Right Frame',\n    'Bottom Right Frame',\n    'Dye List',\n    'Star List',\n    'Flag',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n    let error = '';\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            artFinish,\n            artFit,\n            artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            backgroundFit,\n            backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            flag,\n            foil,\n            format,\n            region,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            leftFrame,\n            linkMap,\n            linkRating,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherFinish,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            pendulumStyle,\n            pendulumTextStyle,\n            rightFrame,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            starList,\n            typeAbility,\n            typeTextStyle,\n            dyeList,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n        const stringifedFlag = flag.join('|');\n        const stringifedDyeList = dyeList.join('|');\n        const stringifedSubFamilyList = starList.join('|');\n\n        write('Format', format);\n        write('Region', region);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink ?? undefined);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Link Rating', linkRating);\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Effect Box', opacity.effectBox);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Effect Style - Font Style', effectStyle.fontStyle);\n        write('Effect Style - Background', effectStyle.background);\n        write('Effect Style - Min Line', effectStyle.minLine);\n        write('Effect Style - Justify Ratio', effectStyle.justifyRatio);\n        write('Pendulum Size', pendulumSize);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\n        write('Pendulum Effect Style - Background', pendulumStyle.background);\n        write('Pendulum Effect Style - Min Line', pendulumStyle.minLine);\n        write('Pendulum Effect Style - Justify Ratio', pendulumStyle.justifyRatio);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('Other Finish - Attribute', otherFinish[0]);\n        write('Other Finish - Icon', otherFinish[1]);\n        write('Other Finish - Sticker', otherFinish[2]);\n        write('Other Finish - Background', otherFinish[3]);\n        write('Left Frame', leftFrame);\n        write('Right Frame', rightFrame);\n        write('Bottom Right Frame', pendulumRightFrame);\n        write('Dye List', stringifedDyeList);\n        write('Star List', stringifedSubFamilyList);\n        write('Flag', stringifedFlag);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\n            error = 'offline-data';\n        }\n\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return {\n        value: [\n            CsvStandardFieldList.join(','),\n            valueList.join('\\n'),\n        ].join('\\n'),\n        error,\n    };\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n                const rightFrame = (reader('Right Frame') ?? emptyCard.rightFrame).toLowerCase();\n                const leftFrame = (reader('Left Frame') ?? emptyCard.leftFrame).toLowerCase();\n                const pendulumRightFrame = (reader('Bottom Right Frame') ?? emptyCard.pendulumRightFrame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = reader('Star Type') === 'text'\n                    ? rawStar\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\n                        ? parseInt(rawStar)\n                        : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\n                const finishIcon = reader('Other Finish - Icon') ?? '';\n                const finishBackground = reader('Other Finish - Background') ?? '';\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const region = (reader('Region') ?? emptyCard.region).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter(entry => typeof entry === 'string' && entry !== '')\n                        .map(entry => typeof entry === 'string' ? entry : '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\n                const effectBackground = (reader('Effect Style - Background') ?? emptyCard.effectStyle.background).toLowerCase();\n                const pendulumEffectBackground = (reader('Pendulum Effect Style - Background') ?? emptyCard.pendulumStyle.background).toLowerCase();\n                const effectMinLine = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.minLine);\n                const pendulumEffectMinLine = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.minLine);\n                const effectJustifyRatio = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.justifyRatio);\n                const pendulumEffectJustifyRatio = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.justifyRatio);\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    effectBox: normalizeBoolean(reader('Opacity - Effect Box'), emptyOpacity.effectBox),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n                const linkRating = reader('Link Rating') ?? '';\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n                const baseFlag = (reader('Flag') ?? '').split('|').map(Number).slice(0, FLAG_LENGTH) as CardFlag;\n                const flag = getDefaultCardFlag().map((entry, index) => {\n                    if (typeof baseFlag[index] === 'number') return baseFlag[index];\n                    return entry;\n                }) as CardFlag;\n\n                const baseDyeList = (reader('Dye List') ?? '').split('|').map(String).slice(0, DYE_LIST_LENGTH) as FrameDyeList;\n                const dyeList = getDefaultDyeList().map((entry, index) => {\n                    if (typeof baseDyeList[index] === 'string') return baseDyeList[index];\n                    return entry;\n                }) as FrameDyeList;\n\n                const starList = (reader('Star List') ?? '').split('|').map(String).slice(0, MAX_STAR_LENGTH);\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    dyeList,\n                    effect,\n                    effectStyle: {\n                        condenseTolerant,\n                        upSize: effectUpSize,\n                        fontStyle: effectFontStyle,\n                        background: effectBackground,\n                        minLine: effectMinLine,\n                        justifyRatio: effectJustifyRatio,\n                    },\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    flag,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    leftFrame,\n                    linkMap,\n                    linkRating,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherFinish: [finishAttribute, finishIcon, finishSticker, finishBackground] as OtherFinish,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumRightFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumSize,\n                    pendulumStyle: {\n                        upSize: pendulumEffectUpSize,\n                        fontStyle: pendulumEffectFontStyle, \n                        background: pendulumEffectBackground,\n                        minLine: pendulumEffectMinLine,\n                        justifyRatio: pendulumEffectJustifyRatio,\n                    },\n                    pendulumTextStyle,\n                    region,\n                    rightFrame,\n                    setId,\n                    star,\n                    starList,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    try {\n        const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n        if (frameResult !== 0) return frameResult;\n\n        /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n        const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n        return bottomFrameResult;\n    } catch (e) {\n        return 0;\n    }\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    selectedMap: Record<string, string>,\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    selectCard: (id: string, type: 'add' | 'remove') => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setSelectMap: (id: InternalCard[], type?: 'add' | 'replace') => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        selectedMap: {},\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect, isPendulum }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + (isPendulum ? normalizeCardEffect(pendulumEffect).toLowerCase() : '')).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        selectCard: (id, type) => {\n            set(({ selectedMap }) => {\n                const nextMap = { ...selectedMap };\n                if (type === 'add') nextMap[id] = id;\n                else delete nextMap[id];\n\n                return { selectedMap: nextMap };\n            });\n        },\n        setSelectMap: (cardList, type) => set(({ selectedMap }) => ({\n            selectedMap: cardList.reduce((prev, curr) => {\n                prev[curr.id] = curr.id;\n                return prev;\n            }, type === 'replace' ? {} : { ...selectedMap } as Record<string, string>),\n        })),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst, ExportFormat, SlindingType } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    allowHotkey: boolean,\n    exportFormat: ExportFormat,\n    exportScheme: string,\n    globalScale: number,\n    mirrorPendulumScale: boolean,\n    reduceMotionColor: boolean,\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraAttribute: boolean,\n    showExtraDecorativeOption: boolean,\n    slidingType: SlindingType,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        allowHotkey,\n        exportFormat,\n        exportScheme,\n        globalScale,\n        mirrorPendulumScale,\n        reduceMotionColor,\n        resolution,\n        showCreativeOption,\n        showExtraAttribute,\n        showExtraDecorativeOption,\n        slidingType,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            exportScheme: typeof exportScheme === 'string' ? exportScheme : 'with-name',\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\n                ? globalScale\n                : 1,\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\n            slidingType: typeof slidingType === 'string' ? slidingType as SlindingType : 'auto',\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraAttribute: typeof showExtraAttribute === 'boolean' ? showExtraAttribute : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity, PendulumSize } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\nimport { useBatchDownload } from './use-batch-download';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const {\n        addToBatch,\n        batchDataMap,\n        isBatchDownloading,\n    } = useBatchDownload();\n    const resolution = useSetting(state => state.setting.resolution);\n    const exportScheme = useSetting(state => state.setting.exportScheme);\n    const {\n        opacity,\n        name,\n        isPendulum,\n        pendulumSize,\n    } = currentCard;\n    const normalizedName = normalizeCardName(name);\n    const pendingSave = useRef(false);\n\n    const getCardDataUrl = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && clonedCanvas && clonedCanvasContext\n            && !isTainted\n        ) {\n            if (size) {\n                clonedCanvas.width = size[0];\n                clonedCanvas.height = size[1];\n            }\n            /** Resize here */\n            clonedCanvasContext.drawImage(\n                drawCanvas,\n                0, 0, drawCanvas.width, drawCanvas.height,\n                0, 0, clonedCanvas.width, clonedCanvas.height,\n            );\n\n            return clonedCanvas.toDataURL('image/png');\n        }\n    }, [exportCanvasRef, isTainted, resolution]);\n    const addToCurrentBatch = useCallback(async (\n        cardName: string,\n        cardId: string,\n        size: [number, number] = resolution,\n    ) => {\n        try {\n            const fetchedDataUrl = await fetch(getCardDataUrl(size));\n            const blob = await fetchedDataUrl.blob();\n            if (isBatchDownloading) addToBatch(cardId, cardName, blob);\n        } catch (e) {\n            onDownloadError();\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [addToBatch, getCardDataUrl, isBatchDownloading, onDownloadComplete, onDownloadError, resolution]);\n    const download = useCallback((size: [number, number] = resolution) => {\n        try {\n            const normalizedName = normalizeCardName(name);\n            var link = document.createElement('a');\n            link.download = normalizedName\n                ? `${normalizedName}.png`\n                : 'card.png';\n            link.href = getCardDataUrl(size);\n            link.click();\n        } catch (e) {\n            onDownloadError();\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [resolution, onDownloadComplete, name, getCardDataUrl, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [normalizedName]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            pendulumSize,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                            if (isBatchDownloading && !batchDataMap[normalizedCard.id]) {\n                                setTimeout(() => {\n                                    addToCurrentBatch(\n                                        exportScheme === 'with-name'\n                                            ? `${normalizedName}.png`\n                                            : `${normalizedCard.setId} - ${normalizedName}.png`,\n                                        normalizedCard.id,\n                                    );\n                                }, 200);\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { openDB, DBSchema, IDBPDatabase } from 'idb';\nimport { useEffect, useState } from 'react';\n\nexport interface YgoCarderDb extends DBSchema {\n    messageStore: {\n        key: string,\n        value: string,\n    },\n    presetLayoutStore: {\n        key: string,\n        value: {\n            key: string,\n            content: string,\n        },\n    },\n    presetNameStyleStore: {\n        key: string,\n        value: {\n            key: string,\n            content: string,\n        },\n    },\n};\n\nexport async function setupYgoCarderDb() {\n    try {\n        const db = await openDB<YgoCarderDb>(\n            'YgoCarderDb',\n            3,\n            {\n                upgrade(db) {\n                    if (!db.objectStoreNames.contains('messageStore')) {\n                        db.createObjectStore('messageStore', { keyPath: 'key' });\n                    }\n                    if (!db.objectStoreNames.contains('presetLayoutStore')) {\n                        db.createObjectStore('presetLayoutStore', { keyPath: 'key' });\n                    }\n                    if (!db.objectStoreNames.contains('presetNameStyleStore')) {\n                        db.createObjectStore('presetNameStyleStore', { keyPath: 'key' });\n                    }\n                    console.info('YgoCarderDb ready');\n                },\n            }\n        );\n\n        return db;\n    } catch (e) {\n        console.error('setupYgoCarderDb', e);\n        return null;\n    }\n};\n\nexport const useCarderDb = () => {\n    const [db, setDb] = useState<IDBPDatabase<YgoCarderDb> | null>(null);\n    const [dbReady, setDbReady] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            const db = await setupYgoCarderDb();\n            setDb(db);\n            setDbReady(true);\n        })();\n\n        setTimeout(() => {\n            /** Ensure non-blocking */\n            setDbReady(true);\n        }, 5000);\n    }, []);\n\n    return {\n        db,\n        dbReady,\n    };\n};","import { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRgba } from 'src/util';\n\nexport type UseColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n};\nexport const useColorPicker = ({\n    value = '',\n    onChange,\n}: UseColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRgba(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRgba(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRgba(value, false),\n        });\n    }, [value]);\n\n    return {\n        inputText: currentText,\n        color: internalValue,\n        setColor: setCurrentText,\n    };\n};","import { useCallback } from 'react';\nimport { createPresetNameStyle, Foil, FrameDyeList, NameStyle } from 'src/model';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type FramePreset = {\n    foil: Foil,\n    frame: string,\n    pendulumFrame: string,\n    leftFrame: string,\n    rightFrame: string,\n    pendulumRightFrame: string,\n    effectStyle: {\n        background: string,\n    },\n    pendulumStyle: {\n        background: string,\n    },\n    dyeList: FrameDyeList,\n};\nexport type GlobalMemory = {\n    activeDropzone: number,\n    layoutPresetList: {\n        key: string,\n        content: FramePreset,\n    }[],\n    nameStylePresetList: {\n        key: string,\n        content: Partial<NameStyle>,\n    }[],\n};\nexport type GlobalStore = {\n    memory: GlobalMemory,\n    updateGlobalMemory: (transformerOrPayload: Partial<GlobalMemory>\n        | ((currentMemory: GlobalMemory) => GlobalMemory)) => void,\n};\nexport const useGlobalMemory = create<GlobalStore>((set) => {\n    return {\n        memory: {\n            activeDropzone: 0,\n            layoutPresetList: [],\n            nameStylePresetList: [\n                {\n                    key: 'abc',\n                    content: createPresetNameStyle({\n                        preset: 'animeGold',\n                        shadowColor: '#f8f8f8',\n                        shadowOffsetY: 3,\n                        shadowOffsetX: 2,\n                        shadowBlur: 2,\n                        hasShadow: true,\n                        lineColor: '#664444',\n                        lineWidth: 3,\n                        lineOffsetX: 1,\n                        lineOffsetY: 0,\n                        hasOutline: true,\n                        gradientAngle: 180,\n                        gradientColor: '0.000|#4ee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#45dd2d,1.000|#43da23',\n                        hasGradient: true,\n                    })\n                },\n                {\n                    key: 'cde',\n                    content: createPresetNameStyle({\n                        preset: 'promo',\n                        fillStyle: '#c7080b',\n                        shadowColor: '#333333',\n                        shadowOffsetY: 0,\n                        shadowOffsetX: 0,\n                        shadowBlur: 1,\n                        hasShadow: true,\n                        lineColor: '#8a1801',\n                        lineWidth: 3,\n                        lineOffsetX: 0,\n                        hasOutline: true,\n                        lineOffsetY: 0,\n                        font: 'OCG',\n                    })\n                },\n                {\n                    key: 'efg',\n                    content: createPresetNameStyle({\n                        preset: 'promo',\n                        fillStyle: '#080bc7',\n                        shadowColor: '#333333',\n                        shadowOffsetY: 0,\n                        shadowOffsetX: 0,\n                        shadowBlur: 1,\n                        hasShadow: true,\n                        lineColor: '#18018a',\n                        lineWidth: 3,\n                        lineOffsetX: 0,\n                        hasOutline: true,\n                        lineOffsetY: 0,\n                        font: 'OCG',\n                    })\n                },\n                {\n                    key: 'ghi',\n                    content: createPresetNameStyle({\n                        preset: 'animeGold',\n                        shadowColor: '#f8f8f8',\n                        shadowOffsetY: 3,\n                        shadowOffsetX: 2,\n                        shadowBlur: 2,\n                        hasShadow: true,\n                        lineColor: '#664444',\n                        lineWidth: 3,\n                        lineOffsetX: 1,\n                        lineOffsetY: 0,\n                        hasOutline: true,\n                        gradientAngle: 180,\n                        gradientColor: '0.000|#4e17e3,0.220|#db15be,0.270|#20cd09,0.330|#b57f0b,0.380|#d0920c,0.450|#f6bfff,0.610|#ffffff,0.700|#ffffff,0.870|#45dd2d,1.000|#43da23',\n                        hasGradient: true,\n                    })\n                },\n            ],\n        },\n        updateGlobalMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newGlobalMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n\n                return {\n                    memory: newGlobalMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useGlobal = <Key extends keyof GlobalMemory>(key: Key) => {\n    const {\n        targetMemory,\n        updateGlobalMemory,\n    } = useGlobalMemory(useShallow(({\n        memory,\n        updateGlobalMemory,\n    }) => ({\n        targetMemory: memory[key],\n        updateGlobalMemory,\n    })));\n\n    const updateTargetNotification = useCallback(\n        (value: GlobalMemory[Key] | ((currentSetting: GlobalMemory[Key]) => GlobalMemory[Key])) => {\n            updateGlobalMemory(cur => {\n                return { ...cur, [key]: typeof value === 'function' ? value(cur[key]) : value };\n            });\n        },\n        [key, updateGlobalMemory],\n    );\n\n    return [targetMemory, updateTargetNotification] as const;\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth * maximumScale,\n    height = CanvasHeight * maximumScale,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\n        pendulumSize?: PendulumSize,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n                const pendulumSuffix = pendulumSize\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\n                    : DEFAULT_PENDULUM_SIZE;\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType, pendulumSuffix);\n                    }\n                } else {\n                    await caller(finishType, pendulumSuffix);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_LINE_COLOR = '#000000';\nconst DEFAULT_LINE_WIDTH = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x,\n    y,\n    blur,\n    color,\n    colorGradient,\n    shadowColor,\n    lineColor,\n    lineColorGradient,\n    lineWidth,\n    globalScale = 1,\n    useDefault = true,\n}: {\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    useDefault?: boolean,\n    colorGradient?: CanvasGradient,\n    lineColorGradient?: CanvasGradient,\n} & CanvasTextStyle) => {\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\n\n    return () => {\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n            ctx.drawImage(image, actualDX, actualDY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n                ctx.drawImage(image, actualDX, actualDY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n    );\n};\n\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number),\n    dy: number | ((image: HTMLImageElement) => number),\n    dw: number | ((image: HTMLImageElement) => number),\n    dh: number | ((image: HTMLImageElement) => number),\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n\n            if (\n                typeof actualSX === 'number'\n                && typeof actualSY === 'number'\n                && typeof actualSW === 'number'\n                && typeof actualSH === 'number'\n            ) {\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n            } else {\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n            }\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n    \n                if (\n                    typeof actualSX === 'number'\n                    && typeof actualSY === 'number'\n                    && typeof actualSW === 'number'\n                    && typeof actualSH === 'number'\n                ) {\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n                } else {\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n                }\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    dx, dy,\n    dw, dh,\n    sx, sy,\n    sw, sh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n        dw, dh,\n        sx, sy,\n        sw, sh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    globalScale: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    FontDeviationMap,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n    globalScale: number,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n        ? 0.046875\n        : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2 * globalScale;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation,\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviationMap,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        letterMap = {},\n        threshold = 10,\n    } = deviation ?? {};\n    const {\n        uniformBoxDescent,\n    } = letterMap[letter] ?? {};\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    let uniformYScale = 1;\n    let boxDescentCompensate = 0;\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\n\n        /** Need to carefully survey if we over-compensate in edge case. */\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\n\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\n    }\n    ctx.scale(1, uniformYScale);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\n    });\n    ctx.scale(1, 1 / uniformYScale);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: Omit<FontData, 'fontList'>,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n    globalScale: number,\n) => {\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        fontSize,\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n        vietnameseFont = font,\n        vietnameseFontRatio = 1,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let vietnameseFontMemory = fontController.getFontInfo();\n    const applyVietnameseFont = () => {\n        vietnameseFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(vietnameseFont).setSize(fontSize * vietnameseFontRatio).getFont();\n    };\n    const stopApplyVietnameseFont = () => {\n        ctx.font = fontController\n            .setFamily(vietnameseFontMemory.family)\n            .setSize(vietnameseFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = (ratio = symbolFontRatio) => {\n        symbolFontMemory = fontController.getFontInfo();\n        const nextRatio = fontSize * ratio;\n        ctx.font = fontController.setFamily(symbolFont).setSize(nextRatio).getFont();\n        return {\n            fontSize: nextRatio,\n        };\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyLargerText, stopApplyLargerText,\n        applyNumberFont, stopApplyNumberFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyVietnameseFont, stopApplyVietnameseFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n                + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FontData,\n    FragmentSplitRegex,\n    GAP_PER_WIDTH_RATIO,\n    ITALIC_CLOSE_TAG,\n    ITALIC_OPEN_TAG,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NormalFontData,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    STYLING_TAG_SOURCE,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    VietnameseDiacriticLetterRegex,\n    WholeWordRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter, scaleFontSizeData, swapTextData } from 'src/util';\nimport { getLetterWidth } from './letter';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing: _letterSpacing,\n    format,\n    globalScale,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    format: string,\n    globalScale: number,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n        letterOffsetMap = {},\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n        applyVietnameseFont, stopApplyVietnameseFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const isControlWord = new RegExp(STYLING_TAG_SOURCE, 'g').test(token);\n    const fragmentList = isControlWord\n        ? []\n        : token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Vietnamese letter use different font, for the sake of simplicity, we use a widely supported Times New Roman font instead of a more specific one. */\n                else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applyVietnameseFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyVietnameseFont();\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont(letterOffsetMap[fragment]?.ratio);\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n    globalScale,\n    justifyRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n    globalScale: number,\n    justifyRatio: number,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n    let currentTextData = textData;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        if (token === ITALIC_OPEN_TAG) {\n            const hasItalicFontData = !!(NormalFontData[textData.fontData?.variant ?? '']);\n            const italicFontData = hasItalicFontData\n                ? NormalFontData[textData.fontData.variant]\n                : textData.fontData;\n\n            currentTextData = swapTextData(textData, italicFontData);\n            ctx.font = currentTextData.currentFont\n                .setStyle('italic')\n                .getFont();\n            continue;\n        } else if (token === ITALIC_CLOSE_TAG) {\n            currentTextData = textData;\n            ctx.font = currentTextData.currentFont\n                .setStyle('')\n                .getFont();\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData: currentTextData, format, globalScale });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\n        );\n\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 * globalScale * (justifyRatio / 100) ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 * globalScale * (justifyRatio / 100) ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    format,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    globalScale,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    globalScale: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    ITALIC_CLOSE_TAG,\n    ITALIC_OPEN_TAG,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NormalFontData,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    VietnameseDiacriticLetterRegex,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\nimport { scaleFontSizeData, swapTextData } from 'src/util';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    textDrawer,\n    debug = false,\n    option,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    globalScale: number,\n    option?: {\n        drawHeadText?: boolean,\n    },\n    debug?: boolean,\n}) => {\n    const { drawHeadText = true } = option ?? {};\n    const {\n        fontLevel,\n    } = textData;\n    const defaultFontData = textData.fontData;\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    let currentTextData = textData;\n    let currentFont = currentTextData.currentFont;\n    let currentFontData = currentTextData.fontData;\n    let fontSizeData = currentFontData.fontList[fontLevel];\n    let textWorker = getTextWorker(ctx, currentFontData, fontSizeData, currentFont, globalScale);\n\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        /** All the info here is not affected by injected dynamic fonts */\n        const {\n            bulletOffset = scaledDefaultFontSizeData.bulletOffset,\n            bulletWidth,\n            capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\n            fontSize,\n            headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n            iconSymbolWidth = bulletWidth,\n            largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n            letterSpacing = scaledDefaultFontSizeData.letterSpacing,\n            ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\n            squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\n            wordLetterSpacing,\n            allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\n        } = fontSizeData;\n        const letterSpacingRatio = 1 + letterSpacing / 2;\n        const baseline = trueBaseline / yRatio;\n        const {\n            headTextFillStyle,\n            headTextBold = DefaultFontData.headTextBold,\n            headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n            headTextOverflow = DefaultFontData.headTextOverflow,\n            headTextGapRatio = DefaultFontData.headTextGapRatio,\n            metricMethod,\n            fontStyle,\n            letterDeviationMap = {},\n            letterOffsetMap = {},\n        } = currentFontData;\n        const {\n            stopApplyFuriganaFont, applyFuriganaFont,\n            stopApplyLargerText, applyLargerText,\n            stopApplyNumberFont, applyNumberFont,\n            stopApplyOrdinalFont, applyOrdinalFont,\n            applyScale, reverseScale,\n            applySymbolFont, stopApplySymbolFont,\n            applyVietnameseFont, stopApplyVietnameseFont,\n            applyAsymmetricScale, resetScale,\n        } = textWorker;\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        if (token === ITALIC_OPEN_TAG) {\n            const hasItalicFontData = !!(NormalFontData[defaultFontData?.variant ?? '']);\n            const italicFontData = hasItalicFontData\n                ? NormalFontData[defaultFontData.variant]\n                : defaultFontData;\n\n            currentTextData = swapTextData(textData, italicFontData);\n            currentFont = currentTextData.currentFont;\n            currentFontData = currentTextData.fontData;\n            fontSizeData = currentFontData.fontList[fontLevel];\n            textWorker = getTextWorker(ctx, currentFontData, fontSizeData, currentFont, globalScale);\n            ctx.font = currentFont\n                .setStyle('italic')\n                .getFont();\n            continue;\n        } else if (token === ITALIC_CLOSE_TAG) {\n            currentTextData = textData;\n            currentFont = currentTextData.currentFont;\n            currentFontData = currentTextData.fontData;\n            fontSizeData = currentFontData.fontList[fontLevel];\n            textWorker = getTextWorker(ctx, currentFontData, fontSizeData, currentFont, globalScale);\n            ctx.font = currentFont\n                .setStyle('')\n                .getFont();\n            continue;\n        }\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n            globalScale,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n            + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) { }\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(\n                    ctx,\n                    fragmentEdge,\n                    trueBaseline + bulletOffset - 1 * globalScale,\n                    bulletWidth,\n                    getBulletSpacing(format) * globalScale,\n                );\n                fragmentEdge += bulletWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg'\n                        ? allRightSymbolOffset\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    globalScale,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                if (drawHeadText) fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                    globalScale,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[`${globalScale}`],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applyVietnameseFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyVietnameseFont();\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        const { fontSize } = applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            baseline: drawLetterofWordParameter.baseline + fontSize * (letterOffsetMap[fragment]?.baseline ?? 0),\n                        });\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const {\n                    yRatio = 1,\n                    ratio: fontSizeRatio,\n                    baseline: offsetBaseline = 0,\n                    edge: offsetEdge = 0,\n                } = letterOffsetMap[fragment] ?? {};\n\n                const letter = fragment;\n                const { fontSize } = applySymbolFont(fontSizeRatio);\n                ctx.scale(1, yRatio);\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    baseline: (drawLetterParameter.baseline + fontSize * offsetBaseline) / yRatio,\n                    letter,\n                    edge: fragmentEdge + fontSize * offsetEdge,\n                });\n                fragmentEdge += letterWidth;\n\n                ctx.scale(1, 1 / yRatio);\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                    globalScale,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap?.[`${globalScale}`],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    FLAVOR_CONDITION_SOURCE,\n    FLAVOR_LINE_PLACEHOLDER,\n    FULL_LINE_PLACEHOLDER,\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    OCG_BULLET_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    OCG_RUBY_SOURCE,\n    STYLING_TAG_SOURCE,\n    UNCOMPRESSED_SOURCE,\n    WHOLE_WORD_SOURCE,\n    contextualDoubleQuoteRegex,\n    ocgKeywordDataMap,\n    ocgNumberCircleMap,\n    ocgToTCGLetterMap,\n    tcgToOCGLetterMap,\n} from 'src/model';\n\nexport type LineOption = {\n    line: string,\n    alignment: 'left' | 'justify',\n};\nexport const splitEffect = (effect: string, isNormal = false) => {\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\n    const fullLineListOption: LineOption[] = [];\n    const lineList: string[] = [];\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\n    let effectText = effect;\n    let effectFlavorCondition = '';\n    /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n     * \n     * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n     * \n     * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in text are actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n     * */\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n\n    /** Infinite loop guarding just in case, we are dealing with while loop anyways */\n    let tryCnt = 0;\n    while (effectText.length > 0 && tryCnt <= 100) {\n        const result = wholeLineRegex.exec(effectText);\n        const lineReplacement = result?.[1];\n        const lineContent = result?.[2];\n        const fullLineReplacement = result?.[3];\n        const fullLineContent = result?.[4];\n\n        if (lineContent && lineReplacement) {\n            effectText = effectText.replace(lineReplacement, '');\n            fullLineListOption.push({ line: lineContent, alignment: 'left' });\n            lineList.push(FULL_LINE_PLACEHOLDER);\n        } else if (fullLineContent && fullLineReplacement) {\n            effectText = effectText.replace(fullLineReplacement, '');\n            fullLineListOption.push({ line: fullLineContent, alignment: 'justify' });\n            lineList.push(FULL_LINE_PLACEHOLDER);\n        } else {\n            const paragraphResult = /(.*)(\\n|$)/.exec(effectText);\n            const lineReplacement = paragraphResult?.[0];\n            const lineContent = paragraphResult?.[1];\n            if (typeof lineReplacement === 'string' && typeof lineContent === 'string') {\n                /** Restore all remaining nb line symbol back to their normal letters. Then split those paragraph into lines. */\n                lineList.push(...lineContent\n                    .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\n                    .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]')\n                    .split('\\n')\n                );\n                effectText = effectText.replace(lineReplacement, '');\n            }\n        }\n        tryCnt++;\n    }\n    if (effectFlavorCondition) {\n        lineList.push(FLAVOR_LINE_PLACEHOLDER);\n    }\n\n    return {\n        lineList,\n        fullLineListOption: [...fullLineListOption],\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(STYLING_TAG_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord: string[] = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    NormalFontData,\n    FULL_LINE_PLACEHOLDER,\n    FLAVOR_LINE_PLACEHOLDER,\n} from '../../model';\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    useItalic,\n    statInEffect,\n    typeInEffect,\n    frameType,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    useItalic: boolean,\n    frameType: 'normal' | 'pendulumLarge',\n}) => {\n    const coordinateKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n    const fontDataKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\n        fontData = NormalFontData[fontDataKey];\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nexport const drawEffect = ({\n    ctx,\n    content,\n    isNormal = false,\n    // useItalic = false,\n    fontDataKey = 'tcg',\n    fontData = EffectFontData[fontDataKey],\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    useItalic?: boolean,\n    fontData?: FontData,\n    fontDataKey?: string,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n        globalScale: number,\n        minLine?: number,\n        justifyRatio?: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n        globalScale = 1,\n        minLine: baseMinLine,\n        justifyRatio: baseJustifyRatio,\n    } = option ?? {};\n    const minLine = typeof baseMinLine === 'number' ? baseMinLine : 0;\n    const justifyRatio = typeof baseJustifyRatio === 'number' ? baseJustifyRatio : 1;\n    let sizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return sizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        lineList,\n        fullLineListOption,\n        effectFlavorCondition,\n    } = splitEffect(normalizedContent, isNormal);\n\n    let effectiveLineCount = 0;\n    const scaledFontData = scaleFontData(fontData, globalScale);\n    const { fontList } = scaledFontData;\n    const yRatio = 1;\n    /**\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\n     * \n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\n     * */\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\n        const requireDynamicSize = sizeLevel === fontList.length\n            ? true\n            : false;\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\n            ? {\n                '1': 1000,\n                '2': 1000,\n                '3': 1000,\n            }\n            : (format === 'tcg'\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\n                    ? CondenseTolerantMap['relaxed']\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n                : {\n                    '1': 800,\n                    '2': 800,\n                    '3': 800,\n                });\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n            trueHeightCap,\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\n\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\n        const dynamicFontData = useDynamicSize\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\n            : scaledFontData;\n        const dynamicSizeLevel = useDynamicSize\n            ? sizeLevel\n            : appliedSizeLevel;\n        const {\n            font: dynamicFont,\n            fontList: dynamicFontList,\n        } = dynamicFontData;\n        const fontSizeData = useDynamicSize\n            ? dynamicFontList[dynamicSizeLevel]\n            : fontList[appliedSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(dynamicFont)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData: dynamicFontData,\n            fontLevel: dynamicSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = (lineList.length > lineCount && typeof trueHeightCap === 'number')\n            ? 1 // If dynamic size is possible, no need to find condense value if current line count is larger than the font's maximum line count, it will overflow anyways.\n            : condense(\n                median => {\n                    const { currentLineList, currentLineCount } = createLineList({\n                        ctx,\n                        median,\n                        paragraphList: lineList,\n                        additionalLineCount: 0,\n                        format, textData,\n                        width,\n                        globalScale,\n                    });\n                    lineListWithRatio = currentLineList;\n\n                    if (currentLineCount > lineCount) return false;\n                    return true;\n                },\n                200,\n            );\n        effectiveLineCount = Math.max(minLine, lineListWithRatio.length);\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\n        const tolerantValue = tolerancePerSentence[`${lineList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            ((effectiveMedian < tolerantValue) && (sizeLevel < fontList.length))\n            || minLine > lineCount\n        ) {\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\n        } else {\n            clearCanvas(ctx);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            lineListWithRatio\n                .map(({\n                    line: precalculatedLine,\n                    effectiveMedian,\n                    isLast,\n                }) => {\n                    let xRatio = 1;\n                    let finalTokenList: string[] = [];\n                    let finalSpaceWidth = 0;\n                    let finalTextData = textData;\n                    if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\n                        const { line = '', alignment } = fullLineListOption.shift() ?? {};\n                        const isLast = alignment === 'justify' ? false : true;\n                        xRatio = 1/1000 * condense(\n                            median => {\n                                const { currentLineCount } = createLineList({\n                                    ctx,\n                                    median,\n                                    paragraphList: [line],\n                                    format, textData,\n                                    width,\n                                    globalScale,\n                                });\n\n                                if (currentLineCount > 1) return false;\n                                return true;\n                            },\n                        );\n                        const { tokenList, spaceWidth } = analyzeLine({\n                            ctx,\n                            line,\n                            xRatio,\n                            format,\n                            isLast,\n                            textData,\n                            width,\n                            globalScale,\n                            justifyRatio: 100,\n                        });\n                        finalTokenList = tokenList;\n                        finalSpaceWidth = spaceWidth;\n                    } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\n                        const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\n                        const dynamicFlavorFontData = useDynamicSize\n                            ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: Math.max(minLine, lineListWithRatio.length) })\n                            : flavorFontData;\n                        const { fontSize } = useDynamicSize\n                            ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\n                            : flavorFontData.fontList[appliedSizeLevel];\n                        const flavorTextCurrentFont = createFontGetter();\n                        ctx.font = flavorTextCurrentFont\n                            .setSize(fontSize)\n                            .setFamily(flavorFontData.font)\n                            .getFont();\n                        const flavorTextData = {\n                            fontData: dynamicFlavorFontData,\n                            fontLevel: dynamicSizeLevel,\n                            currentFont: flavorTextCurrentFont,\n                        };\n                        xRatio = 1/1000 * condense(\n                            median => {\n                                const { currentLineCount } = createLineList({\n                                    ctx,\n                                    median,\n                                    paragraphList: [effectFlavorCondition],\n                                    format, textData: flavorTextData,\n                                    width,\n                                    globalScale,\n                                });\n\n                                if (currentLineCount > 1) return false;\n                                return true;\n                            },\n                        );\n                        const tokenList = tokenizeText(effectFlavorCondition);\n                        finalTokenList = tokenList;\n                        finalSpaceWidth = 0;\n                        finalTextData = flavorTextData;\n                    } else {\n                        /** Normal line: Draw with the calculated median */\n                        xRatio = effectiveMedian / 1000;\n                        const line = precalculatedLine;\n                        const { tokenList, spaceWidth } = analyzeLine({\n                            ctx,\n                            line,\n                            xRatio,\n                            format,\n                            isLast,\n                            textData,\n                            width,\n                            globalScale,\n                            justifyRatio,\n                        });\n                        finalTokenList = tokenList;\n                        finalSpaceWidth = spaceWidth;\n                    }\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n                    return {\n                        xRatio,\n                        line: precalculatedLine,\n                        tokenList: finalTokenList,\n                        spaceWidth: finalSpaceWidth,\n                        textData: finalTextData,\n                    };\n                })\n                .forEach(({\n                    xRatio,\n                    tokenList,\n                    line: precalculatedLine,\n                    spaceWidth,\n                    textData,\n                }) => {\n                    if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\n                        ctx.scale(xRatio, yRatio);\n                        drawLine({\n                            ctx,\n                            tokenList,\n                            xRatio, yRatio,\n                            trueEdge, trueBaseline,\n                            spaceWidth,\n                            textData,\n                            format,\n                            globalScale,\n                        });\n                    } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\n                        ctx.scale(xRatio, yRatio);\n                        drawLine({\n                            ctx,\n                            tokenList,\n                            xRatio, yRatio,\n                            trueEdge, trueBaseline,\n                            textData,\n                            format,\n                            globalScale,\n                        });\n                    } else {\n                        ctx.scale(xRatio, yRatio);\n                        drawLine({\n                            ctx,\n                            tokenList,\n                            xRatio, yRatio,\n                            trueEdge, trueBaseline,\n                            spaceWidth,\n                            textData,\n                            format,\n                            globalScale,\n                        });\n                    }\n\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n                    trueBaseline += lineHeight;\n                });\n            break;\n        }\n        resetStyle();\n    }\n\n    return sizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\n\nconst {\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    globalScale,\n    cardIcon,\n    text,\n    star,\n    starList,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n    loopStarFinish,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    globalScale: number,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starList: string[],\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    /** We filter out all undefined star only at the trail of the star list */\n    const normalizedStarList = Array.isArray(starList)\n        ? starList\n        : [];\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = cardIcon === 'custom'\n        ? normalizedStarList.length\n        : typeof star === 'string'\n            ? star === '' ? 0 : 1\n            : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    const {\n        canvas: starCanvas,\n        ctx: starCtx,\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\n    await Promise.all([...Array(normalizedStarCount)]\n        .map(async (_, index) => {\n            offset += (starWidth + startSpacing);\n            /** We must factor alignment here, because presentation does not factor alignment */\n            const cardIconIndex = normalizedStarCount - 1 - index;\n            const cardIconName = cardIcon === 'custom' ? normalizedStarList[cardIconIndex] : cardIcon;\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(starCtx, `subfamily/subfamily-${cardIconName}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n    if (loopStarFinish) {\n        const {\n            canvas: starFinishCanvas,\n            ctx: starFinishCtx,\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\n        starFinishCtx.drawImage(starCanvas, 0, 0);\n        await loopStarFinish(\n            starFinishCtx,\n            'art',\n            async (finishType) => {\n                return await drawAsset(\n                    starFinishCtx,\n                    `finish/finish-typeart-${finishType}.png`,\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\n                );\n            },\n        );\n        starCtx.globalCompositeOperation = 'source-in';\n        starCtx.drawImage(starFinishCanvas, 0, 0);\n        ctx.drawImage(starCanvas, 0, 0);\n    } else {\n        ctx.drawImage(starCanvas, 0, 0);\n    }\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n    globalScale,\n    x, y,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n    globalScale: number,\n    x: number,\n    y: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    ctx.scale(globalScale, globalScale);\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\n    ctx.resetTransform();\n    return;\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    globalScale,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    globalScale,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...scaleDrawCoordinate(coordinate, globalScale),\n        globalScale,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    rating: string,\n    style: CanvasTextStyle,\n    globalScale: number,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || typeof rating !== 'string') return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\n        globalScale,\n        style,\n    );\n    const baseline = isNaN(Number(rating))\n        ? 1106\n        : 1105;\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = `bold ${24 * globalScale}px RoGSanSrfStd-Bd`;\n    ctx.fillText(`${rating}`, 622.75 * globalScale, baseline * globalScale);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import { CanvasConst } from 'src/model';\nimport { drawAsset } from '../image';\nimport { createCanvas } from 'src/util';\n\nconst {\n    width,\n    height,\n    topToPendulumStructure,\n} = CanvasConst;\nexport const getMaskPromise = () => {\n    const topRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-top-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const bottomRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-bottom-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    /**\n     * Be careful: Bottom right + Top right mask does NOT cover the entire right area when bottom left frame is also presented, so if both of them are the same frame, we might need to use right mask.\n     * \n     * Reason: Because bottom left frame also contains bottom right frame with transparency, if we draw another bottom right frame (that also has transparency) on top of it, it will not overlap the bottom frame, but merged with it, create a mix of both instead of total replacement, which is our desired effect. */\n    const rightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const nameMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = topToPendulumStructure;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-name.png');\n            return ctx.getImageData(0, 0, width, topToPendulumStructure).data;\n        }\n        return null;\n    })();\n\n    return {\n        topRight: topRightMask,\n        bottomRight: bottomRightMask,\n        right: rightMask,\n        name: nameMask,\n    };\n};\nexport const MaskPromise = getMaskPromise();\n\n/**\n * Draw the image onto an empty canvas, then apply an alpha mask over it.\n * \n * Each pixel in the image will be drawn with the alpha data from the corresponding pixel of the mask.\n * */\nexport const applyAlphaMask = async (\n    urlOrCanvas: string | CanvasImageSource,\n    maskData: Uint8ClampedArray<ArrayBufferLike> | null,\n    width: number,\n    height: number,\n) => {\n    const { ctx, canvas } = createCanvas(width, height);\n    if (!ctx) return canvas;\n    if (typeof urlOrCanvas === 'string') await drawAsset(ctx, urlOrCanvas, 0, 0);\n    else ctx.drawImage(urlOrCanvas, 0, 0, width, height);\n    if (!maskData) return canvas;\n    const layerData = ctx.getImageData(0, 0, width, height).data;\n    for (let cnt = 0; cnt < layerData.length; cnt += 4) {\n        layerData[cnt + 3] = maskData[cnt + 3];\n    }\n\n    ctx.putImageData(new ImageData(layerData, width, height), 0, 0);\n\n    return canvas;\n};","import {\n    ArrowPositionMap,\n    ArtFinishMap,\n    RegionMap,\n    BackgroundType,\n    CanvasConst,\n    CardOpacity,\n    Foil,\n    FrameDyeList,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PendulumSizeMap,\n    PendulumSizeMapException,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { createCanvas, dyeCanvas, getCardIconFromFrame, HexColorRegex, resolveFrameStyle } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\nimport { getFinishIterator } from '../canvas-util';\nimport { applyAlphaMask, MaskPromise } from './mask';\n\nexport const baseDrawLinkArrowMap = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    linkMap: string[],\n    positionType: keyof typeof ArrowPositionMap,\n    boundless: boolean,\n) => {\n    if (!ctx) return;\n    ctx.scale(globalScale, globalScale);\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n        .map(async entry => {\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n            const isActive = linkMap.includes(`${entry}`);\n            const baseLink = `link/link-inactive-${entry}`;\n            const activeLink = `link/link-active-${entry}`;\n            const coordinate = [left, top, width, height] as const;\n\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n            if (isActive) {\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n            } else return;\n        })\n    );\n    ctx.resetTransform();\n};\nexport const baseDrawLinkMapFoil = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    foil: string,\n    withBorder: boolean,\n    positionType: keyof typeof ArrowPositionMap,\n    dyeColor: string,\n) => {\n    if (!ctx) return;\n    const willDyed = HexColorRegex.test(dyeColor);\n    if (foil === 'normal' && !willDyed) return;\n    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n    const usedFoil = willDyed ? 'platinum' : foil;\n    const drawFunction = async (ctx: CanvasRenderingContext2D) => {\n        if (withBorder) {\n            await drawAsset(ctx, `link/link-overlay-arrow-${usedFoil}.png`, 0, 175);\n        } else {\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n                .map(async entry => {\n                    const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n                    const coordinate = [left, top, width, height] as const;\n\n                    await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${usedFoil}.png`, ...coordinate);\n                })\n            );\n        }\n    };\n\n    ctx.scale(globalScale, globalScale);\n    if (willDyed) {\n        const { ctx: linkMapFoilCtx, canvas: linkMapFoilCanvas } = createCanvas();\n        if (linkMapFoilCtx) await drawFunction(linkMapFoilCtx);\n        const { canvas: dyedLinkMapFoilCanvas } = dyeCanvas(linkMapFoilCanvas, dyeColor);\n        ctx.drawImage(dyedLinkMapFoilCanvas, 0, 0);\n    } else {\n        await drawFunction(ctx);\n    }\n    ctx.resetTransform();\n};\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n    topToPendulumStructure,\n    topToPendulumStructureFrame,\n    pendulumIconFrameHeight,\n    pendulumIconFrameWidth,\n    pendulumFrameHeight,\n    pendulumFrameWidth,\n    attributeSize,\n    attributeX,\n    attributeY,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    globalScale,\n    region,\n    hasBackground,\n    frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n    dyeList,\n    effectBackground, pendulumEffectBackground,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    starList,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    pendulumFrameTypeMap,\n    otherFinish,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    globalScale: number,\n    region: string,\n    frame: string, leftFrame: string, pendulumFrame: string, rightFrame: string, pendulumRightFrame: string,\n    dyeList: FrameDyeList,\n    effectBackground: string, pendulumEffectBackground: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    starList: string[],\n    foil: Foil,\n    pendulumSize: PendulumSize,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\n    otherFinish: OtherFinish,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFrameX,\n        artFrameY,\n        artFrameHeight,\n        artFrameWidth,\n        artFinishX,\n        artFinishY,\n        artWidth,\n        artRatio,\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n    const {\n        frameType,\n        effectBoxOffsetY,\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\n        pendulumBoxOffsetY,\n        artlessFrameY,\n    } = PendulumSizeMap[pendulumSize];\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderTypeList = frame === 'synchro'\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\n        : [frameBorderType];\n    const applyArtFinish = !boundless && artBorder;\n\n    const resolvedLayoutStyle = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    } = resolvedLayoutStyle;\n\n    const resultAPI = {\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            const willReplaceFrame = hasBackground && backgroundCanvas && backgroundType === 'frame';\n\n            /** Combine layer frame here */\n            const { ctx: topFrameCtx, canvas: topFrameCanvas } = createCanvas();\n            await drawAsset(topFrameCtx, `frame/frame-${topLeftFrame}.png`, 0, 0);\n            const { canvas: dyedTopFrameCanvas, ctx: dyedTopFrameCtx } = dyeCanvas(topFrameCanvas, dyeList[0]);\n            /** No need to dye if background is gonna replace the frame */\n            if (\n                !willReplaceFrame\n                && (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '')\n                && dyedTopFrameCtx\n            ) {\n                const topRightCanvas = await applyAlphaMask(\n                    `frame/frame-${topRightFrame}.png`,\n                    await MaskPromise.topRight,\n                    cardWidth,\n                    cardHeight,\n                );\n                const { canvas: dyedTopRightCanvas } = dyeCanvas(topRightCanvas, dyeList[1]);\n                dyedTopFrameCtx.drawImage(dyedTopRightCanvas, 0, 0);\n            }\n\n            const { ctx: bottomFrameCtx, canvas: bottomFrameCanvas } = createCanvas();\n            await drawAsset(bottomFrameCtx, `frame-pendulum/frame-pendulum-${bottomLeftFrame}.png`, 0, 0);\n            const { canvas: dyedBottomFrameCanvas, ctx: dyedBottomFrameCtx } = dyeCanvas(bottomFrameCanvas, dyeList[2]);\n            if (\n                !willReplaceFrame\n                && (bottomLeftFrame !== bottomRightFrame || dyeList[2] !== '' || dyeList[3] !== '')\n                && dyedBottomFrameCtx\n            ) {\n                /** What is this?\n                 * \n                 * Because the \"bottom left\" frame is not actually bottom, but both bottom left and bottom right with transparency. If we draw it first, then draw our \"bottom right\" frame on top of it, it will mixed with the bottom left frame (because both contains transparency), instead of replacing it, create an unintended side effect. Therefore we cut the part that may cause mixing color from the bottom left frame, before drawing the bottom right part.\n                 */\n                dyedBottomFrameCtx.clearRect(714, 0, 99, cardHeight);\n                const bottomRightCanvas = await applyAlphaMask(\n                    `frame/frame-${bottomRightFrame}.png`,\n                    await MaskPromise.bottomRight,\n                    cardWidth,\n                    cardHeight,\n                );\n                const { canvas: dyedBottomRightCanvas } = dyeCanvas(bottomRightCanvas, dyeList[3]);\n                dyedBottomFrameCtx.drawImage(dyedBottomRightCanvas, 0, 0);\n            }\n\n            ctx.globalAlpha = opacityBody / 100;\n            ctx.scale(globalScale, globalScale);\n            /** Leave empty space for card art */\n            if (isPendulum) {\n                dyedTopFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n                dyedBottomFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n            }\n            /** Background replace frame */\n            if (willReplaceFrame && dyedTopFrameCtx && dyedBottomFrameCtx) {\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n                dyedTopFrameCtx.globalCompositeOperation = 'source-atop';\n                dyedTopFrameCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0, backgroundWidth, backgroundHeight,\n                    0, 0, cardWidth, cardHeight,\n                );\n                dyedBottomFrameCtx.globalCompositeOperation = 'source-atop';\n                dyedBottomFrameCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0, backgroundWidth, backgroundHeight,\n                    0, 0, cardWidth, cardHeight,\n                );\n            }\n            /** Start assembling the canvas */\n            ctx.drawImage(dyedTopFrameCanvas, 0, 0);\n            ctx.drawImage(dyedBottomFrameCanvas, 0, 0);\n            ctx.resetTransform();\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: (\n            externalCtx = ctx,\n        ) => {\n            if (!artworkCanvas || !externalCtx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            externalCtx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: async (\n            externalCtx = ctx,\n            hasArtBorder = false,\n        ) => {\n            if (!backgroundCanvas || !externalCtx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n\n            const {\n                artX,\n                artY,\n                artWidth,\n                artFrameWidth,\n                artFrameX,\n                artFrameY,\n                ratio,\n                artRatio,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                opacity,\n                backgroundType,\n                pendulumSize,\n            );\n            if (backgroundType !== 'frame') {\n                externalCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0,\n                    backgroundWidth, backgroundHeight,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n            } else {\n                externalCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0,\n                    backgroundWidth, backgroundHeight,\n                    0, 0,\n                    globalScale * cardWidth, globalScale * cardHeight,\n                );\n            }\n            const backgroundFinish = otherFinish[3] ?? 'normal';\n            if (backgroundFinish !== 'normal' && hasArtBorder) {\n                const loopBackgroundFinish = getFinishIterator([backgroundFinish], ArtFinishMap);\n                await loopBackgroundFinish(\n                    externalCtx,\n                    'art',\n                    async type => drawAssetWithSize(\n                        externalCtx,\n                        `finish/art-finish-${type}.png`,\n                        globalScale * artFrameX, globalScale * artFrameY,\n                        globalScale * artFrameWidth, globalScale * artFrameWidth / artRatio,\n                    ),\n                );\n            }\n        },\n        drawAttribute: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const {\n                canvas: attributeCanvas,\n                ctx: attributeCtx,\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\n            await drawAsset(\n                attributeCtx,\n                `attribute/attr-${RegionMap[region].fileKey}-${attribute.toLowerCase()}.png`,\n                attributeX, attributeY,\n            );\n            const attributeFinish = otherFinish[0] ?? 'normal';\n            if (attributeFinish !== 'normal') {\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\n                const {\n                    canvas: attributeFinishCanvas,\n                    ctx: attributeFinishCtx,\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\n                attributeFinishCtx?.drawImage(attributeCanvas, 0, 0);\n                await loopAttributeFinish(\n                    attributeFinishCtx,\n                    'art',\n                    async (finishType) => {\n                        return await drawAsset(\n                            attributeFinishCtx,\n                            `finish/finish-typeart-${finishType}.png`,\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\n                        );\n                    },\n                );\n                if (attributeCtx) {\n                    attributeCtx.globalCompositeOperation = 'source-in';\n                    attributeCtx.drawImage(attributeFinishCanvas, 0, 0);\n                }\n                ctx.drawImage(attributeCanvas, 0, 0);\n            } else {\n                ctx.drawImage(attributeCanvas, 0, 0);\n            }\n            ctx.resetTransform();\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const starFinish = otherFinish[1] ?? 'normal';\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starList,\n                starAlignment,\n                style,\n                globalScale,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n                loopStarFinish,\n            });\n            ctx.resetTransform();\n        },\n        drawPendulumScaleIcon: async () => {\n            const {\n                canvas: pendulumIconCanvas,\n                ctx: pendulumIconCtx,\n            } = createCanvas(pendulumIconFrameWidth, pendulumIconFrameHeight);\n            if (!ctx || !pendulumIconCtx) return;\n            await drawAsset(pendulumIconCtx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\n\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\n                pendulumIconCtx.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n            if (pendulumFrameTypeMap.red === 'scaleless') {\n                pendulumIconCtx.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\n            ctx.resetTransform();\n        },\n        drawStatBorder: async (style: CanvasTextStyle) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                globalScale,\n                style,\n            );\n            ctx.resetTransform();\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            const { ctx: nameBackgroundCtx, canvas: nameBackgroundCanvas } = createCanvas(cardWidth, topToPendulumStructure);\n            await drawAsset(nameBackgroundCtx, `background/background-name-${topLeftFrame}.png`, 0, 0);\n            const {\n                canvas: dyedLeftNameCanvas,\n                ctx: dyedLeftNameCtx\n            } = dyeCanvas(nameBackgroundCanvas, dyeList[0]);\n            if (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '') {\n                const nameRightCanvas = await applyAlphaMask(\n                    `background/background-name-${topRightFrame}.png`,\n                    await MaskPromise.name,\n                    cardWidth,\n                    topToPendulumStructure,\n                );\n                const dyedRightNameCanvas = dyeCanvas(nameRightCanvas, dyeList[1]).canvas;\n                dyedLeftNameCtx?.drawImage(dyedRightNameCanvas, 0, 0);\n            }\n            ctx.globalAlpha = opacityName / 100;\n            ctx.drawImage(dyedLeftNameCanvas, 0, 0);\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n\n            const { ctx: effectBackgroundCtx, canvas: effectBackgroundCanvas } = createCanvas();\n            if (withPendulum) {\n                await drawAssetWithSize(\n                    effectBackgroundCtx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                    0, 0 + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                );\n            } else {\n                await drawAsset(\n                    effectBackgroundCtx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY,\n                );\n            }\n            const dyedEffectBackgroundCanvas = dyeCanvas(effectBackgroundCanvas, dyeList[4]).canvas;\n            ctx.globalAlpha = opacityText / 100;\n            ctx.drawImage(dyedEffectBackgroundCanvas, 0, 0);\n\n            if (withPendulum) {\n                const { ctx: pendulumEffectBackgroundCtx, canvas: pendulumEffectBackgroundCanvas } = createCanvas();\n                const {\n                    exceptionFrameType = frameType,\n                    exceptionPendulumBoxOffsetHeight = 0,\n                } = PendulumSizeMapException[pendulumSize][resolvedPendulumEffectBackground] ?? {};\n                await drawAssetWithSize(\n                    pendulumEffectBackgroundCtx,\n                    `background/background-${exceptionFrameType}-${resolvedPendulumEffectBackground}.png`,\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\n                    pendulumBoxWidth, pendulumBoxHeight,\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\n                );\n                const dyedPendulumEffectBackgroundCanvas = dyeCanvas(pendulumEffectBackgroundCanvas, dyeList[5]).canvas;\n                ctx.globalAlpha = opacityPendulum / 100;\n                ctx.drawImage(dyedPendulumEffectBackgroundCanvas, 0, 0);\n            }\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n            ctx.resetTransform();\n            return;\n        },\n        drawNameBorder: async () => {\n            if (nameBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\n                }\n                ctx.resetTransform();\n            } else {\n                Promise.resolve();\n            }\n            return;\n        },\n        drawArtBorder: async () => {\n            if (artBorder && ctx) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil, willDye = false) => {\n            if (!ctx) return;\n            const validDyeColor = HexColorRegex.test(dyeList[6]);\n            const usedFoil = validDyeColor && willDye && foilType === 'normal' ? 'platinum' : foilType;\n            /** We create a new canvas for easier manipulation. */\n            const { canvas: pendulumBorderCanvas, ctx: pendulumBorderCtx } = createCanvas();\n            await drawAssetWithSize(\n                pendulumBorderCtx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${usedFoil}`\n                + '-artless'\n                + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\n                + '.png',\n                30, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                0, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            await drawAssetWithSize(\n                pendulumBorderCtx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${usedFoil}`\n                + '-artless'\n                + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\n                + '.png',\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                pendulumFrameWidth / 2, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            if (willDye && validDyeColor) {\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(pendulumBorderCanvas, dyeList[6]);\n                pendulumBorderCtx?.drawImage(dyedCardBorderFoilCanvas, 0, 0);\n            }\n            if (artBorder) {\n                /**\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\n                 */\n                pendulumBorderCtx?.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\n                if (validDyeColor) {\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                    const usedFoil = foilType === 'normal' ? 'platinum' : foilType;\n                    const { ctx: pendulumBorderFoilCtx, canvas: pendulumBorderFoilCanvas } = createCanvas();\n                    await drawAsset(\n                        pendulumBorderFoilCtx,\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\n                        + `-${usedFoil}`\n                        + '.png',\n                        30, topToPendulumStructureFrame,\n                    );\n                    const { canvas: dyedPendulumBorderFoilCanvas } = dyeCanvas(pendulumBorderFoilCanvas, dyeList[6]);\n                    pendulumBorderCtx?.drawImage(dyedPendulumBorderFoilCanvas, 0, 0);\n                } else {\n                    await drawAsset(\n                        pendulumBorderCtx,\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\n                        + `-${foilType}`\n                        + '.png',\n                        30, topToPendulumStructureFrame,\n                    );\n                }\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\n            ctx.resetTransform();\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (!hasFoil && bottomLeftFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n        drawCardBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (HexColorRegex.test(dyeList[6])) {\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                const { ctx: cardBorderFoilCtx, canvas: cardBorderFoilCanvas } = createCanvas();\n                await drawAsset(cardBorderFoilCtx, `frame/card-border-${usedFoil}.png`, 0, 0);\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(cardBorderFoilCanvas, dyeList[6]);\n                ctx.drawImage(dyedCardBorderFoilCanvas, 0, 0);\n            } else {\n                await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n            }\n            ctx.resetTransform();\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) {\n                if (HexColorRegex.test(dyeList[6])) {\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                    const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                    const { ctx: artBorderFoilCtx, canvas: artBorderFoilCanvas } = createCanvas();\n                    await drawAsset(artBorderFoilCtx, `frame/art-border-${usedFoil}.png`, artBoxX, artBoxY);\n                    const { canvas: dyedArtBorderFoilCanvas } = dyeCanvas(artBorderFoilCanvas, dyeList[6]);\n                    ctx.drawImage(dyedArtBorderFoilCanvas, 0, 0);\n                } else {\n                    await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n                }\n            }\n            ctx.resetTransform();\n        },\n        drawEffectBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (HexColorRegex.test(dyeList[6])) {\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                const { ctx: effectBorderFoilCtx, canvas: effectBorderFoilCanvas } = createCanvas();\n                await drawAsset(effectBorderFoilCtx, `frame/effect-border-${usedFoil}.png`, effectBoxX, effectBoxY);\n                const { canvas: dyedEffectBorderFoilCanvas } = dyeCanvas(effectBorderFoilCanvas, dyeList[6]);\n                ctx.drawImage(dyedEffectBorderFoilCanvas, 0, 0);\n            } else {\n                await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if ((artBorder || nameBorder) && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'name',\n                    async type => {\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                    },\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n                ctx.resetTransform();\n            }\n        },\n        drawArtFinish: async (\n            artCtx = ctx,\n        ) => {\n            if (!applyArtFinish || !artCtx) return;\n            artCtx.scale(globalScale, globalScale);\n            await loopArtFinish(\n                artCtx,\n                'art',\n                async (finishType, pendulumSuffix) => {\n                    return await drawAssetWithSize(\n                        artCtx,\n                        `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\n                        artFinishX, artFinishY,\n                        artFrameWidth, artFrameWidth / artRatio,\n                    );\n                },\n                pendulumSize,\n            );\n            artCtx.resetTransform();\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async (\n            artCtx = ctx,\n        ) => {\n            if (!artCtx) return;\n            artCtx.scale(globalScale, globalScale);\n            await loopFinish(\n                artCtx,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        artCtx,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n            artCtx.resetTransform();\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(\n                    ctx,\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\n                    0, 0,\n                ),\n            );\n            ctx.resetTransform();\n        },\n        drawBorderPendulumFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => {\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0 + cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                        cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                }\n            );\n            ctx.resetTransform();\n        },\n        drawFrameFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawFrameBackgroundFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n            ctx.resetTransform();\n        },\n        drawCardBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n            ctx.resetTransform();\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { setTextStyle } from '../canvas-util';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    canvas: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _trueBaseline: number,\n    _width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n        globalScale: number,\n    },\n) => {\n    const { isSpeedSkill, format, frame, furiganaHelper, globalScale } = option;\n    const edge = _edge * globalScale;\n    const trueBaseline = _trueBaseline * globalScale;\n    const width = _width * globalScale;\n\n    if (!(ctx && value)) return;\n    const {\n        embossPitch,\n        embossYaw,\n        embossThickness,\n        fillStyle,\n        font,\n        gradientAngle,\n        gradientColor,\n        hasEmboss,\n        hasGradient,\n        hasOutline,\n        hasShadow,\n        headTextFillStyle,\n        lineColor,\n        lineOffsetX,\n        lineOffsetY,\n        lineWidth,\n        shadowBlur,\n        shadowColor,\n        shadowOffsetX,\n        shadowOffsetY,\n        pattern,\n    } = { ...getDefaultNameStyle(), ...style };\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n\n    ctx.textAlign = 'left';\n    const fontData = scaleFontData({\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n        headTextFillStyle,\n    }, globalScale);\n    const fontGetter = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: fontGetter,\n    };\n    const quoteConvertedValue = normalizeCardText(\n        value,\n        format,\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n    );\n\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n    const crudeTokenList = format === 'ocg'\n        ? [quoteConvertedValue]\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n    const fontGetterForWidthCalculating = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const normalStyle = fontGetterForWidthCalculating.getFont();\n    const symbolStyle = fontGetterForWidthCalculating\n        .setSize(cur => cur * fontData.symbolFontRatio)\n        .setStyle('small-caps')\n        .setFamily(fontData.symbolFont)\n        .getFont();\n    let maxAscent = 0;\n    let maxDescent = 0;\n    crudeTokenList.forEach((cur, index) => {\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n    }, 0);\n\n    ctx.font = normalStyle;\n    /** Calculate fitting ratio like normal */\n    let actualLineWidth = 0;\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [quoteConvertedValue],\n                format, textData,\n                width,\n                globalScale,\n            });\n\n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n\n    ctx.scale(xRatio, yRatio);\n    /** Calculate gradient and offset based on card's frame. */\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\n    const tokenList = tokenizeText(quoteConvertedValue);\n    const gradient = actualLineWidth > 0 && hasGradient\n        ? getNameGradient(\n            ctx,\n            gradientAngle,\n            parsePalette(gradientColor),\n            edge,\n            actualLineWidth,\n            trueBaseline,\n            maxAscent, maxDescent,\n        )\n        : undefined;\n\n    /**\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\n     * \n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\n     */\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\n    let resetEmbossStroke = () => { };\n    if (thickenEmboss) {\n        resetEmbossStroke = setTextStyle({\n            ctx,\n            lineWidth: embossThickness,\n            lineColor: fillStyle,\n            lineColorGradient: gradient,\n            globalScale,\n            useDefault: false,\n        });\n    }\n    ctx.fillStyle = gradient ?? fillStyle;\n    const { tokenEdge } = drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        option: { drawHeadText: false },\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n        },\n    });\n    resetEmbossStroke();\n\n    /** \n     * Second iteration: Draw pattern, we follow these steps.\n     *  * We create a second, temporary canvas node.\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\n     */\n    if (patternImage) {\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const patternContext = patternCanvas.getContext('2d');\n        if (patternContext) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n            patternContext.scale(globalScale, globalScale);\n            await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\n            patternContext.globalCompositeOperation = patternBlendMode;\n            patternContext.resetTransform();\n            await drawAssetWithSize(\n                patternContext, `finish-name/${patternImage}.png`,\n                edge, trueBaseline - maxAscent,\n                width,\n                maxAscent + maxDescent,\n            );\n            ctx.globalCompositeOperation = 'source-in';\n            ctx.drawImage(patternCanvas, 0, 0);\n            ctx.globalCompositeOperation = 'source-over';\n            ctx.scale(xRatio, yRatio);\n        }\n    }\n\n    /** Third iteration: Apply emboss effect */\n    if (hasEmboss) {\n        const affectedWidthExtraPadding = 10;\n        const embossedImageData = applyEmboss({\n            inputCanvas: canvas,\n            lightPitch: embossPitch,\n            lightYaw: embossYaw,\n            minIntensity: -0.9,\n            maxIntensity: 0.9,\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\n        });\n        if (embossedImageData) ctx.putImageData(embossedImageData, 0, 0);\n    }\n\n    /**\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\n     * \n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\n     * */\n    if (hasOutline) {\n        const resetStroke = setTextStyle({\n            ctx,\n            lineWidth: lineWidth + (hasEmboss ? embossThickness : 0),\n            lineColor,\n            globalScale,\n            useDefault: false,\n        });\n        ctx.globalCompositeOperation = 'destination-over';\n        drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            format,\n            globalScale,\n            option: { drawHeadText: false },\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.lineJoin = 'round';\n                ctx.strokeText(\n                    letter,\n                    scaledEdge + lineOffsetX,\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                );\n            },\n        });\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n        resetStroke();\n    }\n\n    /**\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\n     */\n    if (hasShadow) {\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const shadowContext = shadowCanvas.getContext('2d');\n        if (shadowContext) {\n            const resetShadow = setTextStyle({\n                ctx: shadowContext,\n                x: shadowOffsetX,\n                y: shadowOffsetY,\n                shadowColor: shadowColor,\n                blur: shadowBlur,\n                globalScale,\n                useDefault: false,\n            });\n            ctx.scale(1 / xRatio, 1 / yRatio);\n            shadowContext.drawImage(canvas, 0, 0);\n            ctx.globalCompositeOperation = 'destination-over';\n            ctx.drawImage(shadowCanvas, 0, 0);\n            ctx.globalCompositeOperation = 'source-over';\n            resetShadow();\n        }\n    }\n\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\n    drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: () => { },\n    });\n\n    const defaultTextStyle = getDefaultNameStyle();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.fillStyle = defaultTextStyle.fillStyle;\n    ctx.lineJoin = 'miter';\n    ctx.globalCompositeOperation = 'source-over';\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\n    smaller: 0,\n    normal: 1,\n    large: 2,\n    highPendulumNormal: 1,\n    highPendulumSmaller: 0,\n};\nexport const drawTypeAbilityText = ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: TypeAbilityCoordinateType,\n    furiganaHelper: boolean,\n    globalScale: number,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = scaleCoordinateData(\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\n        globalScale,\n    );\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\n    const fontData = {\n        ...scaledBaseFontData,\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\n    };\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n                globalScale,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nconst {\n    finishTypeCardWidth,\n    width: CanvasWidth,\n    iconHeight,\n    iconWidth,\n} = CanvasConst;\nexport const drawTypeAbility = async ({\n    ctx,\n    globalScale,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n    loopIconFinish,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: TypeAbilityCoordinateType,\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n        globalScale,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -5 : -1;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        const {\n            canvas: iconCanvas,\n            ctx: iconCtx,\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n        await drawAssetWithSize(\n            iconCtx,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\n            () => iconWidth * globalScale,\n            () => iconHeight * globalScale,\n        );\n        if (loopIconFinish) {\n            const {\n                canvas: iconFinishCanvas,\n                ctx: iconFinishCtx,\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n            iconFinishCtx.drawImage(iconCanvas, 0, 0);\n            await loopIconFinish(\n                iconFinishCtx,\n                'art',\n                async (finishType) => {\n                    return await drawAsset(\n                        iconFinishCtx,\n                        `finish/finish-typeart-${finishType}.png`,\n                        (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\n                    );\n                },\n            );\n            iconCtx.globalCompositeOperation = 'source-in';\n            iconCtx.drawImage(iconFinishCanvas, 0, 0);\n            ctx.drawImage(iconCanvas, 0, 0);\n        } else {\n            ctx.drawImage(iconCanvas, 0, 0);\n        }\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    _fontSize: number,\n    globalScale: number,\n) => {\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    if (ctx && value) {\n        const fontSize = _fontSize * globalScale;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const digitList = `${value}`.split('');\n\n        if (digitList.length === 1) {\n            const digit = digitList[0];\n            const digitWidth = ctx.measureText(digit).width;\n            const accLeft = edge - digitWidth / 2;\n\n            ctx.fillText(\n                digit,\n                digit === '1' ? accLeft + 2 * globalScale : accLeft,\n                baseline + fontSize,\n            );\n        } else if (digitList.length === 2) {\n            /** Observable behavior: The number \"1\" in 2-digits pendulum scale (10, 11, 12, 13) stay in the exact same place no matter which is the second digit, so we try to emulate this pattern here. */\n            const firstDigit = digitList[0];\n            const secondDigit = digitList[1];\n            const firstDigitWidth = ctx.measureText(firstDigit).width * 0.825;\n            const secondDigitWidth = ctx.measureText(secondDigit).width;\n            const accLeft = edge - firstDigitWidth - (firstDigit === '1'\n                ? 0\n                : firstDigitWidth * 0.1\n            );\n\n            ctx.fillText(\n                firstDigit,\n                accLeft,\n                baseline + fontSize,\n            );\n            ctx.fillText(\n                secondDigit,\n                accLeft + firstDigitWidth - (firstDigit === '1'\n                    ? (secondDigit === '1'\n                        ? ctx.measureText('1').width * 0.1\n                        : secondDigitWidth * 0.1)\n                    : secondDigitWidth * -0.1),\n                baseline + fontSize,\n            );\n        } else {\n            let totalWidth = 0;\n\n            digitList.forEach(digit => {\n                totalWidth += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\n            });\n            let accLeft = edge - totalWidth / 2;\n\n            digitList.forEach(digit => {\n                ctx.fillText(\n                    digit,\n                    accLeft,\n                    baseline + fontSize,\n                );\n                accLeft += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\n            });\n        }\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    edge = 99,\n    baseline = 1150.93,\n    baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n        globalScale: number,\n    } = {\n        globalScale: 1,\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const {\n        stroke = false,\n        textStyle,\n        globalScale,\n    } = option ?? {};\n    const actualEdge = edge * globalScale;\n    const actualBaseline = baseline * globalScale;\n    const actualBaselineOffset = baselineOffset * globalScale;\n    const resetStyle = setTextStyle({\n        ctx,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4 * globalScale;\n    ctx.font = `${23.7 * globalScale}px palatino-linotype-bold`;\n\n    let left = actualEdge;\n    ctx.fillText('1', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText('1', left, actualBaseline);\n    left += ctx.measureText('1').width - 2 * globalScale;\n\n    ctx.font = `${17.78 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText('st', left, actualBaseline - superTextOffset + actualBaselineOffset);\n    if (stroke) ctx.strokeText('st', left, actualBaseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = `${22.22 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText(' Edition', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, actualBaseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    ctx.scale(1, 0.98);\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const numberOffset = -1;\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const statWidth = 73.97 * globalScale;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${36.18 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.scale(1, 1.29);\n        ctx.font = ` ${34 * globalScale}px MatrixBoldSmallCaps`;\n        ctx.fillText(value, edge + statWidth, numberOffset + baseline / 1.29);\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = `${36.18 * globalScale}px matrix`;\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, numberOffset + baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = `${34 * globalScale}px MatrixBoldSmallCaps`;\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.scale(1, 1.29);\n                    ctx.fillText('?', nextEdge / condenseRatio, numberOffset + baseline / 1.29);\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        globalScale: number,\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n    baseDrawLinkArrowMap,\n    baseDrawLinkMapFoil,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinateMap,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n    PendulumNormalFontData,\n    PendulumSizeMap,\n    PendulumSize,\n    HALF_SCALE_WIDTH_OFFSET,\n} from 'src/model';\nimport {\n    checkDiplayLinkRating,\n    checkLightFooter,\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    createCanvas,\n    generateLayer,\n    resolveFrameStyle,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    finishTypeCardHeight,\n    stickerX,\n    stickerY,\n    stickerSize,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n    globalScale: number,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    } = canvasMap;\n    const {\n        format, region,\n        hasBackground, backgroundType,\n        frame,\n        foil, finish, artFinish, otherFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumRightFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\n        leftFrame, rightFrame,\n        dyeList,\n        atk, def, linkMap, linkRating,\n        attribute,\n        cardIcon, subFamily, star, starAlignment, starList,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n        flag,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        typeAbility: {\n            name: 'typeAbility',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const effectBackground = effectStyle.background;\n    const pendulumEffectBackground = pendulumStyle.background;\n    const effectMinLine = effectStyle.minLine;\n    const pendulumEffectMinLine = pendulumStyle.minLine;\n    const effectJustifyRatio = effectStyle.justifyRatio;\n    const pendulumEffectJustifyRatio = pendulumStyle.justifyRatio;\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless, effectBox } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = checkLightFooter(bottomFrame);\n    const {\n        bottomRightFrame,\n    } = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const lightRightFooter = checkLightFooter(bottomRightFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n    const foilDyeColor = dyeList[6];\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const [\n        showDefAndLinkFlag,\n        linkRatingDisplayMode,\n    ] = flag;\n\n    /** One special case where we do not show link rating */\n    const isLinkST = !isPendulum && !isMonster && isLink && !(atk || def);\n    const showLinkRating = checkDiplayLinkRating(linkRatingDisplayMode, isLink) && !isLinkST;\n    const showDefAndLink = showLinkRating && showDefAndLinkFlag;\n    const statInEffect = !!(atk || def)\n        || showLinkRating\n        || !!(isPendulum && setId);\n    const typeInEffect = normalizedTypeAbility.length > 0\n        ? cardIcon === 'auto'\n            ? (isMonster || isSpeedSkill)\n            : cardIcon !== 'st'\n        : false;\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\n    const {\n        isInitializing,\n        imageChangeCount,\n        language,\n        globalScale,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n    const [, iconFinish, stickerFinish] = otherFinish;\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                effectBox: keepEffectBox,\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (\n                ctx: CanvasRenderingContext2D,\n                x: number, y: number,\n                w: number, h: number,\n                customFill?: string,\n            ) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground\n                            ? (customFill ?? baseFill)\n                            : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                globalScale,\n                region,\n                frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n                dyeList,\n                effectBackground, pendulumEffectBackground,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star, starList,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                pendulumFrameTypeMap: {\n                    red: withRedScale ? 'normal' : 'scaleless',\n                    blue: withBlueScale ? 'normal' : 'scaleless',\n                },\n                otherFinish,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Fill color background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(ctx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n\n            /** artOnCard canvas ensure the art is drawn correct size and position on the actual card, overlay for art is applied here */\n            const {\n                canvas: artOnCardCanvas,\n                ctx: artOnCardCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            if (artworkCanvas && artOnCardCtx) drawCardArt(artOnCardCtx);\n            await drawArtFinish(artOnCardCtx);\n            await drawArtOverlayFinish(artOnCardCtx);\n\n            /** Combine background and artwork together, overlay for background is applied here */\n            const {\n                canvas: combinedArtCanvas,\n                ctx: combinedArtCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            if (combinedArtCtx) await fillBaseColor(combinedArtCtx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n            if (backgroundCanvas && combinedArtCtx) await drawBackground(combinedArtCtx, hasArtBorder);\n            if (!boundless && combinedArtCtx) combinedArtCtx.drawImage(artOnCardCanvas, 0, 0);\n\n            /** @summary Draw the overall layout */\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            ctx.drawImage(combinedArtCanvas, 0, 0);\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                }\n                if (!boundless && (keepEffectBox || !hasBackground)) {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. */\n            if (isPendulum && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n                ctx.drawImage(\n                    combinedArtCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n                \n                /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil, true);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will be placed on top of the art border. The extended card image is still below name (text only), level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (isLink && !isPendulum) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil, true);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, 'full', pendulumSize);\n                ctx.drawImage(\n                    artOnCardCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil, true);\n                    await drawBorderPendulumFinish();\n                } else if (keepEffectBox) {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder({\n                color: '#000000',\n                ...resolvedStatTextStyle,\n            });\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            \n            if (showLinkRating && statInEffect) {\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n                const normalizedLinkRating = typeof linkRating === 'string' && linkRating.length > 0\n                    ? linkRating\n                    : `${(Array.isArray(linkMap) ? linkMap.length : 0)}`;\n                if (keepEffectBox) await drawLinkRatingText(frameCanvasRef.current, normalizedLinkRating, resolvedStatTextStyle, globalScale);\n                resetStyle();\n            }\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                globalScale,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        artworkCanvasRef,\n        attribute,\n        backgroundCanvasRef,\n        backgroundType,\n        cardIcon,\n        dyeList,\n        effectBackground,\n        finish,\n        foil,\n        format,\n        region,\n        frame,\n        frameCanvasRef,\n        hasBackground,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        leftFrame,\n        levelStyle,\n        lightFooter,\n        linkMap,\n        linkRating,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        otherFinish,\n        pendulumEffectBackground,\n        pendulumFrame,\n        pendulumRightFrame,\n        pendulumSize,\n        resolvedOtherEffectTextStyle,\n        resolvedStatTextStyle,\n        rightFrame,\n        showLinkRating,\n        star,\n        starList,\n        starAlignment,\n        statInEffect,\n        withBlueScale,\n        withRedScale,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW PENDULUM SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\n        }\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n\n            if (!clearCanvas(ctx) || !nameCanvasRef.current) return;\n\n            await drawName(\n                nameCanvasRef.current,\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, frame, furiganaHelper, globalScale },\n            );\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n        // const hasAtk = !!atk;\n        const hasDef = showLinkRating\n            ? !!def && showDefAndLink\n            : !!def;\n        const hasLink = showLinkRating;\n        if (atk) {\n            const offset = (hasDef ? 168.75 : 0) + (hasLink ? 168.75 : 0);\n            if (effectBox) drawStatText(ctx, 'ATK', 600.85 - offset, 1106, globalScale);\n            drawStat(ctx, atk.trim(), 677.574 - offset, 1106.5, globalScale);\n        }\n        if (def && (!showLinkRating || showDefAndLink)) {\n            const offset = hasLink ? 168.75 : 0;\n            if (effectBox) drawStatText(ctx, 'DEF', 600.85 - offset, 1106, globalScale);\n            drawStat(ctx, def.trim(), 673.865 - offset, 1106.5, globalScale);\n        }\n        resetStyle();\n    }, [\n        readyToDraw,\n        globalScale,\n        effectBox,\n        atk,\n        def,\n        showLinkRating,\n        isMonster,\n        showDefAndLink,\n        resolvedStatTextStyle,\n        statCanvasRef,\n        statInEffect,\n    ]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                globalScale,\n                isLink,\n                isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        globalScale,\n        format,\n        isLink,\n        isPendulum,\n        lightRightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION (1st Edition Text) NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n        if (!clearCanvas(ctx)) return;\n\n        const isNumberPassword = /^[0-9]*$/.test(password);\n        const mayOffset = isNumberPassword && isPendulum && isLink;\n        const willOffset = mayOffset;\n        const { rightEdge } = drawPasswordText({\n            ctx,\n            globalScale,\n            value: password,\n            lightFooter,\n            alignment: 'left',\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\n            format,\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\n            textStyle: resolvedOtherEffectTextStyle,\n            fontLevel: !isNumberPassword ? 1 : 0\n        });\n        if (isFirstEdition) {\n            const willDraw = isPendulum\n                ? isNumberPassword ? true : false\n                : true;\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? isLink ? 151 : 89\n                : Math.max(rightEdge / globalScale + 14.813, 162.2) - (format === 'ocg' ? 7 : 0);\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 871\n                : 1150.93;\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 0\n                : isSpeedSkill ? -2 : -1;\n\n            if (willDraw) draw1stEdition(\n                ctx,\n                left,\n                bottom,\n                bottomOffset,\n                {\n                    stroke: false,\n                    globalScale,\n                    textStyle: {\n                        color: lightFooter ? '#ffffff' : '#000000',\n                        ...resolvedOtherEffectTextStyle,\n                    }\n                },\n            );\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n                globalScale,\n            });\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    globalScale,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        lightRightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            const ctx = stickerCanvasRef.current?.getContext('2d');\n            if (!clearCanvas(ctx)) return;\n            const {\n                canvas: stickerCanvas,\n                ctx: stickerContext,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            await drawSticker({\n                ctx: stickerContext,\n                sticker,\n                globalScale,\n                x: stickerX,\n                y: stickerY,\n            });\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\n            if (normalizedStickerFinish !== 'normal') {\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\n                const {\n                    canvas: stickerFinishCanvas,\n                    ctx: stickerFinishContext,\n                } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n                if (stickerFinishContext && stickerContext) {\n                    stickerFinishContext.drawImage(stickerCanvas, 0, 0);\n                    stickerFinishContext.scale(globalScale, globalScale);\n                    await loopStickerFinish(\n                        stickerFinishContext,\n                        'art',\n                        async (finishType) => {\n                            return await drawAsset(\n                                stickerFinishContext,\n                                `finish/finish-typeart-${finishType}.png`,\n                                stickerX - finishTypeCardWidth + stickerSize, stickerY - finishTypeCardHeight + stickerSize,\n                            );\n                        },\n                    );\n                    stickerContext.globalCompositeOperation = 'source-in';\n                    stickerContext.drawImage(stickerFinishCanvas, 0, 0);\n                    ctx.drawImage(stickerCanvas, 0, 0);\n                }\n            } else {\n                ctx.drawImage(stickerCanvas, 0, 0);\n            }\n        };\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.typeAbility.rerun += 1;\n        drawingPipeline.current.typeAbility.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\n            const customizeEffectStyle = effectTextStyle[0];\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\n            const useItalic = customizeEffectStyle\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\n                : isNormal;\n            const effectIndexSize = drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                useItalic,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    useItalic,\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                    minLine: effectMinLine,\n                    justifyRatio: effectJustifyRatio,\n                },\n            });\n            const normalizedIconFinish = iconFinish ?? 'normal';\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\n            await drawTypeAbility({\n                ctx: typeCtx,\n                globalScale,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : (isPendulum && pendulumSize === 'large')\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n                loopIconFinish,\n            });\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        effectMinLine,\n        effectJustifyRatio,\n        format,\n        frame,\n        isPendulum,\n        pendulumSize,\n        furiganaHelper,\n        iconFinish,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { upSize, fontStyle } = pendulumStyle ?? {};\n            const customPendulumStyle = pendulumTextStyle[0];\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\n            const fontDataKey = `${format}-${pendulumSize}`;\n            const coordinateList = PendulumEffectCoordinateMap\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\n                [pendulumSize];\n            /** Account for half scaleless frame */\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\n                ? coordinateList\n                : coordinateList.map(({\n                    trueEdge, trueWidth, ...rest\n                }) => ({\n                    ...rest,\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                    trueWidth: trueWidth\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                }));\n\n            drawEffect({\n                ctx,\n                content: pendulumEffect,\n                isNormal: false,\n                useItalic: useItalic,\n                fontData: (useItalic\n                    ? PendulumNormalFontData\n                    : PendulumEffectFontData)[fontDataKey],\n                fontDataKey,\n                textStyle: resolvedPendulumEffectTextStyle,\n                sizeList: modifiedCoordinateList,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                    minLine: pendulumEffectMinLine,\n                    justifyRatio: pendulumEffectJustifyRatio,\n                }\n            });\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        condenseTolerant,\n        format,\n        isPendulum,\n        withRedScale,\n        withBlueScale,\n        pendulumSize,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        pendulumEffectMinLine,\n        pendulumEffectJustifyRatio,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            if (isLink) {\n                const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n                const {\n                    artBorder: keepArtBorder,\n                    body: opacityBody,\n                    boundless,\n                } = normalizedOpacity;\n                const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless || !hasArtBorder);\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal', foilDyeColor);\n            }\n\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n            ctx.resetTransform();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        finishCanvasRef,\n        loopFinish,\n        foilDyeColor,\n        name,\n        isLink,\n        isPendulum,\n        linkMap,\n        opacity,\n        boundless,\n        foil,\n        resolvedStatTextStyle,\n        statInEffect,\n        frameCanvasRef,\n    ]);\n\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (_exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        // isRelevant: () => boolean,\n    }) => {\n        // const {\n        //     isRelevant,\n        //     pendulumSize,\n        //     isPendulum = false,\n        //     opacity,\n        // } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n\n        if (exportCanvas && exportCtx) {\n            clearCanvas(exportCtx);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxRef.current?.draw(exportCanvas);\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\n                exportCanvas,\n                0,\n                0,\n                exportCanvas.width,\n                exportCanvas.height,\n                0,\n                0,\n                CanvasWidth,\n                CanvasHeight,\n            );\n        }\n    }, [\n        language,\n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n        previewCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n    lineWidth?: number,\n    lineColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = ({\n    ctx,\n    globalScale,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    edgeOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    fontLevel,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    edgeOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    fontLevel: number,\n}) => {\n    if (!clearCanvas(ctx)) return {\n        rightEdge: 0,\n    };\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                    globalScale,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left'\n            ? trueEdge + edgeOffset\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        rightEdge: result.tokenEdge,\n    };\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    globalScale,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    globalScale,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { useCallback } from 'react';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst notificationLocalStorageKey = 'ygocarder-notification';\nexport type NotificationMemory = {\n    condenseReminder: boolean,\n    versionReminder: string,\n    faqReminder: string,\n    feedbackReminder: boolean,\n};\nexport type NotificationStore = {\n    memory: NotificationMemory,\n    updateNotification: <Key extends keyof NotificationMemory>(\n        key: Key,\n        value: NotificationMemory[Key],\n    ) => void,\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\n};\nexport const useNotificationMemory = create<NotificationStore>((set) => {\n    const {\n        condenseReminder,\n        versionReminder,\n        faqReminder,\n        feedbackReminder,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useNotificationMemory: Error when getting cached notification', e);\n            return {};\n        }\n    })();\n\n    return {\n        memory: {\n            feedbackReminder: typeof feedbackReminder === 'boolean' ? feedbackReminder : false,\n            faqReminder: typeof faqReminder !== 'string' ? '' : faqReminder,\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\n        },\n        updateNotification: (key, value) => {\n            set(currentStore => {\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        },\n        updateNotificationMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\n    const {\n        targetMemory,\n        updateNotification,\n    } = useNotificationMemory(useShallow(({\n        memory,\n        updateNotification,\n    }) => ({\n        targetMemory: memory[key],\n        updateNotification,\n    })));\n\n    const updateTargetNotification = useCallback(\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\n        [key, updateNotification],\n    );\n\n    return [targetMemory, updateTargetNotification] as const;\n};","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","import { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\n\nexport type PresetManagerStore = {\n    visible: boolean,\n    setVisible: (status?: boolean) => void,\n};\nexport const usePresetManager = create<\n    PresetManagerStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        visible: false,\n        setVisible: newStatus => {\n            set(({ visible }) => {\n                return { visible: newStatus == null ? !visible : newStatus };\n            });\n        }\n    };\n}));","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\nimport styled from 'styled-components';\n\n/** The container must contain this class to spread inner styling to angle picker component */\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\nconst AnglePickerContainer = styled.div`\n    .ap {\n        background-color: var(--color-heavy);\n        .apc {\n            width: 8px;\n        }\n        .aph {\n            width: 8px;\n            height: 8px;\n        }\n    }\n    .ai {\n        margin: 0;\n        margin-top: var(--spacing-sm);\n        background: var(--main-slider);\n        justify-content: space-between;\n        line-height: 1.4;\n        span {\n            background: var(--main-secondary);\n            padding-left: var(--spacing);\n            padding-right: var(--spacing);\n            &:hover {\n                background: var(--sub-secondary);\n            }\n        }\n        span,\n        input {\n            color: var(--color-heavy);\n        }\n    }\n`;\n\nexport type CircularAnglePicker = AnglePicker & {\n    children?: React.ReactChild,\n};\nexport const CircularAnglePicker = ({\n    children,\n    ...rest\n}: CircularAnglePicker) => {\n    return <AnglePickerContainer className=\"angle-picker-container\">\n        {children}\n        <AnglePicker {...rest} />\n    </AnglePickerContainer>;\n};","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\n\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    cursor: pointer;\n    display: inline-block;\n`;\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span<{ $freeSize: boolean, $size: 'sm' | 'md' }>`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    ${({ $freeSize, $size }) => $freeSize\n        ? 'padding: 0 var(--spacing-xxs);'\n        : $size === 'sm' ? 'width: 18px;' : 'width: 24px;'\n    };\n    ${({ $size }) => $size === 'sm'\n        ? `\n            height: 18px;\n            font-size: var(--fs-sm);\n        `\n        : `\n            height: 24px;\n            font-size: var(--fs);\n        `}\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    size?: 'sm' | 'md',\n    Icon?: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    size = 'md',\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            $size={size}\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n            $freeSize={!Icon}\n        >\n            <>\n                {Icon && <Icon {...iconProps} />}{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    align-items: center;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import styled from 'styled-components';\n\nexport const ColorBlock = styled.div<{ $static?: boolean, $empty?: boolean }>`\n    height: 17px;\n    width: 17px;\n    cursor: pointer;\n    position: relative;\n    outline: none;\n    box-shadow: 0 0 1px 1px var(--main-level-3);\n    border-radius: var(--br);\n    ${({ $static }) => $static\n        ? `\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        `\n        : ''}\n    ${({ $empty }) => $empty\n        ? `\n            background-color: var(--sub-level-4);\n            background-image: var(--gradient-diagonal-stripe);\n        `\n        : ''}\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n`;","import copy from 'copy-to-clipboard';\nimport { CheckOutlined } from '@ant-design/icons';\nimport styled, { css } from 'styled-components';\nimport React, { useState } from 'react';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;\n\nexport const CopiableOverlayStyle = css`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\nexport const StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    ${CopiableOverlayStyle}\n`;\n\nexport type Copiable = {\n    data: string | number,\n    children?: React.ReactNode,\n    disabled?: boolean,\n    overlay?: React.ReactNode,\n    container: React.ComponentType<{\n        children?: React.ReactNode,\n        disabled?: boolean,\n        onClick?: (e: { stopPropagation: () => void }) => void,\n    }>,\n}\nexport const Copiable = ({\n    data,\n    children,\n    disabled,\n    overlay = <CheckOutlined />,\n    container: Container,\n}: Copiable) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string | number) => {\n        copy(typeof copyingContent === 'number' ? `${copyingContent}` : copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <Container\n        disabled={disabled}\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\">{overlay}</div> : null}\n        {children}\n    </Container>;\n};\n\nexport type CopiableCode = {\n    data: string | number,\n    children?: React.ReactNode,\n}\nexport const CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    return <Copiable data={data} container={StyledMono}>{children}</Copiable>;\n};","import { Drawer, Popover } from 'antd';\nimport styled, { css, keyframes } from 'styled-components';\n\nexport const StyledMarkdown = styled.div`\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-3);\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    text-shadow: var(--ts);\n    p {\n        white-space: pre-line;\n    }\n    ul {\n        padding-inline-start: var(--spacing-2xl);\n        margin-block-end: 0;\n        li {\n            line-height: 1.5;\n        }\n    }\n    :last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\n    max-width: 550px;\n    border-radius: var(--br-lg);\n    border: var(--bw) solid var(--sub-level-1);\n`;\n\nexport const InternalPopover = ({\n    content,\n    children,\n    ...rest\n}: React.ComponentProps<typeof Popover>) => {\n    if (content) {\n        return <Popover content={content} {...rest}>{children}</Popover>;\n    }\n    return <>{children}</>;\n};\n\nexport const CardActionButton = styled.button`\n    --overlay-size: 36px;\n    background: var(--main-primary);\n    border-width: 0;\n    border-style: solid;\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing-sm);\n    line-height: 1;\n    font-size: var(--fs-xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-1);\n    /* display: none; */\n    &:not(:disabled) {\n        cursor: pointer;\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n    &:disabled {\n        cursor: not-allowed;\n        filter: opacity(0.5);\n    }\n`;\n\nexport const SolidLabel = styled.div`\n    display: inline-flex;\n    column-gap: var(--spacing-xs);\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    border-radius: var(--br);\n    box-shadow: var(--bs-input);\n`;\nexport const CombinedSliderContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 57px 36px 6px;\n    &.inactive {\n        .slider-label,\n        .ant-slider,\n        .slider-padding {\n            background-color: var(--main-level-3);\n        }\n    }\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        border-right: none;\n        border-radius: var(--br) 0 0 var(--br);\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n`;\n\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    display: inline-block;\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;\n\nconst ResolutionLabelContainer = styled.div<{ $warning: boolean }>`\n    display: grid;\n    grid-template-columns: 3em max-content 3em;\n    gap: var(--spacing-xs);\n    .left-part {\n        text-align: right;\n    }\n    .right-part {\n        text-align: left;\n    }\n    ${({ $warning }) => $warning\n        ? `\n            color: var(--main-warning);\n        `\n        : ''}\n`;\nexport type ResolutionLabel = {\n    warning?: boolean,\n    width: number,\n    height: number,\n}\nexport const ResolutionLabel = ({ width, height, warning = false }: ResolutionLabel) => {\n    return <ResolutionLabelContainer $warning={warning}>\n        <span className=\"left-part\">{width}</span>\n        <span>×</span>\n        <span className=\"right-part\">{height}</span>\n    </ResolutionLabelContainer>;\n};\n\nconst backgroundMarch = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`;\nexport const DropZone = styled.div<{ $visible: boolean }>`\n\tdisplay: ${({ $visible }) => $visible ? 'flex' : 'none'};\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: #8888cc44;\n\tz-index: 1;\n\tfont-size: var(--fs-3xl);\n\talign-items: center;\n    justify-content: center;\n\ttext-shadow: 0 0 3px #222;\n    border: 5px dashed #cccccc;\n    background: linear-gradient(-45deg, #ee7752aa, #e73c7e88, #23a6d588, #23d5ab88);\n\tbackground-size: 400% 400%;\n    padding: 5px;\n    label {\n        color: var(--color-heavy);\n        line-height: 1.25;\n    }\n    ${css`animation: ${backgroundMarch} 6s linear infinite;`}\n`;\n\n\nexport const ManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: var(--spacing);\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n`;\n\nexport const SingleSliderContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: var(--spacing-sm);\n    align-items: center;\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    .ant-input-number {\n        width: 55px;\n    }\n    .ant-slider {\n        margin: var(--spacing-xxs);\n    }\n`;\n\nexport * from './color';\nexport * from './copiable';","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { RadioTrain } from '../input-train';\nimport { ExportFormatList, getSlindingTypeList, ResolutionList, ResolutionMap } from 'src/model';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n    min-width: 15rem;\n    .list-option {\n        margin-bottom: var(--spacing-xs);\n    }\n    .resolution-list {\n        &.radio-train {\n            .ant-radio-button-wrapper:first-child {\n                border-radius: var(--br) var(--br) 0 0;\n            }\n            .ant-radio-button-wrapper:last-child {\n                border-radius: 0 0 var(--br) var(--br);\n            }\n        }\n        .radio-train-input-group {\n            display: inline-grid;\n            flex: 0 1 auto;\n            .ant-radio-button-wrapper {\n                border-left-width: 1.02px;\n                &:before {\n                    content: none;\n                }\n            }\n        }\n    }\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        allowHotkey,\n        exportFormat,\n        reduceMotionColor,\n        resolution,\n        showCreativeOption,\n        showExtraDecorativeOption,\n        slidingType,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\n                    <RadioTrain\n                        className=\"resolution-list\"\n                        value={`${resolution[0]}x${resolution[1]}`}\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\n                            value: `${width}x${height}`,\n                            label: scale > 1\n                                ? <Popover\n                                    overlayClassName=\"explanation-overlay\"\n                                    placement=\"left\"\n                                    content={<StyledPopMarkdown>\n                                        {language['setting.option.resolution.warning']}\n                                    </StyledPopMarkdown>}\n                                >\n                                    <ResolutionLabel width={width} height={height} warning={true} />\n                                </Popover>\n                                : <ResolutionLabel width={width} height={height} />,\n                        }))}\n                        onChange={value => {\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\n\n                            if (resolutionValue) {\n                                updateSetting({\n                                    resolution: resolutionValue.settingValue,\n                                    globalScale: resolutionValue.scale,\n                                });\n                            }\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\n                    <RadioTrain\n                        value={exportFormat}\n                        optionList={ExportFormatList}\n                        onChange={value => {\n                            updateSetting({ exportFormat: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.sliding-type.label']}</div>\n                    <RadioTrain\n                        value={slidingType}\n                        optionList={getSlindingTypeList(language)}\n                        onChange={value => {\n                            updateSetting({ slidingType: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import styled, { css, keyframes } from 'styled-components';\n\nconst titlShaking = keyframes`\n    0% { transform: rotate(0deg); }\n    3% { transform: rotate(5deg); }\n    6% { transform: rotate(0eg); }\n    9% { transform: rotate(-5deg); }\n    12% { transform: rotate(0deg); }\n    100% { transform: rotate(0deg); }\n`;\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\n    text-align: center;\n    border: var(--bw) solid var(--main-level-3);\n    background-color: var(--main-level-1);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    cursor: pointer;\n    box-shadow: 0 0 2px 1px #2a2a2a inset;\n    transition: background-color 250ms linear;\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\n    ${({ $animating }) => $animating\n        ? `\n            border: var(--bw) solid var(--sub-level-1);\n            background: var(--main-warning);\n            color: var(--color-contrast);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background-color: var(--main-level-3);\n    }\n`;\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\n    box-shadow: none;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    &.js-highlight {\n        background: var(--main-info);\n        text-shadow: none;\n        box-shadow: 0 0 2px 0 #333333;\n    }\n    ${({ $animating }) => $animating\n        ? `\n            background: var(--main-info);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background: var(--sub-info);\n    }\n`;\n\nexport const QuoteContainer = styled.div`\n    white-space: pre-line;\n    label {\n        font-weight: bold;\n        font-style: italic;\n        &:after {\n            content: \":\";\n        }\n    }\n    .question {\n        margin-left: var(--spacing);\n    }\n    .answer {\n        margin: var(--spacing) 0;\n        margin-bottom: var(--spacing-lg);\n    }\n    .image {\n        max-width: 100%;\n        padding: 0 var(--spacing) var(--spacing-lg) var(--spacing);\n    }\n    &:last-child {\n        .answer {\n            margin-bottom: 0;\n        }\n    }\n`;","import { Popover } from 'antd';\nimport { memo, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { StyledPopMarkdown } from '../atom';\nimport { useNotification } from 'src/service';\nimport { VersionLogButtonLabel } from './styled';\n\nconst LogSentence = styled.li`\n    text-align: center;\n    .content {\n        text-align: left;\n    }\n    a {\n        display: inline-block;\n    }\n    img {\n        display: block;\n        max-width: 400px;\n        max-height: 300px;\n        margin: auto;\n        box-shadow: var(--bs-1);\n        margin-top: var(--spacing-xs);\n    }\n`;\n\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\nconst VersionLogStore = (() => {\n    let isReady = false;\n    let versionLog: VersionLog = [];\n\n    return {\n        getLog: async () => {\n            if (isReady) return versionLog;\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/log/version.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            try {\n                const responseLog = await response.json();\n                versionLog = responseLog;\n                isReady = true;\n\n                return versionLog;\n            } catch (e) {\n                console.error(e);\n            }\n            return [];\n        }\n    };\n})();\nexport const VersionLog = () => {\n    const [log, setLog] = useState<VersionLog>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const log = await VersionLogStore.getLog();\n\n            setLoading(false);\n            setLog(log);\n        })();\n    }, []);\n\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\n    if (loading) return <div>Loading changelog...</div>;\n    return <div>\n        {log.map(({ logList, version }, index) => {\n            return <div key={`${version}-${index}`} className=\"log-section\">\n                <b>{version}</b><br />\n                <ul>\n                    {/* Using index as key here is safe as the component is stateless */}\n                    {logList.map(({ content, image }, index) => {\n                        return <LogSentence key={index}>\n                            <div className=\"content\">\n                                {content}\n                            </div>\n                            {image && <a target=\"_blank\" rel=\"noreferrer\" href={image} title=\"Click to open in new tab\">\n                                <img src={image} alt={`version-${version}-illust`} />\n                            </a>}\n                        </LogSentence>;\n                    })}\n                </ul>\n            </div>;\n        })}\n    </div>;\n};\n\nconst compareSemver = (a: string, b: string): boolean => {\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\n    \n    if (majorA !== majorB) {\n      return majorA > majorB;\n    }\n    \n    if (minorA !== minorB) {\n      return minorA > minorB;\n    }\n    \n    return patchA > patchB;\n};\n\nconst StyledVersionLog = styled(StyledPopMarkdown)`\n    overflow: auto;\n    width: 550px;\n    max-height: 300px;\n    width: 550px;\n    .log-section + .log-section {\n        margin-top: var(--spacing);\n    }\n`;\nexport const VersionLogButton = memo(() => {\n    const [animating, setAnimating] = useState(false);\n    const [\n        version,\n        setMemoizedVersion,\n    ] = useNotification('versionReminder');\n\n    useEffect(() => {\n        if (version) {\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\n            const memoizedSemver = version;\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\n\n            if (compareSemver(currentSemver, memoizedSemver)) {\n                setAnimating(true);\n                setTimeout(() => {\n                    setAnimating(false);\n                }, 8000);\n            }\n        }\n    }, [setMemoizedVersion, version]);\n\n    return <Popover\n        placement=\"bottom\"\n        content={<StyledVersionLog>\n            <VersionLog />\n        </StyledVersionLog>}\n    >\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\n        </VersionLogButtonLabel>\n    </Popover>;\n});","import { Modal, notification, Tabs } from 'antd';\nimport { FaqButtonLabel, QuoteContainer } from './styled';\nimport { useNotification } from 'src/service';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nexport const FAD_BUTTON_ID = 'faq-button';\n\ntype Feedback = {\n    author?: string,\n    question: string,\n    answer?: string,\n    image?: string,\n};\n\nconst StyledQuoteContainer = styled(QuoteContainer)`\n    text-align: center;\n    blockquote,\n    .answer {\n        text-align: left;\n    }\n    img {\n        max-height: 400px;\n    }\n`;\ntype Quote = {\n    image?: string,\n    author?: string,\n    question: string,\n    children: React.ReactNode,\n}\nconst Quote = ({\n    image,\n    author,\n    question,\n    children,\n}: Quote) => {\n    return <StyledQuoteContainer>\n        <blockquote>\n            {author && <label>{author}</label>}\n            <div className=\"question\">{question}</div>\n        </blockquote>\n        <div className=\"answer\">{children}</div>\n        {image && <img className=\"image\" src={image} alt=\"answer preview\" />}\n    </StyledQuoteContainer>;\n};\n\nexport const QuestionAndFeedback = () => {\n    const [visible, setVisible] = useState(false);\n    const [animating, setAnimating] = useState(false);\n    const [faqReminder, setMemoizedReminder] = useNotification('faqReminder');\n    const [feedbackReminder, setFeedbackReminder] = useNotification('feedbackReminder');\n\n    useEffect(() => {\n        const currentReminder = '01/09/2025';\n        if (faqReminder !== currentReminder) {\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(currentReminder);\n\n            setAnimating(true);\n            setTimeout(() => {\n                setAnimating(false);\n            }, 8000);\n        }\n    }, [setMemoizedReminder, faqReminder]);\n\n    useEffect(() => {\n        if (feedbackReminder !== true) {\n            setFeedbackReminder(true);\n            setAnimating(true);\n            notification.info({\n                message: 'Feedback Reminder',\n                description: 'If you have any feedback or suggestion, please check the FAQ button first to see if your feedback has been addressed.',\n                duration: 10,\n                onClose: () => {\n                    setAnimating(false);;\n                }\n            });\n        }\n    }, [feedbackReminder, setFeedbackReminder]);\n\n    const feedbackList: Feedback[] = [\n        {\n            author: 'Italic text at Aug 31, 2025',\n            question: 'Adding a syntax option for Italic in order to make only specific part of the text italic',\n            answer: 'I have added an experimental syntax for this case, you may try it now.',\n            image: 'https://images2.imgbox.com/c3/1b/OFLOLdf9_o.png',\n        },\n        {\n            author: 'ZorcNecropHades at Aug 26, 2025',\n            question: 'Hello, the token text cannot be displayed below. I did not have this problem before when I moved it to the bottom.',\n            answer: 'It should be fixed by now.',\n        },\n        {\n            author: 'Anonymous User at Aug 16, 2025',\n            question: 'Art Filter #9 seems not to be working with Pendulum frames',\n            answer: 'Hi there, I have checked this case and do not see any significant error (see image below), do you have any image to demonstrate the error?',\n            image: 'https://images2.imgbox.com/5b/1f/vp8d5wIa_o.png',\n        },\n        {\n            author: '& symbol at Aug 14, 2025',\n            question: 'This symbole & isnt correct on display.\\nSee photo Magie & Piège',\n            answer: 'Hi there, I have checked the letter on a real card and do not see any significant error, do you have any image for how the letter should be displayed?',\n            image: 'https://i.imgur.com/xZ9Pp9X.png',\n        },\n        {\n            author: 'Die Frauen at Aug 9, 2025',\n            question: 'As for a suggestion related to the pevious query, this may be a bit too crazy, but since it\\'s lodged together with the advanced/custom layout feature, do you think perhaps the foil could be split into 5 pieces the same as it? (all 4 corners and the text frame). If it may take too much effort or is not feasible I\\'ll understand that.',\n            answer: 'I don\\'t think this would be possible, as card foils are divided into multiple pieces for different places, so I couldn\\'t split them the same way as card frames at all.',\n        },\n        {\n            author: 'Die Frauen at Aug 9, 2025',\n            question: 'For convenience\\'s sake, I think it\\'d be a bit more useful if the foil dye set also had a hue slider, or a toggle for the RGB values like the one in the name coloring tabs... for the less inclined to memorize the Hex values.',\n            answer: 'I have added rgb inputs for dye color picker.',\n        },\n        {\n            author: 'Anonymous User at Aug 8, 2025',\n            question: 'There should be an effect text formatting option to justify text while making it respect the rest of the text\\'s compression ratio, like actual cards do.',\n            answer: 'I cannot support a new syntax right now, but if your use-case is just wanting the last line of effect / pendulum effect to be justfiy-aligned, you can use the newly implemented Justify Ratio in Paragraph Style button.',\n        },\n        {\n            author: 'the ¡ symbol is to long (for spanish card names) at Aug 5, 2025',\n            question: 'hi, i was trying to create a card using the ¡ symbol in the name, but its too long, not like the ! in the screenshot. for exaple: if u try to write the name \\'Caza del Cielo Movilizar - ¡Atacar!\\' you can see the symbol ¡ is too long compared to the pics of the same card in spanish. i hope you can fix that and ty for the web:3',\n            answer: 'I have updated the ratio, hopefully it looks better now.',\n        },\n        {\n            author: 'Rush Duel at Jun 22, 2025',\n            question: 'This card maker is amazing! Have you ever consider doing a rush duel section as well?',\n            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\n        },\n        {\n            author: 'Maya at May 23, 2025',\n            question: 'I\\'d like to make a request, is it possible to put a SPEED DUEL watermark in EVERY card types in the description area like the Speed Skill type when it is set to speed duel? thank you so much. Appreciate your lovely cardmaker',\n            answer: 'I will try, but this is pretty hard to do to be honest, don\\'t keep your hope up.',\n        },\n    ];\n\n    return <>\n        <FaqButtonLabel id={FAD_BUTTON_ID} $animating={animating} onClick={() => setVisible(cur => !cur)}>\n            {'FAQ'}\n        </FaqButtonLabel>\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\n            <Tabs>\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\n                    <div><i>Solved or stale (4 weeks of inactive) feedbacks are removed.</i></div>\n                    <br />\n                    {feedbackList.map(({ author, question, answer, image }, index) => {\n                        return <Quote key={index} author={author} question={question} image={image}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\n                    {[\n                        {\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\n                        },\n                        {\n                            question: 'Will you make another version for Rush Duel cards?',\n                            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\n                        }\n                    ].map(({ question, answer }, index) => {\n                        return <Quote key={index} question={question}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n            </Tabs>\n        </Modal>\n    </>;\n};","import { useEffect, useRef } from 'react';\nimport { drawName } from 'src/draw';\nimport { FrameInfo, NameStyle } from 'src/model';\nimport { useCard, WithLanguage } from 'src/service';\nimport { mergeClass, resolveNameStyle } from 'src/util';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\nimport { Popconfirm } from 'antd';\n\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        cursor: pointer;\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nconst OPTION_WIDTH = 140;\nconst OPTION_HEIGHT = 30;\nconst PresetOptionContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    gap: var(--spacing-xs);\n    align-items: center;\n    .canvas-container {\n        width: ${OPTION_WIDTH}px;\n        height: ${OPTION_HEIGHT}px;\n        box-shadow: var(--bs-1);\n    }\n    .preset-option-action {\n        display: grid;\n        grid-template-columns: 1fr;\n        gap: var(--spacing-xxs);\n        .anticon {\n            cursor: pointer;\n            &.anticon-close:hover {\n                color: var(--sub-danger);\n            }\n            &.anticon-save:hover {\n                color: var(--sub-info);\n            }\n        }\n    }\n`;\nexport type PresetOption = React.PropsWithChildren<{\n    frameInfo?: FrameInfo,\n    presetContent: Partial<NameStyle>,\n    active?: boolean,\n    onOverwrite?: () => void,\n    onActive?: () => void,\n    onDelete?: () => void,\n} & WithLanguage>;\nexport const PresetOption = ({\n    frameInfo,\n    presetContent,\n    active = false,\n    language,\n    onOverwrite,\n    onActive,\n    onDelete,\n}: PresetOption) => {\n    const {\n        format, foil,\n    } = useCard(useShallow(({\n        card: { format, foil },\n    }) => ({\n        format, foil,\n    })));\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const {\n        name,\n        labelBackgroundColor,\n        labelBackgroundImage,\n    } = frameInfo ?? {};\n    const normalizedFrame = name ?? 'effect';\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas?.getContext('2d');\n        if (canvas && ctx) {\n            ctx.clearRect(0, 0, OPTION_WIDTH, OPTION_HEIGHT);\n            const { font } = presetContent;\n            const value = font === 'OCG' ? '{カード名|かーどめい}' : 'Card Name';\n            const top = font === 'OCG' ? 65 : 60;\n            const left = font === 'OCG' ? 65 : 12;\n            drawName(\n                canvas,\n                ctx,\n                value,\n                left,\n                top,\n                OPTION_WIDTH / 0.4,\n                resolveNameStyle({\n                    foil,\n                    format,\n                    frame: normalizedFrame,\n                    nameStyle: presetContent,\n                    nameStyleType: 'custom',\n                }),\n                {\n                    frame: normalizedFrame,\n                    format,\n                    furiganaHelper: false,\n                    globalScale: 0.4,\n                    isSpeedSkill: true,\n                }\n            );\n        }\n    }, [foil, format, normalizedFrame, presetContent]);\n\n    return <PresetOptionContainer\n        className={mergeClass('preset-option', active ? 'menu-active' : '')}\n    >\n        <StyledPatternOption\n            className={mergeClass('canvas-container', !!onActive ? '' : 'menu-off')}\n            onClick={onActive}\n            style={{\n                background: labelBackgroundColor,\n                backgroundImage: labelBackgroundImage,\n            }}\n        >\n            <canvas ref={canvasRef} width={OPTION_WIDTH} height={OPTION_HEIGHT} />\n        </StyledPatternOption>\n        <div className=\"preset-option-action\">\n            {onDelete && <Popconfirm\n                title={language['generic.delete.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={() => onDelete()}\n            >\n                <CloseOutlined />\n            </Popconfirm>}\n            {onOverwrite && <Popconfirm\n                title={language['generic.overwrite.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={() => onOverwrite()}\n            >\n                <SaveOutlined />\n            </Popconfirm>}\n        </div>\n    </PresetOptionContainer>;\n};","import { Popconfirm } from 'antd';\nimport { DyeIndexMap, Foil, FoilMap, FrameInfoMap } from 'src/model';\nimport { WithLanguage } from 'src/service';\nimport { HexColorRegex, mergeClass } from 'src/util';\nimport styled from 'styled-components';\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\n\nconst CardLayoutContainer = styled.div<{ $width: number, $height: number, $layoutHoverable: boolean, $hoverable: boolean }>`\n    /** Ensure even width */\n    --layout-width: ${props => Math.round(props.$width / 2) * 2}px;\n    --layout-height: ${props => props.$height}px;\n    display: inline-block;\n    width: var(--layout-width);\n    height: var(--layout-height);\n    box-shadow: 0 0 2px 0 #202020;\n    position: relative;\n    background: var(--main-level-2);\n    ${props => props.$hoverable ? 'cursor: pointer;' : ''}\n    &.is-vertical {\n        margin-bottom: var(--spacing-3xl);\n        .float-layout.foil {\n            width: 100%;\n            left: 0;\n            bottom: -22.5%;\n            font-size: var(--fs-sm);\n            background-color: var(--main-level-1);\n        }\n    }\n    &.is-horizontal {\n        margin-right: var(--spacing-lg);\n        .float-layout.foil {\n            width: 50%;\n            height: 80%;\n            top: 10%;\n            right: -60%;\n            font-size: 0;\n            background-color: var(--main-level-1);\n        }\n    }\n    button {\n        border: none;\n    }\n    .overlay-patch {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n    }\n    .dye-patch {\n        position: absolute;\n        z-index: 1;\n        top: 10%;\n        left: 50%;\n        min-width: 6px;\n        min-height: 6px;\n        width: ${props => props.$width / 6}px;\n        height: ${props => props.$width / 6}px;\n        border-radius: var(--br-lg);\n        transform: translateX(-50%);\n    }\n    .card-layout {\n        position: absolute;\n        ${props => props.$layoutHoverable ? 'cursor: pointer;' : ''}\n        padding: 0;\n        &.unmodified .overlay-patch {\n            background: var(--gradient-diagonal-stripe);\n        }\n    }\n    .partial-layout {\n        background-clip: padding-box;\n        ${props => props.$layoutHoverable\n        ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) dashed var(--main-level-2);\n                }\n            `\n        : ''}\n    }\n    .float-layout {\n        ${props => props.$layoutHoverable\n        ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) solid var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n            `\n        : ''}\n    }\n    /** For Zarc's gradient */\n    .partial-layout {\n        background-size: 200%;\n    }\n    .top-left {\n        width: 50%; height: 50%;\n        top: 0; left: 0;\n    }\n    .top-right {\n        width: 50%; height: 50%;\n        top: 0; left: 50%;\n        background-position-x: 100%;\n    }\n    .bottom-left {\n        width: 50%; height: 50%;\n        top: 50%; left: 0;\n    }\n    .bottom-right {\n        width: 50%; height: 50%;\n        top: 50%; left: 50%;\n        background-position-x: 100%;\n    }\n    /** Background width is slightly reduced to help active bottom frames easier */\n    .effect-background {\n        width: 80%;\n        height: 20%;\n        bottom: 5%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n    .pendulum-effect-background {\n        width: 80%;\n        height: 13%;\n        bottom: 28%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n`;\nexport type CardLayoutPreview = {\n    tabIndex?: number,\n    width: number,\n    height: number,\n    baseLayoutState?: Record<string, string | undefined>,\n    resolvedLayoutState: Record<string, string | undefined>,\n    isPendulum: boolean,\n    activeLayout?: string,\n    dyeList: string[],\n    foil: Foil,\n    onClick?: () => void,\n    onLayoutSelect?: (key: string) => void,\n    vertical?: boolean,\n} & WithLanguage;\nexport const CardLayoutPreview = ({\n    tabIndex = 0,\n    width,\n    height,\n    baseLayoutState,\n    resolvedLayoutState,\n    isPendulum,\n    activeLayout,\n    dyeList,\n    foil,\n    onClick,\n    onLayoutSelect,\n    language,\n    vertical = false,\n}: CardLayoutPreview) => {\n    return <CardLayoutContainer\n        $width={width}\n        $height={height}\n        $layoutHoverable={!!onLayoutSelect}\n        $hoverable={!!onClick}\n        onClick={onClick}\n        className={mergeClass('card-layout-container', vertical ? 'is-vertical' : 'is-horizontal')}\n    >\n        {[\n            { key: 'topLeftFrame', className: 'card-layout partial-layout top-left' },\n            { key: 'topRightFrame', className: 'card-layout partial-layout top-right' },\n            { key: 'bottomLeftFrame', className: 'card-layout partial-layout bottom-left' },\n            { key: 'bottomRightFrame', className: 'card-layout partial-layout bottom-right' },\n            { key: 'effectBackground', className: 'card-layout float-layout effect-background' },\n            { key: 'pendulumEffectBackground', className: 'card-layout float-layout pendulum-effect-background' },\n        ].map(({ className, key }) => {\n            const frame = resolvedLayoutState[key];\n            const dyeIndex = DyeIndexMap[key];\n            const dyeColor = dyeIndex == null ? undefined : dyeList[DyeIndexMap[key]];\n\n            if (!frame) return null;\n            if (!isPendulum && key === 'pendulumEffectBackground') return null;\n            const {\n                labelBackgroundColor,\n                labelBackgroundImage,\n            } = FrameInfoMap[frame] ?? {};\n            return <button key={key}\n                {...tabIndex < 0 ? {} : { tabIndex }}\n                className={mergeClass(\n                    className,\n                    key === activeLayout ? 'active' : '',\n                    baseLayoutState?.[key] === 'auto' ? 'unmodified' : '',\n                )}\n                onClick={() => onLayoutSelect?.(key)}\n                style={labelBackgroundImage\n                    ? { backgroundImage: labelBackgroundImage }\n                    : { backgroundColor: labelBackgroundColor }\n                }\n            >\n                <div\n                    className=\"overlay-patch\"\n                    style={dyeColor\n                        ? {\n                            boxShadow: `0 0 0 ${Math.round(width / 16)}px ${dyeColor} inset`,\n                        }\n                        : {}}\n                />\n            </button>;\n        })}\n        <button\n            {...tabIndex < 0 ? {} : { tabIndex }}\n            className={mergeClass(\n                'card-layout float-layout foil',\n                'foil' === activeLayout ? 'active' : '',\n            )}\n            onClick={() => onLayoutSelect?.('foil')}\n            style={{\n                boxShadow: `0 0 0 2px ${HexColorRegex.test(dyeList[DyeIndexMap.foil])\n                    ? dyeList[DyeIndexMap.foil]\n                    : FoilMap[foil].color} inset`\n            }}\n        >\n            {language['input.foil.label']}\n        </button>\n    </CardLayoutContainer>;\n};\n\nconst LayoutPresetOptionContainer = styled.div`\n    text-align: center;\n    .layout-preset-option-action {\n        line-height: 1.25;\n        text-align: center;\n        .anticon {\n            cursor: pointer;\n            &.anticon-close:hover {\n                color: var(--sub-danger);\n            }\n            &.anticon-save:hover {\n                color: var(--sub-info);\n            }\n            + .anticon {\n                margin-left: var(--spacing-xs);\n            }\n        }\n    }\n`;\nexport type LayoutPresetOption = {\n    onActive?: () => void,\n    onOverwrite?: () => Promise<void>,\n    onDelete?: () => Promise<void>,\n} & CardLayoutPreview;\nexport const LayoutPresetOption = ({\n    onActive,\n    onDelete,\n    onOverwrite,\n    language,\n    ...rest\n}: LayoutPresetOption) => {\n    return <LayoutPresetOptionContainer className=\"frame-preset-option\">\n        <div className=\"preview-container\" onClick={onActive}>\n            <CardLayoutPreview {...rest} language={language} />\n        </div>\n        <div className=\"layout-preset-option-action\">\n            {onDelete && <Popconfirm\n                title={language['generic.delete.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={onDelete}\n            >\n                <CloseOutlined />\n            </Popconfirm>}\n            {onOverwrite && <Popconfirm\n                title={language['generic.overwrite.label']}\n                okText={language['generic.yes.label']}\n                cancelText={language['generic.no.label']}\n                onConfirm={() => onOverwrite()}\n            >\n                <SaveOutlined />\n            </Popconfirm>}\n        </div>\n    </LayoutPresetOptionContainer>;\n};","import { GlobalMemory, useCard, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ManagerDrawer } from '../atom';\nimport { PresetOption } from '../preset-option';\nimport { CanvasConst, FrameInfo, FrameInfoMap } from 'src/model';\nimport styled from 'styled-components';\nimport { LayoutPresetOption } from '../card-layout-preview';\nimport { downloadBlob, mergeClass, resolveFrameStyle } from 'src/util';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Button, Modal, notification } from 'antd';\nimport { useMemo, useRef, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\nconst PresetImportReviewModalContainer = styled(Modal)`\n    .import-review-title {\n        margin-bottom: var(--spacing-xs);\n    }\n    .import-action-table {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs);\n            &:nth-child(1) {\n                width: 150px;\n            }\n            &:nth-child(2) {\n                width: 150px;\n            }\n        }\n        .action-panel {\n            display: grid;\n            grid-template-columns: 1fr 1fr 1fr;\n            gap: var(--spacing-xs);\n        }\n        .import-action-row {\n            &.keep-old {\n                td:nth-child(1) {\n                    background-color: var(--main-level-4);\n                }\n            }\n            &.keep-new {\n                td:nth-child(2) {\n                    background-color: var(--main-level-4);\n                }\n            }\n            &.keep-both {\n                td:nth-child(1),\n                td:nth-child(2) {\n                    background-color: var(--main-level-4);\n                }\n            }\n        }\n    }\n`;\ntype MergeEntry<Value> = Value & { verdict: 'keep-old' | 'keep-new' | 'keep-both' };\ntype NameStylePreset = GlobalMemory['nameStylePresetList'][0];\ntype LayoutPreset = GlobalMemory['layoutPresetList'][0];\ntype PresetImportReviewModal = {\n    frameInfo: FrameInfo,\n    isPendulum: boolean,\n    importData: Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>,\n    onCancel: () => void,\n} & WithLanguage;\nconst PresetImportReviewModal = ({\n    language,\n    isPendulum,\n    frameInfo,\n    importData,\n    onCancel,\n}: PresetImportReviewModal) => {\n    const { db } = useCarderDb();\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const {\n        layoutPresetMap,\n        nameStylePresetMap,\n    } = useMemo(() => {\n        const nameStylePresetMap = nameStylePresetList.reduce<Record<string, NameStylePreset>>((acc, cur) => {\n            acc[cur.key] = cur;\n            return acc;\n        }, {});\n        const layoutPresetMap = layoutPresetList.reduce<Record<string, LayoutPreset>>((acc, cur) => {\n            acc[cur.key] = cur;\n            return acc;\n        }, {});\n\n        return {\n            nameStylePresetMap,\n            layoutPresetMap,\n        };\n    }, [layoutPresetList, nameStylePresetList]);\n    const {\n        layoutPresetList: nextLayoutPresetList = [],\n        nameStylePresetList: nextNameStylePresetList = [],\n    } = importData;\n    const [decisionMap, setDecisionMap] = useState(() => {\n        const layoutPresetMap = nextLayoutPresetList.reduce<Record<string, MergeEntry<LayoutPreset>>>((acc, cur) => {\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\n            return acc;\n        }, {});\n        const nameStylePresetMap = nextNameStylePresetList.reduce<Record<string, MergeEntry<NameStylePreset>>>((acc, cur) => {\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\n            return acc;\n        }, {});\n\n        return { layoutPresetMap, nameStylePresetMap };\n    });\n\n    return <PresetImportReviewModalContainer\n        visible={true}\n        width={700}\n        maskClosable={false}\n        okText={language['preset.button.import.label']}\n        cancelText={language['preset.button.discard.label']}\n        onCancel={onCancel}\n        onOk={async () => {\n            const layoutVerdictList = Object.values(decisionMap.layoutPresetMap);\n            const nameStyleVerdictList = Object.values(decisionMap.nameStylePresetMap);\n\n            const layoutReplaceMap: Record<string, LayoutPreset> = {};\n            const layoutFullList: LayoutPreset[] = [];\n            const layoutNewList: LayoutPreset[] = [];\n            layoutVerdictList\n                .filter(({ verdict }) => verdict !== 'keep-old')\n                .forEach(entry => {\n                    const { key, content, verdict } = entry;\n                    layoutFullList.push({ key, content });\n                    /** If choose to keep new and there is no existing entry => push new entry */\n                    if (layoutPresetMap[key] == null && verdict === 'keep-new') {\n                        layoutNewList.push({ key, content });\n                    }\n                    /** If choose to keep both => push new entry regardless of the existing one */\n                    else if (verdict === 'keep-both') {\n                        const newKey = uuid();\n                        layoutNewList.push({ key: newKey, content });\n                    }\n                    /** => Otherwise, replace the existing entry */\n                    else {\n                        layoutReplaceMap[key] = { key, content };\n                    }\n                });\n            if (db) {\n                const layoutPresetTx = db.transaction('presetLayoutStore', 'readwrite');\n                for (const { key, content } of layoutFullList) {\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(content) });\n                }\n                await layoutPresetTx.done;\n            }\n            setLayoutPresetList(cur => {\n                const newList = [\n                    ...cur.map(entry => {\n                        if (layoutReplaceMap[entry.key]) return layoutReplaceMap[entry.key];\n                        return entry;\n                    }),\n                    ...layoutNewList,\n                ];\n\n                return newList;\n            });\n\n            const nameStyleReplaceMap: Record<string, NameStylePreset> = {};\n            const nameStyleFullList: NameStylePreset[] = [];\n            const nameStyleNewList: NameStylePreset[] = [];\n            nameStyleVerdictList\n                .filter(({ verdict }) => verdict !== 'keep-old')\n                .forEach(entry => {\n                    const { key, content, verdict } = entry;\n                    nameStyleFullList.push({ key, content });\n                    /** If choose to keep new and there is no existing entry => push new entry */\n                    if (nameStylePresetMap[key] == null && verdict === 'keep-new') {\n                        nameStyleNewList.push({ key, content });\n                    }\n                    /** If choose to keep both => push new entry regardless of the existing one */\n                    else if (verdict === 'keep-both') {\n                        const newKey = uuid();\n                        nameStyleNewList.push({ key: newKey, content });\n                    }\n                    /** => Otherwise, replace the existing entry */\n                    else {\n                        nameStyleReplaceMap[key] = { key, content };\n                    }\n                });\n            if (db) {\n                const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readwrite');\n                for (const { key, content } of nameStyleFullList) {\n                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(content) });\n                }\n                await nameStylePresetTx.done;\n            }\n            setNameStylePresetList(cur => {\n                const newList = [\n                    ...cur.map(entry => {\n                        if (nameStyleReplaceMap[entry.key]) return nameStyleReplaceMap[entry.key];\n                        return entry;\n                    }),\n                    ...nameStyleNewList,\n                ];\n\n                return newList;\n            });\n            onCancel();\n        }}\n    >\n        <div className=\"import-review-title\">\n            <h2>{language['preset.review-title.label']}</h2>\n            {language['preset.review-description']}\n        </div>\n        <table className=\"import-action-table\">\n            <tbody>\n                <tr className=\"import-action-row import-header-row\">\n                    <th className=\"header-row\">{language['preset.review-table.current.label']}</th>\n                    <th className=\"header-row\">{language['preset.review-table.new.label']}</th>\n                    <th className=\"header-row\">{language['preset.review-table.action.label']}</th>\n                </tr>\n                {nextNameStylePresetList.map(({ key, content }) => {\n                    const commonProps = { language, frameInfo };\n                    const currentContent = nameStylePresetMap[key]?.content;\n                    const verdict = decisionMap.nameStylePresetMap[key].verdict;\n\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\n                        <td className=\"current-version\">\n                            {currentContent && <PresetOption {...commonProps} presetContent={currentContent}>\n                                {currentContent.preset}\n                            </PresetOption>}\n                        </td>\n                        <td className=\"new-version\">\n                            <PresetOption {...commonProps} presetContent={content}>\n                                {content.preset}\n                            </PresetOption>\n                        </td>\n                        <td className=\"action-list\">\n                            <div className=\"action-panel\">\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\n\n                                        return { ...cur, nameStylePresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-old.label'\n                                        : 'preset.review-table.action.discard.label'\n                                    ]}\n                                </Button>\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\n\n                                        return { ...cur, nameStylePresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-new.label'\n                                        : 'preset.review-table.action.import.label'\n                                    ]}\n                                </Button>\n                                {currentContent && <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\n\n                                        return { ...cur, nameStylePresetMap: nextMap };\n                                    })}\n                                >\n                                    {language['preset.review-table.action.keep-both.label']}\n                                </Button>}\n                            </div>\n                        </td>\n                    </tr>;\n                })}\n                {nextLayoutPresetList.map(({ key, content }) => {\n                    const commonProps = {\n                        width: Math.round(40 * width / height),\n                        height: 40,\n                        isPendulum,\n                        tabIndex: -1,\n                        language: language,\n                    };\n                    const currentContent = layoutPresetMap[key]?.content;\n                    const verdict = decisionMap.layoutPresetMap[key].verdict;\n\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\n                        <td className=\"current-version\">\n                            {currentContent && <LayoutPresetOption\n                                resolvedLayoutState={resolveFrameStyle({\n                                    frame: currentContent.frame,\n                                    topLeftFrame: currentContent.leftFrame,\n                                    topRightFrame: currentContent.rightFrame,\n                                    bottomLeftFrame: currentContent.pendulumFrame,\n                                    bottomRightFrame: currentContent.pendulumRightFrame,\n                                    effectBackground: currentContent.effectStyle?.background,\n                                    pendulumEffectBackground: currentContent.pendulumStyle?.background,\n                                }, isPendulum)}\n                                dyeList={currentContent.dyeList}\n                                foil={currentContent.foil}\n                                {...commonProps}\n                            />}\n                        </td>\n                        <td className=\"new-version\">\n                            <LayoutPresetOption\n                                resolvedLayoutState={resolveFrameStyle({\n                                    frame: content.frame,\n                                    topLeftFrame: content.leftFrame,\n                                    topRightFrame: content.rightFrame,\n                                    bottomLeftFrame: content.pendulumFrame,\n                                    bottomRightFrame: content.pendulumRightFrame,\n                                    effectBackground: content.effectStyle?.background,\n                                    pendulumEffectBackground: content.pendulumStyle?.background,\n                                }, isPendulum)}\n                                dyeList={content.dyeList}\n                                foil={content.foil}\n                                {...commonProps}\n                            />\n                        </td>\n                        <td className=\"action-list\">\n                            <div className=\"action-panel\">\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\n\n                                        return { ...cur, layoutPresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-old.label'\n                                        : 'preset.review-table.action.discard.label'\n                                    ]}\n                                </Button>\n                                <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\n\n                                        return { ...cur, layoutPresetMap: nextMap };\n                                    })}\n                                >\n                                    {language[currentContent\n                                        ? 'preset.review-table.action.keep-new.label'\n                                        : 'preset.review-table.action.import.label'\n                                    ]}\n                                </Button>\n                                {currentContent && <Button\n                                    size=\"small\"\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\n                                    onClick={() => setDecisionMap(cur => {\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\n\n                                        return { ...cur, layoutPresetMap: nextMap };\n                                    })}\n                                >\n                                    {language['preset.review-table.action.keep-both.label']}\n                                </Button>}\n                            </div>\n                        </td>\n                    </tr>;\n                })}\n            </tbody>\n        </table>\n    </PresetImportReviewModalContainer>;\n};\n\nconst PresetManagerContainer = styled(ManagerDrawer)`\n    .ant-drawer-body {\n        padding: var(--spacing);\n    }\n    .overlay-title {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        line-height: 1;\n    }\n    .name-style-preset-list {\n        margin-top: var(--spacing);\n        display: grid;\n        grid-template-columns: max-content max-content;\n        gap: var(--spacing-sm);\n    }\n    .layout-preset-list {\n        margin-top: var(--spacing);\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\n        gap: var(--spacing-sm);\n    }\n    .action-list {\n        margin-top: var(--spacing);\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        column-gap: var(--spacing-sm);\n        .import-upload-input {\n            display: none;\n        }\n    }\n`;\n\nexport type PresetManager = {} & WithLanguage;\nexport const PresetManager = ({\n    language,\n}: PresetManager) => {\n    const {\n        setVisible,\n        visible,\n    } = usePresetManager(useShallow(({\n        setVisible,\n        visible,\n    }) => ({\n        setVisible,\n        visible,\n    })));\n    const {\n        frame,\n        isPendulum,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            isPendulum,\n        },\n    }) => ({\n        frame,\n        isPendulum,\n    })));\n    const { db } = useCarderDb();\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const [importData, setImportData] = useState<{ visible: boolean } & Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>>({\n        visible: false,\n        layoutPresetList: [],\n        nameStylePresetList: [],\n    });\n    const frameInfo = FrameInfoMap[frame as keyof typeof FrameInfoMap];\n    const [inputKey, setInputKey] = useState(0);\n    const presetImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const directUploadId = 'preset-import-direct-upload';\n\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    try {\n                        const {\n                            layoutPresetList,\n                            nameStylePresetList,\n                        } = JSON.parse(result) as Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>;\n\n                        setImportData({\n                            visible: true,\n                            layoutPresetList,\n                            nameStylePresetList,\n                        });\n                    } catch (e) {\n                        console.error(e);\n                        notification.error({\n                            description: language['error.preset-import.description'],\n                            message: language['error.preset-import.message'],\n                        });\n                    }\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n        setInputKey(cur => cur + 1);\n    };\n\n    return <PresetManagerContainer\n        footer={null}\n        width={343}\n        visible={visible}\n        title={<div className=\"overlay-title\">\n            <span>{language['preset.manager.label']}</span>\n            <CloseOutlined\n                onClick={() => {\n                    setVisible(false);\n                }}\n            />\n        </div>}\n        onClose={() => {\n            setVisible(false);\n        }}\n    >\n        <div>\n            {language['preset.warning.label']}\n        </div>\n        <div className=\"action-list\">\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    const data = JSON.stringify({\n                        layoutPresetList: layoutPresetList,\n                        nameStylePresetList: nameStylePresetList,\n                    });\n                    const blob = new Blob([data], { type: 'application/json' });\n                    downloadBlob(\n                        'preset.json',\n                        blob,\n                        'application/json',\n                    );\n                }}\n            >\n                {language['generic.export.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                {language['generic.import.label']}\n                <input key={`direct-file-input-${inputKey}`} ref={presetImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = presetImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                    }}\n                />\n            </Button>\n        </div>\n        <div className=\"name-style-preset-list\">\n            {nameStylePresetList.map(({ key, content }) => {\n                return <PresetOption key={key}\n                    language={language}\n                    frameInfo={frameInfo}\n                    presetContent={content}\n                    onDelete={async () => {\n                        if (db) {\n                            const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                            await db.delete('presetNameStyleStore', key);\n                            await tx.done;\n                        }\n                        setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\n                    }}\n                >\n                    {content.preset}\n                </PresetOption>;\n            })}\n        </div>\n        <div className=\"layout-preset-list\">\n            {layoutPresetList.map(({ content, key }) => {\n                const {\n                    dyeList,\n                    foil,\n                    frame,\n                    pendulumFrame,\n                    leftFrame,\n                    pendulumRightFrame,\n                    rightFrame,\n                    effectStyle,\n                    pendulumStyle,\n                } = content;\n                const layoutState = {\n                    frame,\n                    topLeftFrame: leftFrame,\n                    topRightFrame: rightFrame,\n                    bottomLeftFrame: pendulumFrame,\n                    bottomRightFrame: pendulumRightFrame,\n                    effectBackground: effectStyle?.background,\n                    pendulumEffectBackground: pendulumStyle?.background,\n                };\n\n                return <LayoutPresetOption key={key}\n                    width={Math.round(40 * width / height)}\n                    height={40}\n                    isPendulum={isPendulum}\n                    resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                    tabIndex={-1}\n                    dyeList={dyeList}\n                    foil={foil}\n                    language={language}\n                    onDelete={async () => {\n                        if (db) {\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\n                            await db.delete('presetLayoutStore', key);\n                            await tx.done;\n                        }\n                        setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\n                    }}\n                />;\n            })}\n        </div>\n        {importData.visible && <PresetImportReviewModal\n            onCancel={() => setImportData(cur => ({ ...cur, visible: false }))}\n            importData={importData}\n            frameInfo={frameInfo}\n            isPendulum={isPendulum}\n            language={language}\n        />}\n    </PresetManagerContainer>;\n};","import { GithubFilled, DatabaseFilled, AuditOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage, usePresetManager } from 'src/service';\nimport { Radio, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\nimport { VersionLogButton } from './version-log';\nimport { StyledPopMarkdown } from '../atom';\nimport { FAD_BUTTON_ID, QuestionAndFeedback } from './faq';\nimport { PresetManager } from '../preset-manager';\nimport './app-header.scss';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n    const {\n        setVisible: setPresetManagerVisible,\n        visible: presetManagerVisible,\n    } = usePresetManager(useShallow(({\n        setVisible,\n        visible,\n    }) => ({\n        setVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\n                    <span\n                        className=\"bug-report\"\n                        onMouseOver={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.add('js-highlight');\n                        }}\n                        onMouseOut={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.remove('js-highlight');\n                        }}\n                    >\n                        <div id=\"sentry-bug-report\">\n                            {language['contributor.bug-report.tooltip']}\n                        </div>\n                    </span>\n                </Tooltip>\n                <QuestionAndFeedback />\n                <VersionLogButton />\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<StyledPopMarkdown className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </StyledPopMarkdown>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"preset-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('preset-manager-button-label', presetManagerVisible ? 'preset-manager-active' : '')}\n                onClick={() => setPresetManagerVisible()}\n            >\n                <div className=\"button-label\">\n                    <AuditOutlined />\n                    <label>{language['preset.manager.label']}</label>\n                </div>\n            </StyledHeaderButtonContainer>\n            <PresetManager language={language} />\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasPanel = () => {\n    const language = useLanguage();\n\n    return <StyledPopMarkdown className=\"disclaimer\">\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\n    </StyledPopMarkdown>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<TaintedCanvasPanel />}\n    />;\n};","import { Button, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { StyledCode } from '../atom';\nimport './formatting-guide.scss';\n\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n    h2 {\n        margin-top: var(--spacing);\n    }\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']}&nbsp;&nbsp;<Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['generic.close.label']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-6.label']}</h2>\n                {language['guide.format.section-6.content'](\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'justified non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'justified non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-7.label']}</h2>\n                {language['guide.format.section-7.content'](\n                    <StyledCode key=\"open-tag\">{'<i>'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'</i>'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-I'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-I'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-7-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-7-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import React from 'react';\nimport { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n    &:focus {\n        background-color: var(--main-level-3);\n    }\n    &:focus-visible {\n        background-color: var(--main-level-3);\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    id,\n    tabIndex,\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n    onClick,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & {\n    id?: string,\n    tabIndex?: number,\n    className?: string,\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\n}) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        id={id}\n        tabIndex={tabIndex}\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n        onClick={onClick}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useGlobal, useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport { DropZone } from '../atom';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nexport const CROPPER_WIDTH = 375;\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\nexport const isCropEqual = (cropL: Partial<ReactCrop.Crop>, cropR: Partial<ReactCrop.Crop>) => {\n    const { aspect: aspectL, height: heightL, unit: unitL, width: widthL, x: xL, y: yL } = cropL;\n    const { aspect: aspectR, height: heightR, unit: unitR, width: widthR, x: xR, y: yR } = cropR;\n    if (typeof widthL === 'number' && typeof widthR === 'number' && Math.abs(widthL - widthR) > 0.01) return false;\n    if (typeof heightL === 'number' && typeof heightR === 'number' && Math.abs(heightL - heightR) > 0.01) return false;\n    if (typeof xL === 'number' && typeof xR === 'number' && Math.abs(xL - xR) > 0.01) return false;\n    if (typeof yL === 'number' && typeof yR === 'number' && Math.abs(yL - yR) > 0.01) return false;\n    if (typeof aspectL === 'number' && typeof aspectR === 'number' && Math.abs(aspectL - aspectR) > 0.01) return false;\n    if (unitL !== unitR) return false;\n    return true;\n};\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / CROPPER_WIDTH;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: (crossorigin?: string) => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [activeDropzone, setActiveDropzone] = useGlobal('activeDropzone');\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (fileList: FileList) => {\n        const targetFile = fileList[0];\n        if (!targetFile) return;\n        const maxFileSize = 4;\n\n        if (targetFile.size < maxFileSize * 1024 * 1024) {\n            setLoading(true);\n            const reader = new FileReader();\n            reader.addEventListener('load', () => {\n                if (typeof reader.result === 'string') {\n                    setCrossOrigin('anonymous');\n                    setInternalSource(reader.result);\n                    setSourceType('offline');\n                    setInputMode('offline');\n                    onSourceChange('offline', reader.result);\n                    setLoading(false);\n                }\n            });\n            reader.readAsDataURL(targetFile);\n        } else {\n            onMaxSizeExceeded(maxFileSize);\n        }\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded(crossorigin);\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [crossorigin, onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setCrossOrigin('anonymous');\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0 || isLoading) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setCrossOrigin('anonymous');\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={mergeClass('card-image-cropper', className)}>\n            <div className=\"card-image-source-input\">\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        setCrossOrigin('anonymous');\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                    // setLoading(true);\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Tooltip\n                                title={<div className=\"image-info\">\n                                    {language['image-cropper.online-tip']}\n                                </div>}\n                            >\n                                <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                    {language['image-cropper.source.online.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                            <Tooltip\n                                title={<div className=\"image-warning\">\n                                    {language['image-cropper.offline-warning']}\n                                </div>}\n                            >\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={e => {\n                                if (e.target.files && e.target.files.length > 0) {\n                                    applyOfflineSource(e.target.files);\n                                } else alert(language['image-cropper.not-found-warning']);\n                            }}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                    </div>\n                </div>\n                {children}\n            </div>\n            {beforeCropper}\n            <div\n                className={mergeClass('card-cropper')}\n                onKeyDown={() => {\n                    /** Nudge selection also count as user interaction */\n                    setInteracted(true);\n                }}\n            >\n                <DropZone\n                    $visible={activeDropzone > 0}\n                    className=\"drop-zone\"\n                    onDragOver={e => e.preventDefault()}\n                    onDrop={e => {\n                        e.preventDefault();\n                        setActiveDropzone(0);\n                        if (e.currentTarget.classList.contains('drop-zone')) {\n                            // const itemList = e.dataTransfer.items;\n                            // for (let cnt = 0; cnt < itemList.length; cnt++) {\n                            //     itemList[cnt].getAsString((value) => {/** Redundant to support paste image link here */ });\n                            // }\n                            const fileList = e.dataTransfer.files;\n                            applyOfflineSource(fileList);\n                        }\n                    }}\n                >\n                    <label>{language['image-cropper.drop.tooltip']}</label>\n                </DropZone>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <Tooltip\n                        placement=\"left\"\n                        overlay={forceFit\n                            ? language['image-cropper.button.use-crop.tooltip']\n                            : language['image-cropper.button.force-fit.tooltip']}\n                    >\n                        <div\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                            onClick={() => {\n                                setInteracted(true);\n                                onForceFitChange(!forceFit);\n                            }}\n                        >\n                            <FullscreenOutlined />\n                        </div>\n                    </Tooltip>\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { width, x } = cur.completed ?? {};\n\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    x: (100 - width) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { height, y } = cur.completed ?? {};\n\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    y: (100 - height) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                </div>}\n                {((!hasImage || (error && crossorigin === undefined)) && !isLoading) && <Empty\n                    description={language['image-cropper.not-found-warning']}\n                    image={null}\n                />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        if (!receivingCanvas) {\n                            pendingCrop.current = {\n                                source: '',\n                                crop: null,\n                            };\n                            setLoading(false);\n                            setError('No receiving canvas');\n                            onTainted();\n                        }\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            pendingCrop.current = {\n                                source: '',\n                                crop: null,\n                            };\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded(crossorigin);\n                            setLoading(false);\n                            setError('Image not found');\n                        } else {\n                            setCrossOrigin(undefined);\n                            onTainted();\n                        }\n                        if (crossorigin === undefined) {\n                            setLoading(false);\n                            setError('Tainted canvas');\n                        }\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop || isLoading) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop || isLoading) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});","\nimport { Input } from 'antd';\nimport { useColorPicker } from 'src/service';\nimport { getContrastColor } from 'src/util';\nimport styled from 'styled-components';\nimport { ColorBlock } from '../atom';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        gap: 3px; // Alignment\n        padding-left: 3px; // Alignment\n        input {\n            width: 58px; // Alignment\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\n\nexport type InlineColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nexport const InlineColorPicker = ({\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                const dotColor = getContrastColor(rgb);\n\n                return <ColorBlock key={hex}\n                    className=\"color-block\"\n                    title={hex}\n                    style={{ backgroundColor: hex }}\n                    onClick={() => onChange?.(hex)}\n                >\n                    {color.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </ColorBlock>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <ColorBlock $static style={{ backgroundColor: color.hex }} />\n            <Input\n                size=\"small\"\n                value={inputText}\n                onChange={e => {\n                    setColor(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};","import { Input } from 'antd';\nimport { CustomPicker, InjectedColorProps } from 'react-color';\nimport { Saturation } from 'react-color/lib/components/common';\nimport { UseColorPicker, useColorPicker } from 'src/service';\nimport { getContrastColor, rgbToHex } from 'src/util';\nimport styled from 'styled-components';\nimport { ColorBlock } from '../atom';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { IconButton } from '../icon-button';\n\nconst SaturationBoardContainer = styled.div`\n    position: relative;\n    border-radius: var(--br);\n    > div,\n    .saturation-white,\n    .saturation-black {\n        border-radius: var(--br);\n    }\n`;\n\ntype UnlinkedSaturationBoard = InjectedColorProps;\nconst UnlinkedSaturationBoard = ({\n    onChange,\n    ...props\n}: UnlinkedSaturationBoard) => {\n    return <SaturationBoardContainer>\n        <Saturation\n            {...props}\n            onChange={color => {\n                onChange?.(color);\n            }}\n        />\n    </SaturationBoardContainer>;\n};\nconst SaturationBoard = CustomPicker(UnlinkedSaturationBoard);\n\nconst HorizontalSketchColorList = [\n    { hex: '#B80000', rgb: [184, 0, 0] },\n    { hex: '#EB9694', rgb: [235, 150, 148] },\n    { hex: '#DB3E00', rgb: [219, 62, 0] },\n    { hex: '#FAD0C3', rgb: [250, 208, 195] },\n    { hex: '#FCCB00', rgb: [252, 203, 0] },\n    { hex: '#FEF3BD', rgb: [254, 243, 189] },\n    { hex: '#008B02', rgb: [0, 139, 2] },\n    { hex: '#C1E1C5', rgb: [193, 225, 197] },\n    { hex: '#006B76', rgb: [0, 107, 118] },\n    { hex: '#BEDADC', rgb: [190, 218, 220] },\n    { hex: '#1273DE', rgb: [18, 115, 222] },\n    { hex: '#C4DEF6', rgb: [196, 222, 246] },\n    { hex: '#004DCF', rgb: [0, 77, 207] },\n    { hex: '#BED3F3', rgb: [190, 211, 243] },\n    { hex: '#5300EB', rgb: [83, 0, 235] },\n    { hex: '#D4C4FB', rgb: [212, 196, 251] },\n];\n\nconst HorizontalSketchPickerContainer = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 3.5rem 5rem 4rem max-content 1fr;\n    gap: var(--spacing-sm);\n    .color-input {\n        .color-state {\n            display: flex;\n            margin-bottom: var(--spacing-xs);\n        }\n        ${ColorBlock} {\n            display: inline-block;\n            flex: 1;\n            border: var(--bw) solid var(--sub-level-2);\n            height: 18px;\n        }\n    }\n    .color-list {\n        display: grid;\n        grid-template-columns: repeat(${HorizontalSketchColorList.length / 4}, max-content);\n        border-radius: var(--br);\n        overflow: hidden;\n        ${ColorBlock} {\n            height: 16px;\n            width: 16px;\n            box-shadow: none;\n            border-radius: 0;\n        }\n    }\n    .rgb-input {\n        display: grid;\n        grid-template-columns: 1rem 1fr;\n        column-gap: var(--spacing-xs);\n        font-size: var(--fs-sm);\n        input {\n            line-height: 1;\n            font-size: var(--fs-sm);\n        }\n        + .rgb-input {\n            margin-top: var(--spacing-xxs);\n        }\n    }\n`;\nexport type HorizontalSketchPicker = {\n    children?: React.ReactNode,\n} & UseColorPicker;\nexport const HorizontalSketchPicker = ({\n    children,\n    onChange,\n    value,\n}: HorizontalSketchPicker) => {\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\n    const noColor = inputText === '';\n\n    return <HorizontalSketchPickerContainer className=\"horizontal-sketch-picker\">\n        <div className=\"input-label\">\n            {children}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-state\">\n                <ColorBlock\n                    $empty={noColor}\n                    style={noColor ? {} : { backgroundColor: color.hex }}\n                />\n                <IconButton\n                    size=\"sm\"\n                    Icon={CloseOutlined}\n                    onClick={() => {\n                        onChange?.('');\n                    }}\n                />\n            </div>\n            <Input\n                size=\"small\"\n                value={inputText}\n                onChange={e => {\n                    setColor(e.target.value);\n                }}\n            />\n        </div>\n        <div className=\"rgb-input-list\">\n            {['R', 'G', 'B'].map((entry, index) => {\n                return <div key={entry} className=\"rgb-input\">\n                    <span>{entry}</span>\n                    <Input size=\"small\" value={noColor ? '' : color.rgb[index]} onChange={e => {\n                        const nextColor = [...color.rgb];\n                        nextColor[index] = parseInt(e.target.value);\n\n                        setColor(rgbToHex(nextColor));\n                    }} />\n                </div>;\n            })}\n        </div>\n        <div className=\"color-list\">\n            {HorizontalSketchColorList.map(({ hex, rgb }) => {\n                const dotColor = getContrastColor(rgb);\n\n                return <ColorBlock key={hex}\n                    className=\"color-block\"\n                    title={hex}\n                    style={{ backgroundColor: hex }}\n                    onClick={() => onChange?.(hex)}\n                >\n                    {color.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </ColorBlock>;\n            })}\n        </div>\n        <SaturationBoard color={color.hex} onChange={({ hex }) => setColor(hex)} />\n    </HorizontalSketchPickerContainer>;\n};","import { Modal } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasConst } from 'src/model';\nimport {\n    TransformWrapper,\n    TransformComponent,\n    ReactZoomPanPinchContentRef,\n} from 'react-zoom-pan-pinch';\nimport styled from 'styled-components';\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { CardActionButton } from '../atom';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nconst StyledLightboxContainer = styled.div`\n    width: ${CanvasWidth}px;\n    height: ${CanvasHeight}px;\n    overflow: hidden;\n    position: relative;\n    line-height: 0;\n    .card-lightbox-control {\n        position: absolute;\n        z-index: 1;\n        top: var(--spacing);\n        right: var(--spacing);\n        user-select: none;\n        text-align: right;\n        .action-list {\n            display: inline-flex;\n            gap: var(--spacing-xs);\n        }\n        .control-info {\n            background-color: var(--main-level-1);\n            padding: var(--spacing-xs);\n            margin-top: var(--spacing-xs);\n            border-radius: var(--br);\n            border: var(--bw) solid var(--sub-level-1);\n            line-height: 1;\n            box-shadow: var(--bs-1);\n        }\n    }\n    .card-lightbox-content {\n        cursor: grab;\n    }\n`;\n\nconst MAX_ZOOM = 4;\nconst Controls = ({\n    zoomIn,\n    zoomOut,\n    resetTransform,\n    setTransform,\n    scale,\n    globalScale,\n    width,\n    height,\n}: ReactZoomPanPinchContentRef & {\n    scale: number,\n    globalScale: number,\n    width: number,\n    height: number,\n}) => {\n    return <div className=\"control-container\">\n        <div className=\"action-list\">\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\n                zoomIn();\n            }}>\n                <ZoomInOutlined />\n            </CardActionButton>\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\n                zoomOut();\n            }}>\n                <ZoomOutOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                resetTransform();\n            }}>\n                <FullscreenExitOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                setTransform(\n                    -Math.max(0, width - CanvasWidth) / 2,\n                    -Math.max(0, height - CanvasHeight) / 2,\n                    1,\n                );\n            }}>\n                <FullscreenOutlined />\n            </CardActionButton>\n        </div>\n        <div className=\"control-info\">\n            {scale && <>×{\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\n            }</>}&nbsp;({width} × {height})\n        </div>\n    </div>;\n};\n\nexport type Lightbox = {\n    globalScale: number,\n};\nexport type LightboxRef = {\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\n    draw: (targetCanvas: HTMLCanvasElement) => void,\n    refresh: () => void,\n    getCanvasKey: () => number,\n};\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\n    globalScale,\n}, ref) => {\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [canvasKey, setCanvasKey] = useState(0);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\n    const [scale, setScale] = useState(() => 1 / globalScale);\n\n    useImperativeHandle(ref, () => ({\n        setVisible: setLightboxVisible,\n        draw: targetCanvas => {\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\n                targetCanvas,\n                0,\n                0,\n            );\n        },\n        refresh: () => setCanvasKey(cnt => cnt + 1),\n        getCanvasKey: () => canvasKey,\n    }));\n\n    useEffect(() => {\n        lightboxRef.current?.resetTransform();\n    }, [globalScale]);\n\n    return <Modal\n        width={`${CanvasWidth + 15 * 2}px`}\n        wrapClassName=\"card-lightbox-overlay\"\n        visible={lightboxVisible}\n        forceRender={true}\n        onCancel={() => setLightboxVisible(false)}\n        footer={null}\n    >\n        <StyledLightboxContainer\n            className=\"card-lightbox-container\"\n        >\n            <TransformWrapper ref={lightboxRef}\n                initialScale={1 / globalScale}\n                initialPositionX={0}\n                initialPositionY={0}\n                minScale={1 / globalScale}\n                maxScale={MAX_ZOOM}\n                onTransformed={ref => {\n                    setScale(ref.state.scale);\n                }}\n            >\n                {({ ...utils }) => {\n                    return <>\n                        <div\n                            className=\"card-lightbox-control\"\n                        >\n                            <Controls\n                                {...utils}\n                                scale={scale}\n                                globalScale={globalScale}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </div>\n                        <TransformComponent\n                            wrapperClass=\"card-lightbox-content\"\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\n                        >\n                            <canvas key={canvasKey + 0.1}\n                                id=\"lightbox-canvas\"\n                                ref={lightboxCanvasRef}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </TransformComponent>\n                    </>;\n                }}\n            </TransformWrapper>\n        </StyledLightboxContainer>\n    </Modal>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst LINK_MARKER_HALF_SIZE = 13;\nexport const LINK_MARKER_PICKER_WIDTH = 3 * 2 * LINK_MARKER_HALF_SIZE + 5 * 2; // 5 = --spacing-xs\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: ${LINK_MARKER_HALF_SIZE}px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    display: inline-block;\n    .title {\n        line-height: 1;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkerPicker = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkerPicker = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkerPicker) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-picker', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import { Menu, Popover } from 'antd';\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\nimport { useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-setting {\n        background-color: var(--main-active);\n    }\n`;\nexport type ResolutionPicker = {\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ResolutionPicker = ({\n    onChange,\n    ...rest\n}: ResolutionPicker) => {\n    const language = useLanguage();\n    const {\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.resolution.label']}\n        </StyledDownloadDropdownLabel>\n        {ResolutionList.map(({ width, height, label, scale }) => {\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        resolution: [width, height],\n                        globalScale: scale,\n                    });\n                    onChange?.([width, height], scale);\n                }}\n            >\n                {scale > 1\n                    ? <Popover\n                        overlayClassName=\"explanation-overlay\"\n                        placement=\"left\"\n                        content={<StyledPopMarkdown>\n                            {language['setting.option.resolution.warning']}\n                        </StyledPopMarkdown>}\n                    >\n                        <ResolutionLabel width={width} height={height} warning={true} />\n                    </Popover>\n                    : <ResolutionLabel width={width} height={height} />}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};\n\nexport type ExportFormatPicker = {\n    onChange?: (nextFormat: ExportFormat) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ExportFormatPicker = ({\n    onChange,\n    ...rest\n}: ExportFormatPicker) => {\n    const language = useLanguage();\n    const {\n        exportFormat,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, exportFormat },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        exportFormat,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.export-format.label']}\n        </StyledDownloadDropdownLabel>\n        {ExportFormatList.map(({ value, label }) => {\n            return <StyledDownloadDropdownOption key={label}\n                className={value === exportFormat ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        exportFormat: value,\n                    });\n                    onChange?.(value);\n                }}\n            >\n                {label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdownLabel = styled.div`\n    color: var(--color);\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    padding: 0 var(--spacing);\n    padding-bottom: var(--spacing-xs);\n    line-height: 1;\n    cursor: default;\n    &:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './angle-picker';\nexport * from './app-header';\nexport * from './atom';\nexport * from './card-layout-preview';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './icon-button';\nexport * from './image-cropper';\nexport * from './inline-color-picker';\nexport * from './inline-sketch-picker';\nexport * from './input-train';\nexport * from './lightbox';\nexport * from './link-marker';\nexport * from './loading';\nexport * from './preset-manager';\nexport * from './preset-option';\nexport * from './setting';\nexport * from './setting-panel';","import { Button, Dropdown, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { GatewayOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\nimport { ResolutionPicker } from 'src/component';\n\nexport const ResolutionButton = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    border-left: var(--bw) solid var(--sub-secondary);\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    color: var(--color);\n    cursor: pointer;\n    .anticon {\n        font-size: var(--fs-2xl);\n        margin-left: 0;\n    }\n    .resolution-overlay {\n        position: absolute;\n        left: 50%;\n        bottom: 3px; // Alignment\n        font-size: var(--fs-xs);\n        text-align: center;\n        transform: translateX(-50%);\n    }\n    .resolution-icon {\n        transform: translateY(-5px); // Alignment\n    }\n`;\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    globalScale: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    globalScale,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey, resolution,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n            globalScale,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n            >\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                    <GatewayOutlined className=\"resolution-icon\" />\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\n                </ResolutionButton>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { Copiable, CopiableOverlayStyle, InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        padding-bottom: var(--spacing-sm);\n        .icon {\n            font-size: var(--fs-4xl);\n        }\n        &.export-download-image {\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\n            border-bottom: var(--bw) solid var(--sub-secondary);\n            &:disabled {\n                border-bottom: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        gap: var(--spacing-lg);\n        align-items: center;\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        &.mode_other {\n            grid-template-columns: 1fr 1fr;\n        }\n        button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            width: 100%;\n            height: 100%;\n        }\n        > div {\n            height: 100%;\n        }\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .resolution-picker {\n        background-color: var(--main-level-4);\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\n        padding: var(--spacing-xs);\n        line-height: 1;\n        text-align: center;\n        border: var(--bw) solid transparent;\n        cursor: pointer;\n    }\n    .export-input-raw {\n        grid-column: 1 / -1;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    ${CopiableOverlayStyle}\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n    withText?: boolean,\n    disabled: boolean,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n    disabled,\n    withText,\n}: CardDataCopyButton) => {\n    return <Copiable\n        disabled={disabled}\n        data={data}\n        container={StyledCardDataCopyButton}\n        overlay={withText\n            ? <>Copied&nbsp;<CheckOutlined /></>\n            : <CheckOutlined />}\n    >{children}</Copiable>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    tainted: boolean,\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    tainted,\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey,\n        resolution,\n    })));\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay export-modal\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            width={600}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\n                        <div>\n                            <StyledActionIconButton\n                                disabled={tainted && mode === 'other'}\n                                onClick={() => {\n                                    const blob = new Blob([data], { type: 'application/json' });\n                                    downloadBlob(\n                                        normalizeCardName(name),\n                                        blob,\n                                        'application/json',\n                                    );\n                                }}\n                            >\n                                <div className=\"icon\"><DownloadOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.download-button.label']}\n                                </div>\n                            </StyledActionIconButton>\n                        </div>\n                    </InternalPopover>\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['prompt.export.offline-warning.message']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={false}\n                                data={internalCardData.ygocarder.data}\n                                withText\n                            >\n                                <div className=\"icon\"><CopyOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.copy-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['image-cropper.offline-warning']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={window.location.href}\n                                withText\n                            >\n                                <div className=\"icon\"><LinkOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.share-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    <div>\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\n                            <div>\n                                <StyledActionIconButton\n                                    disabled={tainted}\n                                    className=\"export-download-image\"\n                                    onClick={onRequireDownload}\n                                >\n                                    <div className=\"icon\"><FileImageOutlined /></div>\n                                    <div className=\"label\">\n                                        {language['button.export-modal.save-button.label']}\n                                    </div>\n                                </StyledActionIconButton>\n                            </div>\n                        </InternalPopover>\n                        <Dropdown overlay={<ResolutionPicker />}>\n                            <div className=\"resolution-picker\">\n                                {resolution[0]} × {resolution[1]}\n                            </div>\n                        </Dropdown>\n                    </div>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                        rows={5}\n                    />}\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['generic.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport {\n    isYgoprodeckImage,\n    // uploadToImgur,\n} from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 * \n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    // try {\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\n                    //     if (imgurResponse.status !== 200) {\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\n                    //     }\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\n                    // } catch (e) {\n                    //     /** Failing the upload process does not terminate the import process */\n                    //     console.error('Upload error:', e);\n                    //     notification.error({\n                    //         message: language['prompt.import.imgur.message'],\n                    //         description: language['prompt.import.imgur.description'],\n                    //     });\n                    // }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['generic.import.label']}\n            className=\"global-overlay import-modal\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl-E / ⌘-E</div>\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['generic.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n    PendulumSizeMap,\n    OtherFinishTypeMap,\n    ExtraAttributeList,\n    RegionMap,\n    AUTO_FONT,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\n    label: labelKey ? dictionary[labelKey] : label,\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\n    value,\n}));\n\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => [\n    { label: dictionary['input.name-style.type.auto.label'], value: AUTO_FONT },\n    ...Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n        label: dictionary[labelKey],\n        value,\n    })),\n];\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (region: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${RegionMap[region]?.fileKey}-${name.toLowerCase()}.png`}\n                />\n            </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getExtraAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => ExtraAttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);\n\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation, StyledPopMarkdown } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '★',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                'Ø',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<StyledPopMarkdown>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </StyledPopMarkdown>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n};\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n            </CircularAnglePicker>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import styled from 'styled-components';\nimport { StyledDropdown } from 'src/component';\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPresetContainer = styled(StyledDropdown.Container)`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm);\n    max-width: 507px; // Alignment\n    .preset-warning {\n        flex: 0 0 100%;\n        font-size: var(--fs-sm);\n    }\n    .panel-action {\n        flex: 0 0 100%;\n    }\n    .open-preset-manager {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider, SingleSliderContainer } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={8} xmin={-8}\n                ymax={8} ymin={-8}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <SingleSliderContainer className=\"single-slider\">\n                <span>{language['input.name-style.slider.x-offset.label']}:</span>\n                <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n                <span>{language['input.name-style.slider.y-offset.label']}:</span>\n                <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </SingleSliderContainer>\n            <div className=\"single-slider\">\n                {widthLabel}:&nbsp;<GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { InputNumber } from 'antd';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\nimport styled from 'styled-components';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport { getDefaultNameStyle } from 'src/model';\n\nconst MaterialColor = styled.div<{ $color: string }>`\n    border: var(--bw) solid var(--sub-level-2);\n    display: inline-block;\n    width: 2rem;\n    height: 1em;\n    border-radius: var(--br-sm);\n    cursor: pointer;\n    ${({ $color }) => `background-color: ${$color};`}\n`;\nconst EmbossControlContainer = styled.div`\n    width: 245px; // Exact same width with text color picker, for alignment\n    color: var(--color);\n    .emboss-control-title {\n        font-size: var(--fs-sm);\n        text-align: left;\n        padding: var(--spacing-sm);\n        padding-bottom: 0;\n    }\n    .emboss-control-left h2 {\n        padding: var(--spacing-sm) 0;\n    }\n    .angle-picker-container {\n        text-align: center;\n    }\n    .emboss-control-right {\n        padding: var(--spacing-sm) 0;\n    }\n    .emboss-control-left {\n        padding: var(--spacing-sm);\n        padding-top: 0;\n    }\n    .slider-label {\n        padding: 0;\n        border: none;\n    }\n    .vertical-angle-control {\n        grid-template-columns: max-content 60px 85px 12px;\n    }\n    .reset-button {\n        cursor: pointer;\n        &:hover {\n            color: var(--color-heavy);\n        }\n    }\n    .navigate-button {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n    .thickness-row {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        column-gap: var(--spacing-sm);\n        align-items: center;\n        .ant-slider {\n            height: unset;\n            margin-top: var(--spacing-xs);\n            margin-bottom: var(--spacing-xs);\n        }\n    }\n`;\n\nconst VECTOR_VALUE_EPSILON = 0.01;\nconst DEFAULT_PITCH = 90;\nconst DEFAULT_YAW = 90;\nfunction hexToRgb(hex: string) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    return (result\n        ? [\n            parseInt(result[1], 16),\n            parseInt(result[2], 16),\n            parseInt(result[3], 16)\n        ]\n        : [0, 0, 0]) as [number, number, number];\n  }\n\nexport type EmbossControllerRef = {\n    setValue: (value: {\n        color?: string,\n        pitch?: number,\n        yaw?: number,\n        thickness?: number,\n    }) => void,\n};\nexport type EmbossController = {\n    defaultPitch?: number,\n    defaultYaw?: number,\n    defaultThickness?: number,\n    materialColor?: string,\n    children?: React.ReactNode,\n    language: LanguageDataDictionary,\n    onColorTabNavigate?: () => void,\n    onChange: (value: {\n        lightColorVec: [number, number, number],\n        lightAngleVec: [number, number, number],\n        yaw: number,\n        pitch: number,\n        thickness: number,\n    }) => void,\n};\nconst defaultValue = getDefaultNameStyle();\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\n    defaultPitch = defaultValue.embossPitch,\n    defaultYaw = defaultValue.embossYaw,\n    defaultThickness = defaultValue.embossThickness,\n    materialColor,\n    children,\n    language,\n    onColorTabNavigate,\n    onChange,\n}, ref) => {\n    const [requestUpdate, internalId] = useRefresh();\n    const [color, setColor] = useState('#ffffff');\n    const [thickness, setThickness] = useState(defaultThickness);\n    const [angle, setAngle] = useState(defaultYaw);\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\n    const currentThickness = useRef(defaultThickness);\n    /** Currently we only allow pure white light to avoid confusion for user. */\n    const [allowPickColor] = useState(false);\n\n    useEffect(() => {\n        let relevant = true;\n        if (internalId) setTimeout(() => {\n            if (relevant) {\n                const nextAngle = angleToVector(angle, verticalAngle);\n                const nextColor = hexToRgb(color);\n\n                if (\n                    nextColor[0] !== currentColorVec.current[0]\n                    || nextColor[1] !== currentColorVec.current[1]\n                    || nextColor[2] !== currentColorVec.current[2]\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\n                    || thickness !== currentThickness.current\n                ) {\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\n                }\n                currentColorVec.current = nextColor;\n                currentAngleVec.current = nextAngle;\n                currentThickness.current = thickness;\n            }\n        }, 150);\n\n        return () => {\n            relevant = false;\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [internalId, color, angle, verticalAngle, thickness]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ color, pitch, yaw, thickness }) => {\n            if (color) setColor(color);\n            if (pitch) setVerticalAngle(pitch);\n            if (yaw) setAngle(yaw);\n            if (typeof thickness === 'number') setAngle(thickness);\n        }\n    }));\n\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\n        <div className=\"emboss-control-title\">\n            {children}\n        </div>\n        <div className=\"emboss-control-left\">\n            <h2>\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\n                    className=\"material-color\"\n                    onClick={onColorTabNavigate}\n                    $color={materialColor}\n                />\n            </h2>\n            {language['input.name-style.emboss.color.alert'](<span\n                key=\"color-navigate\"\n                className={!!onColorTabNavigate ? 'navigate-button' : ''}\n                onClick={onColorTabNavigate}\n            >\n                {language['input.name-style.color.label']}\n            </span>)}\n            <h2 className=\"thickness-row\">\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\n                <GuardedSlider\n                    value={thickness}\n                    min={0}\n                    max={4}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setThickness(value);\n                            requestUpdate();\n                        }\n                    }}\n                />\n            </h2>\n            <h2>\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\n                    className=\"reset-button\"\n                    onClick={() => {\n                        setVerticalAngle(DEFAULT_PITCH);\n                        requestUpdate();\n                    }}\n                />\n            </h2>\n            <CombinedSliderContainer className=\"vertical-angle-control\">\n                <div className=\"slider-label\" />\n                <InputNumber\n                    size=\"small\"\n                    min={-90}\n                    max={90}\n                    onChange={value => {\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\n                        requestUpdate();\n                    }}\n                    value={verticalAngle}\n                />\n                <GuardedSlider\n                    min={-90}\n                    max={90}\n                    value={verticalAngle}\n                    onChange={value => {\n                        setVerticalAngle(value);\n                        requestUpdate();\n                    }}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\n                className=\"reset-button\"\n                onClick={() => {\n                    setAngle(DEFAULT_YAW);\n                    requestUpdate();\n                }}\n            /></h2>\n            <div className=\"horizontal-angle-contorl\">\n                <CircularAnglePicker\n                    angle={angle}\n                    size={120}\n                    setAngle={angle => {\n                        setAngle(angle);\n                        requestUpdate();\n                    }}\n                />\n            </div>\n        </div>\n        {allowPickColor && <div className=\"emboss-control-right\">\n            <h2>Light color</h2>\n            <ChromePicker\n                styles={{\n                    default: {\n                        picker: {\n                            color: '#000000',\n                            background: 'var(--main-level-3)',\n                            boxShadow: 'none',\n                        },\n                        body: {\n                            padding: 'var(--spacing) var(--spacing)',\n                        }\n                    },\n                }}\n                disableAlpha={true}\n                color={color}\n                onChange={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n                onChangeComplete={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n            />\n        </div>}\n    </EmbossControlContainer>;\n});","import { useEffect, useState } from 'react';\nimport { ChromePicker, CompactPicker } from 'react-color';\nimport { DefaultColorList } from 'src/model';\nimport styled from 'styled-components';\n\nconst TextColorPickerContainer = styled.div`\n    .chrome-picker {\n        /** Target color format swapper in picker's body */\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\n            display: none !important;\n        }\n    }\n`;\nexport type TextColorPicker = {\n    color?: string,\n    onChange: (color: string) => void,\n};\nexport const TextColorPicker = ({\n    color,\n    onChange,\n}: TextColorPicker) => {\n    const [internalColor, setInternalColor] = useState(color);\n\n    useEffect(() => {\n        setInternalColor(color);\n    }, [color]);\n\n    return <TextColorPickerContainer>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                        padding: 'var(--spacing-sm) var(--spacing)',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    },\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onChange(color.hex);\n            }}\n        />\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => {\n                onChange(color.hex);\n            }}\n        />\n    </TextColorPickerContainer>;\n};","import { Button, Checkbox, Empty, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown, PopoverButton, StyledPatternOption, PresetOption } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPresetContainer,\n} from './style-picker.styled';\nimport { useCarderDb, useGlobal, useLanguage, usePresetManager, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\nimport { TextColorPicker } from './text-color-picker';\nimport { v4 as uuid } from 'uuid';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\n    const { db } = useCarderDb();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const setVisible = usePresetManager(state => state.setVisible);\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        requestUpdateCustomStyle();\n    }, [requestUpdateCustomStyle]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n                embossPitch, embossYaw, embossThickness,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n            embossControllerRef.current?.setValue({\n                pitch: embossPitch,\n                yaw: embossYaw,\n                thickness: embossThickness,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        hasEmboss, embossPitch, embossYaw, embossThickness,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n\n    const colorPickerButtonId = 'color-picker';\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <TextColorPicker\n                                        color={fillStyle}\n                                        onChange={hexColor => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            id={colorPickerButtonId}\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom}\n                            className=\"picker-dropdown color-picker-dropdown\"\n                        >\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && font !== 'Auto'}\n                            className=\"picker-dropdown font-picker-dropdown\"\n                        >\n                            {language['input.name-style.font.label']}\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className=\"custom-style-picker\">\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.emboss.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\n                                    language={language}\n                                    defaultPitch={embossPitch}\n                                    defaultYaw={embossYaw}\n                                    defaultThickness={embossThickness}\n                                    materialColor={fillStyle}\n                                    onColorTabNavigate={() => {\n                                        document.getElementById(colorPickerButtonId)?.click();\n                                    }}\n                                    onChange={({ thickness, yaw, pitch }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            embossPitch: pitch,\n                                            embossYaw: yaw,\n                                            embossThickness: thickness,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                >\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\n                                </EmbossController>}\n                            </div>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasEmboss}\n                            className=\"picker-dropdown emboss-picker-dropdown\"\n                        >\n                            {language['input.name-style.emboss.label']}\n                        </PopoverButton>\n                    </Popover>}\n                    <div className=\"save-preset-button-group\">\n                        <Button\n                            size=\"small\"\n                            className=\"picker-dropdown preset-picker-dropdown\"\n                            type=\"primary\"\n                            onClick={async () => {\n                                const key = uuid();\n                                if (db) {\n                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\n                                    await tx.done;\n                                }\n                                setNameStylePresetList(cur => {\n                                    return [\n                                        ...cur,\n                                        {\n                                            key,\n                                            content: { ...value },\n                                        }\n                                    ];\n                                });\n                            }}\n                        >\n                            {language['input.name-style.preset.label']}\n                        </Button>\n                        <Popover key=\"preset-picker\"\n                            trigger={['click']}\n                            overlayClassName=\"global-input-overlay global-style-picker-overlay low-index\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <StyledPresetContainer onClick={e => e.stopPropagation()}>\n                                    {nameStylePresetList.length > 0 && <div className=\"preset-warning\">\n                                        {language['preset.warning.label']}\n                                        &nbsp;\n                                        <span className=\"open-preset-manager\"\n                                            onClick={() => setVisible(true)}\n                                        >{language['preset.manager.check.label']}</span>\n                                    </div>}\n                                    {nameStylePresetList.length === 0 && <Empty\n                                        description={language['generic.empty.label']}\n                                    />}\n                                    {nameStylePresetList.map(({ key, content }) => {\n                                        return <PresetOption key={key}\n                                            language={language}\n                                            frameInfo={frameInfo}\n                                            presetContent={content}\n                                            onActive={() => {\n                                                setValue({ ...content });\n                                                requestUpdateCustomStyle();\n                                            }}\n                                            onOverwrite={async () => {\n                                                if (db) {\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\n                                                    await tx.done;\n                                                }\n                                                setNameStylePresetList(cur => {\n                                                    return cur.map(entry => {\n                                                        if (entry.key === key) return {\n                                                            key,\n                                                            content: { ...value },\n                                                        };\n                                                        return entry;\n                                                    });\n                                                });\n                                            }}\n                                            onDelete={async () => {\n                                                if (db) {\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\n                                                    await db.delete('presetNameStyleStore', key);\n                                                    await tx.done;\n                                                }\n                                                setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\n                                            }}\n                                        >\n                                            {content.preset}\n                                        </PresetOption>;\n                                    })}\n                                </StyledPresetContainer>\n                            </div>}\n                            placement=\"bottomRight\"\n                        >\n                            <div className=\"custom-preset-button\">\n                                <CaretDownOutlined />\n                            </div>\n                        </Popover>\n                    </div>\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrainRef = {\n    changeFrame: (frameValue: number | string) => void,\n};\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n    onPasswordChange: (value: string) => void,\n    onStatChange: (atk: string, def: string, linkRating: string) => void,\n};\nexport const FrameTrain = forwardRef<FrameTrainRef, FrameTrain>(({\n    onSTFrameChange,\n    onPasswordChange,\n    onStatChange,\n}, ref) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                attribute,\n                format,\n                password,\n                star,\n                atk,\n                def,\n                linkRating,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const nextTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            const nextPassword = nextFrame === 'token'\n                ? passwordSentenceMap[format]\n                : password;\n            const nextAtk = willRemoveStat ? '' : (atk === '' ? '0' : atk);\n            const nextDef = willRemoveStat ? '' : (def === '' ? '0' : def);\n            const nextLinkRating = willRemoveStat ? '' : linkRating;\n            const nextStar = nextFrame === 'token'\n                ? 0\n                : star;\n\n            onPasswordChange(nextPassword);\n            if (willBecomeST) {\n                onSTFrameChange(nextTypeAbility);\n            }\n            onStatChange(nextAtk, nextDef, nextLinkRating);\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: nextFrame === 'token'\n                    ? NO_ATTRIBUTE\n                    : willBecomeST\n                        ? `${nextFrame}`.toUpperCase()\n                        : attribute,\n                star: nextStar,\n                typeAbility: nextTypeAbility,\n                password: nextPassword,\n                atk: nextAtk,\n                def: nextDef,\n                linkRating: nextLinkRating,\n            };\n        });\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\n\n    useImperativeHandle(ref, () => ({\n        changeFrame,\n    }));\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n});","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\nimport { Tooltip } from 'antd';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props, tooltip } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n                const children = <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n\n                return tooltip\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\n                    : children;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: var(--cropper-width);\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum, pendulumSize,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain, SolidLabel } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .art-frame {\n        span {\n            padding: 0;\n        }\n    }\n    div.ant-slider {\n        .ant-slider-handle {\n            height: 19px;\n            top: 8px;\n            border-radius: 0;\n            width: 10px;\n        }\n        .ant-slider-step,\n        .ant-slider-track,\n        .ant-slider-rail {\n            height: 10px;\n        }\n    }\n    .card-opacity-slider {\n        flex: 0 1 auto;\n        .ant-slider {\n            padding-top: 8px;\n        }\n    }\n    .background-label {\n        cursor: pointer;\n        &:hover {\n            .background-preview {\n                box-shadow: 0 0 2px 0 #2a2a2a;\n            }\n        }\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        text-align: center;\n        user-select: none;\n        .background-preview-callback-passer {\n            width: 100%;\n            height: 100%;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .layout-picker-panel {\n            margin-top: var(--spacing);\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .background-type-picker {\n            .radio-train-input-group {\n                display: grid;\n            }\n            .ant-radio-button-wrapper {\n                border-left: var(--bw) solid var(--sub-level-1);\n            }\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background,\n            backgroundData,\n            backgroundSource,\n            backgroundType,\n            hasBackground,\n            isPendulum,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <SolidLabel className=\"background-label\">\n                <Checkbox\n                    className=\"art-frame\"\n                    onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                    checked={opacity.boundless}\n                >\n                    &nbsp;{language['input.opacity.boundless.label']}\n                </Checkbox>\n            </SolidLabel>\n        </Tooltip>\n        <Popover\n            visible={backgroundInputVisible}\n            destroyTooltipOnHide={false}\n            trigger={['click']}\n            onVisibleChange={setBackgroundInputVisible}\n            overlayClassName={[\n                'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                backgroundInputVisible ? 'picker-visible' : '',\n                backgroundInputHidden ? 'picker-hidden' : '',\n            ].join(' ')}\n            content={<div className=\"overlay-event-absorber\">\n                <StyledBaseFillPickerContainer\n                    className={[\n                        'custom-style-picker',\n                        noBackground ? 'overlay-no-background-image' : ''\n                    ].join(' ')}\n                >\n                    <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                        <Checkbox\n                            checked={hasBackground}\n                            onChange={e => {\n                                changeHasBackground(e);\n                            }}\n                        >{language['input.background.toggle-label']}</Checkbox>\n                        <br />\n                        <i>{language['input.background.description']}</i>\n                    </h3>\n                    <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                        <BackgroundInputGroup\n                            ref={backgroundInputRef}\n                            receivingCanvas={receivingCanvas}\n                            onSourceLoaded={onSourceLoaded}\n                            onTainted={onTainted}\n                            onCropChange={onCropChange}\n                            backgroundColor={opacity.baseFill}\n                        >\n                            <div className=\"layout-picker-panel\">\n                                <div className=\"layout-picker-subpanel color-section\">\n                                    <h2>{language['input.background-color.label']}</h2>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={opacity.baseFill}\n                                        onChangeComplete={color => {\n                                            setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                        }}\n                                    />\n                                </div>\n                                {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                    <h2>{language['input.background-type.label']}</h2>\n                                    <RadioTrain\n                                        className=\"background-type-picker\"\n                                        onChange={changeBackgroundType}\n                                        optionList={getBackgroundTypeList({\n                                            fit: language['input.background-type.fit.label'],\n                                            full: language['input.background-type.full.label'],\n                                            frame: language['input.background-type.frame.label'],\n                                        })}\n                                        value={backgroundType}\n                                    />\n                                </div>}\n                            </div>\n                        </BackgroundInputGroup>\n                    </div>\n                </StyledBaseFillPickerContainer>\n            </div>}\n            placement=\"bottom\"\n        >\n            <SolidLabel className=\"background-label\">\n                <div\n                    className=\"background-preview\"\n                    style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                >\n                    {hasBackground\n                        ? background || backgroundData\n                            ? <img\n                                className=\"background-image-preview\"\n                                src={backgroundSource === 'online'\n                                    ? background\n                                    : backgroundData}\n                                alt=\"Background\"\n                            />\n                            : null\n                        : <BorderOuterOutlined className=\"no-background-icon\" />}\n                </div>\n                {language['input.background.label']}\n            </SolidLabel>\n        </Popover>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <CombinedSliderContainer key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <SolidLabel className=\"slider-label\">\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </SolidLabel>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { IconButton, RadioTrain } from 'src/component';\nimport { useCard, useSetting, WithLanguage } from 'src/service';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { useMemo } from 'react';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getAttributeList, getExtraAttributeList } from '../const';\nimport { RegionMap } from 'src/model';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\n\nconst AttributeRegionTrain = styled.div`\n    align-self: flex-end;\n    position: relative;\n    min-height: 6px; // Alignment\n    .attribute-region-picker {\n        position: absolute;\n        right: 0;\n        top: calc(var(--spacing-xxs) * -1);\n        z-index: 1;\n    }\n    &.container-block .attribute-region-picker {\n        position: relative;\n        right: 0;\n        top: 0;\n    }\n    .ant-radio-button-wrapper {\n        font-size: var(--fs-sm);\n        height: unset;\n        line-height: 1.25;\n    }\n`;\n\nexport type AttributeInputGroup = {\n} & WithLanguage;\nexport const AttributeInputGroup = ({\n    language,\n}: AttributeInputGroup) => {\n    const {\n        format,\n        region,\n        attribute,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            region,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n    }) => ({\n        format,\n        region,\n        isLink,\n        attribute,\n        getUpdater,\n    })));\n    const { setting, updateSetting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption, showExtraAttribute } = setting;\n\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeRegion = useMemo(() => getUpdater('region'), [getUpdater]);\n\n    const attributeList = useMemo(() => getAttributeList(region, language, showCreativeOption), [region, language, showCreativeOption]);\n    const extraAttributeList = useMemo(() => getExtraAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n\n    return <>\n        <RadioTrain\n            className=\"fill-input-train span-input-train attribute-input\"\n            value={attribute}\n            onChange={changeAttribute}\n            optionList={attributeList}\n            suffix={!showExtraAttribute && showExtraDecorativeOption\n                ? <IconButton\n                    onClick={() => updateSetting({ showExtraAttribute: true })}\n                    Icon={DoubleRightOutlined}\n                    tooltipProps={{ overlay: language['button.more.label'] }}\n                />\n                : null}\n        >\n            <span>{language['input.attribute.label']}</span>\n        </RadioTrain>\n        {showExtraDecorativeOption && <AttributeRegionTrain\n            className={mergeClass('attribute-region-container', showExtraAttribute ? 'container-block' : 'container-float')}\n        >\n            <RadioTrain\n                className=\"attribute-region-picker\"\n                optionList={Object\n                    .values(RegionMap)\n                    .map(({ key }) => ({\n                        value: key,\n                        label: key.toUpperCase(),\n                    }))\n                }\n                value={region}\n                onChange={changeRegion}\n            />\n        </AttributeRegionTrain>}\n        {(showExtraDecorativeOption && showExtraAttribute) && <RadioTrain\n            className=\"fill-input-train extra-attribute-input\"\n            value={attribute}\n            onChange={changeAttribute}\n            optionList={extraAttributeList}\n            suffix={showExtraDecorativeOption && showExtraAttribute\n                ? <IconButton\n                    onClick={() => updateSetting({ showExtraAttribute: false })}\n                    Icon={DoubleLeftOutlined}\n                    tooltipProps={{ overlay: language['button.less.label'] }}\n                />\n                : null}\n        >\n            &nbsp;\n        </RadioTrain>}\n    </>;\n};","import { Button, Checkbox, Modal } from 'antd';\nimport { forwardRef, useImperativeHandle, useMemo, useState } from 'react';\nimport {\n    IconTypeAttributeList,\n    IconTypeInfo,\n    IconTypeList,\n    IconTypeStList,\n    MAX_STAR_LENGTH,\n    NORMAL_STAR_LENGTH,\n    TotalIconTypeMap,\n} from 'src/model';\nimport { useCard, WithLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CloseCircleOutlined, DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { StyledDropdown } from 'src/component';\nimport { mergeClass, padRight } from 'src/util';\n\nconst IconDropdownOverlay = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: var(--br-lg);\n    cursor: not-allowed;\n`;\nexport const StyledIconDropdown = styled(StyledDropdown.Container)`\n    .anticon-close-circle {\n        font-size: var(--fs-lg);\n    }\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nexport const IconDropdownContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: var(--spacing-px);\n    background-color: var(--sub-level-1);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    overflow: hidden;\n    position: relative;\n    .container-group {\n        box-shadow: none;\n        border: none;\n        border-radius: 0;\n    }\n    &.selector-disabled {\n        filter: opacity(0.65) grayscale(0.85);\n    }\n`;\nexport type StarTypeSelector = {\n    disabled?: boolean,\n    className?: string,\n    activeCardIcon: string,\n    onChange: (value: string) => void,\n    onRemove?: () => void,\n    showMixableOnly?: boolean,\n    showRemove?: boolean,\n} & WithLanguage;\nexport const StarTypeSelector = ({\n    disabled = false,\n    className,\n    language,\n    activeCardIcon,\n    showMixableOnly = false,\n    showRemove = false,\n    onChange,\n    onRemove,\n}: StarTypeSelector) => {\n    const filterFunction = showMixableOnly ? (entry: IconTypeInfo) => entry.isMixable : () => true;\n\n    return <IconDropdownContainer\n        className={mergeClass('icon-dropdown-container overlay-event-absorber', disabled ? 'selector-disabled' : '', className)}\n    >\n        {disabled && <IconDropdownOverlay className=\"container-disable-overlay\" />}\n        <StyledIconDropdown className=\"container-group container-star\">\n            {showRemove && <StyledDropdown.Option\n                onClick={() => onRemove?.()}\n            >\n                <CloseCircleOutlined />&nbsp;{language['input.icon-type.remove.label']}\n            </StyledDropdown.Option>}\n            {IconTypeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n        <StyledIconDropdown className=\"container-group container-attribute\">\n            {IconTypeAttributeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n        <StyledIconDropdown className=\"container-group container-icon\">\n            {IconTypeStList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n    </IconDropdownContainer>;\n};\n\nconst StarListSelectPanel = styled.div`\n    margin-bottom: var(--spacing);\n`;\nconst StarListControlPanel = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: var(--spacing);\n`;\nconst StarListContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(13, 2rem);\n    gap: var(--spacing-xs);\n    align-items: center;\n    text-align: center;\n    margin-bottom: var(--spacing-sm);\n    line-height: 0;\n    .star-value {\n        display: inline-flex;\n        height: 2rem;\n        width: 2rem;;\n        align-items: center;\n        justify-content: center;\n        background-color: var(--main-level-1);\n        border-radius: var(--br-lg);\n        margin-top: var(--spacing-xs);\n        cursor: pointer;\n        border: var(--bw) solid transparent;\n        .anticon-close-circle {\n            font-size: var(--fs-lg)\n        }\n    }\n    .icon-image {\n        max-width: 1.5rem; // Alignment\n        max-height: 1.5rem;; // Alignment\n    }\n    .entry-active {\n        .star-value {\n            border-color: var(--main-active);\n        }\n    }\n    .entry-disable {\n        filter: opacity(0.65) grayscale(0.85);\n        * {\n            cursor: not-allowed;\n        }\n    }\n    :not(.entry-disable) .star-value:hover {\n        border-color: var(--sub-active);\n    }\n`;\n\nexport type StarPickerRef = {\n    changeStatus: (status: 'open' | 'close' | 'toggle') => void,\n};\nexport type StarPicker = {\n\n} & WithLanguage;\nexport const StarPicker = forwardRef<StarPickerRef, StarPicker>(({\n    language,\n}, ref) => {\n    const {\n        starList,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            starList,\n        },\n        setCard,\n    }) => ({\n        starList,\n        setCard,\n    })));\n    const [visible, setVisible] = useState(false);\n    const changeStarList = useMemo(() => (transformer: string[] | ((prev: string[]) => string[])) => {\n        setCard(card => {\n            const nextStarList = Array.isArray(transformer) ? transformer : transformer(card.starList);\n\n            return {\n                ...card,\n                starList: nextStarList,\n            };\n        });\n    }, [setCard]);\n    const [{\n        slotList,\n        use12,\n    }, setSlot] = useState(() => {\n        const slotList: { slot: string, index: number, disabled: boolean }[] = [];\n        const use12 = starList.length <= NORMAL_STAR_LENGTH ? true : false;\n        for (let cnt = 0; cnt < MAX_STAR_LENGTH; cnt++) {\n            slotList.push({ slot: `slot-${cnt}`, index: cnt, disabled: false });\n        }\n        if (use12) slotList[MAX_STAR_LENGTH - 1].disabled = true;\n\n        return {\n            slotList,\n            use12,\n        };\n    });\n    const [activeInformation, setActiveInformation] = useState({\n        activeList: [] as number[],\n    });\n\n    useImperativeHandle(ref, () => ({\n        changeStatus: status => {\n            if (status === 'open') {\n                setVisible(true);\n            } else if (status === 'close') {\n                setVisible(false);\n            } else if (status === 'toggle') {\n                setVisible(cur => !cur);\n            }\n            setActiveInformation({ activeList: [] });\n        }\n    }));\n\n    const {\n        activeList\n    } = activeInformation;\n    return <Modal\n        className=\"global-overlay global-no-close\"\n        visible={visible}\n        width={506}\n        onCancel={() => setVisible(false)}\n        cancelText={language['manager.template.button.cancel.label']}\n        okButtonProps={{\n            style: { display: 'none' },\n        }}\n    >\n        <StarListSelectPanel className=\"star-list-control-panel\">\n            <Checkbox\n                checked={use12}\n                onChange={e => {\n                    if (e.target.checked) {\n                        setSlot(({ slotList }) => {\n                            const nextSlotList: typeof slotList = [\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\n                                { disabled: true, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\n                            ];\n\n                            return { slotList: nextSlotList, use12: true };\n                        });\n                        changeStarList(currentStarList => currentStarList.slice(0, NORMAL_STAR_LENGTH));\n                        setActiveInformation(({ activeList }) => ({ activeList: activeList.filter(entry => entry !== MAX_STAR_LENGTH - 1) }));\n                    } else {\n                        setSlot(({ slotList }) => {\n                            const nextSlotList: typeof slotList = [\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\n                                { disabled: false, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\n                            ];\n\n                            return { slotList: nextSlotList, use12: false };\n                        });\n                        changeStarList(currentStarList => padRight(currentStarList, MAX_STAR_LENGTH));\n                    }\n                }}\n            >{language['input.icon-type.slot.use-12.label']}</Checkbox>\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation(cur => {\n                    const nextActiveList = slotList\n                        .filter(entry => !cur.activeList.includes(entry.index) && !entry.disabled)\n                        .map(entry => entry.index);\n\n                    return { activeList: nextActiveList };\n                });\n            }}>\n                {language['input.icon-type.slot.revert.label']}\n            </Button>\n            &nbsp;\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation({ activeList: slotList.filter(entry => !entry.disabled).map(entry => entry.index) });\n            }}>\n                {language['input.icon-type.slot.select-all.label']}\n            </Button>\n            &nbsp;\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation({ activeList: [] });\n            }}>\n                {language['input.icon-type.slot.deselect-all.label']}\n            </Button>\n        </StarListSelectPanel>\n        <StarListContainer className=\"star-list-container\">\n            {slotList.map(({ slot, index, disabled }) => {\n                const slotValue = starList[index];\n                const starInfo = TotalIconTypeMap[slotValue ?? ''];\n                const active = activeList.includes(index);\n\n                return <div key={slot}\n                    className={mergeClass(\n                        'star-list-entry',\n                        active ? 'entry-active' : '',\n                        disabled ? 'entry-disable' : '',\n                    )}\n                >\n                    <div className=\"checkbox-container\">\n                        <Checkbox\n                            disabled={disabled}\n                            checked={active}\n                            onChange={e => {\n                                if (disabled) return;\n                                const willChecked = e.target.checked;\n                                if (willChecked) {\n                                    setActiveInformation(cur => {\n                                        const nextActiveList = [...cur.activeList, index];\n\n                                        return { activeList: nextActiveList };\n                                    });\n                                } else {\n                                    setActiveInformation(cur => {\n                                        const nextActiveList = cur.activeList.filter(entry => entry !== index);\n\n                                        return { activeList: nextActiveList };\n                                    });\n                                }\n                            }}\n                        />\n                    </div>\n                    <div\n                        className=\"star-value\"\n                        onClick={() => {\n                            if (disabled) return;\n                            setActiveInformation({ activeList: [index] });\n                        }}\n                    >\n                        {!starInfo ? <CloseCircleOutlined /> : starInfo.icon}\n                    </div>\n                </div>;\n            })}\n        </StarListContainer>\n        <StarListControlPanel>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    changeStarList(currentStarList => {\n                        return [...currentStarList.slice(1, currentStarList.length), ''];\n                    });\n                    setActiveInformation({ activeList: [] });\n                }}\n            >\n                <DoubleLeftOutlined />&nbsp;{language['input.icon-type.slot.shift-left.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    changeStarList(currentStarList => {\n                        return ['', ...currentStarList.slice(0, currentStarList.length - 1)];\n                    });\n                    setActiveInformation({ activeList: [] });\n                }}\n            >\n                {language['input.icon-type.slot.shift-right.label']}&nbsp;<DoubleRightOutlined />\n            </Button>\n        </StarListControlPanel>\n        <StarTypeSelector\n            disabled={activeList.length === 0}\n            language={language}\n            activeCardIcon={activeList.length > 1 ? '' : starList[activeList[0]]}\n            showMixableOnly={true}\n            showRemove={true}\n            onRemove={() => {\n                changeStarList(currentStarList => {\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\n                        if (activeList.includes(index)) return '';\n                        return currentStarList[index];\n                    });\n                });\n            }}\n            onChange={value => {\n                changeStarList(currentStarList => {\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\n                        if (activeList.includes(index)) return value;\n                        return currentStarList[index];\n                    });\n                });\n            }}\n        />\n    </Modal>;\n});","import { Button, Input, Popover } from 'antd';\nimport { PopoverButton, RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage, useSetting, WithLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { getCardIconFromFrame } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeAttributeList, IconTypeList, IconTypeStList, TotalIconTypeMap } from 'src/model';\nimport { StarPicker, StarPickerRef, StarTypeSelector, StyledIconDropdown } from '../star-picker';\n\nconst TypeWithIconContainer = styled.div`\n    .icon-image {\n        width: 26px;\n        height: 26px;\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 7rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\nconst PopoverButtonInCardIconInput = styled(PopoverButton)`\n    margin-left: var(--spacing-sm);\n`;\nconst CustomStarContainer = styled.div`\n    display: flex;\n    align-items: center;\n    .custom-star-preview {\n        display: inline-flex;\n        line-height: 0;\n        align-items: center;\n        background-color: var(--main-level-1);\n        padding: var(--spacing-xs);\n        border-radius: var(--br);\n        .star-preview-entry {\n            margin-right: var(--spacing-xs);\n            .icon-image {\n                max-width: 22px; // Alignment\n                max-height: 22px; // Alignment\n            }\n            .anticon-close-circle {\n                font-size: var(--fs-xl);\n            }\n            &:last-child {\n                margin-right: 0;\n            }\n        }\n    }\n    .custom-star-content {\n        display: inline-flex;\n        flex-wrap: wrap;\n        align-items: center;\n        gap: var(--spacing-sm);\n        margin-right: var(--spacing-sm);\n    }\n`;\n\ntype CardIconAlignmentPicker = {\n    value: string,\n    onChange: (value: string) => void,\n} & WithLanguage;\nconst CardIconAlignmentPicker = ({\n    language,\n    value,\n    onChange,\n}: CardIconAlignmentPicker) => {\n    return <RadioTrain\n        value={value}\n        onChange={onChange}\n        optionList={[\n            {\n                value: 'auto',\n                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                label: <CloseCircleOutlined />,\n            },\n            {\n                value: 'left',\n                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                label: <AlignLeftOutlined />,\n            },\n            {\n                value: 'center',\n                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                label: <AlignCenterOutlined />,\n            },\n            {\n                value: 'right',\n                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                label: <AlignRightOutlined />,\n            },\n        ]}\n    />;\n};\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starList,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starList,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starList,\n        starAlignment,\n        getUpdater,\n    })));\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n    const starPickerRef = useRef<StarPickerRef>(null);\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const autoIconType = getCardIconFromFrame(frame);\n    const iconTypeData = cardIcon === 'auto'\n        ? TotalIconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\n        : TotalIconTypeMap[cardIcon];\n    const {\n        labelKey,\n        icon,\n        showIcon,\n        value: iconType,\n    } = iconTypeData ?? TotalIconTypeMap['level'];\n    const iconDropdownText = typeof labelKey === 'string'\n        ? language[labelKey]\n        : labelKey({ language });\n    const IconDropdownLabel = showCreativeOption\n        ? <TypeWithIconContainer>{showIcon ? icon : null} {iconDropdownText} <CaretDownOutlined /></TypeWithIconContainer>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay\"\n        content={<StarTypeSelector\n            language={language}\n            activeCardIcon={cardIcon}\n            onChange={value => {\n                changeCardIcon(value);\n                if (value === 'custom') starPickerRef.current?.changeStatus('open');\n            }}\n        />}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return <>\n        <StarPicker ref={starPickerRef} language={language} />\n        {cardIcon === 'auto' && autoIconType === 'none'\n            ? showCreativeOption\n                ? <>\n                    <RadioTrain\n                        className=\"fill-input-train\"\n                        value={cardIcon}\n                        onChange={changeCardIcon}\n                        optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\n                            return {\n                                label: icon ?? <CloseCircleOutlined />,\n                                value,\n                                tooltipProps: {\n                                    title: language[fullLabelKey],\n                                },\n                            };\n                        })}\n                    >\n                        {DropdownChildren}\n                    </RadioTrain>\n                    <Popover\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledIconDropdown className=\"container-group container-attribute\">\n                                {IconTypeAttributeList.map(({ fullLabelKey, value, icon }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={value === cardIcon ? 'menu-active' : ''}\n                                        onClick={() => changeCardIcon(value)}\n                                    >\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledIconDropdown>\n                        </div>}\n                    >\n                        <PopoverButtonInCardIconInput\n                            $softMode={reduceColorMotion}\n                            className={showCreativeOption ? '' : 'disabled'}\n                        >\n                            {language['input.attribute.label']}\n                        </PopoverButtonInCardIconInput>\n                    </Popover>\n                    <Popover\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledIconDropdown className=\"container-group container-icon\">\n                                {IconTypeStList.map(({ fullLabelKey, value, icon }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={value === cardIcon ? 'menu-active' : ''}\n                                        onClick={() => changeCardIcon(value)}\n                                    >\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledIconDropdown>\n                        </div>}\n                    >\n                        <PopoverButtonInCardIconInput\n                            $softMode={reduceColorMotion}\n                            className={showCreativeOption ? '' : 'disabled'}\n                        >\n                            {language['input.attribute.spell']}&nbsp;/&nbsp;{language['input.attribute.trap']}\n                        </PopoverButtonInCardIconInput>\n                    </Popover>\n                    <PopoverButtonInCardIconInput\n                        $softMode={reduceColorMotion}\n                        className={showCreativeOption ? '' : 'disabled'}\n                        onClick={() => {\n                            changeCardIcon('custom');\n                            starPickerRef.current?.changeStatus('open');\n                        }}\n                    >\n                        {language['input.icon-type.custom.label']}\n                    </PopoverButtonInCardIconInput>\n                </>\n                : null\n            : iconType === 'st'\n                ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                    {DropdownChildren}\n                </RadioTrain>\n                : iconType === 'custom'\n                    ? <CustomStarContainer className=\"custom-star-picker\">\n                        <label className=\"standalone-addon ant-input-group-addon\">{DropdownChildren}</label>\n                        <div className=\"custom-star-content\">\n                            {starList.length > 0\n                                ? <div className=\"custom-star-preview\">\n                                    {starList.map((entry, index) => {\n                                        const iconEntry = TotalIconTypeMap[entry];\n\n                                        return <span key={`${entry}-${index}`} className=\"star-preview-entry\">\n                                            {iconEntry ? iconEntry.icon : <CloseCircleOutlined />}\n                                        </span>;\n                                    })}\n                                </div>\n                                : null}\n                            <Button\n                                size=\"small\" \n                                onClick={() => {\n                                    changeCardIcon('custom');\n                                    starPickerRef.current?.changeStatus('open');\n                                }}\n                            >{language['generic.edit.label']}</Button>\n                        </div>\n                    </CustomStarContainer>\n                    : <StyledCheckboxStarTrain\n                        className=\"checkbox-star-train\"\n                        value={star}\n                        onChange={changeStar}\n                        optionList={StarButtonList}\n                        strict={true}\n                        suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                            <Input\n                                className=\"custom-star-input\"\n                                value={typeof star === 'number' ? '' : star}\n                                allowClear\n                                onChange={changeStar}\n                                placeholder={language['input.icon-type.custom.placeholder']}\n                            />\n                            <CardIconAlignmentPicker\n                                language={language}\n                                value={starAlignment}\n                                onChange={changeStarAlignment}\n                            />\n                        </div>}\n                    >\n                        {DropdownChildren}\n                    </StyledCheckboxStarTrain>}\n    </>;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5', 'i']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    holdingShift: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': {\n            if (holdingShift) {\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 4 : 5;\n            } else {\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 2 : 3;\n            }\n            break;\n        }\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n        case 'i': wrappedText = `<i>${selectedText}</i>`; cursorOffset = 7; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`card-textarea ${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        autoSize={{\n            minRows: 9,\n        }}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    position: relative;\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 480px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .radio-train.foil-radio {\n        display: grid;\n        grid-template-columns: 1fr;\n        gap: var(--spacing-px); // Alignment\n        .ant-radio-button-wrapper {\n            font-size: var(--fs);\n        }\n        .standalone-addon {\n            border: none;\n            padding-bottom: var(--spacing-xxs);\n        }\n        .radio-train-input-group {\n            gap: 0;\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .inline-input {\n        margin-bottom: var(--spacing-xs);\n    }\n    .checkbox-disabled {\n        .ant-checkbox {\n            display: none;\n        }\n        visibility: hidden; // Avoid collapsing\n    }\n    .frame-part-name {\n        position: absolute;\n        padding: 0 var(--spacing);\n        top: calc(-1 * var(--spacing-sm));\n        right: calc(-1 * var(--spacing-sm));\n        border-radius: 0 0 0 var(--br-lg);\n        background-color: var(--main-level-4);\n        border-left: var(--bw) solid var(--sub-level-4);\n        border-bottom: var(--bw) solid var(--sub-level-4);\n        &:empty {\n            display: none;\n        }\n    }\n    .horizontal-sketch-picker {\n        margin-top: var(--spacing);\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { checkDiplayLinkRating, randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Checkbox, Dropdown, Menu, Tooltip } from 'antd';\nimport { copyrightMap, FlagIndexMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\nconst StyledLinkRatingInputContainer = styled(StyledInputLabelWithButton)`\n    .auto-link-rating-input {\n        margin-left: var(--spacing-sm);\n    }\n    .auto-link-rating {\n        display: inline-block;\n        width: 1.5rem;\n        height: 1.5rem;\n        line-height: 1;\n        text-align: center;\n        padding: var(--spacing-xs);\n        background: var(--main-level-4);\n        border-radius: var(--br-lg);\n        font-family: 'RoGSanSrfStd-Bd';\n        box-shadow: var(--bs-button);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string, linkRating?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isLink,\n        linkRating,\n        autoLinkRating,\n        showDefAndLink,\n        linkRatingDisplayMode,\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format, flag, isLink, linkRating, linkMap },\n        getUpdater,\n    }) => ({\n        linkRating,\n        autoLinkRating: linkMap.length,\n        isLink,\n        sticker,\n        format,\n        showDefAndLink: flag[FlagIndexMap['showDefAndLink']] === 1,\n        linkRatingDisplayMode: flag[FlagIndexMap['linkRating']],\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n    const linkRatingInputRef = useRef<CardTextInputRef>(null);\n\n    const showAtkInput = true;\n    const showLinkInput = checkDiplayLinkRating(linkRatingDisplayMode, isLink);\n    const showDefInput = showLinkInput\n        ? showDefAndLink\n        : true;\n    const showPadding = [showAtkInput, showDefInput, showLinkInput].filter(entry => entry === true).length % 2 === 1;\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeLinkRating = useMemo(() => getUpdater('linkRating', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def, linkRating }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n            if (typeof linkRating === 'string') linkRatingInputRef.current?.setValue(linkRating);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            {showAtkInput && <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />}\n            {showDefInput && <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />}\n            {showPadding && <div />}\n            {showLinkInput && <CardTextInput ref={linkRatingInputRef}\n                id=\"link\"\n                addonBefore={<StyledLinkRatingInputContainer className=\"input-label-with-button\">\n                    <div className=\"input-label\">{language['input.link.label']}</div>\n                    <Tooltip title={language['input.link.auto.tooltip']}>\n                        <div className=\"auto-link-rating-input\">\n                            {(typeof linkRating === 'string' && linkRating.length > 0)\n                                ? <Checkbox\n                                    onChange={e => {\n                                        if (e.target.checked) {\n                                            changeLinkRating('');\n                                            linkRatingInputRef.current.setValue('');\n                                        }\n                                    }}\n                                />\n                                : <div className=\"auto-link-rating\">\n                                    {isLink ? autoLinkRating : '-'}\n                                </div>}\n                        </div>\n                    </Tooltip>\n                </StyledLinkRatingInputContainer>}\n                defaultValue={`${useCard.getState().card.linkRating}`}\n                onChange={changeLinkRating}\n                onTakePicker={onTakePicker}\n                placeholder={language['input.link.custom.placeholder']}\n            />}\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                        <IconButton\n                            onClick={() => {}}\n                            Icon={UnorderedListOutlined}\n                        />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\nimport {\n    ImageCropper,\n    ImageCropperRef,\n    LINK_MARKER_PICKER_WIDTH,\n    LinkMarkerPicker,\n    RadioTrain,\n    StyledDropdown,\n    StyledDropdownLabel,\n} from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\nimport styled from 'styled-components';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { notification, Popover } from 'antd';\nimport { mergeClass } from 'src/util';\n\nconst LinkPickerContainer = styled.div<{ $hover: boolean }>`\n    position: relative;\n    ${({ $hover }) => $hover\n        ? `\n            .link-marker-picker {\n                position: absolute;\n                top: 0;\n                left: 0;\n            }\n        `\n        : ''}\n`;\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    text-align: left;\n    .ant-input-group-addon {\n        flex: 0 0 auto;\n        text-align: left;\n    }\n    .radio-train-input-group {\n        flex: 1;\n    }\n    .ant-radio-button-wrapper {\n        padding: 0 var(--spacing-xs);\n    }\n`;\nconst FinishLabel = styled(StyledDropdown.Option)`\n    display: grid;\n    grid-template-columns: 30px 1fr;\n    column-gap: var(--spacing-xs);\n    .tag {\n        background: var(--sub-level-2);\n        color: var(--color-contrast);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    &.default {\n        .tag {\n            background: var(--sub-level-4);\n        }\n    }\n`;\n\ntype OtherFinishPicker = {\n    finishValueList: [art: string, ...OtherFinish],\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\n    language: LanguageDataDictionary,\n    showCreativeOption: boolean,\n};\nconst OtherFinishPicker = ({\n    finishValueList,\n    changeFinish,\n    language,\n    showCreativeOption,\n}: OtherFinishPicker) => {\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\n    /** Be careful, we use added order here, so latest finish target is highest index. */\n    const valueMap = {\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[1],\n        [OtherFinishTypeMap['background'].key]: finishValueList[4],\n        [OtherFinishTypeMap['icon'].key]: finishValueList[2],\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[3],\n        [OtherFinishTypeMap['art'].key]: finishValueList[0],\n    };\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\n\n    const IconDropdownLabel = showCreativeOption\n        ? <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined />\n        </>\n        : <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]}\n        </>;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledDropdown.Container>\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\n                {finishList.map(({ label, value }) => {\n                    return <FinishLabel key={value}\n                        className={mergeClass(\n                            valueMap[value] === 'normal' ? 'default' : '',\n                            selectedType === value ? 'menu-active' : '',\n                        )}\n                        onClick={() => {\n                            setSelectedType(value);\n                        }}\n                    >\n                        <div className=\"value\">\n                            <div className=\"tag\">{valueMap[value] === 'normal' || valueMap[value] === '' ? 'Auto' : valueMap[value]}</div>\n                        </div>\n                        <div className=\"label\">{label}</div>\n                    </FinishLabel>;\n                })}\n            </StyledDropdown.Container>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n\n    return <StyledImageRadioTrain\n        className=\"art-finish-checkbox fill-input-train\"\n        value={valueMap[selectedType]}\n        onChange={value => {\n            const nextValueMap = { ...valueMap };\n            nextValueMap[selectedType] = `${value}`;\n\n            changeFinish(nextValueMap);\n        }}\n        optionList={ArtFinishButtonList}\n    >\n        {IconDropdown}\n    </StyledImageRadioTrain>;\n};\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    showCreativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    showCreativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish, otherFinish,\n            linkMap,\n            isPendulum, pendulumSize,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <OtherFinishPicker\n                finishValueList={[artFinish, ...otherFinish]}\n                changeFinish={finishMap => {\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\n                    changeOtherFinish([\n                        finishMap[OtherFinishTypeMap['attribute'].key],\n                        finishMap[OtherFinishTypeMap['icon'].key],\n                        finishMap[OtherFinishTypeMap['sticker'].key],\n                        finishMap[OtherFinishTypeMap['background'].key],\n                    ]);\n                }}\n                language={language}\n                showCreativeOption={showCreativeOption}\n            />\n            : null\n        }\n    >\n        <LinkPickerContainer\n            className=\"link-picker-container\"\n            style={{ minWidth: LINK_MARKER_PICKER_WIDTH }}\n            $hover={showExtraDecorativeOption}\n        >\n            <LinkMarkerPicker key={`link-${JSON.stringify(linkMap)}`}\n                active={isLink === true}\n                defaultValue={linkMap}\n                onChange={changeLinkMap}\n                onStatusChange={changeLinkStatus}\n            />\n        </LinkPickerContainer>\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { GlobalMemory, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { CanvasConst } from 'src/model';\nimport { resolveFrameStyle } from 'src/util';\nimport { LayoutPresetOption } from 'src/component';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\nconst FramePresetPanelContainer = styled.div`\n    margin-top: var(--spacing-sm);\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\n    row-gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    color: var(--color);\n    .preset-panel-top {\n        grid-column: -1 / 1;\n    }\n    .preset-warning {\n        font-size: var(--fs-sm);\n    }\n    .preview-container {\n        line-height: 0;\n        padding: var(--spacing-xxs) 0;\n        border-radius: var(--br);\n        cursor: pointer;\n        border: var(--bw) solid transparent;\n        .card-layout-container {\n            pointer-events: none;\n        }\n        &:hover {\n            border-color: var(--main-active);\n        }\n    }\n    .open-preset-manager {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n`;\n\nexport type FramePresetPanel = WithLanguage & {\n    isPendulum: boolean,\n    onOverwrite?: (key: string) => Promise<void>,\n    onActive: (content: GlobalMemory['layoutPresetList'][0]['content']) => void,\n};\nexport const FramePresetPanel = ({\n    isPendulum,\n    onOverwrite,\n    onActive,\n    language,\n}: FramePresetPanel) => {\n    const { db } = useCarderDb();\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const setVisible = usePresetManager(state => state.setVisible);\n\n    if (layoutPresetList.length === 0) return <></>;\n    return <FramePresetPanelContainer className=\"frame-preset-panel\">\n        {layoutPresetList.length > 0 && <div className=\"preset-panel-top\">\n            <div className=\"preset-warning\">\n                {language['preset.warning.label']}\n                &nbsp;\n                <span className=\"open-preset-manager\" onClick={() => setVisible(true)}>{language['preset.manager.check.label']}</span>\n            </div>\n        </div>}\n        {layoutPresetList.map(({ content, key }) => {\n            const {\n                dyeList,\n                foil,\n                frame,\n                pendulumFrame,\n                leftFrame,\n                pendulumRightFrame,\n                rightFrame,\n                effectStyle,\n                pendulumStyle,\n            } = content;\n            const layoutState = {\n                frame,\n                topLeftFrame: leftFrame,\n                topRightFrame: rightFrame,\n                bottomLeftFrame: pendulumFrame,\n                bottomRightFrame: pendulumRightFrame,\n                effectBackground: effectStyle?.background,\n                pendulumEffectBackground: pendulumStyle?.background,\n            };\n\n            return <LayoutPresetOption\n                width={Math.round(40 * width / height)}\n                height={40}\n                isPendulum={isPendulum}\n                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                tabIndex={-1}\n                dyeList={dyeList}\n                foil={foil}\n                language={language}\n                onActive={() => onActive(content)}\n                onDelete={async () => {\n                    if (db) {\n                        const tx = db.transaction('presetLayoutStore', 'readwrite');\n                        await db.delete('presetLayoutStore', key);\n                        await tx.done;\n                    }\n                    setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\n                }}\n                onOverwrite={onOverwrite ? (() => onOverwrite?.(key)) : undefined}\n            />;\n        })}\n    </FramePresetPanelContainer>;\n};","import { Checkbox } from 'antd';\nimport { RadioTrain } from 'src/component';\nimport {\n    CardFlag,\n    FlagInfoList,\n    LINK_RATING_ALWAYS_AUTO,\n    LINK_RATING_ALWAYS_HIDE,\n    LINK_RATING_ALWAYS_SHOW,\n} from 'src/model';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst FrameBehaviorSettingPanelContainer = styled.div`\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border-top: var(--bw) solid var(--sub-level-3);\n    > * + * {\n        margin-top: var(--spacing-sm);\n    }\n    .link-rating-behavior-panel {\n        .radio-train-input-group {\n            flex: 0 0 auto;\n            margin-right: var(--spacing-sm);\n        }\n        label {\n            flex: 1 1 auto;\n            text-align: left;\n            font-size: var(--fs);\n            color: var(--color);\n        }\n    }\n`;\n\nexport type FrameBehaviorSettingPanel = {};\nexport const FrameBehaviorSettingPanel = () => {\n    const language = useLanguage();\n    const {\n        flag,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        flag,\n        setCard,\n        getUpdater,\n    })));\n\n    const updateFlag = (value: number, index: number) => setCard(currentCard => {\n        const nextFlagList: CardFlag = [...currentCard.flag];\n        nextFlagList[index] = value;\n\n        return {\n            ...currentCard,\n            flag: nextFlagList,\n        };\n    });\n\n    return <FrameBehaviorSettingPanelContainer>\n        {flag.map((entry, index) => {\n            const { labelKey, type } = FlagInfoList[index] ?? {};\n\n            if (type === 'checkbox') {\n                return <div key={labelKey}>\n                    <Checkbox\n                        checked={entry !== 0}\n                        onChange={e => {\n                            const value = e.target.checked ? 1 : 0;\n\n                            updateFlag(value, index);\n                        }}\n                    >{language[labelKey]}</Checkbox>\n                </div>;\n            }\n            if (type === 'link-rating-behavior') {\n                return <RadioTrain key={labelKey}\n                    className=\"link-rating-behavior-panel\"\n                    onChange={(value) => updateFlag(Number(value), index)}\n                    optionList={[\n                        { label: language['input.flag.link-rating-behavior.auto'], value: LINK_RATING_ALWAYS_AUTO },\n                        { label: language['input.flag.link-rating-behavior.show'], value: LINK_RATING_ALWAYS_SHOW },\n                        { label: language['input.flag.link-rating-behavior.hide'], value: LINK_RATING_ALWAYS_HIDE },\n                    ]}\n                    value={entry}\n                    suffix={<label>\n                        {language[labelKey]}\n                    </label>}\n                />;\n            }\n            return null;\n        })}\n    </FrameBehaviorSettingPanelContainer>;\n};","import { getNavigationProps, mergeClass, resolveFrameStyle } from 'src/util';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { FramePreset, useCard, useCarderDb, useGlobal, useLanguage } from 'src/service';\nimport { getFoilButtonList, getFrameButtonList } from '../const';\nimport { Button, Checkbox } from 'antd';\nimport { CardLayoutPreview, FrameInfoBlock, HorizontalSketchPicker, RadioTrain } from 'src/component';\nimport styled from 'styled-components';\nimport { CanvasConst, DefaultFrameInfo, DyeIndexMap, FrameDyeList, FrameInfoMap, FramePositionMap, getDefaultDyeList } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\nimport { FramePresetPanel } from './frame-preset-panel';\nimport { v4 as uuid } from 'uuid';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\nconst FrameLayoutContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    column-gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    ${StyledPendulumFrameContainer} {\n        border: none;\n        box-shadow: none;\n        padding: 0;\n    }\n    .visual-preview-container {\n        color: var(--color-heavy);\n        width: 110px; // Alignment\n        text-align: center;\n        label {\n            display: block;\n            padding-bottom: var(--spacing-xxs);\n        }\n        .frame-info-block {\n\t\t\theight: 30px; // Alignment\n\t\t\tline-height: 28px; // Alignment with border 1px\n            border: var(--bw) solid var(--sub-level-1);\n            background-color: var(--main-level-1);\n            margin-bottom: var(--spacing-xs);\n            cursor: pointer;\n            .frame-info-block-label {\n                padding: 0 var(--spacing-xs);\n            }\n            &.active {\n                border: var(--bw) dashed var(--main-level-2);\n            }\n            &:hover {\n                border: var(--bw) solid var(--main-level-2);\n            }\n        }\n    }\n    .frame-action {\n        .ant-btn {\n            width: 100%;\n            & + .ant-btn {\n                margin-top: var(--spacing-xs);\n            }\n        }\n    }\n    .frame-preset-panel {\n        grid-column: -1 / 1;\n        padding-top: var(--spacing-sm);\n        border-top: var(--bw) solid var(--sub-level-3);\n    }\n`;\n\ntype FramelayoutSettingPanelRef = {\n    focus: () => void,\n};\nexport type FramelayoutSettingPanel = {\n    isPendulum: boolean,\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onFrameChange: (frame: string) => void,\n    onCancel: () => void,\n};\nexport const FrameLayoutSettingPanel = forwardRef<FramelayoutSettingPanelRef, FramelayoutSettingPanel>(({\n    frameList,\n    onFrameChange,\n    onCancel,\n}, ref) => {\n    const { db } = useCarderDb();\n    const language = useLanguage();\n    const {\n        isPendulum,\n        foil,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        dyeList,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            foil,\n            frame,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            dyeList,\n            effectStyle,\n            pendulumStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        foil,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        dyeList,\n        setCard,\n        getUpdater,\n    })));\n    const [, setLayoutPresetList] = useGlobal('layoutPresetList');\n    const recentCustomPendulumFrame = useRef({\n        topLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        topRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        effectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        pendulumEffectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n    });\n    const [focus, setFocus] = useState(0);\n    const [activeLayout, setActiveLayout] = useState('frame');\n    const frameLayoutMainId = 'frame-layout-main';\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    useEffect(() => {\n        /** Avoid confusion */\n        if (activeLayout === 'pendulumEffectBackground' && !isPendulum) setActiveLayout('frame');\n    }, [activeLayout, isPendulum]);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => document.getElementById(frameLayoutMainId)?.focus(),\n    }));\n\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const changeBottomLeftFrame = useMemo(() => getUpdater('pendulumFrame'), [getUpdater]);\n    const changeBottomRightFrame = useMemo(() => getUpdater('pendulumRightFrame'), [getUpdater]);\n    const changeTopLeftFrame = useMemo(() => getUpdater('leftFrame'), [getUpdater]);\n    const changeTopRightFrame = useMemo(() => getUpdater('rightFrame'), [getUpdater]);\n    const changeEffectBackground = (background: string) => setCard(currentCard => {\n        const nextEffectStyle = { ...currentCard.effectStyle };\n        nextEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            effectStyle: nextEffectStyle,\n        };\n    });\n    const changePendulumEffectBackground = (background: string) => setCard(currentCard => {\n        const nextPendulumEffectStyle = { ...currentCard.pendulumStyle };\n        nextPendulumEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            pendulumStyle: nextPendulumEffectStyle,\n        };\n    });\n    const changeDyeList = useMemo(() => getUpdater('dyeList'), [getUpdater]);\n    const changeDye = (color: string, name: string) => setCard(currentCard => {\n        const position = DyeIndexMap[name];\n\n        if (typeof position !== 'number') return currentCard;\n        const nextDyeList = [...currentCard.dyeList] as FrameDyeList;\n        nextDyeList[position] = color;\n\n        return {\n            ...currentCard,\n            dyeList: nextDyeList,\n        };\n    });\n    const changeLayout = (layoutValue: string) => {\n        if (activeLayout === 'bottomLeftFrame') changeBottomLeftFrame(layoutValue);\n        if (activeLayout === 'bottomRightFrame') changeBottomRightFrame(layoutValue);\n        if (activeLayout === 'topLeftFrame') changeTopLeftFrame(layoutValue);\n        if (activeLayout === 'topRightFrame') changeTopRightFrame(layoutValue);\n        if (activeLayout === 'effectBackground') changeEffectBackground(layoutValue);\n        if (activeLayout === 'pendulumEffectBackground') changePendulumEffectBackground(layoutValue);\n    };\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const activeFrame = layoutState[activeLayout];\n    const resolvedLayoutStyle = resolveFrameStyle(layoutState, isPendulum);\n    const dyeColor = DyeIndexMap[activeLayout];\n    return <FrameLayoutContainer>\n        <div className=\"visual-preview-container\">\n            <label>{language['input.advanced-frame.main.label']}</label>\n            <FrameInfoBlock\n                id={frameLayoutMainId}\n                tabIndex={0}\n                className={activeLayout === 'frame' ? 'active' : ''}\n                {...FrameInfoMap[frame] ?? DefaultFrameInfo}\n                onClick={() => setActiveLayout('frame')}\n            />\n            <label>{language['input.advanced-frame.detailed.label']}</label>\n            <CardLayoutPreview\n                width={Math.round(width / 20) * 2}\n                height={Math.round(height / 20) * 2}\n                isPendulum={isPendulum}\n                baseLayoutState={layoutState}\n                resolvedLayoutState={resolvedLayoutStyle}\n                activeLayout={activeLayout}\n                onLayoutSelect={key => setActiveLayout(key)}\n                dyeList={dyeList}\n                foil={foil}\n                language={language}\n                vertical={true}\n            />\n            <div className=\"frame-action\">\n                <Button\n                    size=\"small\"\n                    onClick={() => {\n                        changeBottomLeftFrame('auto');\n                        changeBottomRightFrame('auto');\n                        changeTopLeftFrame('auto');\n                        changeTopRightFrame('auto');\n                        changeEffectBackground('auto');\n                        changePendulumEffectBackground('auto');\n                        changeFoil('normal');\n                        changeDyeList(getDefaultDyeList());\n                    }}\n                >\n                    {language['generic.reset.label']}\n                </Button>\n                <Button\n                    size=\"small\"\n                    type=\"primary\"\n                    onClick={async () => {\n                        const key = uuid();\n                        const value: FramePreset = {\n                            foil,\n                            frame,\n                            leftFrame,\n                            pendulumFrame,\n                            pendulumRightFrame,\n                            rightFrame,\n                            effectStyle: { background: effectBackground },\n                            pendulumStyle: { background: pendulumEffectBackground },\n                            dyeList: [...dyeList],\n                        };\n                        if (db) {\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\n                            await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\n                            await tx.done;\n                        }\n                        setLayoutPresetList(cur => [\n                            ...cur,\n                            {\n                                key,\n                                content: value,\n                            },\n                        ]);\n                    }}\n                >\n                    {language['input.advanced-frame.save.label']}\n                </Button>\n            </div>\n        </div>\n        <div>\n            <StyledPendulumFrameContainer\n                className=\"pendulum-frame-picker\"\n                {...getNavigationProps({\n                    stopPropagation: true,\n                    optionLength: frameList.length,\n                    setFocus,\n                    onTrigger: () => {\n                        if (focus >= 0) changeLayout(frameList[focus].value);\n                    },\n                    onCancel,\n                })}\n            >\n                <div className=\"frame-part-name\">\n                    {language[FramePositionMap[activeLayout]?.labelKey]}\n                </div>\n                {/** Avoid collapsing in case of frame */}\n                {activeLayout !== 'foil' && <Checkbox\n                    className={mergeClass('inline-input', activeLayout === 'frame' ? 'checkbox-disabled' : '')}\n                    checked={activeFrame === 'auto'}\n                    disabled={activeLayout === 'frame'}\n                    onChange={e => {\n                        changeLayout(e.target.checked ? 'auto' : (recentCustomPendulumFrame.current[activeLayout] ?? 'auto'));\n                    }}\n                >{language['input.frame.auto']}</Checkbox>}\n                {activeLayout === 'foil'\n                    ? <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                        <span>{language['input.foil.label']}</span>\n                    </RadioTrain>\n                    : <RadioTrain\n                        className=\"frame-radio\"\n                        value={activeFrame}\n                        onChange={value => {\n                            if (activeLayout === 'frame') onFrameChange(value);\n                            else changeLayout(value);\n                        }}\n                        optionList={frameList}\n                    />}\n                {typeof dyeColor === 'number' && <HorizontalSketchPicker\n                    value={dyeList[dyeColor]}\n                    onChange={color => {\n                        if (color !== dyeList[dyeColor]) changeDye(color, activeLayout);\n                    }}\n                >\n                    {language['input.advanced-frame.dye']}\n                </HorizontalSketchPicker>}\n            </StyledPendulumFrameContainer>\n        </div>\n        <FramePresetPanel\n            language={language}\n            isPendulum={isPendulum}\n            onOverwrite={async key => {\n                const value: FramePreset = {\n                    foil,\n                    frame,\n                    leftFrame,\n                    pendulumFrame,\n                    pendulumRightFrame,\n                    rightFrame,\n                    effectStyle: { background: effectBackground },\n                    pendulumStyle: { background: pendulumEffectBackground },\n                    dyeList: [...dyeList],\n                };\n                if (db) {\n                    const tx = db.transaction('presetLayoutStore', 'readwrite');\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\n                    await tx.done;\n                }\n                setLayoutPresetList(cur => cur.map(entry => {\n                    if (entry.key === key) {\n                        return {\n                            key,\n                            content: value,\n                        };\n                    } else {\n                        return entry;\n                    }\n                }));\n            }}\n            onActive={content => {\n                const {\n                    dyeList,\n                    foil,\n                    frame,\n                    pendulumFrame,\n                    leftFrame,\n                    pendulumRightFrame,\n                    rightFrame,\n                    effectStyle,\n                    pendulumStyle,\n                } = content;\n                onFrameChange(frame);\n                changeBottomLeftFrame(pendulumFrame);\n                changeBottomRightFrame(pendulumRightFrame);\n                changeTopLeftFrame(leftFrame);\n                changeTopRightFrame(rightFrame);\n                changeEffectBackground(effectStyle.background);\n                changePendulumEffectBackground(pendulumStyle.background);\n                changeFoil(foil);\n                changeDyeList(dyeList);\n            }}\n        />\n    </FrameLayoutContainer>;\n});\n\nexport * from './frame-behavior-setting-panel';\nexport * from '../../../component/card-layout-preview';","import { CopiableCode } from 'src/component';\nimport { LINK_RATING_ALWAYS_AUTO, LINK_RATING_ALWAYS_SHOW, LINK_RATING_ALWAYS_HIDE, FlagInfoList } from 'src/model';\nimport { LanguageDataDictionary } from 'src/service';\n\nexport const FlagPresentationList = [\n    {\n        ...FlagInfoList[0],\n        valueDisplay: (language: LanguageDataDictionary, _value: number) => language['input.flag.mix-def-link'],\n        sampleDisplay: (language: LanguageDataDictionary) => <>\n            {language['input.flag.mix-def-link']}:\n            <ul>\n                <li><CopiableCode data={0}>0</CopiableCode>: {language['manager.template.description.true']}</li>\n                <li><CopiableCode data={1}>1</CopiableCode>: {language['manager.template.description.false']}</li>\n            </ul>\n        </>,\n    },\n    {\n        ...FlagInfoList[1],\n        valueDisplay: (language: LanguageDataDictionary, value: number) => <>\n            {language['input.flag.link-rating-behavior']}: {language[value === 1\n                ? 'input.flag.link-rating-behavior.show'\n                : 'input.flag.link-rating-behavior.hide']}\n        </>,\n        sampleDisplay: (language: LanguageDataDictionary) => <>\n            {language['input.flag.link-rating-behavior']}:\n            <ul>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_AUTO}>\n                        {LINK_RATING_ALWAYS_AUTO}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.auto']}\n                </li>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_SHOW}>\n                        {LINK_RATING_ALWAYS_SHOW}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.show']}\n                </li>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_HIDE}>\n                        {LINK_RATING_ALWAYS_HIDE}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.hide']}\n                </li>\n            </ul>\n        </>,\n    },\n];","import { Checkbox, Input, Popover } from 'antd';\nimport { InternalPopover, PopoverButton, StyledDropdown, StyledPopMarkdown } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CanvasConst, DEFAULT_PENDULUM_SIZE, PendulumSizeMap } from 'src/model';\nimport { CaretDownOutlined, ApartmentOutlined } from '@ant-design/icons';\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\nimport styled from 'styled-components';\nimport { resolveFrameStyle } from 'src/util';\nimport { CardLayoutPreview, FrameBehaviorSettingPanel, FramelayoutSettingPanel, FrameLayoutSettingPanel } from '../frame-setting-panel';\nimport { FlagPresentationList } from '../../common';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-4);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n    .card-layout-preview-container {\n        line-height: 0;\n        border: var(--bw) solid var(--sub-level-1);\n        overflow: hidden;\n    }\n    .anticon {\n        align-content: center;\n        padding: 0 var(--spacing-xs);\n        border: var(--bw) solid var(--sub-level-1);\n        border-left: none;\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .pendulum-option {\n        display: grid;\n        grid-template-columns: var(--width-label) 1fr;\n        align-items: center;\n        .pendulum-frame-input,\n        .pendulum-checkbox {\n            flex: 0 0 auto;\n        }\n        .mirror-scale {\n            /** Alignment **/\n            line-height: 32px;\n            align-items: center;\n        }\n    }\n    .joined-row {\n        position: relative;\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            /** Alignment **/\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing);\n        }\n        .pendulum-size {\n            display: inline-block;\n            line-height: 1.15; // Alignment\n            margin-right: var(--spacing);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    softMode: boolean,\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n}\n    & Pick<CardTextInput, 'onTakePicker'>\n    & Pick<FramelayoutSettingPanel, 'onFrameChange'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    softMode,\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n    onFrameChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        frame,\n        foil,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        dyeList,\n        flag,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            frame,\n            foil,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            effectStyle,\n            pendulumStyle,\n            dyeList,\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        frame,\n        foil,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        dyeList,\n        flag,\n        setCard,\n        getUpdater,\n    })));\n    const {\n        mirrorPendulumScale,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { mirrorPendulumScale },\n        updateSetting,\n    }) => ({\n        mirrorPendulumScale,\n        updateSetting,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n        };\n    });\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const advanceLayoutPreviewHeight = 30; // Alignment with frame input\n    const flagList = flag\n        .map((entry, index) => {\n            const target = FlagPresentationList[index];\n\n            if (entry !== 0 && target) return <li key={target.labelKey}>\n                {target.valueDisplay(language, entry)}\n            </li>;\n            return null;\n        })\n        .filter(entry => entry != null);\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            <div className=\"pendulum-option-container\">\n                {showCreativeOption && <Popover\n                    visible={frameDropdownVisible}\n                    onVisibleChange={setFrameDropdownVisibleVisible}\n                    trigger={['click']}\n                    placement=\"bottom\"\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\n                    content={<div className=\"overlay-event-absorber\">\n                        <FrameLayoutSettingPanel ref={bottomFrameOptionGridRef}\n                            isPendulum={isPendulum}\n                            frameList={frameList}\n                            pendulumFrame={pendulumFrame}\n                            onFrameChange={onFrameChange}\n                            onCancel={() => {\n                                setFrameDropdownVisibleVisible(false);\n                                containerRef.current?.focus();\n                            }}\n                        />\n                        <FrameBehaviorSettingPanel />\n                    </div>}\n                >\n                    <StyledPendulumFrameInputContainer ref={containerRef}\n                        className=\"pendulum-frame-input\"\n                        tabIndex={0}\n                        onKeyDown={e => {\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                                setFrameDropdownVisibleVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    bottomFrameOptionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        }}\n                    >\n                        <span className=\"pendulum-frame-label\">\n                            {language['input.advanced-frame.label']}\n                        </span>\n                        <div className=\"card-layout-preview-container\">\n                            <CardLayoutPreview\n                                width={Math.round(advanceLayoutPreviewHeight * width / height)}\n                                height={advanceLayoutPreviewHeight}\n                                isPendulum={isPendulum}\n                                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                                tabIndex={-1}\n                                dyeList={dyeList}\n                                foil={foil}\n                                language={language}\n                            />\n                        </div>\n                        {flagList.length > 0\n                            ? <InternalPopover\n                                content={<StyledPopMarkdown>\n                                    {language['input.flag.effective.label']}\n                                    <ul>{flagList}</ul>\n                                </StyledPopMarkdown>}\n                            >\n                                <ApartmentOutlined />\n                            </InternalPopover>\n                            : null}\n                        <CaretDownOutlined />\n                    </StyledPendulumFrameInputContainer>\n                </Popover>}\n                {(isPendulum && showCreativeOption) && <div className=\"pendulum-size\">\n                    <Popover key=\"color-picker\"\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {pendulumSizeList.map(({ value, label }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={pendulumSize === value ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            onPendulumSizeChange(value);\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={softMode}\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\n                        >\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\n                        </PopoverButton>\n                    </Popover>\n                </div>}\n                {(isPendulum && showCreativeOption)\n                    && <Checkbox\n                        className=\"mirror-scale\"\n                        onChange={e => {\n                            const willMirror = e.target.checked;\n\n                            updateSetting({ mirrorPendulumScale: willMirror });\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\n                        }}\n                        checked={mirrorPendulumScale}\n                    >\n                        {language['input.mirror-scale.label']}\n                    </Checkbox>}\n            </div>\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\" className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    allowClear\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (mirrorPendulumScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    allowClear\n                    onChange={e => {\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    autoSize={{\n                        minRows: 5,\n                    }}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain, SingleSliderContainer, StyledPopMarkdown } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst PostPendulumFirstLineContainer = styled.div`\n    &.first-line,\n    &.second-line {\n        display: flex;\n        flex-wrap: wrap;\n        gap: var(--spacing-sm);\n        align-items: center;\n        justify-content: right;\n    }\n    .type-ability-input {\n        flex: 1 1 auto;\n        width: unset;\n        max-width: 40rem;\n    }\n    .condense-input {\n        flex: 1 1 auto;\n    }\n    .formatting-help-button,\n    .input-kanji-helper {\n        flex: 0 0 auto;\n    }\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .condense-input {\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n`;\nconst AdvancedParagraphButton = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-4);\n    .button-label {\n        line-height: 2;\n        padding: var(--spacing-px) var(--spacing-xs);\n    }\n`;\nconst AdvancedParagraphPanel = styled.div`\n    .line-input,\n    .justify-ratio-input {\n        padding: var(--spacing-xs);\n    }\n    .single-slider {\n        .ant-input-number {\n            width: 75px;\n        }\n    }\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: {\n        typeAbility?: string[],\n        effectMinLine?: number,\n        pendulumEffectMinLine?: number,\n        effectJustifyRatio?: number,\n        pendulumEffectJustifyRatio?: number,\n    }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const showExtraDecorativeOption = useSetting(state => state.setting.showExtraDecorativeOption);\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const [effectMinLine, setEffectMinLine] = useState(() => useCard.getState().card.effectStyle.minLine);\n    const [pendulumEffectMinLine, setPendulumEffectMinLine] = useState(() => useCard.getState().card.pendulumStyle.minLine);\n    const [effectJustifyRatio, setEffectJustifyRatio] = useState(() => {\n        return useCard.getState().card.effectStyle.justifyRatio;\n    });\n    const [pendulumEffectJustifyRatio, setPendulumEffectJustifyRatio] = useState(() => {\n        return useCard.getState().card.pendulumStyle.justifyRatio;\n    });\n\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useEffect(() => {\n        /** Changing min line / justify ratio force render effect, so we should do so sparingly */\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) setCard(currentCard => {\n                const newEffectStyle = {\n                    ...currentCard.effectStyle,\n                    minLine: effectMinLine,\n                    justifyRatio: effectJustifyRatio,\n                };\n                const newPendulumEffectStyle = {\n                    ...currentCard.pendulumStyle,\n                    minLine: pendulumEffectMinLine,\n                    justifyRatio: pendulumEffectJustifyRatio,\n                };\n\n                return {\n                    ...currentCard,\n                    effectStyle: newEffectStyle,\n                    pendulumStyle: newPendulumEffectStyle,\n                };\n            });\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [effectJustifyRatio, effectMinLine, pendulumEffectJustifyRatio, pendulumEffectMinLine, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({\n            typeAbility,\n            effectMinLine, pendulumEffectMinLine,\n            effectJustifyRatio, pendulumEffectJustifyRatio,\n        }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n            if (typeof effectMinLine === 'number') setEffectMinLine(effectMinLine);\n            if (typeof pendulumEffectMinLine === 'number') setPendulumEffectMinLine(pendulumEffectMinLine);\n            if (typeof effectJustifyRatio === 'number') setEffectJustifyRatio(effectJustifyRatio);\n            if (typeof pendulumEffectJustifyRatio === 'number') setPendulumEffectJustifyRatio(pendulumEffectJustifyRatio);\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon]?.value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <>\n        <PostPendulumFirstLineContainer className={`post-pendulum-input first-line variant-${format}`}>\n            <CardTextInput ref={typeAbilityInputRef}\n                addonBefore={language[typeLabel]}\n                id=\"type-ability\"\n                defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n                onChange={changeTypeAbility}\n                onTakePicker={onTakePicker}\n            />\n            {isOCG && <Tooltip\n                overlay={language['input.furigana-helper.tooltip']}\n                overlayClassName=\"long-tooltip-overlay\"\n            >\n                <Checkbox\n                    className=\"input-kanji-helper\"\n                    onChange={toggleFuriganaHelper}\n                    checked={furiganaHelper}\n                >\n                    {language['input.furigana-helper.label']}\n                </Checkbox>\n            </Tooltip>}\n            <FormattingHelpDrawer />\n        </PostPendulumFirstLineContainer>\n        <PostPendulumFirstLineContainer className={`post-pendulum-input second-line variant-${format}`}>\n            <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n                onChange={value => onCondenseTolerantChange(value as CondenseType)}\n                optionList={CondenseThresholdButtonList}\n            >\n                <span>\n                    {language['input.condense.label']} <Explanation\n                        content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\n                    />\n                </span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <Popover\n                overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                content={<div className=\"overlay-event-absorber\">\n                    <AdvancedParagraphPanel className=\"custom-style-picker\">\n                        <h2>\n                            {language['input.text-style.min-line.label']}\n                        </h2>\n                        <div className=\"line-input\">\n                            <SingleSliderContainer className=\"single-slider\">\n                                <span>{language['input.text-style.min-line.effect.placeholder']}:</span>\n                                <InputNumber\n                                    id=\"effect-line\"\n                                    size=\"small\"\n                                    value={effectMinLine}\n                                    placeholder={language['input.text-style.min-line.effect.placeholder']}\n                                    onChange={value => setEffectMinLine(typeof value === 'number' ? value : 0)}\n                                    min={0}\n                                    max={50}\n                                />\n                                <span>{language['input.text-style.min-line.pendulum-effect.placeholder']}:</span>\n                                <InputNumber\n                                    id=\"pendulum-effect-line\"\n                                    size=\"small\"\n                                    value={pendulumEffectMinLine}\n                                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\n                                    onChange={value => setPendulumEffectMinLine(typeof value === 'number' ? value : 0)}\n                                    min={0}\n                                    max={50}\n                                />\n                            </SingleSliderContainer>\n                        </div>\n                        <h2>\n                            {language['input.text-style.justify-ratio.label']}\n                        </h2>\n                        <div className=\"justify-ratio-input\">\n                            <SingleSliderContainer className=\"single-slider\">\n                                <span>{language['input.text-style.min-line.effect.placeholder']}:</span>\n                                <InputNumber\n                                    id=\"effect-justify-ratio\"\n                                    size=\"small\"\n                                    value={effectJustifyRatio}\n                                    placeholder={language['input.text-style.min-line.effect.placeholder']}\n                                    onChange={value => setEffectJustifyRatio(typeof value === 'number' ? value : 0)}\n                                    min={0}\n                                    max={5000}\n                                    step={100}\n                                />\n                                <span>{language['input.text-style.min-line.pendulum-effect.placeholder']}:</span>\n                                <InputNumber\n                                    id=\"pendulum-effect-justify-ratio\"\n                                    size=\"small\"\n                                    value={pendulumEffectJustifyRatio}\n                                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\n                                    onChange={value => setPendulumEffectJustifyRatio(typeof value === 'number' ? value : 0)}\n                                    min={0}\n                                    max={5000}\n                                    step={100}\n                                />\n                            </SingleSliderContainer>\n                        </div>\n                    </AdvancedParagraphPanel>\n                </div>}\n            >\n                <AdvancedParagraphButton>\n                    <div className=\"button-label\">\n                        {language['input.text-style.paragraph-style.label']}\n                    </div>\n                </AdvancedParagraphButton>\n            </Popover>}\n        </PostPendulumFirstLineContainer>\n    </>;\n});","import { Checkbox, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { InlineColorPicker, RadioTrain } from 'src/component';\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker,\n        h2.font-style-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\n                                <h2 className=\"font-style-picker\">\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={fontStyle}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    IconButton,\n    RadioTrain,\n    StandaloneLabel,\n    StyledPopMarkdown,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getFinishList,\n    FormatButtonList,\n} from './const';\nimport { ClearOutlined } from '@ant-design/icons';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain, FrameTrainRef } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    AttributeInputGroup,\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledInputLabelWithButton,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isLink,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isLink,\n        getUpdater,\n        setCard,\n    })));\n    const { setting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const frameTrainRef = useRef<FrameTrainRef>(null);\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const finishList = useMemo(() => getFinishList(language), [language]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n                effectStyle, pendulumStyle,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({\n                typeAbility,\n                effectMinLine: effectStyle.minLine,\n                pendulumEffectMinLine: pendulumStyle.minLine,\n                effectJustifyRatio: effectStyle.justifyRatio,\n                pendulumEffectJustifyRatio: pendulumStyle.justifyRatio,\n            });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={finishList}\n            >\n                <StyledInputLabelWithButton className=\"finish-checkbox-label\">\n                    <div className=\"input-label\">{language['input.finish.label']}</div>\n                    <IconButton\n                        onClick={() => onFinishChange([])}\n                        Icon={ClearOutlined}\n                        tooltipProps={{\n                            title: language['input.other-finish.reset.tooltip'],\n                        }}\n                    />\n                </StyledInputLabelWithButton>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain ref={frameTrainRef}\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\n            onStatChange={(atk, def, linkRating) => footerInputGroupRef.current?.setValue({ atk, def, linkRating })}\n        />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <AttributeInputGroup language={language} />\n\n                <PendulumInputGroup ref={pendulumInputGroupRef}\n                    showCreativeOption={showCreativeOption}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    softMode={reduceMotionColor}\n                    onTakePicker={setPickerTarget}\n                    onFrameChange={frame => frameTrainRef.current?.changeFrame(frame)}\n                />\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showCreativeOption={showCreativeOption}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    DEFAULT_BASE_FILL_COLOR,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkOffsetList,\n    LinkPendulumIndentList,\n    LinkPendulumOffsetList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkSpeedSkill, compressCardData, getCardIconFromFrame, mergeClass, normalizeCardName, resolveFrameStyle } from 'src/util';\nimport { CopyOutlined, CloseOutlined, DownloadOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Checkbox, Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport copy from 'copy-to-clipboard';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .select-box {\n            display: inline-block;\n            margin-right: var(--spacing-xs);\n        }\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 50%;\n            height: 50%;\n            position: absolute;\n            background-size: 200% 200%;\n            &.top-left-frame {\n                top: 0;\n                left: 0;\n                background-position: 0% 0%;\n            }\n            &.top-right-frame {\n                top: 0;\n                left: 50%;\n                background-position: 100% 0%;\n            }\n            &.bottom-left-frame {\n                top: 50%;\n                left: 0;\n                background-position: 0% 0%;\n            }\n            &.bottom-right-frame {\n                top: 50%;\n                left: 50%;\n                background-position: 100% 0%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            left: 21px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #2a2a2a;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    selected,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onActive: (card: InternalCard) => void,\n    onSelect: (card: InternalCard, type: 'add' | 'remove') => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    selected,\n    language,\n    onDuplicate,\n    onActive,\n    onDelete,\n    onSelect,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artData,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundData,\n        backgroundFit,\n        backgroundSource,\n        backgroundType,\n        cardIcon,\n        def,\n        format,\n        frame,\n        leftFrame, rightFrame,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        opacity,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n        effectStyle,\n        pendulumStyle,\n    } = card;\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n    } = resolveFrameStyle({\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n    }, isPendulum);\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedCardArt = artSource === 'offline'\n        ? !art\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\n            : artData\n        : art;\n    const normalizedBackgroundArt = backgroundSource === 'offline'\n        ? !background\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\n            : backgroundData\n        : background;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onActive(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame top-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={normalizedBackgroundArt}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\n\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\n                    )}\n                    style={{\n                        top: isPendulum ? 16 : 19,\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\n                    }}\n                />;\n            })}\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                <div className=\"select-box\" onClick={e => e.stopPropagation()}>\n                    <Checkbox\n                        checked={selected}\n                        onChange={e => {\n                            onSelect(card, e.target.checked ? 'add' : 'remove');\n                        }}\n                    />\n                </div>\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${(normalizedCardIcon === 'custom'\n                        ? 'icon-list'\n                        : normalizedCardIcon).toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(normalizedCardIcon !== NO_ICON\n                    && normalizedCardIconType !== 'st'\n                    && normalizedCardIconType !== 'none'\n                    && normalizedCardIconType !== 'custom'\n                ) && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined\n                        className=\"action-button action-download\"\n                        onClick={() => {\n                            const { id, ...exportableCard } = card;\n                            copy(JSON.stringify(compressCardData(exportableCard)));\n                        }}\n                    />\n                </Tooltip>\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${- thumbArtXGap * THUMB_TO_CARD_RATIO\n            }px) translateY(${- thumbArtYGap * THUMB_TO_CARD_RATIO\n            }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { Button, Modal } from 'antd';\nimport JSZip from 'jszip';\nimport { useEffect, useRef } from 'react';\nimport { InternalCard } from 'src/model';\nimport { useBatchDownload, useCardList, WithLanguage } from 'src/service';\nimport { downloadBlob } from 'src/util';\nimport styled from 'styled-components';\nimport { CheckCircleOutlined, LoadingOutlined, HourglassOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst ExportingListContainer = styled.div`\n    .exporting-item {\n        display: grid;\n        grid-template-columns: 1.5rem 1fr;\n    }\n    .anticon-hourglass {\n        color: var(--main-info);\n    }\n    .anticon-loading {\n        color: var(--main-active);\n    }\n    .anticon-check-circle {\n        color: var(--main-online);\n    }\n`;\n\nexport type BatchDownloadButton = {\n    onActive: (card: InternalCard) => void,\n} & WithLanguage;\nexport const BatchDownloadButton = ({\n    language,\n    onActive,\n}: BatchDownloadButton) => {\n    const {\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    } = useCardList(useShallow(({\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    }) => ({\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    })));\n    const {\n        batchQueue,\n        batchDataMap,\n        isBatchDownloading,\n        isReady,\n        clearQueue,\n        stopBatchDownload,\n        startBatchDownload,\n    } = useBatchDownload();\n    /**\n     * The batch download process is as follow:\n     * * Start the process, block the screen with a popup and mark the process as started.\n     * * During the process, the top card of the exporting list is picked, and force select.\n     * * After it fully render (we check it at the useCardExport hook), it trigger the recording process, while also remove the recorded card from exporting list.\n     * * When the exporting list changed, jump back to step 2. If the exporting list is now empty, we zip it and trigger the download.\n     * * Clean up and end the process.\n     */\n    const nextSelectedId = batchQueue[0];\n    const lastSelectedId = useRef('');\n    useEffect(() => {\n        if (nextSelectedId && isBatchDownloading && nextSelectedId !== lastSelectedId.current) {\n            lastSelectedId.current = nextSelectedId;\n            const targetCard = cardDisplayList.find(card => card.id === nextSelectedId);\n\n            if (targetCard) {\n                onActive(targetCard);\n            }\n        }\n    }, [cardDisplayList, isBatchDownloading, nextSelectedId, onActive]);\n\n    useEffect(() => {\n        let relevant = true;\n        if (isReady) {\n            (async () => {\n                const { batchName, batchDataMap } = useBatchDownload.getState();\n                const zipObject = new JSZip();\n                const batchDataList = Object.values(batchDataMap);\n\n                if (batchDataList.length > 0) {\n                    Object.values(batchDataMap).forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    if (relevant) {\n                        downloadBlob(\n                            `${batchName}.zip`,\n                            zipBlob,\n                            'application/zip',\n                        );\n                        stopBatchDownload();\n                    }\n                }\n            })();\n        }\n        return () => {\n            relevant = false;\n        };\n    }, [isReady, stopBatchDownload]);\n\n    const exportAllCard = Object.keys(selectedMap).length === 0;\n    return <>\n        <Modal\n            visible={isBatchDownloading}\n            onCancel={() => stopBatchDownload()}\n            onOk={() => clearQueue()}\n            cancelText={language['manager.batch.batch-download.cancel-all.label']}\n            okText={language['manager.batch.batch-download.premature-stop.label']}\n            okButtonProps={{\n                type: 'default',\n            }}\n        >\n            <ExportingListContainer className=\"exporting-list\">\n                {Object\n                    .values(cardDisplayList)\n                    .map(({ id, name }) => {\n                        if (!exportAllCard && !selectedMap[id]) return null;\n                        return <div key={id} className=\"exporting-item\">\n                            <div className=\"export-status\">\n                                {activeId === id\n                                    ? <LoadingOutlined />\n                                    : batchDataMap[id]\n                                        ? <CheckCircleOutlined />\n                                        : <HourglassOutlined />}\n                            </div>\n                            <div className=\"export-name\">{name}</div>\n                        </div>;\n                    })}\n            </ExportingListContainer>\n        </Modal>\n        <Button\n            className=\"batch-download-button\"\n            onClick={() => startBatchDownload(\n                listName,\n                exportAllCard\n                    ? cardDisplayList.map(card => card.id)\n                    : Object.keys(selectedMap),\n            )}\n        >\n            {exportAllCard\n                ? language['manager.batch.batch-download.label']\n                : language['manager.batch.batch-download.partial-download.label']}\n        </Button>\n    </>;\n};","import { LanguageDataDictionary, useCardList, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useCallback, useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button, Dropdown, Menu } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\nimport { BatchDownloadButton } from './batch-download-button';\nimport { CaretDownFilled } from '@ant-design/icons';\n\nconst StyledMenuItem = styled(Menu.Item)`\n    &.menu-active {\n        background-color: var(--main-active);\n    }\n`;\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .batch-download-button {\n        margin-bottom: var(--spacing-xs);\n    }\n    .select-panel {\n        display: grid;\n        grid-template-columns: max-content max-content 1fr;\n        padding: var(--spacing-xs);\n        gap: var(--spacing-xs);\n        text-align: right;\n        .ant-checkbox-wrapper span {\n            padding-right: 0;\n        }\n        .scheme-button {\n            display: inline-block;\n        }\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        position: absolute;\n        width: 100%;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    selectedMap: Record<string, string>,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onActive: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n} & Pick<CardThumb, 'onSelect'>;\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        selectedMap,\n        language,\n        list,\n        onDelete,\n        onDuplicate,\n        onActive,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        selected={!!selectedMap[list[index].id]}\n        language={language}\n        onDuplicate={onDuplicate}\n        onActive={onActive}\n        onDelete={onDelete}\n        onSelect={onSelect}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onActive: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onActive,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    })));\n    const {\n        exportScheme,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { exportScheme },\n        updateSetting,\n    }) => ({\n        exportScheme,\n        updateSetting,\n    })));\n\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const onSelect: CardThumbRowData['onSelect'] = useCallback((card, type) => {\n        selectCard(card.id, type);\n    }, [selectCard]);\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onActive(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onActive, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        {cardDisplayList.length > 0 && <div className=\"select-panel\">\n            <Button\n                size=\"small\"\n                onClick={() => setSelectMap([], 'replace')}\n            >\n                {language['manager.batch.batch-download.clear.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => setSelectMap(cardDisplayList, 'add')}\n            >\n                {language['manager.batch.batch-download.all.label']}\n            </Button>\n            <div>\n                <Dropdown\n                    overlay={<Menu>\n                        {[\n                            {\n                                value: 'with-name',\n                                label: language['manager.batch.batch-download.export-option.with-name.label'],\n                            },\n                            {\n                                value: 'with-id',\n                                label: language['manager.batch.batch-download.export-option.with-id.label'],\n                            },\n                        ].map(({ value, label }) => {\n                            return <StyledMenuItem\n                                key={value}\n                                onClick={() => updateSetting({ exportScheme: value })}\n                                className={value === exportScheme ? 'menu-active' : ''}\n                            >\n                                {label}\n                            </StyledMenuItem>;\n                        })}\n                    </Menu>}\n                >\n                    <div\n                        className=\"scheme-button\"\n                    >\n                        {language['manager.batch.batch-download.export-scheme.label']} <CaretDownFilled />\n                    </div>\n                </Dropdown>\n            </div>\n        </div>}\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            selectedMap,\n                            onDuplicate: duplicateCard,\n                            onActive,\n                            onDelete: deleteAndReselect,\n                            onSelect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        {cardDisplayList.length !== 0 && <BatchDownloadButton\n            language={language}\n            onActive={onActive}\n        />}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    RegionMap,\n    CondenseTolerantMap,\n    DyeIndexMap,\n    ExtraAttributeList,\n    FinishMap,\n    frameList,\n    FramePositionMap,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PendulumSizeList,\n    PresetNameStyleMap,\n    StickerList,\n    TotalIconTypeMap,\n} from 'src/model';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport { CopiableCode, StyledMono } from 'src/component';\nimport { FlagPresentationList } from '../common';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\n        padding: 0;\n        padding-left: 24px;\n        .ant-collapse-arrow {\n            top: 5px;\n            left: 0;\n        }\n    }\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n        padding: var(--spacing-sm) 0 0 0;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\n\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tbody>\n                                <tr>\n                                    <th><b>{language['manager.template.header.field.label']}</b></th>\n                                    <th><b>{language['manager.template.header.value.label']}</b></th>\n                                </tr>\n                                {[\n                                    {\n                                        field: 'Format',\n                                        value: <div>\n                                            {[\n                                                'tcg',\n                                                'ocg',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Frame',\n                                        altField: 'Bottom Frame',\n                                        value: <div>\n                                            {frameList\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Attribute',\n                                        value: <div>\n                                            {[...AttributeList, ...ExtraAttributeList]\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Spell/Trap Icon',\n                                        value: <div>\n                                            {IconList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Sticker',\n                                        value: <div>\n                                            {StickerList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Foil',\n                                        value: <div>\n                                            {getFoilList()\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Card Finish',\n                                        value: <div>\n                                            {Object.values(FinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                            <div>{language['manager.template.description.joinable']}</div>\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Art Finish',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star Type',\n                                        value: <div>\n                                            {[\n                                                'number',\n                                                'text',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star Alignment',\n                                        value: <div>\n                                            {[\n                                                'left',\n                                                'center',\n                                                'right',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Card Icon Type',\n                                        value: <div>\n                                            {IconTypeList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Background Type',\n                                        value: <div>\n                                            {getBackgroundTypeList()\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Condense Rate',\n                                        value: <div>\n                                            {Object.keys(CondenseTolerantMap)\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style Type',\n                                        value: <div>\n                                            {[\n                                                'predefined',\n                                                'custom',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style - Font',\n                                        value: <div>\n                                            <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                        </div>,\n                                    },\n                                    {\n                                        field: 'Name Style - Preset',\n                                        value: <div>\n                                            {Object.keys(PresetNameStyleMap)\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style - Pattern',\n                                        value: <div>\n                                            {PatternList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Pendulum Size',\n                                        value: <div>\n                                            {PendulumSizeList\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Attribute',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Background',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Icon',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Sticker',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Region',\n                                        value: <div>\n                                            {Object.values(RegionMap)\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star List',\n                                        value: <div>\n                                            <div>{language['manager.template.description.star-list']}</div>\n                                            {Object\n                                                .values(TotalIconTypeMap)\n                                                .filter(({ isMixable }) => isMixable)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Dye List',\n                                        value: <div>\n                                            <div>{language['manager.template.description.dye-list']}</div>\n                                            <ul>\n                                                {Object\n                                                    .entries(DyeIndexMap)\n                                                    .sort((l, r) => l[1] - r[1])\n                                                    .map(([key]) => <li key={key}>{language[FramePositionMap[key]?.labelKey ?? '']}</li>)}\n                                            </ul>\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Flag',\n                                        value: <div>\n                                            <div>{language['manager.template.description.flag']}</div>\n                                            {FlagPresentationList\n                                                .map(({ sampleDisplay, index }) => <div key={index}>{sampleDisplay(language)}</div>)}\n                                        </div>\n                                    },\n                                ].map(({\n                                    field,\n                                    altField,\n                                    value,\n                                }) => {\n                                    return <tr key={field}>\n                                        <td>\n                                            <StyledMono>{field}</StyledMono>\n                                            {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                        </td>\n                                        <td>{value}</td>\n                                    </tr>;\n                                })}\n                            </tbody>\n                        </table>\n                    </Panel>\n                </Collapse>\n                \n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\nimport { ManagerDrawer } from 'src/component';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(ManagerDrawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const exportFormat = useSetting(state => state.setting.exportFormat);\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const [savingFile, setSavingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            className=\"card-manager-panel\"\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                setSavingFile(true);\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    try {\n                                        const {\n                                            error,\n                                            value: csvdata,\n                                        } = cardListToCsv(useCardList.getState().cardList);\n\n                                        if (error) {\n                                            let errorMessage = '';\n                                            let errorDescription = '';\n                                            switch (error) {\n                                                case 'offline-data': {\n                                                    errorMessage = language['error.export.offline-data.message'];\n                                                    errorDescription = language['error.export.offline-data.description'];\n                                                    break;\n                                                }\n                                            }\n\n                                            if (errorMessage || errorDescription) {\n                                                notification.error({\n                                                    message: errorMessage,\n                                                    description: errorDescription,\n                                                });\n                                            }\n                                        }\n                                        switch (exportFormat) {\n                                            case 'xlsx': {\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\n                                                break;\n                                            }\n                                            default: {\n                                                downloadBlob(\n                                                    useCardList.getState().listName,\n                                                    new Blob([csvdata], { type: 'text/csv' }),\n                                                    'text/csv',\n                                                );\n                                            }\n                                        }\n                                        changeEditStatus('download');\n                                    } catch (e) {}\n                                }\n                                setSavingFile(false);\n                            }}\n                        >\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\n\n                                            /** Assume data from only the very first sheet */\n                                            /** 65001 codepage allow display unicode characters such as Japanese */\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setListName(fileName);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onActive={activeCard}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\nimport { CardActionButton } from './component';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .save-button-tainted {\n        .alert-label {\n            flex: 1;\n            padding-top: var(--spacing-px);\n        }\n        .resolution-option {\n            position: relative;\n            border: none;\n            border-radius: var(--br-lg);\n            background: var(--main-primary);\n        }\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n            border-left: var(--bw) solid var(--sub-level-3);\n        }\n    }\n`;\n\nexport const CardPreviewContainer = styled.div`\n    position: relative;\n    display: block;\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\n    margin: 0 var(--spacing);\n    .reset-button,\n    .lightbox-button {\n        display: none;\n    }\n    #preview-canvas {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\n            scale(var(--resize-ratio))\n            translateZ(0);\n        &.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n    }\n`;\nexport const CardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled(CardActionButton)`\n    position: absolute;\n    z-index: 101;\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    CanvasConst,\n    Card,\n    getDefaultCard,\n    NameStyle,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n    isTouchDevice,\n    mergeClass,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n    ResolutionButton,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    FramePreset,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCarderDb,\n    useCardList,\n    useGlobal,\n    useGlobalMemory,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { Dropdown, notification, Tooltip } from 'antd';\nimport { CROPPER_WIDTH, Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\nimport {\n    CardPreviewContainer,\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    CardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\nimport Moveable from 'react-moveable';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+b', 'command+b'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n        globalScale,\n        resolution,\n        slidingType,\n    } = useSetting(useShallow(({ setting: {\n        allowHotkey,\n        reduceMotionColor,\n        globalScale,\n        resolution,\n        slidingType,\n    } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n        globalScale,\n        resolution,\n        slidingType,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const isMobile = isMobileDevice();\n    const windowSlidable = !isMobile && !isTouchDevice();\n    const [isInitializing, setInitializing] = useState(true);\n    const [, setActiveDropzone] = useGlobal('activeDropzone');\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const { db, dbReady } = useCarderDb();\n    const [managerVisible, setManagerVisible] = useState(false);\n    const slidingWindowRef = useRef<HTMLDivElement>(null);\n    const containerWindowRef = useRef<HTMLDivElement>(null);\n    const moveableRef = useRef<Moveable>(null);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<LightboxRef>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        /** Each time a drag over event is fired, we keep the heartbeat, and stop it if there is no heartbeat after a while. */\n        const stopDrag = () => {\n            setActiveDropzone(0);\n        };\n        let timeoutHandle = window.setTimeout(stopDrag, 200);\n        const checkDragHeartbeat: Document['ondragover'] = () => {\n            setActiveDropzone(1);\n            window.clearTimeout(timeoutHandle);\n            timeoutHandle = window.setTimeout(stopDrag, 200);\n        };\n\n        document.addEventListener('dragover', checkDragHeartbeat);\n\n        return () => {\n            document.removeEventListener('dragover', checkDragHeartbeat);\n        };\n    }, [setActiveDropzone]);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n    /** Fix weird issue when frame layer does not render correctly when manager's visibility is changed. Happens on Opera GX */\n    useEffect(() => {\n        setImageChangeCount(cnt => cnt + 1);\n    }, [managerVisible]);\n    useEffect(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        if (slidingType === 'auto' && slidingWindowRef.current) {\n            slidingWindowRef.current.style.transform = '';\n        }\n    }, [slidingType]);\n    useEffect(() => {\n        (async () => {\n            try {\n                if (db && isLanguageLoading === false && language) {\n                    const layoutPresetTx = db.transaction('presetLayoutStore', 'readonly');\n                    const layoutPresetList: {\n                        key: string,\n                        content: FramePreset,\n                    }[] = [];\n\n                    for await (const cursor of layoutPresetTx.store) {\n                        const { content, key } = cursor.value;\n                        layoutPresetList.push({\n                            key,\n                            content: JSON.parse(content) as FramePreset,\n                        });\n                    }\n                    await layoutPresetTx.done;\n                    useGlobalMemory.getState().updateGlobalMemory({ layoutPresetList });\n\n                    const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readonly');\n                    const nameStylePresetList: {\n                        key: string,\n                        content: Partial<NameStyle>,\n                    }[] = [];\n\n                    for await (const cursor of nameStylePresetTx.store) {\n                        const { content, key } = cursor.value;\n                        nameStylePresetList.push({\n                            key,\n                            content: JSON.parse(content) as Partial<NameStyle>,\n                        });\n                    }\n                    await nameStylePresetTx.done;\n                    useGlobalMemory.getState().updateGlobalMemory({ nameStylePresetList });\n                }\n            } catch (e) {\n                console.error('Error reading database', e);\n                notification.error({\n                    message: language['error.database-initialize.message'],\n                    description: language['error.database-initialize.description'],\n                });\n            }\n        })();\n    }, [db, isLanguageLoading, language]);\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'SVN-Times New Roman Italic',\n                    'StoneSerif-Italic',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\n        if (crossorigin === 'anonymous') {\n            setTainted(false);\n            lightboxRef.current?.refresh();\n        }\n        setImageChangeCount(cnt => cnt + 1);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing || !dbReady;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                onScroll={e => {\n                    const currentScrollY = e.currentTarget.scrollTop;\n                    if (slidingWindowRef.current && containerWindowRef.current && slidingType === 'auto') {\n                        const viewportWidth = document.body.clientWidth;\n                        // const viewportHeight = window.innerHeight;\n                        const padding = viewportWidth < 1600 ? 0 : 10;\n                        const viewportHeight = e.currentTarget.getBoundingClientRect().height;\n                        const slidingWindowHeight = slidingWindowRef.current.getBoundingClientRect().height;\n                        /** If the sliding window fit entirely inside viewport, just keep their position updated */\n                        if (viewportHeight > slidingWindowHeight + padding) {\n                            const threshold = Math.max(\n                                0,\n                                containerWindowRef.current.getBoundingClientRect().height - slidingWindowHeight\n                            );\n                            slidingWindowRef.current.style.transform = `translateY(${Math.max(\n                                0,\n                                Math.min(threshold, currentScrollY) - padding,\n                            )}px)`;\n                        } else {\n                            /** It's not worth to deal with this case right now, as the UX here is very complex */\n                            slidingWindowRef.current.style.transform = '';\n                        }\n                    }\n                }}\n                className={`language-${languageInfo.codeName} manager_${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${process.env.PUBLIC_URL\n                        }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobile ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasHeight * globalScale}px`,\n                        '--card-width': `${CanvasWidth * globalScale}px`,\n                        '--global-scale': `${globalScale}`,\n                        '--cropper-width': `${CROPPER_WIDTH}px`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div ref={containerWindowRef} className={mergeClass(\n                        'card-preview-panel',\n                        isTainted ? 'export-tainted' : 'export-normal',\n                        `sliding-type_${slidingType}`,\n                    )}>\n                        <div ref={slidingWindowRef} className=\"preview-sliding-window\">\n                            <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                                <div className=\"imexport\">\n                                    <ExportPanel ref={exportPanelRef}\n                                        tainted={isTainted}\n                                        artworkCanvas={artworkCanvasRef.current}\n                                        onRequireExportData={exportData}\n                                        onRequireDownload={() => downloadButtonRef.current?.download()}\n                                        onClose={forceRefocus}\n                                    />\n                                    <div />\n                                    <ImportPanel ref={importPanelRef}\n                                        onImport={treatNewCard}\n                                        onClose={forceRefocus}\n                                        allowHotkey={allowHotkey}\n                                        language={language}\n                                    />\n                                </div>\n                                <BatchConverter language={language} />\n                                <DownloadButton ref={downloadButtonRef}\n                                    canvasMap={canvasMap}\n                                    imageChangeCount={imageChangeCount}\n                                    isTainted={isTainted}\n                                    isInitializing={isInitializing}\n                                    globalScale={globalScale}\n                                    onDownloadError={alertDownloadError}\n                                />\n                                {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\n                                    <div className=\"alert-label\">\n                                        {language['alert.download.tainted-first-line']}<br />\n                                        {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\n                                    </div>\n                                    <Dropdown\n                                        className=\"save-button-dropdown\"\n                                        placement=\"bottomRight\"\n                                        overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n                                    >\n                                        <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                                            <GatewayOutlined className=\"resolution-icon\" />\n                                            <span className=\"resolution-overlay\">{resolution[1]}</span>\n                                        </ResolutionButton>\n                                    </Dropdown>\n                                </div>}\n                            </StyledDataButtonPanelContainer>\n                            <CardPreviewContainer className=\"card-preview-container\">\n                                <Tooltip title={language['generic.reset.tooltip']}>\n                                    <ResetButton\n                                        className=\"reset-button\"\n                                        onClick={() => {\n                                            const consent = window.confirm(language['prompt.reset.message']);\n\n                                            if (consent) {\n                                                const { setCard, card } = useCard.getState();\n                                                const defaultCard = { id: card.id, ...getDefaultCard() };\n                                                const contextualDefaultCardData = card.format === 'tcg'\n                                                    ? defaultCard\n                                                    : changeCardFormat(defaultCard, 'ocg');\n\n                                                setCard(contextualDefaultCardData, true);\n                                                setImageChangeCount(cnt => cnt + 1);\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                            }\n                                        }}\n                                    >\n                                        <ClearOutlined />\n                                    </ResetButton>\n                                </Tooltip>\n                                <Tooltip title={<div className=\"center\">\n                                    {language['button.full-size.label']}\n                                    {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\n                                </div>}>\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                        <ZoomInOutlined />\n                                    </LightboxButton>\n                                </Tooltip>\n                                {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\n                                 * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\n                                 */}\n                                <canvas\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\n                                    id=\"preview-canvas\"\n                                    ref={previewCanvasRef}\n                                    width={CanvasWidth}\n                                    height={CanvasHeight}\n                                />\n                                <CardCanvasGroupContainer className=\"card-canvas-group\">\n                                    <canvas\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\n                                        id=\"export-canvas\"\n                                        ref={exportCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                    <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                        {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                    </div>\n                                    <canvas id=\"frameCanvas\"\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0)}\n                                        ref={frameCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"nameCanvas\"\n                                        ref={nameCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={148 * globalScale}\n                                    />\n                                    <canvas id=\"cardIconCanvas\"\n                                        ref={cardIconCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={222 * globalScale}\n                                    />\n                                    <canvas id=\"pendulumScaleCanvas\"\n                                        ref={pendulumScaleCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={920 * globalScale}\n                                    />\n                                    <canvas id=\"pendulumEffectCanvas\"\n                                        ref={pendulumEffectCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={920 * globalScale}\n                                    />\n                                    <canvas id=\"typeCanvas\"\n                                        ref={typeCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"effectCanvas\"\n                                        ref={effectCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"statCanvas\"\n                                        ref={statCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"setIdCanvas\"\n                                        ref={setIdCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"passwordCanvas\"\n                                        ref={passwordCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"creatorCanvas\"\n                                        ref={creatorCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"stickerCanvas\"\n                                        ref={stickerCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas id=\"finishCanvas\"\n                                        ref={finishCanvasRef}\n                                        width={CanvasWidth * globalScale}\n                                        height={CanvasHeight * globalScale}\n                                    />\n                                    <canvas className=\"crop-canvas\"\n                                        ref={artworkCanvasRef}\n                                    />\n                                    <canvas className=\"crop-canvas\"\n                                        ref={backgroundCanvasRef}\n                                    />\n                                </CardCanvasGroupContainer>\n                            </CardPreviewContainer>\n                        </div>\n                        {windowSlidable && <Moveable\n                            ref={moveableRef}\n                            target={slidingWindowRef}\n                            className=\"sliding-movable-window\"\n                            draggable={true}\n                            throttleDrag={1}\n                            edgeDraggable={false}\n                            startDragRotate={0}\n                            throttleDragRotate={0}\n                            throttleScale={0}\n                            snappable={true}\n                            pinchable={true}\n                            snapContainer={'.card-preview-panel'}\n                            bounds={{\n                                left: 0,\n                                top: 0,\n                                right: 0,\n                                bottom: 0,\n                                position: 'css',\n                            }}\n                            onDrag={e => {\n                                if (slidingType === 'manual') e.target.style.transform = e.transform;\n                            }}\n                        />}\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Lightbox\n                    ref={lightboxRef}\n                    globalScale={globalScale}\n                />\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}