{"version":3,"sources":["model/canvas.ts","model/foil-finish-dye.tsx","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/flag.tsx","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/dye.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/color.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-batch-download.ts","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","service/use-color-picker/index.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/mask.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom/color.tsx","component/atom/copiable.tsx","component/atom/index.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/inline-color-picker/index.tsx","component/inline-sketch-picker/index.tsx","component/lightbox/index.tsx","component/link-marker/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/attribute-input-group.tsx","page/input-panel/star-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/frame-setting-panel/frame-behavior-setting-panel.tsx","page/input-panel/frame-setting-panel/index.tsx","page/common/index.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/batch-download-button.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artFrameX","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","distributionMode","result","type3CommonInstruction","blendMode","type8CommonInstruction","FinishMap","type1","partInstructionMap","pendulumSubstituteMap","type2","type3","type4","type5","type6","type7","type8","type9","type10","type11","type12","type13","ArtFinishMap","art","small","medium","large","OtherFinishTypeMap","key","labelKey","background","attribute","icon","sticker","FoilMap","color","isOption","gold","platinum","getFoilList","DyeIndexMap","topLeftFrame","topRightFrame","bottomLeftFrame","bottomRightFrame","effectBackground","pendulumEffectBackground","foil","NO_ATTRIBUTE","AttributeList","nameKey","isCreative","ExtraAttributeList","RegionMap","category","fileKey","DefaultFormatAttribute","tcg","en","ocg","jp","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","fullLabelKey","isMixable","showIcon","className","alt","src","IconTypeList","Object","values","IconTypeAttributeMap","IconTypeAttributeList","IconTypeStMap","IconTypeStList","TotalIconTypeMap","MAX_STAR_LENGTH","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","hasEmboss","pattern","PresetNameStyleMap","commonB","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","overrideFill","PatternList","PendulumSizeMap","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","FlagInfoList","index","FlagIndexMap","FLAG_LENGTH","length","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","DefaultFrameInfo","FramePositionMap","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","FULL_LINE_PLACEHOLDER","FLAVOR_LINE_PLACEHOLDER","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_SOURCE","map","entry","_entry$regexForm","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","region","leftFrame","rightFrame","pendulumRightFrame","finish","otherFinish","artFinish","nameStyleType","nameStyle","headTextFillStyle","embossThickness","subFamily","cardIcon","star","starAlignment","starList","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","linkRating","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","minLine","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","flag","dyeList","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","cardWidth","cardHeight","createCanvas","arguments","undefined","canvas","document","createElement","ctx","getContext","distanceTransform","array","exponent","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","dyeCanvas","baseCanvas","HexColorRegex","test","overlayContext","overlayCanvas","filter","drawImage","globalCompositeOperation","fillRect","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","checkLightFooter","includes","checkDiplayLinkRating","displayMode","showLinkRating","resolveFrameStyle","frameData","_ref2","_ref3","_ref4","_ref5","resolvedFrame","resolvedTopLeft","resolvedBottomLeft","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","kanjiHelper","defaultFlagList","currentFlagList","defaultDyeList","currentDyeList","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","normalizeCardName","replaceAll","normalizeCardEffect","downloadBlob","link","href","window","download","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","getContrastColor","rgbColor","_rgbColor$","_rgbColor$2","_rgbColor$3","MAX_CONDENSER_THRESHOLD","condense","worker","minThreshold","effectiveMedian","condenser","median","lastEffective","iterateCount","magnitude","maxThreshold","searchDown","reverseSearch","getMedian","setMedian","newMedian","setLastEffective","getLastEffective","applyLastEffective","getIterateCount","createCondenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","cnt","setCnt","useState","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","random","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","forceRefocus","_document$querySelect","selector","querySelector","focus","isMobileDevice","check","a","navigator","userAgent","vendor","opera","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","targetRegion","termMap","newSetId","nextNameStyle","_termMap$entry","useBatchDownload","create","batchName","batch","batchQueue","batchDataMap","isBatchDownloading","isReady","startBatchDownload","stopBatchDownload","clearQueue","addToBatch","cardId","cardName","cardBlob","nextQueue","nextBatchDataMap","processLanguage","rawLanguageData","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","startsWith","csvToCardList","headerIndexMap","_reader","_reader2","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader11","_reader12","_reader13","_reader14","_reader15","_reader16","_reader17","_reader$split$filter","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_reader40","_reader41","_reader42","_reader43","_reader44","_reader45","_reader46","_emptyCard$isLink","_filter","_reader47","_reader49","_reader50","_reader51","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","finishBackground","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","effectMinLine","pendulumEffectMinLine","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader48","baseFlag","Number","baseDyeList","String","getDefaultDyeList","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","selectedMap","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","artCropRight","backgroundCropRight","restRCard","equals","setActiveId","selectCard","_ref8","nextMap","setSelectMap","_ref9","prev","curr","setCardList","_cardList$","deleteCard","_ref10","_ref11","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref12","targetIndex","_ref13","clonedId","clonedCard","nextCardList","sortList","_ref14","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","exportScheme","globalScale","mirrorPendulumScale","reduceMotionColor","resolution","showCreativeOption","showExtraAttribute","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","getCardDataUrl","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","addToCurrentBatch","fetchedDataUrl","classList","_document$querySelect2","click","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","process","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect3","queuingSize","isPipelineRunning","useColorPicker","onChange","currentText","setCurrentText","internalValue","setInternalValue","rgb","normalizedText","inputText","setColor","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","strokeStyle","imageCacheMap","drawAsset","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawFrom","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","getEffectFontAndCoordinate","useItalic","statInEffect","typeInEffect","coordinateKey","fontDataKey","sizeList","drawEffect","content","isNormal","textStyle","defaultSizeLevel","forceRelaxCondenseLimit","baseMinLine","sizeLevel","normalizedContent","lineList","fullLineListOption","effectFlavorCondition","_flavorConditionRegex","wholeLineRegex","effectText","potentialFlavorConditionText","exec","tryCnt","lineReplacement","lineContent","fullLineReplacement","fullLineContent","paragraphResult","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","precalculatedLine","shift","flavorFontData","dynamicFlavorFontData","flavorTextCurrentFont","flavorTextData","MaskPromise","right","applyAlphaMask","urlOrCanvas","maskData","layerData","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","isSpeedSkill","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resolvedLayoutStyle","resolvedEffectBackground","resolvedPendulumEffectBackground","resultAPI","drawFrame","willReplaceFrame","topFrameCtx","topFrameCanvas","dyedTopFrameCanvas","dyedTopFrameCtx","topRightCanvas","dyedTopRightCanvas","bottomFrameCtx","bottomFrameCanvas","dyedBottomFrameCanvas","dyedBottomFrameCtx","bottomRightCanvas","dyedBottomRightCanvas","backgroundWidth","backgroundHeight","resetTransform","drawCardArt","externalCtx","imageWidth","imageHeight","drawBackground","_otherFinish$","hasArtBorder","backgroundFinish","loopBackgroundFinish","drawAttribute","_otherFinish$2","attributeCanvas","attributeCtx","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishCtx","drawStar","_otherFinish$3","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","normalizedStarList","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starCtx","all","_","cardIconName","starFinishCanvas","starFinishCtx","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconCtx","drawStatBorder","drawNameBackground","nameBackgroundCtx","nameBackgroundCanvas","dyedLeftNameCanvas","dyedLeftNameCtx","nameRightCanvas","dyedRightNameCanvas","drawEffectBackground","withPendulum","effectBackgroundCtx","effectBackgroundCanvas","effectBoxX","dyedEffectBackgroundCanvas","_PendulumSizeMapExcep","pendulumEffectBackgroundCtx","pendulumEffectBackgroundCanvas","dyedPendulumEffectBackgroundCanvas","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","willDye","validDyeColor","usedFoil","pendulumBorderCanvas","pendulumBorderCtx","dyedCardBorderFoilCanvas","pendulumBorderFoilCtx","pendulumBorderFoilCanvas","dyedPendulumBorderFoilCanvas","drawEffectBorder","drawCardBorder","cardBorderFoilCtx","cardBorderFoilCanvas","drawArtBorderFoil","artBorderFoilCtx","artBorderFoilCanvas","dyedArtBorderFoilCanvas","drawEffectBorderFoil","effectBorderFoilCtx","effectBorderFoilCanvas","dyedEffectBorderFoilCanvas","drawNameFinish","drawAttributeFinish","drawArtFinish","artCtx","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","cloneCtx","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","digitList","digit","accLeft","firstDigit","secondDigit","firstDigitWidth","secondDigitWidth","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","nextWidth","condenseRatio","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","bottomFrame","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightRightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","foilDyeColor","normalizedSubFamily","normalizedTypeAbility","showDefAndLinkFlag","linkRatingDisplayMode","isLinkST","showDefAndLink","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","normalizedOpacity","fillBaseColor","w","customFill","artOnCardCanvas","artOnCardCtx","combinedArtCanvas","combinedArtCtx","normalizedLinkRating","rating","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","hasLink","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","actualEdge","actualBaseline","actualBaselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","effectIndexSize","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","normalizedStyle","iconCanvas","iconCtx","iconFinishCanvas","iconFinishCtx","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","positionType","isActive","baseLink","activeLink","baseDrawLinkArrowMap","withBorder","dyeColor","willDyed","drawFunction","linkMapFoilCtx","linkMapFoilCanvas","dyedLinkMapFoilCanvas","baseDrawLinkMapFoil","drawHistory","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","feedbackReminder","memory","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","targetMemory","useShallow","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","getDerivedStateFromError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","$freeSize","$size","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","ColorBlock","$static","$empty","StyledCode","StyledMono","CopiableCode","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","SolidLabel","CombinedSliderContainer","PopoverButton","$active","$softMode","ResolutionLabelContainer","$warning","ResolutionLabel","warning","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","rel","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","b","majorA","minorA","patchA","majorB","minorB","patchB","onMouseOver","FAD_BUTTON_ID","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","setFeedbackReminder","currentReminder","duration","onClose","footer","Tabs","TabPane","tab","answer","Affiliation","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","Button","onMouseOut","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledInlineColorPickerContainer","InlineColorList","InlineColorPicker","dotColor","Input","SaturationBoardContainer","SaturationBoard","CustomPicker","Saturation","HorizontalSketchColorList","HorizontalSketchPickerContainer","HorizontalSketchPicker","noColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledLinkMarkChooser","LinkMarkerPicker","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","transform","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","naturalWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Container","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","isYgoprodeckImage","surveyedDecodedCard","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","getFoilButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","nextColor","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextLinkRating","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","destroyTooltipOnHide","BorderOuterOutlined","_language$tooltipKey","_opacity$type","_opacity$type2","activable","step","AttributeRegionTrain","AttributeInputGroup","changeAttribute","changeRegion","attributeList","getAttributeList","_RegionMap$region","extraAttributeList","getExtraAttributeList","DoubleRightOutlined","DoubleLeftOutlined","IconDropdownOverlay","StyledIconDropdown","IconDropdownContainer","StarTypeSelector","activeCardIcon","showMixableOnly","showRemove","filterFunction","StarListSelectPanel","StarListControlPanel","StarListContainer","StarPicker","changeStarList","transformer","nextStarList","slotList","use12","setSlot","slot","activeInformation","setActiveInformation","activeList","changeStatus","currentStarList","list","limit","padUnit","nextList","padRight","slotValue","starInfo","willChecked","TypeWithIconContainer","StyledCheckboxStarTrain","PopoverButtonInCardIconInput","CustomStarContainer","CardIconAlignmentPicker","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","CardIconInputGroup","starPickerRef","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconType","iconDropdownText","IconDropdownLabel","IconDropdown","_starPickerRef$curren","DropdownChildren","_starPickerRef$curren2","iconEntry","_starPickerRef$curren3","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","StyledLinkRatingInputContainer","FooterInputGroup","autoLinkRating","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","linkRatingInputRef","showAtkInput","showLinkInput","showDefInput","showPadding","copyrightList","changeATK","changeDEF","changeLinkRating","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","_linkRatingInputRef$c","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","LinkPickerContainer","$hover","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","minWidth","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","FrameBehaviorSettingPanelContainer","FrameBehaviorSettingPanel","updateFlag","nextFlagList","_FlagInfoList$index","FrameLayoutContainer","CardLayoutContainer","$width","$height","$hoverable","CardLayoutPreview","baseLayoutState","resolvedLayoutState","activeLayout","vertical","_FrameInfoMap$frame","FrameLayoutSettingPanel","_FrameInfoMap$frame2","_FramePositionMap$act","onFrameChange","recentCustomPendulumFrame","setActiveLayout","frameLayoutMainId","foilButtonList","changeFoil","changeBottomLeftFrame","changeBottomRightFrame","changeTopLeftFrame","changeTopRightFrame","changeEffectBackground","nextEffectStyle","changePendulumEffectBackground","nextPendulumEffectStyle","changeDyeList","changeLayout","layoutValue","layoutState","activeFrame","_recentCustomPendulum","changeDye","nextDyeList","FlagPresentationList","valueDisplay","_value","sampleDisplay","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","flagList","_bottomFrameOptionGri","ApartmentOutlined","willMirror","PostPendulumFirstLineContainer","PostPendulumInputGroup","_IconTypeMap$cardIcon","typeAbilitySeparator","typeAbilityInputRef","setEffectMinLine","setPendulumEffectMinLine","changeTypeAbility","toggleFuriganaHelper","newEffectStyle","newPendulumEffectStyle","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","frameTrainRef","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","onFinishChange","changeOpacity","changeNameStyle","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","formatSwappedCard","ClearOutlined","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$topLeft","_FrameInfoMap$topLeft2","_FrameInfoMap$topRigh","_FrameInfoMap$topRigh2","_FrameInfoMap$bottomL","_FrameInfoMap$bottomL2","_FrameInfoMap$bottomR","_FrameInfoMap$bottomR2","selected","onDuplicate","onActive","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","ExportingListContainer","BatchDownloadButton","nextSelectedId","lastSelectedId","exportAllCard","LoadingOutlined","CheckCircleOutlined","HourglassOutlined","StyledMenuItem","StyledManagerCardList","CardThumbRow","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","CaretDownFilled","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledManagerSample","ManagerSample","FileTextOutlined","ghost","header","altField","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_FramePositionMap$key","_FramePositionMap$key2","_ref27","_ref28","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","stringifedFlag","stringifedDyeList","stringifedSubFamilyList","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,gCAGLG,GAAoBL,GAAmBM,QAAO,CAACC,EAAKC,KAC7DD,EAAIC,EAAIP,WAAaO,EACdD,IACR,CAAC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rBxlB,EAAI,CACA6nB,cAAc,GAChB,EAENlB,eACAW,iBACH,IAGQY,GAAcA,IACN3C,IAAQre,IAAA,IAAC,SAAEwgB,GAAUxgB,EAAA,OAAKwgB,CAAQ,IAI1CS,GAAcA,IAAM5C,GAAQ6C,WAAWV,S,cCvIpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBACA,SAEA,YACA,iBACA,iBACA,cACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,4BACA,0BACA,gBACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,qCACA,mCACA,0BACA,2BACA,2BACA,6BACA,2BACA,4BACA,sBACA,yBACA,aACA,cACA,qBACA,WACA,YACA,OACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAc1V,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzG2V,GAAc,IAAIC,IAAIL,GAAa1xB,IAAI2xB,KAEvCK,GAAsBP,GAAqB57B,QAAO,CAACC,EAAK87B,EAAO99B,KACjE,MAAMm+B,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","file":"static/js/main.11503f8a.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\n\nexport const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n    frame: string,\n}) => [\n        {\n            value: 'fit' as const,\n            label: dictionary?.fit,\n        },\n        {\n            value: 'full' as const,\n            label: dictionary?.full,\n        },\n        {\n            value: 'frame' as const,\n            label: dictionary?.frame,\n        },\n    ];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxRef: React.RefObject<{\n        draw: (exportCanvas: HTMLCanvasElement) => void,\n    }>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    maximumScale: 2,\n    topToPendulumStructure: 210,\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\n    topToPendulumStructureFrame: 185,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    pendulumIconFrameWidth: 813,\n    pendulumIconFrameHeight: 100,\n    pendulumFrameWidth: 753,\n    pendulumFrameHeight: 955,\n    leftToPendulumStructure: 56,\n    cardBorder: 28,\n    topToEffectBox: 885,\n    leftToEffectBox: 54,\n    effectBoxWidth: 705,\n    effectBoxHeight: 231,\n    finishTypeCardWidth: 702,\n    finishTypeCardHeight: 200,\n    stickerSize: 52,\n    attributeSize: 77,\n    attributeY: 55,\n    attributeX: 678,\n    stickerX: 739.1438,\n    stickerY: 1110.938,\n    iconWidth: 43,\n    iconHeight: 44,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        backgroundRatio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        backgroundRatio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /**\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    pendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.236,\n        backgroundRatio: 1.236,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'pendulumSmall' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\n     * Even though the image size does not change, the image frame does become larger.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     *  */\n    extendedPendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'extendedPendulumSmall' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\n     * This results a taller visible image, but shorter image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'truePendulumSmall' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumLarge: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1,\n        backgroundRatio: 1,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulumLarge' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n    pendulumSize?: PendulumSize,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\n\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\n    if (normalizedBoundless || body < 100) {\n        distributionMode = isPendulum\n            ? 'fullPendulum'\n            : 'fullCard';\n    } else {\n        if (isPendulum) {\n            if (text < 100) {\n                distributionMode = pendulumSize === 'small'\n                    ? 'extendedPendulumSmall'\n                    : 'extendedPendulum';\n            } else {\n                if (pendulum < 100) {\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\n                } else {\n                    distributionMode = pendulumSize === 'small'\n                        ? 'pendulumSmall'\n                        : 'pendulum';\n                }\n            }\n        } else {\n            distributionMode = text < 100\n                ? 'extendedCard'\n                : 'normal';\n        }\n    }\n\n    const result = CardArtCanvasCoordinateMap[distributionMode];\n    return {\n        ...result,\n        /** Unlike span background, frame background replace the entire frame even under the border. So frame background start from 0,0 while span background start from 28,28. */\n        backgroundRatio: backgroundType === 'frame'\n            ? 0.686\n            : result.backgroundRatio,\n    };\n};\n","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport const ART_FINISH_TYPE = 'art';\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    labelKey?: string,\n    tooltipKey?: string,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n    pendulumSubstituteMap: Record<string, string>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'card-border': type3CommonInstruction,\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'card-border': type8CommonInstruction,\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type10: {\n        value: 'type10',\n        label: '10',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type11: {\n        value: 'type11',\n        label: '11',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type12: {\n        value: 'type12',\n        label: '12',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'source-over', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type13: {\n        value: 'type13',\n        label: '13',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            art: [\n                { blendMode: 'darken', opacity: 1 },\n                { blendMode: 'multiply', opacity: 1 },\n                { blendMode: 'overlay', opacity: 1 },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n};\n\nexport const OtherFinishTypeMap = {\n    art: {\n        key: 'art' as const,\n        labelKey: 'input.art-finish.label',\n    },\n    background: {\n        key: 'background' as const,\n        labelKey: 'input.background.label',\n    },\n    attribute: {\n        key: 'attribute' as const,\n        labelKey: 'input.attribute.label',\n    },\n    icon: {\n        key: 'icon' as const,\n        labelKey: 'input.icon-type.icon.label',\n    },\n    sticker: {\n        key: 'sticker' as const,\n        labelKey: 'input.sticker.label',\n    },\n};\nexport type OtherFinish = [attribute: string, icon: string, sticker: string, background: string];\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilMap = {\n    normal: {\n        name: 'normal' as const,\n        color: '#747b95',\n        isOption: false,\n    },\n    gold: {\n        name: 'gold' as const,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    platinum: {\n        name: 'platinum' as const,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        label: dictionary?.normal,\n        ...FoilMap.normal,\n    },\n    {\n        label: dictionary?.gold,\n        ...FoilMap.gold,\n    },\n    {\n        label: dictionary?.platinum,\n        ...FoilMap.platinum,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];\n\nexport type FrameDyeList = [\n    topLeft: string,\n    topRight: string,\n    bottomLeft: string,\n    bottomRight: string,\n    effect: string,\n    pendulumEffect: string,\n    foil: string,\n];\nexport const getDefaultDyeList = () => ['', '', '', '', '', '', ''] as FrameDyeList;\nexport const DYE_LIST_LENGTH = getDefaultDyeList().length;\n\nexport const DyeIndexMap = {\n    topLeftFrame: 0,\n    topRightFrame: 1,\n    bottomLeftFrame: 2,\n    bottomRightFrame: 3,\n    effectBackground: 4,\n    pendulumEffectBackground: 5,\n    foil: 6,\n};","import { CloseCircleOutlined } from '@ant-design/icons';\nimport { WithLanguage } from 'src/service';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n    },\n];\nexport const ExtraAttributeList = [\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'MAGIC',\n        nameKey: 'input.attribute.magic',\n        label: 'Laugh',\n        color: '#1b8f83',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-1',\n        nameKey: 'input.attribute.boss-1',\n        label: 'Boss 1',\n        color: '#9b325d',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-2',\n        nameKey: 'input.attribute.boss-2',\n        label: 'Boss 2',\n        color: '#942a56',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-3',\n        nameKey: 'input.attribute.boss-3',\n        label: 'Boss 3',\n        color: '#86214b',\n        isCreative: true,\n        isOption: true,\n    },\n    {\n        name: 'BOSS-START',\n        nameKey: 'input.attribute.boss-start',\n        label: 'Boss Start',\n        color: '#a13864',\n        isCreative: true,\n        isOption: true,\n    },\n];\nexport const RegionMap: Record<string, { key: string, category: 'tcg' | 'ocg', fileKey: string }> = {\n    'jp': { key: 'jp', category: 'ocg', fileKey: 'ocg' },\n    'ch': { key: 'ch', category: 'ocg', fileKey: 'ch' },\n    'en': { key: 'en', category: 'tcg', fileKey: 'tcg' },\n    'fr': { key: 'fr', category: 'tcg', fileKey: 'fr' },\n    'de': { key: 'de', category: 'tcg', fileKey: 'de' },\n    'it': { key: 'it', category: 'tcg', fileKey: 'it' },\n    'sp': { key: 'sp', category: 'tcg', fileKey: 'sp' },\n};\nexport const DefaultFormatAttribute: Record<string, string> = {\n    tcg: RegionMap.en.key,\n    ocg: RegionMap.jp.key,\n};\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n    {\n        label: 'Normal',\n        value: 'NORMAL',\n        nameKey: 'input.icon.normal',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport type IconTypeInfo = {\n    value: string,\n    labelKey: string | ((language: WithLanguage) => React.ReactNode),\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n    isMixable: boolean,\n    showIcon: boolean,\n}\nexport const IconTypeMap: Record<string, IconTypeInfo> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.full.label',\n        icon: null,\n        isOption: false,\n        isMixable: false,\n        showIcon: false,\n    },\n    'custom': {\n        value: 'custom',\n        labelKey: 'input.icon-type.custom.label',\n        fullLabelKey: 'input.icon-type.custom.full.label',\n        icon: null,\n        isOption: false,\n        isMixable: false,\n        showIcon: false,\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-icon-list.png`}\n        />,\n        isOption: true,\n        isMixable: false,\n        showIcon: false,\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n    'level-rank': {\n        value: 'level-rank',\n        labelKey: 'input.icon-type.level-rank.label',\n        fullLabelKey: 'input.icon-type.level-rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level-rank.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: false,\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);\n\nexport const IconTypeAttributeMap: Record<string, IconTypeInfo> = {\n    'dark': {\n        value: 'dark',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.dark',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"dark-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-dark.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'earth': {\n        value: 'earth',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.earth',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"earth-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-earth.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'fire': {\n        value: 'fire',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.fire',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"fire-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-fire.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'light': {\n        value: 'light',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.light',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"light-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-light.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'water': {\n        value: 'water',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.water',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"water-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-water.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'wind': {\n        value: 'wind',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.wind',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"wind-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-wind.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'divine': {\n        value: 'divine',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.divine',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"divine-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-divine.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'spell': {\n        value: 'spell',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.spell',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"spell-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-spell.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'trap': {\n        value: 'trap',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.attribute.trap',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"trap-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-trap.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n};\nexport const IconTypeAttributeList = Object.values(IconTypeAttributeMap);\n\nexport const IconTypeStMap: Record<string, IconTypeInfo> = {\n    'continuous-l': {\n        value: 'continuous-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.continuous',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"continuous-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'counter-l': {\n        value: 'counter-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.counter',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"counter-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-counter-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'equip-l': {\n        value: 'equip-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.equip',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"equip-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-equip-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'field-l': {\n        value: 'field-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.field',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"field-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-field-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'quick-play-l': {\n        value: 'quick-play-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.quick-play',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"quick-play-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-quick-play-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'ritual-l': {\n        value: 'ritual-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.ritual',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"ritual-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-ritual-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n    'normal-l': {\n        value: 'normal-l',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon.normal',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"normal-large-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-normal-l.png`}\n        />,\n        isOption: true,\n        isMixable: true,\n        showIcon: true,\n    },\n};\nexport const IconTypeStList = Object.values(IconTypeStMap);\n\nexport const TotalIconTypeMap = {\n    ...IconTypeMap,\n    ...IconTypeAttributeMap,\n    ...IconTypeStMap,\n};\nexport const MAX_STAR_LENGTH = 13;\nexport const NORMAL_STAR_LENGTH = 12;","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const getDefaultNameStyle = () => ({\n    font: 'Default',\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    embossPitch: 90,\n    embossYaw: 90,\n    embossThickness: 0,\n    hasEmboss: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    hasEmboss: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo'\n| 'embossGold' | 'embossPlatinum';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n    embossGold: {\n        key: 'embossGold',\n        label: 'Embossed Gold',\n        image: 'asset/image/other/name-emboss-gold.png',\n        value: createPresetNameStyle({\n            preset: 'embossGold',\n            fillStyle: '#d09b0e',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#333333',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n    embossPlatinum: {\n        key: 'embossPlatinum',\n        label: 'Embossed Platinum',\n        image: 'asset/image/other/name-emboss-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'embossPlatinum',\n            fillStyle: '#c0c0c0',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#4d4d4d',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\nexport const PendulumSizeMap = {\n    small: {\n        key: 'small' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.small.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 95,\n        pendulumBoxOffsetY: 50,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 816,\n        artlessFrameY: 594,\n        fontSize: 56.5,\n    },\n    medium: {\n        key: 'medium' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.medium.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 147,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 792,\n        artlessFrameY: 553,\n        fontSize: 56.5,\n    },\n    large: {\n        key: 'large' as const,\n        frameType: 'text',\n        labelKey: 'input.pendulum-size.large.label',\n        effectBoxOffsetY: 27,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 180,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 808,\n        artlessFrameY: 553,\n        fontSize: 56.5,\n    },\n};\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\n\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\n    exceptionPendulumBoxOffsetHeight?: number,\n    exceptionFrameType?: string,\n}>> = {\n    small: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: -13,\n        },\n    },\n    medium: {},\n    large: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: 15,\n        },\n        zarc: {\n            exceptionFrameType: 'pendulum-large',\n        }\n    },\n};\n\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CardFlag = [\n    ShowDefAndLink: number,\n    LinkRating: number,\n];\n/**\n * Remember, 0 is ALWAYS the default state.\n */\nexport const getDefaultCardFlag = (): CardFlag => [0, 0];\n\nexport const LINK_RATING_ALWAYS_AUTO = 0;\nexport const LINK_RATING_ALWAYS_SHOW = 1;\nexport const LINK_RATING_ALWAYS_HIDE = 2;\n\nexport const FlagInfoList = [\n    {\n        index: 0,\n        labelKey: 'input.flag.mix-def-link',\n        type: 'checkbox' as const,\n    },\n    {\n        index: 1,\n        labelKey: 'input.flag.link-rating-behavior',\n        type: 'link-rating-behavior' as const,\n    },\n];\nexport const FlagIndexMap = {\n    showDefAndLink: 0,\n    linkRating: 1,\n};\nexport const FLAG_LENGTH = FlagInfoList.length;","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n    trueHeightCap?: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'tcg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'tcg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'tcg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'tcg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'ocg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 951.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'ocg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n};\n\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\n    normal: {\n        small: [\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94, trueHeightCap: 80 },\n        ],\n        medium: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 122.6 },\n        ],\n        large: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 155.8 },\n        ],\n    },\n    scaleless: {\n        small: [\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5, trueHeightCap: 79.8 },\n        ],\n        medium: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 126.1 },\n        ],\n        large: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 155.5 },\n        ],\n    },\n};\n\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\n    tcg: {\n        smaller: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 950.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n    ocg: {\n        smaller: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 258,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    allRightSymbolOffset?: number,\n    bulletOffset?: number,\n    bulletWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    allRightSymbolOffset: 1,\n    bulletWidth: 23,\n    fontSize: 24.5,\n    lineHeight: 24.7,\n    lineCount: 6,\n    bulletOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport type FontDeviation = {\n    uniformBoxDescent?: number,\n};\nexport type FontDeviationMap = {\n    threshold: number,\n    letterMap: Record<string, FontDeviation>,\n}\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    letterDeviationMap?: Record<string, FontDeviationMap>,\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    headTextGapRatio: 0,\n};\nexport const DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"StoneSerif-Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact',\n    fontList: [],\n};\n\n/**\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\n * */\nexport const NormalFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ],\n    },\n    'tcg-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\n        ]\n    },\n    'ocg-pendulumLarge-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\n        ]\n    },\n    'ocg-pendulumLarge-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n};\n\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps',\n            font: 'MatrixRegularSmallCaps',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.55,\n            fontList: [{\n                bulletWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterDeviationMap: {\n                '1': {\n                    threshold: 0.94,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 11 },\n                        ị: { uniformBoxDescent: 11 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 11 },\n                        e̩: { uniformBoxDescent: 11 },\n                        È̩: { uniformBoxDescent: 11 },\n                        É̩: { uniformBoxDescent: 11 },\n                        è̩: { uniformBoxDescent: 11 },\n                        Ẹ: { uniformBoxDescent: 11 },\n                        ẹ: { uniformBoxDescent: 11 },\n                        Ệ: { uniformBoxDescent: 11 },\n                        ệ: { uniformBoxDescent: 11 },\n                    },\n                },\n                '2': {\n                    threshold: 0,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 20 },\n                        ị: { uniformBoxDescent: 20 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 20 },\n                        e̩: { uniformBoxDescent: 20 },\n                        È̩: { uniformBoxDescent: 20 },\n                        É̩: { uniformBoxDescent: 20 },\n                        è̩: { uniformBoxDescent: 20 },\n                        Ẹ: { uniformBoxDescent: 20 },\n                        ẹ: { uniformBoxDescent: 20 },\n                        Ệ: { uniformBoxDescent: 20 },\n                        ệ: { uniformBoxDescent: 20 },\n                    },\n                },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.825,\n            weight: 'bold',\n            fontList: [{\n                bulletWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            headTextBold: true,\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            fontStyle: 'ocg',\n            fontList: [{\n                bulletWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    fontList: [{\n        bulletWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","import {\n    DefaultOCGEffectFontData,\n    DefaultTCGEffectFontData,\n    DefaultTCGNormalFontData,\n    FontData,\n} from './font-data-effect';\n\n/** OCG does not have different fonts between normal and effect monsters */\nexport const PendulumNormalFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\n        ],\n    },\n};\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n        ],\n    },\n    'ocg-small': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\n        ],\n    },\n    'ocg-medium': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\n        ],\n    },\n    'ocg-large': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\n        ],\n    },\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\nexport const passwordSentenceMap: Record<string, string> = {\n    ocg: '※デッキ構築には使用できません。',\n    tcg: 'This card cannot be in a Deck.',\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 49%',\n            'rgba(239,239,239,1) 51%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);\nexport const DefaultFrameInfo = FrameInfoMap['effect'];\n\nexport const FramePositionMap: Record<string, { labelKey: string }> = {\n    bottomLeftFrame: { labelKey: 'input.advanced-frame.name.bottom-left' },\n    bottomRightFrame: { labelKey: 'input.advanced-frame.name.bottom-right' },\n    effectBackground: { labelKey: 'input.advanced-frame.name.effect-background' },\n    pendulumEffectBackground: { labelKey: 'input.advanced-frame.name.pendulum-effect-background' },\n    frame: { labelKey: 'input.advanced-frame.name.primary' },\n    topLeftFrame: { labelKey: 'input.advanced-frame.name.top-left' },\n    topRightFrame: { labelKey: 'input.advanced-frame.name.top-right' },\n    foil: { labelKey: 'input.foil.label' },\n};","export const ArrowPositionMap = {\n    normal: [\n        { top: 175, left: 55, width: 100, height: 100 },\n        { top: 165, left: 323, width: 170, height: 80 },\n        { top: 175, left: 655, width: 100, height: 100 },\n        { top: 442, left: 45, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 442, left: 700, width: 70, height: 170 },\n        { top: 775, left: 55, width: 100, height: 100 },\n        { top: 810, left: 323, width: 170, height: 80 },\n        { top: 775, left: 655, width: 100, height: 100 },\n    ],\n    pendulum: [\n        { top: 169, left: 11, width: 100, height: 100 },\n        { top: 159, left: 323, width: 170, height: 80 },\n        { top: 169, left: 699, width: 100, height: 100 },\n        { top: 572, left: 1, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 572, left: 744, width: 70, height: 170 },\n        { top: 1054, left: 11, width: 100, height: 100 },\n        { top: 1093, left: 323, width: 170, height: 80 },\n        { top: 1054, left: 699, width: 100, height: 100 },\n    ],\n};\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⦉';\nexport const NB_WORD_CLOSE = '⦊';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_FULL_LINE_OPEN = '᚛';\nexport const NB_FULL_LINE_CLOSE = '᚜';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const FULL_LINE_PLACEHOLDER = '⸦⸧';\nexport const FLAVOR_LINE_PLACEHOLDER = '⸦⸦⸧⸧';\n\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil, getDefaultDyeList, OtherFinish } from './foil-finish-dye';\nimport { CondenseType } from './condense';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\nimport { getDefaultCardFlag } from './flag';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\n/**\n * Check following things when adding new attributes:\n * * Default card and empty card\n * * Convert codec\n * * Shorten codec\n * * Card thumb\n * * Legacy version\n * * Import / export\n */\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 2,\n    format: 'tcg',\n    region: 'en',\n    frame: 'fusion',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    otherFinish: ['normal', 'normal', 'normal', 'normal'] as OtherFinish,\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    starList: [] as string[],\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    linkRating: '',\n    isLink: false as boolean | null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    flag: getDefaultCardFlag(),\n    dyeList: getDefaultDyeList(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 2,\n    format: 'tcg',\n    region: 'en',\n    /** Why we split frame and left frame here? Because there is more nuance to the card other than individual frames, for example name bevel, border bevel, effect bevel etc..., so \"frame\" here is a kind of \"main frame\" that dictates all those nuance, why the actual card background is constructed from those 4 corner frames. */\n    frame: 'effect',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    otherFinish: ['normal', 'normal', 'normal', 'normal'],\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starList: [] as string[],\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    linkRating: '',\n    isLink: null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n        minLine: 0,\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    dyeList: getDefaultDyeList(),\n    flag: getDefaultCardFlag(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: null,\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport const ResolutionMap = {\n    '549x800': {\n        label: '549 × 800',\n        width: 549,\n        height: 800,\n        scale: 1,\n        settingValue: [549, 800] as [number, number],\n    },\n    '561x818': {\n        label: '561 × 818',\n        width: 561,\n        height: 818,\n        scale: 1,\n        settingValue: [561, 818] as [number, number],\n    },\n    '813x1185': {\n        label: '813 × 1185',\n        width: 813,\n        height: 1185,\n        scale: 1,\n        settingValue: [813, 1185] as [number, number],\n    },\n    '1122x1636': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\n        width: 1122,\n        height: 1636,\n        scale: 2,\n        settingValue: [1122, 1636] as [number, number],\n    },\n    '1388x2026': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\n        width: 1388,\n        height: 2026,\n        scale: 2,\n        settingValue: [1388, 2026] as [number, number],\n    },\n    '1626x2370': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\n        width: 1626,\n        height: 2370,\n        scale: 2,\n        settingValue: [1626, 2370] as [number, number],\n    },\n};\nexport const ResolutionList = [\n    ResolutionMap['549x800'],\n    ResolutionMap['561x818'],\n    ResolutionMap['813x1185'],\n    ResolutionMap['1122x1636'],\n    ResolutionMap['1388x2026'],\n    ResolutionMap['1626x2370'],\n];\n\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\nexport const ExportFormatList = [\n    {\n        value: 'csv' as const,\n        label: '.csv',\n    },\n    {\n        value: 'xlsx' as const,\n        label: '.xlsx',\n    },\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './condense';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './flag';\nexport * from './foil-finish-dye';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './font-data-pendulum-effect';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './pendulum';\nexport * from './regex';","import { CanvasConst } from 'src/model';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n} = CanvasConst;\n\nexport const createCanvas = (width = cardWidth, height = cardHeight) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n\n    return {\n        canvas,\n        ctx,\n    };\n};","import ndarray, { NdArray } from 'ndarray';\nimport ops from 'ndarray-ops';\nimport pool from 'typedarray-pool';\nimport phase2_1 from 'distance-transform/lib/p1';\nimport phase2_2 from 'distance-transform/lib/p2';\nimport phase2_inf from 'distance-transform/lib/pinf';\nimport phase2_p from 'distance-transform/lib/pp';\n\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\n    for (i = 0; i < rowCount; ++i) {\n        nextPoint = array[ptr++];\n        for (j = 1; j < colCount; ++j) {\n            nextPoint = min(array[ptr], nextPoint + 1);\n            array[ptr++] = nextPoint;\n        }\n        for (j = 0; j < colCount; ++j) {\n            nextPoint = min(array[--ptr], nextPoint + 1);\n            array[ptr] = nextPoint;\n        }\n        ptr += colCount;\n    }\n}\n\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\n    var dimensionCount = array.shape.length,\n        shape = array.shape.slice(0),\n        stride = new Array(dimensionCount),\n        size = 1,\n        stackSize = 0,\n        infinityHeight = 0,\n        index: number,\n        j: number,\n        n: number,\n        strideList: number[],\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\n        currentDimensionSize: number;\n    exponent = exponent || 2;\n    for (index = dimensionCount - 1; index >= 0; --index) {\n        stride[index] = size;\n        size *= shape[index];\n        infinityHeight += shape[index];\n        stackSize = Math.max(stackSize, shape[index]);\n    }\n\n    // Allocate scratch buffers\n    var phase2ResultAllocation = pool.mallocDouble(size),\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\n        s_q = pool.mallocUint32(stackSize),\n        t_q = pool.mallocUint32(stackSize);\n\n    /**\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\n     * */\n    var phase1ResultAllocation = pool.mallocDouble(size),\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\n        }\n    }\n    //Perform first phase of distance transform\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\n\n    //Second passes\n    for (index = dimensionCount - 1; index > 0; --index) {\n        strideList = phase2ResultArray.stride;\n        n = 1;\n        for (j = index - 1; j < dimensionCount; ++j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        for (j = index - 2; j >= 0; --j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        ops.assign(phase2ResultArray, phase1ResultArray);\n\n        //Execute phase 2\n        currentDimensionSize = shape[index - 1];\n        if (!isFinite(exponent)) {\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 1) {\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 2) {\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent < 1) {\n            throw new Error('Values of exponent < 1 are not supported');\n        } else {\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\n        }\n\n        //Swap buffers\n        tmp = phase1ResultArray;\n        phase1ResultArray = phase2ResultArray;\n        phase2ResultArray = tmp;\n    }\n\n    //Copy phase1ResultArray to result\n    ops.assign(array, phase1ResultArray);\n\n    pool.freeDouble(phase1ResultAllocation);\n    pool.freeDouble(phase2ResultAllocation);\n    pool.freeUint32(s_q);\n    pool.freeUint32(t_q);\n    return array;\n}","import { CanvasConst } from 'src/model';\nimport { createCanvas } from './create';\nimport { HexColorRegex } from '..';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n} = CanvasConst;\nexport const dyeCanvas = (baseCanvas: HTMLCanvasElement, color: string, width = cardWidth, height = cardHeight) => {\n    if (!HexColorRegex.test(color)) return {\n        canvas: baseCanvas,\n        ctx: baseCanvas.getContext('2d'),\n    };\n\n    const { ctx: overlayContext, canvas: overlayCanvas } = createCanvas(width, height);\n\n    /** Draw the target image with grayscale */\n    overlayContext.filter = 'grayscale(1)';\n    overlayContext.drawImage(baseCanvas, 0, 0);\n    overlayContext.filter = 'none';\n\n    /** Overlay the color lens on top the grayscale layer to dye it */\n    overlayContext.fillStyle = color;\n    overlayContext.globalCompositeOperation = 'overlay';\n    overlayContext.fillRect(0, 0, cardWidth, cardHeight);\n\n    /** Draw the target image again but with destination-in mode to remove excess area */\n    overlayContext.globalCompositeOperation = 'destination-in';\n    overlayContext.drawImage(baseCanvas, 0, 0);\n    overlayContext.globalCompositeOperation = 'source-over';\n\n    return {\n        canvas: overlayCanvas,\n        ctx: overlayCanvas.getContext('2d'),\n    };\n};","import * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\n\nconst HorizontalBlurShader = {\n    uniforms: {\n        'tDiffuse': { type: 't', value: null },\n        'h': { type: 'f', value: 3.0 / 512.0 }\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float h;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float lef4 = vUv.x - 4.0 * h;',\n        'float lef3 = vUv.x - 3.0 * h;',\n        'float lef2 = vUv.x - 2.0 * h;',\n        'float lef1 = vUv.x - 1.0 * h;',\n        'float rig1 = vUv.x + 1.0 * h;',\n        'float rig2 = vUv.x + 2.0 * h;',\n        'float rig3 = vUv.x + 3.0 * h;',\n        'float rig4 = vUv.x + 4.0 * h;',\n\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\n        'if (h > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n        //\"gl_FragColor = vec4(1,0,0,1);\",\n\n        '}'\n    ].join('\\n')\n};\nconst VerticalBlurShader = {\n    uniforms: {\n        tDiffuse: { type: 't', value: null },\n        v: { type: 'f', value: 3.0 / 512.0 },\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}',\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float v;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float top4 = vUv.y - 4.0 * v;',\n        'float top3 = vUv.y - 3.0 * v;',\n        'float top2 = vUv.y - 2.0 * v;',\n        'float top1 = vUv.y - 1.0 * v;',\n        'float bot1 = vUv.y + 1.0 * v;',\n        'float bot2 = vUv.y + 2.0 * v;',\n        'float bot3 = vUv.y + 3.0 * v;',\n        'float bot4 = vUv.y + 4.0 * v;',\n\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\n        'if (v > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n\n        '}',\n    ].join('\\n'),\n};\nconst NormalMapShader = {\n    uniforms: {\n        'type': { type: '1i', value: 0 },\n        'invertR': { type: '1f', value: 1 },\n        'invertG': { type: '1f', value: 1 },\n        'invertH': { type: '1f', value: 1 },\n        'dz': { type: '1f', value: 0 },\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\n        'tHeightMap': { type: 't', value: null }\n    },\n    vertexShader: [\n        'precision mediump float;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform vec3 dimensions;',\n        'void main() {',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\n        'vUv = uv;',\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'precision mediump float;',\n        'uniform vec3 dimensions;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform float dz;',\n        'uniform float invertR;',\n        'uniform float invertG;',\n        'uniform float invertH;',\n        'uniform int type;',\n        'uniform sampler2D tHeightMap;',\n\n        'void main(void) {',\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\n        '   float dx = 0.0, dy = 0.0;',\n        '   if(type == 0){',\t// Sobel\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\n        '   }',\n        '   else{',\t\t\t\t// Scharr\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\n        '   }',\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\n        '}'\n    ].join('\\n')\n};\n\nexport const SHADER_FILTER_TYPE = {\n    SOBEL: 'sobel' as const,\n    SCHARR: 'scharr' as const,\n};\nexport const getDefaultHeightToNormalMapOption = () => ({\n    invertedRed: false,\n    invertedGreen: false,\n    invertedSource: false,\n    blurSharp: 0,\n    strength: 1,\n    level: 8.5,\n    type: SHADER_FILTER_TYPE.SOBEL,\n});\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\n\nexport class HeightToNormalMap {\n    renderer: THREE.WebGLRenderer;\n    effectComposer: EffectComposer;\n    normalMapUniform: typeof NormalMapShader['uniforms'];\n    material: THREE.ShaderMaterial;\n    option: Required<HeightToNormalMapOption>;\n    canvas!: HTMLCanvasElement;\n    gaussianShaderX!: ShaderPass;\n    gaussianShaderY!: ShaderPass;\n\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\n        this.canvas = resultCanvas;\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\n        this.init();\n    }\n\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\n        const { width, height } = image;\n        const texture = this.getTexture(image);\n        this.normalMapUniform.tHeightMap.value = texture;\n        this.normalMapUniform.dimensions.value = [width, height, 0];\n        this.renderer.setSize(width, height);\n        this.effectComposer.setSize(width, height);\n        this.effectComposer.reset(this.getRenderTarget(width, height));\n\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\n            ...this.option,\n            ...option,\n        };\n\n        this.invertRed(invertedRed);\n        this.invertGreen(invertedGreen);\n        this.invertSource(invertedSource);\n        this.setBlurSharp(blurSharp, width, height);\n        this.setStrengthAndLevel(strength, level);\n        this.setType(type);\n\n        this.effectComposer.render(1 / 60);\n    }\n\n    init() {\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\n        const scene = new THREE.Scene();\n        const normalRenderScene = new RenderPass(scene, camera);\n\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\n        this.renderer.setClearColor(0x000000, 0); // the default\n\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\n\n        this.material = new THREE.ShaderMaterial({\n            fragmentShader: NormalMapShader.fragmentShader,\n            vertexShader: NormalMapShader.vertexShader,\n            uniforms: this.normalMapUniform,\n        });\n        this.material.transparent = true;\n\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\n        scene.add(renderMesh);\n\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\n        this.gaussianShaderX.renderToScreen = true;\n\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\n        this.effectComposer.addPass(normalRenderScene);\n        this.effectComposer.addPass(this.gaussianShaderY);\n        this.effectComposer.addPass(this.gaussianShaderX);\n    }\n    getRenderTarget(width?: number, height?: number) {\n        return new THREE.WebGLRenderTarget(width, height, {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false,\n        });\n    }\n    getTexture(image: TexImageSource) {\n        const texture = new THREE.Texture(image);\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\n        texture.anisotropy = 2;\n        texture.needsUpdate = true;\n        return texture;\n    }\n\n    invertRed(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertR.value = -1;\n        } else {\n            this.normalMapUniform.invertR.value = 1;\n        }\n    }\n\n    invertGreen(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertG.value = -1;\n        } else {\n            this.normalMapUniform.invertG.value = 1;\n        }\n    }\n\n    invertSource(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertH.value = -1;\n        } else {\n            this.normalMapUniform.invertH.value = 1;\n        }\n    }\n\n    setBlurSharp(value: number, width: number, height: number) {\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\n    }\n\n    setStrengthAndLevel(strength: number, level: number) {\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\n    }\n\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\n    }\n}","// import distanceTransform from 'distance-transform';\nimport ndarray from 'ndarray';\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\nimport { bilateralFilter } from './bilateral-filter';\nimport { distanceTransform } from './distance-transform';\n\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\n    const z = Math.sin(verticalAngleRadian);\n\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\n};\nexport const applyEmboss = ({\n    inputCanvas,\n    affectedHeight,\n    affectedWidth,\n    maxHeight = 8,\n    lightColorVec = [255, 255, 255],\n    /** Shine parallel with the surface, from rightside. */\n    lightAngleVec,\n    lightPitch,\n    lightYaw,\n    minIntensity = -1,\n    maxIntensity = 1,\n}: {\n    inputCanvas: HTMLCanvasElement,\n    affectedWidth?: number,\n    affectedHeight?: number,\n    maxHeight?: number,\n    lightColorVec?: [number, number, number],\n    lightAngleVec?: [number, number, number],\n    lightPitch?: number,\n    lightYaw?: number,\n    minIntensity?: number,\n    maxIntensity?: number,\n}) => {\n    const ctx = inputCanvas.getContext('2d');\n\n    if (!ctx) return;\n\n    /** Support partial transform to increase transform speed and reduce stuttering */\n    const height = affectedHeight ?? inputCanvas.height;\n    const width = affectedWidth ?? inputCanvas.width;\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\n    const data = imageData.data;\n\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\n        ? lightAngleVec\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\n            ? angleToVector(lightPitch, lightYaw)\n            : [1, 0, 0];\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\n    const normalizedLightAngleVec = [\n        computedLightAngleVec[0] / angleVecMagnitude,\n        computedLightAngleVec[1] / angleVecMagnitude,\n        computedLightAngleVec[2] / angleVecMagnitude\n    ];\n\n    if (!data) return;\n\n    try {\n        /**\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\n         */\n        /** Any pixel that is not transparent will be the foreground. */\n        const validPixelList = new Uint8ClampedArray(width * height);\n        for (let i = 0; i < data.length; i += 4) {\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\n                validPixelList[i / 4] = 0;\n            } else {\n                validPixelList[i / 4] = 1;\n            }\n        }\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\n\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\n            for (let colIndex = 0; colIndex < column; colIndex++) {\n                const currentIndex = (rowIndex * width + colIndex) * 4;\n                const heightValue = dtImageData.get(rowIndex, colIndex);\n\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\n            }\n        }\n\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\n        const heightmapCanvas = document.createElement('canvas');\n        heightmapCanvas.width = width;\n        heightmapCanvas.height = height;\n        heightmapCanvas.getContext('2d').putImageData(\n            new ImageData(nextDtBitmap, width, height),\n            0,\n            0,\n        );\n\n        /**\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\n         */\n        const normalMapCanvas = document.createElement('canvas');\n        normalMapCanvas.width = width;\n        normalMapCanvas.height = height;\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\n        heightToNormalMapConverter.apply(heightmapCanvas, {\n            blurSharp: 0,\n            level: 9,\n            strength: 2.5,\n            invertedRed: false,\n            invertedGreen: false,\n            invertedSource: true,\n            type: SHADER_FILTER_TYPE.SOBEL,\n        });\n\n        /**\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\n         */\n        const softenNormalMapCanvas = document.createElement('canvas');\n        softenNormalMapCanvas.width = width;\n        softenNormalMapCanvas.height = height;\n\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\n        softenNormalMapContext.drawImage(\n            normalMapCanvas,\n            0,\n            0,\n            width,\n            height,\n        );\n        const filteredData = bilateralFilter(\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\n            width,\n            height,\n            9,\n            70,\n            20,\n        );\n\n        /**\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\n         * \n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\n         */\n        const resultData = new Uint8ClampedArray(width * height * 4);\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\n            const baseIntensity = nx * normalizedLightAngleVec[0]\n                + ny * normalizedLightAngleVec[1]\n                + nz * normalizedLightAngleVec[2];\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\n\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\n        }\n\n        return new ImageData(resultData, width, height);\n    } catch (e) {\n        console.error('Could not apply emboss effect', e);\n        return null;\n    }\n};","export const bilateralFilter = (\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\n    width: number,\n    height: number,\n    diameter: number,\n    sigmaColor: number,\n    sigmaSpace: number,\n) => {\n    const output = new Uint8ClampedArray(width * height * 4);\n    const halfD = Math.floor(diameter / 2);\n\n    // Helper function to calculate the Gaussian weight for spatial distance\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\n    }\n\n    // Helper function to calculate the Gaussian weight for color distance\n    function colorWeight(c1: number, c2: number) {\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\n    }\n\n    // Loop through each pixel in the image\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\n\n            // Apply the filter to a local neighborhood around the current pixel\n            for (let ky = -halfD; ky <= halfD; ky++) {\n                for (let kx = -halfD; kx <= halfD; kx++) {\n                    const nx = x + kx;\n                    const ny = y + ky;\n\n                    // Check if the neighbor is within the image bounds\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\n                        const centerPixel = (y * width + x) * 4;\n                        const neighborPixel = (ny * width + nx) * 4;\n\n                        // Get the color values for the center pixel and the neighbor pixel\n                        const rCenter = imageData[centerPixel];\n                        const gCenter = imageData[centerPixel + 1];\n                        const bCenter = imageData[centerPixel + 2];\n                        const rNeighbor = imageData[neighborPixel];\n                        const gNeighbor = imageData[neighborPixel + 1];\n                        const bNeighbor = imageData[neighborPixel + 2];\n\n                        // Compute spatial and color weights\n                        const spatial = spatialWeight(nx, ny, x, y);\n                        const colorR = colorWeight(rCenter, rNeighbor);\n                        const colorG = colorWeight(gCenter, gNeighbor);\n                        const colorB = colorWeight(bCenter, bNeighbor);\n\n                        const weight = spatial * colorR * colorG * colorB;\n\n                        // Accumulate weighted sum of colors\n                        rSum += rNeighbor * weight;\n                        gSum += gNeighbor * weight;\n                        bSum += bNeighbor * weight;\n                        wSum += weight;\n                    }\n                }\n            }\n\n            // Normalize the result and assign it to the output image\n            const outputPixel = (y * width + x) * 4;\n            output[outputPixel] = rSum / wSum;\n            output[outputPixel + 1] = gSum / wSum;\n            output[outputPixel + 2] = bSum / wSum;\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\n        }\n    }\n\n    return output;\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\nexport const generateLayer = (\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\n    exportCtx: CanvasRenderingContext2D | null | undefined,\n    delayQueue: number = 0,\n) => {\n    return new Promise<boolean>(resolve => {\n        setTimeout(() => {\n            if (!canvasLayer.current || !exportCtx) resolve(false);\n            else {\n                try {\n                    canvasLayer.current.toBlob(blob => {\n                        if (!blob) resolve(false);\n                        else {\n                            const url = URL.createObjectURL(blob);\n                            if (!url) resolve(false);\n                            else {\n                                const layer = new Image();\n                                layer.src = url;\n                                layer.onload = () => {\n                                    exportCtx.drawImage(layer, 0, 0);\n                                    URL.revokeObjectURL(url);\n                                    resolve(true);\n                                };\n                                layer.onerror = () => {\n                                    URL.revokeObjectURL(url);\n                                    resolve(false);\n                                };\n                            }\n                        }\n                    });\n                } catch (e) {\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\n                    console.error(e);\n                    resolve(false);\n                }\n            }\n        }, delayQueue * 25);\n    });\n};","import {\n    Card,\n    Foil,\n    frameList,\n    LINK_RATING_ALWAYS_AUTO,\n    LINK_RATING_ALWAYS_HIDE,\n    LINK_RATING_ALWAYS_SHOW,\n    NameStyle,\n    NameStyleType,\n    PresetNameStyleMap,\n} from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink === true;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\n    return [\n        'fusion',\n        'synchro',\n        'xyz',\n        'link',\n        'dark-synchro',\n        'zarc',\n    ].includes(card.frame);\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFooter = (frame: string) => {\n    return ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link'].includes(frame) || checkLightFooter(frame);\n};\n\nexport const checkDiplayLinkRating = (displayMode: number, isLink: boolean) => {\n    let showLinkRating = false;\n    switch (displayMode) {\n        case LINK_RATING_ALWAYS_SHOW: showLinkRating = true; break;\n        case LINK_RATING_ALWAYS_HIDE: showLinkRating = false; break;\n        case LINK_RATING_ALWAYS_AUTO: showLinkRating = isLink; break;\n    }\n\n    return showLinkRating;\n};\n\nexport const resolveFrameStyle = (frameData: Record<string, string | undefined>, isPendulum: boolean) => {\n    const {\n        frame,\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    } = frameData;\n    const resolvedFrame = frame ?? 'effect';\n    const resolvedTopLeft = topLeftFrame === 'auto' ? resolvedFrame : topLeftFrame;\n    const resolvedTopRight = (topRightFrame === 'auto' ? resolvedTopLeft : topRightFrame) ?? resolvedFrame;\n    const resolvedBottomLeft = (bottomLeftFrame === 'auto'\n        ? (isPendulum ? 'spell' : resolvedTopLeft)\n        : bottomLeftFrame) ?? resolvedFrame;\n    const resolvedBottomRight = (bottomRightFrame === 'auto'\n        ? resolvedBottomLeft\n        : bottomRightFrame) ?? resolvedFrame;\n    const resolvedEffectBackground = (effectBackground === 'auto'\n        ? resolvedBottomLeft\n        : effectBackground) ?? resolvedFrame;\n    const resolvedPendulumEffectBackground = (pendulumEffectBackground === 'auto'\n        ? resolvedBottomLeft\n        : pendulumEffectBackground) ?? resolvedFrame;\n\n    return {\n        topLeftFrame: resolvedTopLeft,\n        topRightFrame: resolvedTopRight,\n        bottomLeftFrame: resolvedBottomLeft,\n        bottomRightFrame: resolvedBottomRight,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    };\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return nameStyle;\n    }\n\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    const lightHeader = checkLightHeader(frame);\n\n    let contextualFont = 'Default';\n    if (format === 'ocg') contextualFont = 'OCG';\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { ART_FINISH_TYPE, RegionMap, Card, CardFlag, FrameDyeList, getDefaultCardFlag, getDefaultCardOpacity, getDefaultCrop, getDefaultDyeList, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\nimport { checkMonster } from './categorize';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    region: 'rg',\n    frame: 'fr',\n    rightFrame: 'rf',\n    leftFrame: 'lf',\n    pendulumRightFrame: 'rpf',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        /** legacy */\n        artFrame: 'opaf',\n        artBorder: 'opab',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n    },\n    finish: 'fn',\n    otherFinish: 'of',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        fontStyle: 'efs',\n        upSize: 'eus',\n        background: 'ebg',\n        minLine: 'eml',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        fontStyle: 'pfs',\n        upSize: 'pus',\n        background: 'pbg',\n        minLine: 'pml',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        embossPitch: 'nsep',\n        embossThickness: 'nset',\n        embossYaw: 'nsey',\n        fillStyle: 'nsfs',\n        font: 'nsft',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasEmboss: 'nshe',\n        hasGradient: 'nshg',\n        hasOutline: 'nshl',\n        hasShadow: 'nshs',\n        headTextFillStyle: 'nshfs',\n        lineColor: 'nslc',\n        lineOffsetX: 'nslox',\n        lineOffsetY: 'nsloy',\n        lineWidth: 'nslw',\n        pattern: 'nspt',\n        preset: 'nspr',\n        shadowBlur: 'nssb',\n        shadowColor: 'nssc',\n        shadowOffsetX: 'nssox',\n        shadowOffsetY: 'nssoy',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    starList: 'stl',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    linkRating: 'lr',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    pendulumSize: 'psi',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    dyeList: 'dl',\n    flag: 'fl',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const decompressedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                decompressedCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return decompressedCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const unshortenedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return unshortenedCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let rebuiltCard: Record<string, any>;\n    if (isCondensed) {\n        rebuiltCard = legacyReverseCardDataShortener(card);\n    } else {\n        rebuiltCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(rebuiltCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    /** Ensure that we detech the actual version from incoming cards. */\n    delete baseCard.version;\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    } else {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n            ...migratedCard.pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (migratedCard.region == null) migratedCard.region = RegionMap[migratedCard.format === 'tcg' ? 'en' : 'jp'].key;\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\n    if (migratedCard.rightFrame == null) migratedCard.rightFrame = 'auto';\n    if (migratedCard.leftFrame == null) migratedCard.leftFrame = 'auto';\n    if (migratedCard.pendulumRightFrame == null) migratedCard.pendulumRightFrame = 'auto';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n    if (!Array.isArray(migratedCard.starList)) migratedCard.starList = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if (migratedCard.finish) {\n        const finishList = migratedCard.finish;\n\n        if (finishList.includes(ART_FINISH_TYPE)) {\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\n            migratedCard.otherFinish = [\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n            ];\n        }\n    }\n    if (Array.isArray(migratedCard.otherFinish)\n        && ((migratedCard.otherFinish as unknown[]).length === 3 || migratedCard.otherFinish[3] == null)\n    ) {\n        migratedCard.otherFinish[3] = getEmptyCard().otherFinish[3];\n    }\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n    migratedCard.backgroundCrop = {\n        ...getDefaultCrop(),\n        ...migratedCard.backgroundCrop,\n    };\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n    if (migratedCard.linkRating == null) migratedCard.linkRating = '';\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    const defaultFlagList = getDefaultCardFlag();\n    if (!Array.isArray(migratedCard.flag)) migratedCard.flag = defaultFlagList;\n    else if (migratedCard.flag.length < defaultFlagList.length) {\n        const currentFlagList = [...migratedCard.flag];\n        migratedCard.flag = defaultFlagList.map((entry, index) => {\n            if (typeof currentFlagList[index] === 'number') return currentFlagList[index];\n            return entry;\n        }) as CardFlag;\n    }\n\n    const defaultDyeList = getDefaultDyeList();\n    if (!Array.isArray(migratedCard.dyeList)) migratedCard.dyeList = defaultDyeList;\n    else if (migratedCard.dyeList.length < defaultDyeList.length) {\n        const currentDyeList = [...migratedCard.dyeList];\n        migratedCard.dyeList = defaultDyeList.map((entry, index) => {\n            if (typeof currentDyeList[index] === 'string') return currentDyeList[index];\n            return entry;\n        }) as FrameDyeList;\n    }\n\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\n        migratedCard.version = 2;\n\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\n        /**\n         * For older card, we have a detailed check to decide whether to display stats or not.\n         * \n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\n         */\n        const isMonster = checkMonster({ frame });\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n            ? !!(atk || def || (isLink && linkMap.length))\n            : isMonster;\n\n        if (!statInEffect) {\n            migratedCard.atk = '';\n            migratedCard.def = '';\n        }\n    }\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n    const href = window.URL.createObjectURL(blob);\n\n    link.download = name;\n    link.href = href;\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n    window.URL.revokeObjectURL(href);\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const setCharAt = (str: string, index: number, chr: string) => {\n    if (index > str.length - 1) return str;\n    return str.substring(0, index) + chr + str.substring(index + 1);\n};\n\nexport const filterFromTrail = (list: (string | undefined | null)[]) => {\n    const nextList = [...list];\n    for (let cnt = list.length - 1; cnt >= 0; cnt--) {\n        if (nextList[cnt] == null || nextList[cnt] === '') {\n            nextList.pop();\n        } else {\n            break;\n        }\n    }\n\n    return nextList;\n};\n\nexport const padRight = (list: (string | undefined | null)[], limit: number, padUnit = '') => {\n    const nextList = [...list];\n    for (let cnt = list.length; cnt < limit; cnt++) {\n        nextList.push(padUnit);\n    }\n\n    return nextList;\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n    PendulumSize,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst boxSizeMap: Record<string, string> = {\n    large: 'Large',\n    medium: 'Normal',\n    small: 'Small',\n};\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue as PendulumSize;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: boxSizeMap[pendulumSize],\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\nimport { checkExtraDeckMonster } from './categorize';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\n    /** Try to being clever */\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\n    const formattedMonsterEffect = (checkExtraDeckMonster({\n        frame: normalizedFrame ?? 'normal'\n    }) && splittedMonsterEffect.length > 1)\n        ? [\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\n            ...splittedMonsterEffect.slice(1),\n        ].join('\\n')\n        : normalizedMonsterEffect;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: formattedMonsterEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","export const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\n/** Contrast formula from google \\ :v / */\nexport const getContrastColor = (rgbColor: number[]) => {\n    return ((rgbColor[0] ?? 0) * 299 + (rgbColor[1] ?? 0) * 587 + (rgbColor[2] ?? 0) * 114) / 1000 >= 128\n        ? '#000000'\n        : '#FFFFFF';\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};\n\nexport const getDynamicFont = ({\n    heightCap,\n    lineCount,\n}: {\n    heightCap: number,\n    lineCount: number,\n}): FontSizeData => {\n    return {\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\n        fontSize: heightCap / lineCount * 0.9,\n        lineHeight: heightCap / lineCount,\n        lineCount,\n        bulletOffset: 1,\n    };\n};\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\n    return {\n        ...fontData,\n        fontList: [\n            ...fontData.fontList,\n            getDynamicFont(dynamicFontOption),\n        ]\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};\n\nexport const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\n\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\n    const {\n        trueBaseline,\n        trueEdge,\n        trueWidth,\n        trueHeightCap,\n    } = coordinateData;\n\n    return {\n        ...coordinateData,\n        trueBaseline: trueBaseline * scale,\n        trueEdge: trueEdge * scale,\n        trueWidth: trueWidth * scale,\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\n    };\n};\n\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\n    return coordinate.map(value => value * scale) as [number, number, number, number];\n};\n\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\n    fontSizeData: FontData,\n    scale: number,\n): FontData => {\n    const {\n        allRightSymbolOffset,\n        bulletOffset,\n        bulletWidth,\n        fontSize,\n        headTextSpacing,\n        iconSymbolWidth,\n        lineHeight,\n        offsetY,\n        ordinalFontOffsetY,\n        wordLetterSpacing,\n    } = fontSizeData;\n\n    return {\n        ...fontSizeData,\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\n        bulletWidth: bulletWidth * scale,\n        fontSize: fontSize * scale,\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\n        lineHeight: lineHeight * scale,\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\n    };\n};\n\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\n    return {\n        ...fontData,\n        fontList: fontData.fontList.map(entry => {\n            return scaleFontSizeData(entry, scale);\n        }),\n    };\n};","export const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './canvas';\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './color';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';\nexport * from './scale';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    cursor: pointer;\n    &:not(:disabled):hover {\n        background-color: var(--sub-primary);\n    }\n    &:disabled {\n        color: var(--color-dim);\n        cursor: not-allowed;\n        background-color: var(--color-contrast);\n        border: var(--bw) solid var(--color-contrast);\n        .anticon {\n            color: inherit;\n        }\n    }\n    input {\n        display: none;\n    }  \n`;","import { RegionMap, DefaultFormatAttribute, InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        region,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n        nameStyle,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const targetRegion = RegionMap[region].category === targetFormat\n        ? region\n        : RegionMap[DefaultFormatAttribute[targetFormat]].key;\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n    const nextNameStyle: typeof nameStyle = {\n        ...nameStyle,\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\n            ? 'OCG'\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\n                ? 'Default'\n                : nameStyle.font,\n    };\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        region: targetRegion,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n        nameStyle: nextNameStyle,\n    };\n};","import { create } from 'zustand';\n\nexport type BatchDownloadStore = {\n    batchName: string,\n    batchQueue: string[],\n    batchDataMap: Record<string, { name: string, blob: Blob }>,\n    isBatchDownloading: boolean,\n    isReady: boolean,\n    startBatchDownload: (batchName: string, batchQueue: string[]) => void,\n    stopBatchDownload: () => void,\n    clearQueue: () => void,\n    addToBatch: (cardId: string, cardName: string, cardBlob: Blob) => void,\n};\nexport const useBatchDownload = create<BatchDownloadStore>((set, get) => {\n    return {\n        batchName: '',\n        batch: undefined,\n        batchQueue: [],\n        batchDataMap: {},\n        isBatchDownloading: false,\n        isReady: false,\n        startBatchDownload: (batchName, batchQueue) => {\n            set({\n                batchName,\n                batchQueue,\n                isBatchDownloading: true,\n            });\n        },\n        stopBatchDownload: () => {\n            set({\n                batchName: '',\n                batchQueue: [],\n                batchDataMap: {},\n                isBatchDownloading: false,\n                isReady: false,\n            });\n        },\n        clearQueue: () => {\n            set({\n                batchQueue: [],\n            });\n        },\n        addToBatch: (cardId, cardName, cardBlob) => {\n            set(({ batchQueue, batchDataMap }) => {\n                const nextQueue = batchQueue.filter(id => id !== cardId);\n                const nextBatchDataMap = { ...batchDataMap };\n                nextBatchDataMap[cardId] = { name: cardName, blob: cardBlob };\n\n                return {\n                    batchQueue: nextQueue,\n                    batchDataMap: nextBatchDataMap,\n                    isReady: nextQueue.length === 0 ? true : false,\n                };\n            });\n        },\n    };\n});","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\nexport type WithLanguage = {\n    language: LanguageDataDictionary\n};\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-6.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-6.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'input.name-style.emboss.color.alert': (\n            colorTab: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\n                { colorTab },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardFlag,\n    CardOpacity,\n    CondenseType,\n    DYE_LIST_LENGTH,\n    FLAG_LENGTH,\n    Foil,\n    FoilMap,\n    FrameDyeList,\n    getArtCanvasCoordinate,\n    getDefaultCardFlag,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultDyeList,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    MAX_STAR_LENGTH,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    'Region',\n    /** Creative customize stuff */\n    'Star Type',\n    'Star Alignment',\n    'Card Icon Type',\n    'Link Rating',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Emboss Pitch',\n    'Name Style - Emboss Yaw',\n    'Name Style - Emboss Thickness',\n    'Name Style - Has Emboss',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Effect Style - Font Style',\n    'Effect Style - Background',\n    'Effect Style - Min Line',\n    'Pendulum Size',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Pendulum Effect Style - Font Style',\n    'Pendulum Effect Style - Background',\n    'Pendulum Effect Style - Min Line',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'Other Finish - Attribute',\n    'Other Finish - Background',\n    'Other Finish - Icon',\n    'Other Finish - Sticker',\n    'Left Frame',\n    'Right Frame',\n    'Bottom Right Frame',\n    'Dye List',\n    'Star List',\n    'Flag',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n    let error = '';\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            artFinish,\n            artFit,\n            artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            backgroundFit,\n            backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            flag,\n            foil,\n            format,\n            region,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            leftFrame,\n            linkMap,\n            linkRating,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherFinish,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            pendulumStyle,\n            pendulumTextStyle,\n            rightFrame,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            starList,\n            typeAbility,\n            typeTextStyle,\n            dyeList,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n        const stringifedFlag = flag.join('|');\n        const stringifedDyeList = dyeList.join('|');\n        const stringifedSubFamilyList = starList.join('|');\n\n        write('Format', format);\n        write('Region', region);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink ?? undefined);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Link Rating', linkRating);\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Effect Style - Font Style', effectStyle.fontStyle);\n        write('Effect Style - Background', effectStyle.background);\n        write('Effect Style - Min Line', effectStyle.minLine);\n        write('Pendulum Size', pendulumSize);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\n        write('Pendulum Effect Style - Background', pendulumStyle.background);\n        write('Pendulum Effect Style - Min Line', pendulumStyle.minLine);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('Other Finish - Attribute', otherFinish[0]);\n        write('Other Finish - Icon', otherFinish[1]);\n        write('Other Finish - Sticker', otherFinish[2]);\n        write('Other Finish - Background', otherFinish[3]);\n        write('Left Frame', leftFrame);\n        write('Right Frame', rightFrame);\n        write('Bottom Right Frame', pendulumRightFrame);\n        write('Dye List', stringifedDyeList);\n        write('Star List', stringifedSubFamilyList);\n        write('Flag', stringifedFlag);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\n            error = 'offline-data';\n        }\n\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return {\n        value: [\n            CsvStandardFieldList.join(','),\n            valueList.join('\\n'),\n        ].join('\\n'),\n        error,\n    };\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n                const rightFrame = (reader('Right Frame') ?? emptyCard.rightFrame).toLowerCase();\n                const leftFrame = (reader('Left Frame') ?? emptyCard.leftFrame).toLowerCase();\n                const pendulumRightFrame = (reader('Bottom Right Frame') ?? emptyCard.pendulumRightFrame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = reader('Star Type') === 'text'\n                    ? rawStar\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\n                        ? parseInt(rawStar)\n                        : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\n                const finishIcon = reader('Other Finish - Icon') ?? '';\n                const finishBackground = reader('Other Finish - Background') ?? '';\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const region = (reader('Region') ?? emptyCard.region).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter(entry => typeof entry === 'string' && entry !== '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\n                const effectBackground = (reader('Effect Style - Background') ?? emptyCard.effectStyle.background).toLowerCase();\n                const pendulumEffectBackground = (reader('Pendulum Effect Style - Background') ?? emptyCard.pendulumStyle.background).toLowerCase();\n                const effectMinLine = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.minLine);\n                const pendulumEffectMinLine = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.minLine);\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n                const linkRating = reader('Link Rating') ?? '';\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n                const baseFlag = (reader('Flag') ?? '').split('|').map(Number).slice(0, FLAG_LENGTH) as CardFlag;\n                const flag = getDefaultCardFlag().map((entry, index) => {\n                    if (typeof baseFlag[index] === 'number') return baseFlag[index];\n                    return entry;\n                }) as CardFlag;\n\n                const baseDyeList = (reader('Dye List') ?? '').split('|').map(String).slice(0, DYE_LIST_LENGTH) as FrameDyeList;\n                const dyeList = getDefaultDyeList().map((entry, index) => {\n                    if (typeof baseDyeList[index] === 'string') return baseDyeList[index];\n                    return entry;\n                }) as FrameDyeList;\n\n                const starList = (reader('Star List') ?? '').split('|').map(String).slice(0, MAX_STAR_LENGTH);\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    dyeList,\n                    effect,\n                    effectStyle: {\n                        condenseTolerant,\n                        upSize: effectUpSize,\n                        fontStyle: effectFontStyle,\n                        background: effectBackground,\n                        minLine: effectMinLine,\n                    },\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    flag,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    leftFrame,\n                    linkMap,\n                    linkRating,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherFinish: [finishAttribute, finishIcon, finishSticker, finishBackground] as OtherFinish,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumRightFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumSize,\n                    pendulumStyle: {\n                        upSize: pendulumEffectUpSize,\n                        fontStyle: pendulumEffectFontStyle, \n                        background: pendulumEffectBackground,\n                        minLine: pendulumEffectMinLine,\n                    },\n                    pendulumTextStyle,\n                    region,\n                    rightFrame,\n                    setId,\n                    star,\n                    starList,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    try {\n        const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n        if (frameResult !== 0) return frameResult;\n\n        /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n        const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n        return bottomFrameResult;\n    } catch (e) {\n        return 0;\n    }\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    selectedMap: Record<string, string>,\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    selectCard: (id: string, type: 'add' | 'remove') => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setSelectMap: (id: InternalCard[], type?: 'add' | 'replace') => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        selectedMap: {},\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        selectCard: (id, type) => {\n            set(({ selectedMap }) => {\n                const nextMap = { ...selectedMap };\n                if (type === 'add') nextMap[id] = id;\n                else delete nextMap[id];\n\n                return { selectedMap: nextMap };\n            });\n        },\n        setSelectMap: (cardList, type) => set(({ selectedMap }) => ({\n            selectedMap: cardList.reduce((prev, curr) => {\n                prev[curr.id] = curr.id;\n                return prev;\n            }, type === 'replace' ? {} : { ...selectedMap } as Record<string, string>),\n        })),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst, ExportFormat } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    allowHotkey: boolean,\n    exportFormat: ExportFormat,\n    exportScheme: string,\n    globalScale: number,\n    mirrorPendulumScale: boolean,\n    reduceMotionColor: boolean,\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraAttribute: boolean,\n    showExtraDecorativeOption: boolean,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        allowHotkey,\n        exportFormat,\n        exportScheme,\n        globalScale,\n        mirrorPendulumScale,\n        reduceMotionColor,\n        resolution,\n        showCreativeOption,\n        showExtraAttribute,\n        showExtraDecorativeOption,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            exportScheme: typeof exportScheme === 'string' ? exportScheme : 'with-name',\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\n                ? globalScale\n                : 1,\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraAttribute: typeof showExtraAttribute === 'boolean' ? showExtraAttribute : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity, PendulumSize } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\nimport { useBatchDownload } from './use-batch-download';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const {\n        addToBatch,\n        batchDataMap,\n        isBatchDownloading,\n    } = useBatchDownload();\n    const resolution = useSetting(state => state.setting.resolution);\n    const exportScheme = useSetting(state => state.setting.exportScheme);\n    const {\n        opacity,\n        name,\n        isPendulum,\n        pendulumSize,\n    } = currentCard;\n    const normalizedName = normalizeCardName(name);\n    const pendingSave = useRef(false);\n\n    const getCardDataUrl = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && clonedCanvas && clonedCanvasContext\n            && !isTainted\n        ) {\n            if (size) {\n                clonedCanvas.width = size[0];\n                clonedCanvas.height = size[1];\n            }\n            /** Resize here */\n            clonedCanvasContext.drawImage(\n                drawCanvas,\n                0, 0, drawCanvas.width, drawCanvas.height,\n                0, 0, clonedCanvas.width, clonedCanvas.height,\n            );\n\n            return clonedCanvas.toDataURL('image/png');\n        }\n    }, [exportCanvasRef, isTainted, resolution]);\n    const addToCurrentBatch = useCallback(async (\n        cardName: string,\n        cardId: string,\n        size: [number, number] = resolution,\n    ) => {\n        try {\n            const fetchedDataUrl = await fetch(getCardDataUrl(size));\n            const blob = await fetchedDataUrl.blob();\n            if (isBatchDownloading) addToBatch(cardId, cardName, blob);\n        } catch (e) {\n            onDownloadError();\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [addToBatch, getCardDataUrl, isBatchDownloading, onDownloadComplete, onDownloadError, resolution]);\n    const download = useCallback((size: [number, number] = resolution) => {\n        try {\n            const normalizedName = normalizeCardName(name);\n            var link = document.createElement('a');\n            link.download = normalizedName\n                ? `${normalizedName}.png`\n                : 'card.png';\n            link.href = getCardDataUrl(size);\n            link.click();\n        } catch (e) {\n            onDownloadError();\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [resolution, onDownloadComplete, name, getCardDataUrl, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [normalizedName]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            pendulumSize,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                            if (isBatchDownloading && !batchDataMap[normalizedCard.id]) {\n                                setTimeout(() => {\n                                    addToCurrentBatch(\n                                        exportScheme === 'with-name'\n                                            ? `${normalizedName}.png`\n                                            : `${normalizedCard.setId} - ${normalizedName}.png`,\n                                        normalizedCard.id,\n                                    );\n                                }, 200);\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRGBA } from 'src/util';\n\nexport type UseColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n};\nexport const useColorPicker = ({\n    value = '',\n    onChange,\n}: UseColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRGBA(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        });\n    }, [value]);\n\n    return {\n        inputText: currentText,\n        color: internalValue,\n        setColor: setCurrentText,\n    };\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth * maximumScale,\n    height = CanvasHeight * maximumScale,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\n        pendulumSize?: PendulumSize,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n                const pendulumSuffix = pendulumSize\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\n                    : DEFAULT_PENDULUM_SIZE;\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType, pendulumSuffix);\n                    }\n                } else {\n                    await caller(finishType, pendulumSuffix);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_LINE_COLOR = '#000000';\nconst DEFAULT_LINE_WIDTH = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x,\n    y,\n    blur,\n    color,\n    colorGradient,\n    shadowColor,\n    lineColor,\n    lineColorGradient,\n    lineWidth,\n    globalScale = 1,\n    useDefault = true,\n}: {\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    useDefault?: boolean,\n    colorGradient?: CanvasGradient,\n    lineColorGradient?: CanvasGradient,\n} & CanvasTextStyle) => {\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\n\n    return () => {\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n            ctx.drawImage(image, actualDX, actualDY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n                ctx.drawImage(image, actualDX, actualDY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n    );\n};\n\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number),\n    dy: number | ((image: HTMLImageElement) => number),\n    dw: number | ((image: HTMLImageElement) => number),\n    dh: number | ((image: HTMLImageElement) => number),\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n\n            if (\n                typeof actualSX === 'number'\n                && typeof actualSY === 'number'\n                && typeof actualSW === 'number'\n                && typeof actualSH === 'number'\n            ) {\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n            } else {\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n            }\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n    \n                if (\n                    typeof actualSX === 'number'\n                    && typeof actualSY === 'number'\n                    && typeof actualSW === 'number'\n                    && typeof actualSH === 'number'\n                ) {\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n                } else {\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n                }\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    dx, dy,\n    dw, dh,\n    sx, sy,\n    sw, sh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n        dw, dh,\n        sx, sy,\n        sw, sh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    globalScale: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    FontDeviationMap,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n    globalScale: number,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n        ? 0.046875\n        : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2 * globalScale;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation,\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviationMap,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        letterMap = {},\n        threshold = 10,\n    } = deviation ?? {};\n    const {\n        uniformBoxDescent,\n    } = letterMap[letter] ?? {};\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    let uniformYScale = 1;\n    let boxDescentCompensate = 0;\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\n\n        /** Need to carefully survey if we over-compensate in edge case. */\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\n\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\n    }\n    ctx.scale(1, uniformYScale);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\n    });\n    ctx.scale(1, 1 / uniformYScale);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: FontData,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n    globalScale: number,\n) => {\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        fontSize,\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = () => {\n        symbolFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyNumberFont, stopApplyNumberFont,\n        applyLargerText, stopApplyLargerText,\n        applySymbolFont, stopApplySymbolFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applyFuriganaFont, stopApplyFuriganaFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n                + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    FontData,\n    BULLET_LETTER,\n    TCGSymbolLetterRegex,\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    FragmentSplitRegex,\n    WholeWordRegex,\n    DefaultFontSizeData,\n    ST_ICON_SYMBOL,\n    TextData,\n    NoSpaceRegex,\n    LETTER_GAP_RATIO,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    SquareBracketLetterRegex,\n    CapitalLetterRegex,\n    NumberRegex,\n    OCGNoOverheadGapRegex,\n    GAP_PER_WIDTH_RATIO,\n    RUBY_REGEX,\n    DefaultFontData,\n    RUBY_BONUS_RATIO,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NonCompressableRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\nimport { getLetterWidth } from './letter';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing: _letterSpacing,\n    format,\n    globalScale,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    format: string,\n    globalScale: number,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont();\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\n        );\n\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    format,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    globalScale,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    globalScale: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\nimport { scaleFontSizeData } from 'src/util';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    textDrawer,\n    debug = false,\n    option,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    globalScale: number,\n    option?: {\n        drawHeadText?: boolean,\n    },\n    debug?: boolean,\n}) => {\n    const { drawHeadText = true } = option ?? {};\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        headTextFillStyle,\n        headTextBold = DefaultFontData.headTextBold,\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        metricMethod,\n        fontStyle,\n        letterDeviationMap = {},\n    } = fontData;\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        bulletOffset = scaledDefaultFontSizeData.bulletOffset,\n        bulletWidth,\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\n        fontSize,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\n        wordLetterSpacing,\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\n    } = fontSizeData;\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const {\n        stopApplyFuriganaFont, applyFuriganaFont,\n        stopApplyLargerText, applyLargerText,\n        stopApplyNumberFont, applyNumberFont,\n        stopApplyOrdinalFont, applyOrdinalFont,\n        applyScale, reverseScale,\n        applySymbolFont, stopApplySymbolFont,\n        applyAsymmetricScale, resetScale,\n    } = textWorker;\n\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    const baseline = trueBaseline / yRatio;\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n            globalScale,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(\n                    ctx,\n                    fragmentEdge,\n                    trueBaseline + bulletOffset - 1 * globalScale,\n                    bulletWidth,\n                    getBulletSpacing(format) * globalScale,\n                );\n                fragmentEdge += bulletWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg'\n                        ? allRightSymbolOffset\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    globalScale,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                if (drawHeadText) fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                    globalScale,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[`${globalScale}`],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applySymbolFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const letter = fragment;\n                applySymbolFont();\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\n                fragmentEdge += letterWidth;\n\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                    globalScale,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap?.[`${globalScale}`],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    FLAVOR_CONDITION_SOURCE,\n    FLAVOR_LINE_PLACEHOLDER,\n    FULL_LINE_PLACEHOLDER,\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    OCG_BULLET_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    OCG_RUBY_SOURCE,\n    UNCOMPRESSED_SOURCE,\n    WHOLE_WORD_SOURCE,\n    contextualDoubleQuoteRegex,\n    ocgKeywordDataMap,\n    ocgNumberCircleMap,\n    ocgToTCGLetterMap,\n    tcgToOCGLetterMap,\n} from 'src/model';\n\nexport type LineOption = {\n    line: string,\n    alignment: 'left' | 'justify',\n};\nexport const splitEffect = (effect: string, isNormal = false) => {\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\n    const fullLineListOption: LineOption[] = [];\n    const lineList: string[] = [];\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\n    let effectText = effect;\n    let effectFlavorCondition = '';\n    /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n     * \n     * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n     * \n     * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n     * */\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n\n    /** Infinite loop guarding just in case, we are dealing with while loop anyways */\n    let tryCnt = 0;\n    while (effectText.length > 0 && tryCnt <= 100) {\n        const result = wholeLineRegex.exec(effectText);\n        const lineReplacement = result?.[1];\n        const lineContent = result?.[2];\n        const fullLineReplacement = result?.[3];\n        const fullLineContent = result?.[4];\n\n        if (lineContent && lineReplacement) {\n            effectText = effectText.replace(lineReplacement, '');\n            fullLineListOption.push({ line: lineContent, alignment: 'left' });\n            lineList.push(FULL_LINE_PLACEHOLDER);\n        } else if (fullLineContent && fullLineReplacement) {\n            effectText = effectText.replace(fullLineReplacement, '');\n            fullLineListOption.push({ line: fullLineContent, alignment: 'justify' });\n            lineList.push(FULL_LINE_PLACEHOLDER);\n        } else {\n            const paragraphResult = /(.*)(\\n|$)/.exec(effectText);\n            const lineReplacement = paragraphResult?.[0];\n            const lineContent = paragraphResult?.[1];\n            if (lineReplacement) {\n                /** Restore all remaining nb line symbol back to their normal letters. Then split those paragraph into lines. */\n                lineList.push(...lineContent\n                    .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\n                    .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]')\n                    .split('\\n')\n                );\n                effectText = effectText.replace(lineReplacement, '');\n            }\n        }\n        tryCnt++;\n    }\n    if (effectFlavorCondition) {\n        lineList.push(FLAVOR_LINE_PLACEHOLDER);\n    }\n\n    return {\n        lineList,\n        fullLineListOption: [...fullLineListOption],\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    NormalFontData,\n    FULL_LINE_PLACEHOLDER,\n    FLAVOR_LINE_PLACEHOLDER,\n} from '../../model';\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    useItalic,\n    statInEffect,\n    typeInEffect,\n    frameType,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    useItalic: boolean,\n    frameType: 'normal' | 'pendulumLarge',\n}) => {\n    const coordinateKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n    const fontDataKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\n        fontData = NormalFontData[fontDataKey];\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nexport const drawEffect = ({\n    ctx,\n    content,\n    isNormal = false,\n    // useItalic = false,\n    fontDataKey = 'tcg',\n    fontData = EffectFontData[fontDataKey],\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    useItalic?: boolean,\n    fontData?: FontData,\n    fontDataKey?: string,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n        globalScale: number,\n        minLine?: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n        globalScale = 1,\n        minLine: baseMinLine = 0,\n    } = option ?? {};\n    const minLine = typeof baseMinLine === 'number' ? baseMinLine : 0;\n    let sizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return sizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        lineList,\n        fullLineListOption,\n        effectFlavorCondition,\n    } = splitEffect(normalizedContent, isNormal);\n\n    let effectiveLineCount = 0;\n    const scaledFontData = scaleFontData(fontData, globalScale);\n    const { fontList } = scaledFontData;\n    const yRatio = 1;\n    /**\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\n     * \n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\n     * */\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\n        const requireDynamicSize = sizeLevel === fontList.length\n            ? true\n            : false;\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\n            ? {\n                '1': 1000,\n                '2': 1000,\n                '3': 1000,\n            }\n            : (format === 'tcg'\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\n                    ? CondenseTolerantMap['relaxed']\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n                : {\n                    '1': 800,\n                    '2': 800,\n                    '3': 800,\n                });\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n            trueHeightCap,\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\n\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\n        const dynamicFontData = useDynamicSize\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\n            : scaledFontData;\n        const dynamicSizeLevel = useDynamicSize\n            ? sizeLevel\n            : appliedSizeLevel;\n        const {\n            font: dynamicFont,\n            fontList: dynamicFontList,\n        } = dynamicFontData;\n        const fontSizeData = useDynamicSize\n            ? dynamicFontList[dynamicSizeLevel]\n            : fontList[appliedSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(dynamicFont)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData: dynamicFontData,\n            fontLevel: dynamicSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = (lineList.length > lineCount && typeof trueHeightCap === 'number')\n            ? 1 // If dynamic size is possible, no need to find condense value if current line count is larger than the font's maximum line count, it will overflow anyways.\n            : condense(\n                median => {\n                    const { currentLineList, currentLineCount } = createLineList({\n                        ctx,\n                        median,\n                        paragraphList: lineList,\n                        additionalLineCount: 0,\n                        format, textData,\n                        width,\n                        globalScale,\n                    });\n                    lineListWithRatio = currentLineList;\n\n                    if (currentLineCount > lineCount) return false;\n                    return true;\n                },\n                200,\n            );\n        effectiveLineCount = Math.max(minLine, lineListWithRatio.length);\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\n        const tolerantValue = tolerancePerSentence[`${lineList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            ((effectiveMedian < tolerantValue) && (sizeLevel < fontList.length))\n            || minLine > lineCount\n        ) {\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\n        } else {\n            clearCanvas(ctx);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            lineListWithRatio\n                .forEach(({\n                    line: precalculatedLine,\n                    effectiveMedian,\n                    isLast,\n                }) => {\n                    if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\n                        const { line, alignment } = fullLineListOption.shift();\n                        const isLast = alignment === 'justify' ? false : true;\n                        const xRatio = 1/1000 * condense(\n                            median => {\n                                const { currentLineCount } = createLineList({\n                                    ctx,\n                                    median,\n                                    paragraphList: [line],\n                                    format, textData,\n                                    width,\n                                    globalScale,\n                                });\n\n                                if (currentLineCount > 1) return false;\n                                return true;\n                            },\n                        );\n                        const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\n                        ctx.scale(xRatio, yRatio);\n                        drawLine({\n                            ctx,\n                            tokenList,\n                            xRatio, yRatio,\n                            trueEdge, trueBaseline,\n                            spaceWidth,\n                            textData,\n                            format,\n                            globalScale,\n                        });\n                    } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\n                        const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\n                        const dynamicFlavorFontData = useDynamicSize\n                            ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: Math.max(minLine, lineListWithRatio.length) })\n                            : flavorFontData;\n                        const { fontSize } = useDynamicSize\n                            ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\n                            : flavorFontData.fontList[appliedSizeLevel];\n                        const flavorTextCurrentFont = createFontGetter();\n                        ctx.font = flavorTextCurrentFont\n                            .setSize(fontSize)\n                            .setFamily(flavorFontData.font)\n                            .getFont();\n                        const flavorTextData = {\n                            fontData: dynamicFlavorFontData,\n                            fontLevel: dynamicSizeLevel,\n                            currentFont: flavorTextCurrentFont,\n                        };\n                        const xRatio = 1/1000 * condense(\n                            median => {\n                                const { currentLineCount } = createLineList({\n                                    ctx,\n                                    median,\n                                    paragraphList: [effectFlavorCondition],\n                                    format, textData: flavorTextData,\n                                    width,\n                                    globalScale,\n                                });\n\n                                if (currentLineCount > 1) return false;\n                                return true;\n                            },\n                        );\n                        const tokenList = tokenizeText(effectFlavorCondition);\n                        ctx.scale(xRatio, yRatio);\n                        drawLine({\n                            ctx,\n                            tokenList,\n                            xRatio, yRatio,\n                            trueEdge, trueBaseline,\n                            textData: flavorTextData,\n                            format,\n                            globalScale,\n                        });\n                    } else {\n                        /** Normal line: Draw with the calculated median */\n                        const xRatio = effectiveMedian / 1000;\n                        const line = precalculatedLine;\n                        const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\n                        ctx.scale(xRatio, yRatio);\n                        drawLine({\n                            ctx,\n                            tokenList,\n                            xRatio, yRatio,\n                            trueEdge, trueBaseline,\n                            spaceWidth,\n                            textData,\n                            format,\n                            globalScale,\n                        });\n                    }\n\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n                    trueBaseline += lineHeight;\n                });\n            break;\n        }\n        resetStyle();\n    }\n\n    return sizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\n\nconst {\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    globalScale,\n    cardIcon,\n    text,\n    star,\n    starList,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n    loopStarFinish,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    globalScale: number,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starList: string[],\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    /** We filter out all undefined star only at the trail of the star list */\n    const normalizedStarList = Array.isArray(starList)\n        ? starList\n        : [];\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = cardIcon === 'custom'\n        ? normalizedStarList.length\n        : typeof star === 'string'\n            ? star === '' ? 0 : 1\n            : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    const {\n        canvas: starCanvas,\n        ctx: starCtx,\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\n    await Promise.all([...Array(normalizedStarCount)]\n        .map(async (_, index) => {\n            offset += (starWidth + startSpacing);\n            /** We must factor alignment here, because presentation does not factor alignment */\n            const cardIconIndex = normalizedStarCount - 1 - index;\n            const cardIconName = cardIcon === 'custom' ? normalizedStarList[cardIconIndex] : cardIcon;\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(starCtx, `subfamily/subfamily-${cardIconName}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n    if (loopStarFinish) {\n        const {\n            canvas: starFinishCanvas,\n            ctx: starFinishCtx,\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\n        starFinishCtx.drawImage(starCanvas, 0, 0);\n        await loopStarFinish(\n            starFinishCtx,\n            'art',\n            async (finishType) => {\n                return await drawAsset(\n                    starFinishCtx,\n                    `finish/finish-typeart-${finishType}.png`,\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\n                );\n            },\n        );\n        starCtx.globalCompositeOperation = 'source-in';\n        starCtx.drawImage(starFinishCanvas, 0, 0);\n        ctx.drawImage(starCanvas, 0, 0);\n    } else {\n        ctx.drawImage(starCanvas, 0, 0);\n    }\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n    globalScale,\n    x, y,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n    globalScale: number,\n    x: number,\n    y: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    ctx.scale(globalScale, globalScale);\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\n    ctx.resetTransform();\n    return;\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    globalScale,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    globalScale,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...scaleDrawCoordinate(coordinate, globalScale),\n        globalScale,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    rating: string,\n    style: CanvasTextStyle,\n    globalScale: number,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || typeof rating !== 'string') return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\n        globalScale,\n        style,\n    );\n    const baseline = isNaN(Number(rating))\n        ? 1106\n        : 1105;\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = `bold ${24 * globalScale}px RoGSanSrfStd-Bd`;\n    ctx.fillText(`${rating}`, 622.75 * globalScale, baseline * globalScale);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import { CanvasConst } from 'src/model';\nimport { drawAsset } from '../image';\nimport { createCanvas } from 'src/util';\n\nconst {\n    width,\n    height,\n    topToPendulumStructure,\n} = CanvasConst;\nexport const getMaskPromise = () => {\n    const topRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-top-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const bottomRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-bottom-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    /**\n     * Be careful: Bottom right + Top right mask does NOT cover the entire right area when bottom left frame is also presented, so if both of them are the same frame, we might need to use right mask.\n     * \n     * Reason: Because bottom left frame also contains bottom right frame with transparency, if we draw another bottom right frame (that also has transparency) on top of it, it will not overlap the bottom frame, but merged with it, create a mix of both instead of total replacement, which is our desired effect. */\n    const rightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const nameMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = topToPendulumStructure;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-name.png');\n            return ctx.getImageData(0, 0, width, topToPendulumStructure).data;\n        }\n        return null;\n    })();\n\n    return {\n        topRight: topRightMask,\n        bottomRight: bottomRightMask,\n        right: rightMask,\n        name: nameMask,\n    };\n};\nexport const MaskPromise = getMaskPromise();\n\n/**\n * Draw the image onto an empty canvas, then apply an alpha mask over it.\n * \n * Each pixel in the image will be drawn with the alpha data from the corresponding pixel of the mask.\n * */\nexport const applyAlphaMask = async (\n    urlOrCanvas: string | CanvasImageSource,\n    maskData: Uint8ClampedArray<ArrayBufferLike>,\n    width: number,\n    height: number,\n) => {\n    const { ctx, canvas } = createCanvas(width, height);\n    if (typeof urlOrCanvas === 'string') await drawAsset(ctx, urlOrCanvas, 0, 0);\n    else ctx.drawImage(urlOrCanvas, 0, 0, width, height);\n    const layerData = ctx.getImageData(0, 0, width, height).data;\n    for (let cnt = 0; cnt < layerData.length; cnt += 4) {\n        layerData[cnt + 3] = maskData[cnt + 3];\n    }\n\n    ctx.putImageData(new ImageData(layerData, width, height), 0, 0);\n\n    return canvas;\n};","import {\n    ArrowPositionMap,\n    ArtFinishMap,\n    RegionMap,\n    BackgroundType,\n    CanvasConst,\n    CardOpacity,\n    Foil,\n    FrameDyeList,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PendulumSizeMap,\n    PendulumSizeMapException,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { createCanvas, dyeCanvas, getCardIconFromFrame, HexColorRegex, resolveFrameStyle } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\nimport { getFinishIterator } from '../canvas-util';\nimport { applyAlphaMask, MaskPromise } from './mask';\n\nexport const baseDrawLinkArrowMap = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    linkMap: string[],\n    positionType: keyof typeof ArrowPositionMap,\n    boundless: boolean,\n) => {\n    if (!ctx) return;\n    ctx.scale(globalScale, globalScale);\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n        .map(async entry => {\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n            const isActive = linkMap.includes(`${entry}`);\n            const baseLink = `link/link-inactive-${entry}`;\n            const activeLink = `link/link-active-${entry}`;\n            const coordinate = [left, top, width, height] as const;\n\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n            if (isActive) {\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n            } else return;\n        })\n    );\n    ctx.resetTransform();\n};\nexport const baseDrawLinkMapFoil = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    foil: string,\n    withBorder: boolean,\n    positionType: keyof typeof ArrowPositionMap,\n    dyeColor: string,\n) => {\n    if (!ctx) return;\n    const willDyed = HexColorRegex.test(dyeColor);\n    if (foil === 'normal' && !willDyed) return;\n    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n    const usedFoil = willDyed ? 'platinum' : foil;\n    const drawFunction = async (ctx: CanvasRenderingContext2D) => {\n        if (withBorder) {\n            await drawAsset(ctx, `link/link-overlay-arrow-${usedFoil}.png`, 0, 175);\n        } else {\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n                .map(async entry => {\n                    const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n                    const coordinate = [left, top, width, height] as const;\n\n                    await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${usedFoil}.png`, ...coordinate);\n                })\n            );\n        }\n    };\n\n    ctx.scale(globalScale, globalScale);\n    if (willDyed) {\n        const { ctx: linkMapFoilCtx, canvas: linkMapFoilCanvas } = createCanvas();\n        await drawFunction(linkMapFoilCtx);\n        const { canvas: dyedLinkMapFoilCanvas } = dyeCanvas(linkMapFoilCanvas, dyeColor);\n        ctx.drawImage(dyedLinkMapFoilCanvas, 0, 0);\n    } else {\n        await drawFunction(ctx);\n    }\n    ctx.resetTransform();\n};\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n    topToPendulumStructure,\n    topToPendulumStructureFrame,\n    pendulumIconFrameHeight,\n    pendulumIconFrameWidth,\n    pendulumFrameHeight,\n    pendulumFrameWidth,\n    attributeSize,\n    attributeX,\n    attributeY,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    globalScale,\n    region,\n    hasBackground,\n    frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n    dyeList,\n    effectBackground, pendulumEffectBackground,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    starList,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    pendulumFrameTypeMap,\n    otherFinish,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    globalScale: number,\n    region: string,\n    frame: string, leftFrame: string, pendulumFrame: string, rightFrame: string, pendulumRightFrame: string,\n    dyeList: FrameDyeList,\n    effectBackground: string, pendulumEffectBackground: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    starList: string[],\n    foil: Foil,\n    pendulumSize: PendulumSize,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\n    otherFinish: OtherFinish,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFrameX,\n        artFrameY,\n        artFrameHeight,\n        artFrameWidth,\n        artFinishX,\n        artFinishY,\n        artWidth,\n        artRatio,\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n    const {\n        frameType,\n        effectBoxOffsetY,\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\n        pendulumBoxOffsetY,\n        artlessFrameY,\n    } = PendulumSizeMap[pendulumSize];\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderTypeList = frame === 'synchro'\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\n        : [frameBorderType];\n    const applyArtFinish = !boundless && artBorder;\n\n    const resolvedLayoutStyle = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    } = resolvedLayoutStyle;\n\n    const resultAPI = {\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            const willReplaceFrame = hasBackground && backgroundCanvas && backgroundType === 'frame';\n\n            /** Combine layer frame here */\n            const { ctx: topFrameCtx, canvas: topFrameCanvas } = createCanvas();\n            await drawAsset(topFrameCtx, `frame/frame-${topLeftFrame}.png`, 0, 0);\n            const { canvas: dyedTopFrameCanvas, ctx: dyedTopFrameCtx } = dyeCanvas(topFrameCanvas, dyeList[0]);\n            /** No need to dye if background is gonna replace the frame */\n            if (\n                !willReplaceFrame\n                && (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '')\n            ) {\n                const topRightCanvas = await applyAlphaMask(\n                    `frame/frame-${topRightFrame}.png`,\n                    await MaskPromise.topRight,\n                    cardWidth,\n                    cardHeight,\n                );\n                const { canvas: dyedTopRightCanvas } = dyeCanvas(topRightCanvas, dyeList[1]);\n                dyedTopFrameCtx.drawImage(dyedTopRightCanvas, 0, 0);\n            }\n\n            const { ctx: bottomFrameCtx, canvas: bottomFrameCanvas } = createCanvas();\n            await drawAsset(bottomFrameCtx, `frame-pendulum/frame-pendulum-${bottomLeftFrame}.png`, 0, 0);\n            const { canvas: dyedBottomFrameCanvas, ctx: dyedBottomFrameCtx } = dyeCanvas(bottomFrameCanvas, dyeList[2]);\n            if (\n                !willReplaceFrame\n                && (bottomLeftFrame !== bottomRightFrame || dyeList[2] !== '' || dyeList[3] !== '')\n            ) {\n                /** What is this?\n                 * \n                 * Because the \"bottom left\" frame is not actually bottom, but both bottom left and bottom right with transparency. If we draw it first, then draw our \"bottom right\" frame on top of it, it will mixed with the bottom left frame (because both contains transparency), instead of replacing it, create an unintended side effect. Therefore we cut the part that may cause mixing color from the bottom left frame, before drawing the bottom right part.\n                 */\n                dyedBottomFrameCtx.clearRect(714, 0, 99, cardHeight);\n                const bottomRightCanvas = await applyAlphaMask(\n                    `frame/frame-${bottomRightFrame}.png`,\n                    await MaskPromise.bottomRight,\n                    cardWidth,\n                    cardHeight,\n                );\n                const { canvas: dyedBottomRightCanvas } = dyeCanvas(bottomRightCanvas, dyeList[3]);\n                dyedBottomFrameCtx.drawImage(dyedBottomRightCanvas, 0, 0);\n            }\n\n            ctx.globalAlpha = opacityBody / 100;\n            ctx.scale(globalScale, globalScale);\n            /** Leave empty space for card art */\n            if (isPendulum) {\n                dyedTopFrameCtx.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n                dyedBottomFrameCtx.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n            }\n            /** Background replace frame */\n            if (willReplaceFrame) {\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n                dyedTopFrameCtx.globalCompositeOperation = 'source-atop';\n                dyedTopFrameCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0, backgroundWidth, backgroundHeight,\n                    0, 0, cardWidth, cardHeight,\n                );\n                dyedBottomFrameCtx.globalCompositeOperation = 'source-atop';\n                dyedBottomFrameCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0, backgroundWidth, backgroundHeight,\n                    0, 0, cardWidth, cardHeight,\n                );\n            }\n            /** Start assembling the canvas */\n            ctx.drawImage(dyedTopFrameCanvas, 0, 0);\n            ctx.drawImage(dyedBottomFrameCanvas, 0, 0);\n            ctx.resetTransform();\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: (\n            externalCtx = ctx,\n        ) => {\n            if (!artworkCanvas || !externalCtx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            externalCtx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: async (\n            externalCtx = ctx,\n            hasArtBorder = false,\n        ) => {\n            if (!backgroundCanvas || !externalCtx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n\n            const {\n                artX,\n                artY,\n                artWidth,\n                artFrameWidth,\n                artFrameX,\n                artFrameY,\n                ratio,\n                artRatio,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                opacity,\n                backgroundType,\n                pendulumSize,\n            );\n            if (backgroundType !== 'frame') {\n                externalCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0,\n                    backgroundWidth, backgroundHeight,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n            } else {\n                externalCtx.drawImage(\n                    backgroundCanvas,\n                    0, 0,\n                    backgroundWidth, backgroundHeight,\n                    0, 0,\n                    globalScale * cardWidth, globalScale * cardHeight,\n                );\n            }\n            const backgroundFinish = otherFinish[3] ?? 'normal';\n            if (backgroundFinish !== 'normal' && hasArtBorder) {\n                const loopBackgroundFinish = getFinishIterator([backgroundFinish], ArtFinishMap);\n                await loopBackgroundFinish(\n                    externalCtx,\n                    'art',\n                    async type => drawAssetWithSize(\n                        externalCtx,\n                        `finish/art-finish-${type}.png`,\n                        globalScale * artFrameX, globalScale * artFrameY,\n                        globalScale * artFrameWidth, globalScale * artFrameWidth / artRatio,\n                    ),\n                );\n            }\n        },\n        drawAttribute: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const {\n                canvas: attributeCanvas,\n                ctx: attributeCtx,\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\n            await drawAsset(\n                attributeCtx,\n                `attribute/attr-${RegionMap[region].fileKey}-${attribute.toLowerCase()}.png`,\n                attributeX, attributeY,\n            );\n            const attributeFinish = otherFinish[0] ?? 'normal';\n            if (attributeFinish !== 'normal') {\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\n                const {\n                    canvas: attributeFinishCanvas,\n                    ctx: attributeFinishCtx,\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\n                attributeFinishCtx.drawImage(attributeCanvas, 0, 0);\n                await loopAttributeFinish(\n                    attributeFinishCtx,\n                    'art',\n                    async (finishType) => {\n                        return await drawAsset(\n                            attributeFinishCtx,\n                            `finish/finish-typeart-${finishType}.png`,\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\n                        );\n                    },\n                );\n                attributeCtx.globalCompositeOperation = 'source-in';\n                attributeCtx.drawImage(attributeFinishCanvas, 0, 0);\n                ctx.drawImage(attributeCanvas, 0, 0);\n            } else {\n                ctx.drawImage(attributeCanvas, 0, 0);\n            }\n            ctx.resetTransform();\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const starFinish = otherFinish[1] ?? 'normal';\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starList,\n                starAlignment,\n                style,\n                globalScale,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n                loopStarFinish,\n            });\n            ctx.resetTransform();\n        },\n        drawPendulumScaleIcon: async () => {\n            if (!ctx) return;\n            const {\n                canvas: pendulumIconCanvas,\n                ctx: pendulumIconCtx,\n            } = createCanvas(pendulumIconFrameWidth, pendulumIconFrameHeight);\n            await drawAsset(pendulumIconCtx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\n\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\n                pendulumIconCtx.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n            if (pendulumFrameTypeMap.red === 'scaleless') {\n                pendulumIconCtx.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\n            ctx.resetTransform();\n        },\n        drawStatBorder: async (style: CanvasTextStyle) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                globalScale,\n                style,\n            );\n            ctx.resetTransform();\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            const { ctx: nameBackgroundCtx, canvas: nameBackgroundCanvas } = createCanvas(cardWidth, topToPendulumStructure);\n            await drawAsset(nameBackgroundCtx, `background/background-name-${topLeftFrame}.png`, 0, 0);\n            const {\n                canvas: dyedLeftNameCanvas,\n                ctx: dyedLeftNameCtx\n            } = dyeCanvas(nameBackgroundCanvas, dyeList[0]);\n            if (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '') {\n                const nameRightCanvas = await applyAlphaMask(\n                    `background/background-name-${topRightFrame}.png`,\n                    await MaskPromise.name,\n                    cardWidth,\n                    topToPendulumStructure,\n                );\n                const dyedRightNameCanvas = dyeCanvas(nameRightCanvas, dyeList[1]).canvas;\n                dyedLeftNameCtx.drawImage(dyedRightNameCanvas, 0, 0);\n            }\n            ctx.globalAlpha = opacityName / 100;\n            ctx.drawImage(dyedLeftNameCanvas, 0, 0);\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n\n            const { ctx: effectBackgroundCtx, canvas: effectBackgroundCanvas } = createCanvas();\n            if (withPendulum) {\n                await drawAssetWithSize(\n                    effectBackgroundCtx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                    0, 0 + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                );\n            } else {\n                await drawAsset(\n                    effectBackgroundCtx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY,\n                );\n            }\n            const dyedEffectBackgroundCanvas = dyeCanvas(effectBackgroundCanvas, dyeList[4]).canvas;\n            ctx.globalAlpha = opacityText / 100;\n            ctx.drawImage(dyedEffectBackgroundCanvas, 0, 0);\n\n            if (withPendulum) {\n                const { ctx: pendulumEffectBackgroundCtx, canvas: pendulumEffectBackgroundCanvas } = createCanvas();\n                const {\n                    exceptionFrameType = frameType,\n                    exceptionPendulumBoxOffsetHeight = 0,\n                } = PendulumSizeMapException[pendulumSize][resolvedPendulumEffectBackground] ?? {};\n                await drawAssetWithSize(\n                    pendulumEffectBackgroundCtx,\n                    `background/background-${exceptionFrameType}-${resolvedPendulumEffectBackground}.png`,\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\n                    pendulumBoxWidth, pendulumBoxHeight,\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\n                );\n                const dyedPendulumEffectBackgroundCanvas = dyeCanvas(pendulumEffectBackgroundCanvas, dyeList[5]).canvas;\n                ctx.globalAlpha = opacityPendulum / 100;\n                ctx.drawImage(dyedPendulumEffectBackgroundCanvas, 0, 0);\n            }\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n            ctx.resetTransform();\n            return;\n        },\n        drawNameBorder: async () => {\n            if (nameBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\n                }\n                ctx.resetTransform();\n            } else {\n                Promise.resolve();\n            }\n            return;\n        },\n        drawArtBorder: async () => {\n            if (artBorder && ctx) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil, willDye = false) => {\n            if (!ctx) return;\n            const validDyeColor = HexColorRegex.test(dyeList[6]);\n            const usedFoil = validDyeColor && willDye && foilType === 'normal' ? 'platinum' : foilType;\n            /** We create a new canvas for easier manipulation. */\n            const { canvas: pendulumBorderCanvas, ctx: pendulumBorderCtx } = createCanvas();\n            await drawAssetWithSize(\n                pendulumBorderCtx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${usedFoil}`\n                + '-artless'\n                + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\n                + '.png',\n                30, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                0, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            await drawAssetWithSize(\n                pendulumBorderCtx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${usedFoil}`\n                + '-artless'\n                + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\n                + '.png',\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                pendulumFrameWidth / 2, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            if (willDye && validDyeColor) {\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(pendulumBorderCanvas, dyeList[6]);\n                pendulumBorderCtx.drawImage(dyedCardBorderFoilCanvas, 0, 0);\n            }\n            if (artBorder) {\n                /**\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\n                 */\n                pendulumBorderCtx.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\n                if (validDyeColor) {\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                    const usedFoil = foilType === 'normal' ? 'platinum' : foilType;\n                    const { ctx: pendulumBorderFoilCtx, canvas: pendulumBorderFoilCanvas } = createCanvas();\n                    await drawAsset(\n                        pendulumBorderFoilCtx,\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\n                        + `-${usedFoil}`\n                        + '.png',\n                        30, topToPendulumStructureFrame,\n                    );\n                    const { canvas: dyedPendulumBorderFoilCanvas } = dyeCanvas(pendulumBorderFoilCanvas, dyeList[6]);\n                    pendulumBorderCtx.drawImage(dyedPendulumBorderFoilCanvas, 0, 0);\n                } else {\n                    await drawAsset(\n                        pendulumBorderCtx,\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\n                        + `-${foilType}`\n                        + '.png',\n                        30, topToPendulumStructureFrame,\n                    );\n                }\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\n            ctx.resetTransform();\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (!hasFoil && bottomLeftFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n        drawCardBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (HexColorRegex.test(dyeList[6])) {\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                const { ctx: cardBorderFoilCtx, canvas: cardBorderFoilCanvas } = createCanvas();\n                await drawAsset(cardBorderFoilCtx, `frame/card-border-${usedFoil}.png`, 0, 0);\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(cardBorderFoilCanvas, dyeList[6]);\n                ctx.drawImage(dyedCardBorderFoilCanvas, 0, 0);\n            } else {\n                await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n            }\n            ctx.resetTransform();\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) {\n                if (HexColorRegex.test(dyeList[6])) {\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                    const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                    const { ctx: artBorderFoilCtx, canvas: artBorderFoilCanvas } = createCanvas();\n                    await drawAsset(artBorderFoilCtx, `frame/art-border-${usedFoil}.png`, artBoxX, artBoxY);\n                    const { canvas: dyedArtBorderFoilCanvas } = dyeCanvas(artBorderFoilCanvas, dyeList[6]);\n                    ctx.drawImage(dyedArtBorderFoilCanvas, 0, 0);\n                } else {\n                    await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n                }\n            }\n            ctx.resetTransform();\n        },\n        drawEffectBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (HexColorRegex.test(dyeList[6])) {\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\n                const { ctx: effectBorderFoilCtx, canvas: effectBorderFoilCanvas } = createCanvas();\n                await drawAsset(effectBorderFoilCtx, `frame/effect-border-${usedFoil}.png`, effectBoxX, effectBoxY);\n                const { canvas: dyedEffectBorderFoilCanvas } = dyeCanvas(effectBorderFoilCanvas, dyeList[6]);\n                ctx.drawImage(dyedEffectBorderFoilCanvas, 0, 0);\n            } else {\n                await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if ((artBorder || nameBorder) && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'name',\n                    async type => {\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                    },\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n                ctx.resetTransform();\n            }\n        },\n        drawArtFinish: async (\n            artCtx = ctx,\n        ) => {\n            if (!applyArtFinish || !artCtx) return;\n            artCtx.scale(globalScale, globalScale);\n            await loopArtFinish(\n                artCtx,\n                'art',\n                async (finishType, pendulumSuffix) => {\n                    return await drawAssetWithSize(\n                        artCtx,\n                        `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\n                        artFinishX, artFinishY,\n                        artFrameWidth, artFrameWidth / artRatio,\n                    );\n                },\n                pendulumSize,\n            );\n            artCtx.resetTransform();\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async (\n            artCtx = ctx,\n        ) => {\n            if (!artCtx) return;\n            artCtx.scale(globalScale, globalScale);\n            await loopFinish(\n                artCtx,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        artCtx,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n            artCtx.resetTransform();\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(\n                    ctx,\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\n                    0, 0,\n                ),\n            );\n            ctx.resetTransform();\n        },\n        drawBorderPendulumFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => {\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0 + cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                        cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                }\n            );\n            ctx.resetTransform();\n        },\n        drawFrameFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawFrameBackgroundFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n            ctx.resetTransform();\n        },\n        drawCardBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n            ctx.resetTransform();\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { setTextStyle } from '../canvas-util';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    canvas: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _trueBaseline: number,\n    _width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        cloneNode: HTMLCanvasElement | null | undefined,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n        globalScale: number,\n    },\n) => {\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\n    const edge = _edge * globalScale;\n    const trueBaseline = _trueBaseline * globalScale;\n    const width = _width * globalScale;\n    const cloneCtx = cloneNode?.getContext('2d');\n\n    if (!(ctx && cloneCtx && value)) return;\n    const {\n        embossPitch,\n        embossYaw,\n        embossThickness,\n        fillStyle,\n        font,\n        gradientAngle,\n        gradientColor,\n        hasEmboss,\n        hasGradient,\n        hasOutline,\n        hasShadow,\n        headTextFillStyle,\n        lineColor,\n        lineOffsetX,\n        lineOffsetY,\n        lineWidth,\n        shadowBlur,\n        shadowColor,\n        shadowOffsetX,\n        shadowOffsetY,\n        pattern,\n    } = { ...getDefaultNameStyle(), ...style };\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n\n    ctx.textAlign = 'left';\n    const fontData = scaleFontData({\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n        headTextFillStyle,\n    }, globalScale);\n    const fontGetter = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: fontGetter,\n    };\n    const quoteConvertedValue = normalizeCardText(\n        value,\n        format,\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n    );\n\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n    const crudeTokenList = format === 'ocg'\n        ? [quoteConvertedValue]\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n    const fontGetterForWidthCalculating = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const normalStyle = fontGetterForWidthCalculating.getFont();\n    const symbolStyle = fontGetterForWidthCalculating\n        .setSize(cur => cur * fontData.symbolFontRatio)\n        .setStyle('small-caps')\n        .setFamily(fontData.symbolFont)\n        .getFont();\n    let maxAscent = 0;\n    let maxDescent = 0;\n    crudeTokenList.forEach((cur, index) => {\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n    }, 0);\n\n    ctx.font = normalStyle;\n    /** Calculate fitting ratio like normal */\n    let actualLineWidth = 0;\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [quoteConvertedValue],\n                format, textData,\n                width,\n                globalScale,\n            });\n\n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n\n    ctx.scale(xRatio, yRatio);\n    /** Calculate gradient and offset based on card's frame. */\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\n    const tokenList = tokenizeText(quoteConvertedValue);\n    const gradient = actualLineWidth > 0 && hasGradient\n        ? getNameGradient(\n            ctx,\n            gradientAngle,\n            parsePalette(gradientColor),\n            edge,\n            actualLineWidth,\n            trueBaseline,\n            maxAscent, maxDescent,\n        )\n        : undefined;\n\n    /**\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\n     * \n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\n     */\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\n    let resetEmbossStroke = () => {};\n    if (thickenEmboss) {\n        resetEmbossStroke = setTextStyle({\n            ctx,\n            lineWidth: embossThickness,\n            lineColor: fillStyle,\n            lineColorGradient: gradient,\n            globalScale,\n            useDefault: false,\n        });\n    }\n    ctx.fillStyle = gradient ?? fillStyle;\n    const { tokenEdge } = drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        option: { drawHeadText: false },\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n        },\n    });\n    resetEmbossStroke();\n\n    /** \n     * Second iteration: Draw pattern, we follow these steps.\n     *  * We create a second, temporary canvas node.\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\n     */\n    if (patternImage) {\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const patternContext = patternCanvas.getContext('2d');\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n        patternContext.scale(globalScale, globalScale);\n        await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\n        await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\n        patternContext.globalCompositeOperation = patternBlendMode;\n        patternContext.resetTransform();\n        await drawAssetWithSize(\n            patternContext, `finish-name/${patternImage}.png`,\n            edge, trueBaseline - maxAscent,\n            width,\n            maxAscent + maxDescent,\n        );\n        ctx.globalCompositeOperation = 'source-in';\n        ctx.drawImage(patternCanvas, 0, 0);\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.scale(xRatio, yRatio);\n    }\n\n    /** Third iteration: Apply emboss effect */\n    if (hasEmboss) {\n        const affectedWidthExtraPadding = 10;\n        const embossedImageData = applyEmboss({\n            inputCanvas: canvas,\n            lightPitch: embossPitch,\n            lightYaw: embossYaw,\n            minIntensity: -0.9,\n            maxIntensity: 0.9,\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\n        });\n        ctx.putImageData(embossedImageData, 0, 0);\n    }\n\n    /**\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\n     * \n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\n     * */\n    if (hasOutline) {\n        const resetStroke = setTextStyle({\n            ctx,\n            lineWidth: lineWidth + (hasEmboss ? embossThickness : 0),\n            lineColor,\n            globalScale,\n            useDefault: false,\n        });\n        ctx.globalCompositeOperation = 'destination-over';\n        drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            format,\n            globalScale,\n            option: { drawHeadText: false },\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.lineJoin = 'round';\n                ctx.strokeText(\n                    letter,\n                    scaledEdge + lineOffsetX,\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                );\n            },\n        });\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n        resetStroke();\n    }\n\n    /**\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\n     */\n    if (hasShadow) {\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const shadowContext = shadowCanvas.getContext('2d');\n        const resetShadow = setTextStyle({\n            ctx: shadowContext,\n            x: shadowOffsetX,\n            y: shadowOffsetY,\n            shadowColor: shadowColor,\n            blur: shadowBlur,\n            globalScale,\n            useDefault: false,\n        });\n        ctx.scale(1 / xRatio, 1 / yRatio);\n        shadowContext.drawImage(canvas, 0, 0);\n        ctx.globalCompositeOperation = 'destination-over';\n        ctx.drawImage(shadowCanvas, 0, 0);\n        ctx.globalCompositeOperation = 'source-over';\n        resetShadow();\n    }\n\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\n    drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: () => {},\n    });\n\n    const defaultTextStyle = getDefaultNameStyle();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.fillStyle = defaultTextStyle.fillStyle;\n    ctx.lineJoin = 'miter';\n    ctx.globalCompositeOperation = 'source-over';\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\n    smaller: 0,\n    normal: 1,\n    large: 2,\n    highPendulumNormal: 1,\n    highPendulumSmaller: 0,\n};\nexport const drawTypeAbilityText = ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: TypeAbilityCoordinateType,\n    furiganaHelper: boolean,\n    globalScale: number,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = scaleCoordinateData(\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\n        globalScale,\n    );\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\n    const fontData = {\n        ...scaledBaseFontData,\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\n    };\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n                globalScale,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nconst {\n    finishTypeCardWidth,\n    width: CanvasWidth,\n    iconHeight,\n    iconWidth,\n} = CanvasConst;\nexport const drawTypeAbility = async ({\n    ctx,\n    globalScale,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n    loopIconFinish,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: TypeAbilityCoordinateType,\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n        globalScale,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -5 : -1;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        const {\n            canvas: iconCanvas,\n            ctx: iconCtx,\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n        await drawAssetWithSize(\n            iconCtx,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\n            () => iconWidth * globalScale,\n            () => iconHeight * globalScale,\n        );\n        if (loopIconFinish) {\n            const {\n                canvas: iconFinishCanvas,\n                ctx: iconFinishCtx,\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n            iconFinishCtx.drawImage(iconCanvas, 0, 0);\n            await loopIconFinish(\n                iconFinishCtx,\n                'art',\n                async (finishType) => {\n                    return await drawAsset(\n                        iconFinishCtx,\n                        `finish/finish-typeart-${finishType}.png`,\n                        (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\n                    );\n                },\n            );\n            iconCtx.globalCompositeOperation = 'source-in';\n            iconCtx.drawImage(iconFinishCanvas, 0, 0);\n            ctx.drawImage(iconCanvas, 0, 0);\n        } else {\n            ctx.drawImage(iconCanvas, 0, 0);\n        }\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    _fontSize: number,\n    globalScale: number,\n) => {\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    if (ctx && value) {\n        const fontSize = _fontSize * globalScale;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const digitList = `${value}`.split('');\n\n        if (digitList.length === 1) {\n            const digit = digitList[0];\n            const digitWidth = ctx.measureText(digit).width;\n            const accLeft = edge - digitWidth / 2;\n\n            ctx.fillText(\n                digit,\n                digit === '1' ? accLeft + 2 * globalScale : accLeft,\n                baseline + fontSize,\n            );\n        } else if (digitList.length === 2) {\n            /** Observable behavior: The number \"1\" in 2-digits pendulum scale (10, 11, 12, 13) stay in the exact same place no matter which is the second digit, so we try to emulate this pattern here. */\n            const firstDigit = digitList[0];\n            const secondDigit = digitList[1];\n            const firstDigitWidth = ctx.measureText(firstDigit).width * 0.825;\n            const secondDigitWidth = ctx.measureText(secondDigit).width;\n            const accLeft = edge - firstDigitWidth - (firstDigit === '1'\n                ? 0\n                : firstDigitWidth * 0.1\n            );\n\n            ctx.fillText(\n                firstDigit,\n                accLeft,\n                baseline + fontSize,\n            );\n            ctx.fillText(\n                secondDigit,\n                accLeft + firstDigitWidth - (firstDigit === '1'\n                    ? (secondDigit === '1'\n                        ? ctx.measureText('1').width * 0.1\n                        : secondDigitWidth * 0.1)\n                    : secondDigitWidth * -0.1),\n                baseline + fontSize,\n            );\n        } else {\n            let totalWidth = 0;\n\n            digitList.forEach(digit => {\n                totalWidth += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\n            });\n            let accLeft = edge - totalWidth / 2;\n\n            digitList.forEach(digit => {\n                ctx.fillText(\n                    digit,\n                    accLeft,\n                    baseline + fontSize,\n                );\n                accLeft += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\n            });\n        }\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    edge = 99,\n    baseline = 1150.93,\n    baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n        globalScale: number,\n    } = {\n        globalScale: 1,\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const { stroke = false, textStyle, globalScale } = option ?? {};\n    const actualEdge = edge * globalScale;\n    const actualBaseline = baseline * globalScale;\n    const actualBaselineOffset = baselineOffset * globalScale;\n    const resetStyle = setTextStyle({\n        ctx,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4 * globalScale;\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\n\n    let left = actualEdge;\n    ctx.fillText('1', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText('1', left, actualBaseline);\n    left += ctx.measureText('1').width - 2 * globalScale;\n\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText('st', left, actualBaseline - superTextOffset + actualBaselineOffset);\n    if (stroke) ctx.strokeText('st', left, actualBaseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText(' Edition', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, actualBaseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    ctx.scale(1, 0.98);\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const numberOffset = -1;\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const statWidth = 73.97 * globalScale;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${36.18 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.scale(1, 1.29);\n        ctx.font = ` ${34 * globalScale}px MatrixBoldSmallCaps`;\n        ctx.fillText(value, edge + statWidth, numberOffset + baseline / 1.29);\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = `${36.18 * globalScale}px matrix`;\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, numberOffset + baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = `${34 * globalScale}px MatrixBoldSmallCaps`;\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.scale(1, 1.29);\n                    ctx.fillText('?', nextEdge / condenseRatio, numberOffset + baseline / 1.29);\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        globalScale: number,\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n    baseDrawLinkArrowMap,\n    baseDrawLinkMapFoil,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinateMap,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n    PendulumNormalFontData,\n    PendulumSizeMap,\n    PendulumSize,\n    HALF_SCALE_WIDTH_OFFSET,\n} from 'src/model';\nimport {\n    checkDiplayLinkRating,\n    checkLightFooter,\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    createCanvas,\n    generateLayer,\n    resolveFrameStyle,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    finishTypeCardHeight,\n    stickerX,\n    stickerY,\n    stickerSize,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n    globalScale: number,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    } = canvasMap;\n    const {\n        format, region,\n        hasBackground, backgroundType,\n        frame,\n        foil, finish, artFinish, otherFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumRightFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\n        leftFrame, rightFrame,\n        dyeList,\n        atk, def, linkMap, linkRating,\n        attribute,\n        cardIcon, subFamily, star, starAlignment, starList,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n        flag,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        typeAbility: {\n            name: 'typeAbility',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const effectBackground = effectStyle.background;\n    const pendulumEffectBackground = pendulumStyle.background;\n    const effectMinLine = effectStyle.minLine;\n    const pendulumEffectMinLine = pendulumStyle.minLine;\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = checkLightFooter(bottomFrame);\n    const {\n        bottomRightFrame,\n    } = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const lightRightFooter = checkLightFooter(bottomRightFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n    const foilDyeColor = dyeList[6];\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const [\n        showDefAndLinkFlag,\n        linkRatingDisplayMode,\n    ] = flag;\n\n    /** One special case where we do not show link rating */\n    const isLinkST = !isPendulum && !isMonster && isLink && !(atk || def);\n    const showLinkRating = checkDiplayLinkRating(linkRatingDisplayMode, isLink) && !isLinkST;\n    const showDefAndLink = showLinkRating && showDefAndLinkFlag;\n    const statInEffect = !!(atk || def)\n        || showLinkRating\n        || !!(isPendulum && setId);\n    const typeInEffect = normalizedTypeAbility.length > 0\n        ? cardIcon === 'auto'\n            ? (isMonster || isSpeedSkill)\n            : cardIcon !== 'st'\n        : false;\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\n    const {\n        isInitializing,\n        imageChangeCount,\n        language,\n        globalScale,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n    const [, iconFinish, stickerFinish] = otherFinish;\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (\n                ctx: CanvasRenderingContext2D,\n                x: number, y: number,\n                w: number, h: number,\n                customFill?: string,\n            ) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground\n                            ? (customFill ?? baseFill)\n                            : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                globalScale,\n                region,\n                frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n                dyeList,\n                effectBackground, pendulumEffectBackground,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star, starList,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                pendulumFrameTypeMap: {\n                    red: withRedScale ? 'normal' : 'scaleless',\n                    blue: withBlueScale ? 'normal' : 'scaleless',\n                },\n                otherFinish,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Fill color background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(ctx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n\n            /** artOnCard canvas ensure the art is drawn correct size and position on the actual card, overlay for art is applied here */\n            const {\n                canvas: artOnCardCanvas,\n                ctx: artOnCardCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            if (artworkCanvas && artOnCardCtx) drawCardArt(artOnCardCtx);\n            await drawArtFinish(artOnCardCtx);\n            await drawArtOverlayFinish(artOnCardCtx);\n\n            /** Combine background and artwork together, overlay for background is applied here */\n            const {\n                canvas: combinedArtCanvas,\n                ctx: combinedArtCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            await fillBaseColor(combinedArtCtx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n            if (backgroundCanvas && combinedArtCtx) await drawBackground(combinedArtCtx, hasArtBorder);\n            if (!boundless) combinedArtCtx.drawImage(artOnCardCanvas, 0, 0);\n\n            /** @summary Draw the overall layout */\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            ctx.drawImage(combinedArtCanvas, 0, 0);\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. */\n            if (isPendulum && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n                ctx.drawImage(\n                    combinedArtCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n                \n                /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil, true);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will be placed on top of the art border. The extended card image is still below name (text only), level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (isLink && !isPendulum) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil, true);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, 'full', pendulumSize);\n                ctx.drawImage(\n                    artOnCardCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil, true);\n                    await drawBorderPendulumFinish();\n                } else {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder({\n                color: '#000000',\n                ...resolvedStatTextStyle,\n            });\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            \n            if (showLinkRating && statInEffect) {\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n                const normalizedLinkRating = typeof linkRating === 'string' && linkRating.length > 0\n                    ? linkRating\n                    : `${(Array.isArray(linkMap) ? linkMap.length : 0)}`;\n                await drawLinkRatingText(frameCanvasRef.current, normalizedLinkRating, resolvedStatTextStyle, globalScale);\n                resetStyle();\n            }\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                globalScale,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        artworkCanvasRef,\n        attribute,\n        backgroundCanvasRef,\n        backgroundType,\n        cardIcon,\n        dyeList,\n        effectBackground,\n        finish,\n        foil,\n        format,\n        region,\n        frame,\n        frameCanvasRef,\n        hasBackground,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        leftFrame,\n        levelStyle,\n        lightFooter,\n        linkMap,\n        linkRating,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        otherFinish,\n        pendulumEffectBackground,\n        pendulumFrame,\n        pendulumRightFrame,\n        pendulumSize,\n        resolvedOtherEffectTextStyle,\n        resolvedStatTextStyle,\n        rightFrame,\n        showLinkRating,\n        star,\n        starList,\n        starAlignment,\n        statInEffect,\n        withBlueScale,\n        withRedScale,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW PENDULUM SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\n        }\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\n\n            if (!clearCanvas(ctx) || !cloneNode) return;\n\n            await drawName(\n                nameCanvasRef.current,\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\n            );\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n        // const hasAtk = !!atk;\n        const hasDef = showLinkRating\n            ? !!def && showDefAndLink\n            : !!def;\n        const hasLink = showLinkRating;\n        if (atk) {\n            const offset = (hasDef ? 168.75 : 0) + (hasLink ? 168.75 : 0);\n            drawStatText(ctx, 'ATK', 600.85 - offset, 1106, globalScale);\n            drawStat(ctx, atk.trim(), 677.574 - offset, 1106.5, globalScale);\n        }\n        if (def && (!showLinkRating || showDefAndLink)) {\n            const offset = hasLink ? 168.75 : 0;\n            drawStatText(ctx, 'DEF', 600.85 - offset, 1106, globalScale);\n            drawStat(ctx, def.trim(), 673.865 - offset, 1106.5, globalScale);\n        }\n        resetStyle();\n    }, [readyToDraw, globalScale, atk, def, showLinkRating, isMonster, showDefAndLink, resolvedStatTextStyle, statCanvasRef, statInEffect]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                globalScale,\n                isLink, isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        globalScale,\n        format,\n        isLink,\n        isPendulum,\n        lightRightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n        if (!clearCanvas(ctx)) return;\n\n        const isNumberPassword = /^[0-9]*$/.test(password);\n        const mayOffset = isNumberPassword && isPendulum && isLink;\n        const willOffset = mayOffset;\n        const { rightEdge } = drawPasswordText({\n            ctx,\n            globalScale,\n            value: password,\n            lightFooter,\n            alignment: 'left',\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\n            format,\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\n            textStyle: resolvedOtherEffectTextStyle,\n            fontLevel: !isNumberPassword ? 1 : 0\n        });\n        if (isFirstEdition) {\n            const willDraw = isPendulum\n                ? isNumberPassword ? true : false\n                : true;\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? isLink ? 151 : 89\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 871\n                : 1150.93;\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 0\n                : isSpeedSkill ? -2 : -1;\n\n            if (willDraw) draw1stEdition(\n                ctx,\n                left,\n                bottom,\n                bottomOffset,\n                {\n                    globalScale,\n                    textStyle: {\n                        color: lightFooter ? '#ffffff' : '#000000',\n                        ...resolvedOtherEffectTextStyle,\n                    }\n                },\n            );\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n                globalScale,\n            });\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    globalScale,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        lightRightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            const ctx = stickerCanvasRef.current?.getContext('2d');\n            if (!clearCanvas(ctx)) return;\n            const {\n                canvas: stickerCanvas,\n                ctx: stickerContext,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            await drawSticker({\n                ctx: stickerContext,\n                sticker,\n                globalScale,\n                x: stickerX,\n                y: stickerY,\n            });\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\n            if (normalizedStickerFinish !== 'normal') {\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\n                const {\n                    canvas: stickerFinishCanvas,\n                    ctx: stickerFinishContext,\n                } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n                stickerFinishContext.drawImage(stickerCanvas, 0, 0);\n                stickerFinishContext.scale(globalScale, globalScale);\n                await loopStickerFinish(\n                    stickerFinishContext,\n                    'art',\n                    async (finishType) => {\n                        return await drawAsset(\n                            stickerFinishContext,\n                            `finish/finish-typeart-${finishType}.png`,\n                            stickerX - finishTypeCardWidth + stickerSize, stickerY - finishTypeCardHeight + stickerSize,\n                        );\n                    },\n                );\n                stickerContext.globalCompositeOperation = 'source-in';\n                stickerContext.drawImage(stickerFinishCanvas, 0, 0);\n                ctx.drawImage(stickerCanvas, 0, 0);\n            } else {\n                ctx.drawImage(stickerCanvas, 0, 0);\n            }\n        };\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.typeAbility.rerun += 1;\n        drawingPipeline.current.typeAbility.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\n            const customizeEffectStyle = effectTextStyle[0];\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\n            const useItalic = customizeEffectStyle\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\n                : isNormal;\n            const effectIndexSize = drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                useItalic,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    useItalic,\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                    minLine: effectMinLine,\n                },\n            });\n            const normalizedIconFinish = iconFinish ?? 'normal';\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\n            await drawTypeAbility({\n                ctx: typeCtx,\n                globalScale,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : (isPendulum && pendulumSize === 'large')\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n                loopIconFinish,\n            });\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        effectMinLine,\n        format,\n        frame,\n        isPendulum,\n        pendulumSize,\n        furiganaHelper,\n        iconFinish,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { upSize, fontStyle } = pendulumStyle ?? {};\n            const customPendulumStyle = pendulumTextStyle[0];\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\n            const fontDataKey = `${format}-${pendulumSize}`;\n            const coordinateList = PendulumEffectCoordinateMap\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\n                [pendulumSize];\n            /** Account for half scaleless frame */\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\n                ? coordinateList\n                : coordinateList.map(({\n                    trueEdge, trueWidth, ...rest\n                }) => ({\n                    ...rest,\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                    trueWidth: trueWidth\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                }));\n\n            drawEffect({\n                ctx,\n                content: pendulumEffect,\n                isNormal: false,\n                useItalic: useItalic,\n                fontData: (useItalic\n                    ? PendulumNormalFontData\n                    : PendulumEffectFontData)[fontDataKey],\n                fontDataKey,\n                textStyle: resolvedPendulumEffectTextStyle,\n                sizeList: modifiedCoordinateList,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                    minLine: pendulumEffectMinLine,\n                }\n            });\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        condenseTolerant,\n        format,\n        isPendulum,\n        withRedScale,\n        withBlueScale,\n        pendulumSize,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        pendulumEffectMinLine,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            if (isLink) {\n                const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n                const {\n                    artBorder: keepArtBorder,\n                    body: opacityBody,\n                    boundless,\n                } = normalizedOpacity;\n                const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless || !hasArtBorder);\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal', foilDyeColor);\n            }\n\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n            ctx.resetTransform();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        finishCanvasRef,\n        loopFinish,\n        foilDyeColor,\n        name,\n        isLink,\n        isPendulum,\n        linkMap,\n        opacity,\n        boundless,\n        foil,\n        resolvedStatTextStyle,\n        statInEffect,\n        frameCanvasRef,\n    ]);\n\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (_exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        // isRelevant: () => boolean,\n    }) => {\n        // const {\n        //     isRelevant,\n        //     pendulumSize,\n        //     isPendulum = false,\n        //     opacity,\n        // } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n\n        if (exportCanvas && exportCtx) {\n            clearCanvas(exportCtx);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxRef.current?.draw(exportCanvas);\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\n                exportCanvas,\n                0,\n                0,\n                exportCanvas.width,\n                exportCanvas.height,\n                0,\n                0,\n                CanvasWidth,\n                CanvasHeight,\n            );\n        }\n    }, [\n        language,\n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n        previewCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n    lineWidth?: number,\n    lineColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = ({\n    ctx,\n    globalScale,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    edgeOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    fontLevel,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    edgeOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    fontLevel: number,\n}) => {\n    if (!clearCanvas(ctx)) return {\n        rightEdge: 0,\n    };\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                    globalScale,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left'\n            ? trueEdge + edgeOffset\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        rightEdge: result.tokenEdge,\n    };\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    globalScale,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    globalScale,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { useCallback } from 'react';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst notificationLocalStorageKey = 'ygocarder-notification';\nexport type NotificationMemory = {\n    condenseReminder: boolean,\n    versionReminder: string,\n    faqReminder: string,\n    feedbackReminder: boolean,\n};\nexport type NotificationStore = {\n    memory: NotificationMemory,\n    updateNotification: <Key extends keyof NotificationMemory>(\n        key: Key,\n        value: NotificationMemory[Key],\n    ) => void,\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\n};\nexport const useNotificationMemory = create<NotificationStore>((set) => {\n    const {\n        condenseReminder,\n        versionReminder,\n        faqReminder,\n        feedbackReminder,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useNotificationMemory: Error when getting cached notification', e);\n            return {};\n        }\n    })();\n\n    return {\n        memory: {\n            feedbackReminder: typeof feedbackReminder === 'boolean' ? feedbackReminder : false,\n            faqReminder: typeof faqReminder !== 'string' ? '' : faqReminder,\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\n        },\n        updateNotification: (key, value) => {\n            set(currentStore => {\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        },\n        updateNotificationMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\n    const {\n        targetMemory,\n        updateNotification,\n    } = useNotificationMemory(useShallow(({\n        memory,\n        updateNotification,\n    }) => ({\n        targetMemory: memory[key],\n        updateNotification,\n    })));\n\n    const updateTargetNotification = useCallback(\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\n        [key, updateNotification],\n    );\n\n    return [targetMemory, updateTargetNotification] as const;\n};","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\nimport styled from 'styled-components';\n\n/** The container must contain this class to spread inner styling to angle picker component */\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\nconst AnglePickerContainer = styled.div`\n    .ap {\n        background-color: var(--color-heavy);\n        .apc {\n            width: 8px;\n        }\n        .aph {\n            width: 8px;\n            height: 8px;\n        }\n    }\n    .ai {\n        margin: 0;\n        margin-top: var(--spacing-sm);\n        background: var(--main-slider);\n        justify-content: space-between;\n        line-height: 1.4;\n        span {\n            background: var(--main-secondary);\n            padding-left: var(--spacing);\n            padding-right: var(--spacing);\n            &:hover {\n                background: var(--sub-secondary);\n            }\n        }\n        span,\n        input {\n            color: var(--color-heavy);\n        }\n    }\n`;\n\nexport type CircularAnglePicker = AnglePicker & {\n    children?: React.ReactChild,\n};\nexport const CircularAnglePicker = ({\n    children,\n    ...rest\n}: CircularAnglePicker) => {\n    return <AnglePickerContainer className=\"angle-picker-container\">\n        {children}\n        <AnglePicker {...rest} />\n    </AnglePickerContainer>;\n};","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\n\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    cursor: pointer;\n    display: inline-block;\n`;\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span<{ $freeSize: boolean, $size: 'sm' | 'md' }>`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    ${({ $freeSize, $size }) => $freeSize\n        ? 'padding: 0 var(--spacing-xxs);'\n        : $size === 'sm' ? 'width: 18px;' : 'width: 24px;'\n    };\n    ${({ $size }) => $size === 'sm'\n        ? `\n            height: 18px;\n            font-size: var(--fs-sm);\n        `\n        : `\n            height: 24px;\n            font-size: var(--fs);\n        `}\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    size?: 'sm' | 'md',\n    Icon?: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    size = 'md',\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            $size={size}\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n            $freeSize={!Icon}\n        >\n            <>\n                {Icon && <Icon {...iconProps} />}{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    align-items: center;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import styled from 'styled-components';\n\nexport const ColorBlock = styled.div<{ $static?: boolean, $empty?: boolean }>`\n    height: 17px;\n    width: 17px;\n    cursor: pointer;\n    position: relative;\n    outline: none;\n    box-shadow: 0 0 1px 1px var(--main-level-3);\n    border-radius: var(--br);\n    ${({ $static }) => $static\n        ? `\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        `\n        : ''}\n    ${({ $empty }) => $empty\n        ? `\n            background-color: var(--sub-level-4);\n            background-image: var(--gradient-diagonal-stripe);\n        `\n        : ''}\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n`;","import copy from 'copy-to-clipboard';\nimport { CheckOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useState } from 'react';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;\n\nexport const StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\n\nexport type CopiableCode = {\n    data: string | number,\n    children?: React.ReactNode,\n}\nexport const CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string | number) => {\n        copy(typeof copyingContent === 'number' ? `${copyingContent}` : copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledMono\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\n        {children}\n    </StyledMono>;\n};","import { Popover } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledMarkdown = styled.div`\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-3);\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    text-shadow: var(--ts);\n    p {\n        white-space: pre-line;\n    }\n    ul {\n        padding-inline-start: var(--spacing-2xl);\n        margin-block-end: 0;\n        li {\n            line-height: 1.5;\n        }\n    }\n    :last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\n    max-width: 550px;\n    border-radius: var(--br-lg);\n    border: var(--bw) solid var(--sub-level-1);\n`;\n\nexport const InternalPopover = ({\n    content,\n    children,\n    ...rest\n}: React.ComponentProps<typeof Popover>) => {\n    if (content) {\n        return <Popover content={content} {...rest}>{children}</Popover>;\n    }\n    return <>{children}</>;\n};\n\nexport const CardActionButton = styled.button`\n    --overlay-size: 36px;\n    background: var(--main-primary);\n    border-width: 0;\n    border-style: solid;\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing-sm);\n    line-height: 1;\n    font-size: var(--fs-xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-1);\n    /* display: none; */\n    &:not(:disabled) {\n        cursor: pointer;\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n    &:disabled {\n        cursor: not-allowed;\n        filter: opacity(0.5);\n    }\n`;\n\nexport const SolidLabel = styled.div`\n    display: inline-flex;\n    column-gap: var(--spacing-xs);\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    border-radius: var(--br);\n    box-shadow: var(--bs-input);\n    .ant-checkbox-wrapper {\n        transform: translateY(-1px); // Alignment\n    }\n`;\nexport const CombinedSliderContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 57px 39px 6px;\n    &.inactive {\n        .slider-label,\n        .ant-slider,\n        .slider-padding {\n            background-color: var(--main-level-3);\n        }\n    }\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        border-right: none;\n        border-radius: var(--br) 0 0 var(--br);\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n`;\n\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    display: inline-block;\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;\n\nconst ResolutionLabelContainer = styled.div<{ $warning: boolean }>`\n    display: grid;\n    grid-template-columns: 3em max-content 3em;\n    gap: var(--spacing-xs);\n    .left-part {\n        text-align: right;\n    }\n    .right-part {\n        text-align: left;\n    }\n    ${({ $warning }) => $warning\n        ? `\n            color: var(--main-warning);\n        `\n        : ''}\n`;\nexport type ResolutionLabel = {\n    warning?: boolean,\n    width: number,\n    height: number,\n}\nexport const ResolutionLabel = ({ width, height, warning }: ResolutionLabel) => {\n    return <ResolutionLabelContainer $warning={warning}>\n        <span className=\"left-part\">{width}</span>\n        <span>×</span>\n        <span className=\"right-part\">{height}</span>\n    </ResolutionLabelContainer>;\n};\n\nexport * from './color';\nexport * from './copiable';","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { RadioTrain } from '../input-train';\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n    .list-option {\n        margin-bottom: var(--spacing-xs);\n    }\n    .resolution-list {\n        &.radio-train {\n            .ant-radio-button-wrapper:first-child {\n                border-radius: var(--br) var(--br) 0 0;\n            }\n            .ant-radio-button-wrapper:last-child {\n                border-radius: 0 0 var(--br) var(--br);\n            }\n        }\n        .radio-train-input-group {\n            display: inline-grid;\n            flex: 0 1 auto;\n            .ant-radio-button-wrapper {\n                border-left-width: 1.02px;\n                &:before {\n                    content: none;\n                }\n            }\n        }\n    }\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        exportFormat,\n        resolution,\n        allowHotkey,\n        reduceMotionColor,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\n                    <RadioTrain\n                        className=\"resolution-list\"\n                        value={`${resolution[0]}x${resolution[1]}`}\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\n                            value: `${width}x${height}`,\n                            label: scale > 1\n                                ? <Popover\n                                    overlayClassName=\"explanation-overlay\"\n                                    placement=\"left\"\n                                    content={<StyledPopMarkdown>\n                                        {language['setting.option.resolution.warning']}\n                                    </StyledPopMarkdown>}\n                                >\n                                    <ResolutionLabel width={width} height={height} warning={true} />\n                                </Popover>\n                                : <ResolutionLabel width={width} height={height} />,\n                        }))}\n                        onChange={value => {\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\n\n                            if (resolutionValue) {\n                                updateSetting({\n                                    resolution: resolutionValue.settingValue,\n                                    globalScale: resolutionValue.scale,\n                                });\n                            }\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\n                    <RadioTrain\n                        value={exportFormat}\n                        optionList={ExportFormatList}\n                        onChange={value => {\n                            updateSetting({ exportFormat: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import styled, { css, keyframes } from 'styled-components';\n\nconst titlShaking = keyframes`\n    0% { transform: rotate(0deg); }\n    3% { transform: rotate(5deg); }\n    6% { transform: rotate(0eg); }\n    9% { transform: rotate(-5deg); }\n    12% { transform: rotate(0deg); }\n    100% { transform: rotate(0deg); }\n`;\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\n    text-align: center;\n    border: var(--bw) solid var(--main-level-3);\n    background-color: var(--main-level-1);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    cursor: pointer;\n    box-shadow: 0 0 2px 1px #2a2a2a inset;\n    transition: background-color 250ms linear;\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\n    ${({ $animating }) => $animating\n        ? `\n            border: var(--bw) solid var(--sub-level-1);\n            background: var(--main-warning);\n            color: var(--color-contrast);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background-color: var(--main-level-3);\n    }\n`;\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\n    box-shadow: none;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    &.js-highlight {\n        background: var(--main-info);\n        text-shadow: none;\n        box-shadow: 0 0 2px 0 #333333;\n    }\n    ${({ $animating }) => $animating\n        ? `\n            background: var(--main-info);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background: var(--sub-info);\n    }\n`;\n\nexport const QuoteContainer = styled.div`\n    white-space: pre-line;\n    label {\n        font-weight: bold;\n        font-style: italic;\n        &:after {\n            content: \":\";\n        }\n    }\n    .question {\n        margin-left: var(--spacing);\n    }\n    .answer {\n        margin: var(--spacing) 0;\n        margin-bottom: var(--spacing-lg);\n    }\n    &:last-child {\n        .answer {\n            margin-bottom: 0;\n        }\n    }\n`;","import { Popover } from 'antd';\nimport { memo, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { StyledPopMarkdown } from '../atom';\nimport { useNotification } from 'src/service';\nimport { VersionLogButtonLabel } from './styled';\n\nconst LogSentence = styled.li`\n    text-align: center;\n    .content {\n        text-align: left;\n    }\n    a {\n        display: inline-block;\n    }\n    img {\n        display: block;\n        max-width: 400px;\n        max-height: 300px;\n        margin: auto;\n        box-shadow: var(--bs-1);\n        margin-top: var(--spacing-xs);\n    }\n`;\n\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\nconst VersionLogStore = (() => {\n    let isReady = false;\n    let versionLog: VersionLog = [];\n\n    return {\n        getLog: async () => {\n            if (isReady) return versionLog;\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/log/version.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            try {\n                const responseLog = await response.json();\n                versionLog = responseLog;\n                isReady = true;\n\n                return versionLog;\n            } catch (e) {\n                console.error(e);\n            }\n            return [];\n        }\n    };\n})();\nexport const VersionLog = () => {\n    const [log, setLog] = useState<VersionLog>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const log = await VersionLogStore.getLog();\n\n            setLoading(false);\n            setLog(log);\n        })();\n    }, []);\n\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\n    if (loading) return <div>Loading changelog...</div>;\n    return <div>\n        {log.map(({ logList, version }, index) => {\n            return <div key={`${version}-${index}`} className=\"log-section\">\n                <b>{version}</b><br />\n                <ul>\n                    {/* Using index as key here is safe as the component is stateless */}\n                    {logList.map(({ content, image }, index) => {\n                        return <LogSentence key={index}>\n                            <div className=\"content\">\n                                {content}\n                            </div>\n                            {image && <a target=\"_blank\" rel=\"noreferrer\" href={image} title=\"Click to open in new tab\">\n                                <img src={image} alt={`version-${version}-illust`} />\n                            </a>}\n                        </LogSentence>;\n                    })}\n                </ul>\n            </div>;\n        })}\n    </div>;\n};\n\nconst compareSemver = (a: string, b: string): boolean => {\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\n    \n    if (majorA !== majorB) {\n      return majorA > majorB;\n    }\n    \n    if (minorA !== minorB) {\n      return minorA > minorB;\n    }\n    \n    return patchA > patchB;\n};\n\nconst StyledVersionLog = styled(StyledPopMarkdown)`\n    overflow: auto;\n    width: 550px;\n    max-height: 300px;\n    width: 550px;\n    .log-section + .log-section {\n        margin-top: var(--spacing);\n    }\n`;\nexport const VersionLogButton = memo(() => {\n    const [animating, setAnimating] = useState(false);\n    const [\n        version,\n        setMemoizedVersion,\n    ] = useNotification('versionReminder');\n\n    useEffect(() => {\n        if (version) {\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\n            const memoizedSemver = version;\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\n\n            if (compareSemver(currentSemver, memoizedSemver)) {\n                setAnimating(true);\n                setTimeout(() => {\n                    setAnimating(false);\n                }, 8000);\n            }\n        }\n    }, [setMemoizedVersion, version]);\n\n    return <Popover\n        placement=\"bottom\"\n        content={<StyledVersionLog>\n            <VersionLog />\n        </StyledVersionLog>}\n    >\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\n        </VersionLogButtonLabel>\n    </Popover>;\n});","import { Modal, notification, Tabs } from 'antd';\nimport { FaqButtonLabel, QuoteContainer } from './styled';\nimport { useNotification } from 'src/service';\nimport React, { useEffect, useState } from 'react';\n\nexport const FAD_BUTTON_ID = 'faq-button';\n\ntype Quote = {\n    author?: string,\n    question: string,\n    children: React.ReactNode,\n}\nconst Quote = ({\n    author,\n    question,\n    children,\n}: Quote) => {\n    return <QuoteContainer>\n        <blockquote>\n            {author && <label>{author}</label>}\n            <div className=\"question\">{question}</div>\n        </blockquote>\n        <div className=\"answer\">{children}</div>\n    </QuoteContainer>;\n};\n\nexport const QuestionAndFeedback = () => {\n    const [visible, setVisible] = useState(false);\n    const [animating, setAnimating] = useState(false);\n    const [faqReminder, setMemoizedReminder] = useNotification('faqReminder');\n    const [feedbackReminder, setFeedbackReminder] = useNotification('feedbackReminder');\n\n    useEffect(() => {\n        const currentReminder = '28/06/2025';\n        if (faqReminder !== currentReminder) {\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(currentReminder);\n\n            setAnimating(true);\n            setTimeout(() => {\n                setAnimating(false);\n            }, 8000);\n        }\n    }, [setMemoizedReminder, faqReminder]);\n\n    useEffect(() => {\n        if (feedbackReminder !== true) {\n            setFeedbackReminder(true);\n            setAnimating(true);\n            notification.info({\n                message: 'Feedback Reminder',\n                description: 'If you have any feedback or suggestion, please check the FAQ button first to see if your feedback has been addressed.',\n                duration: 10,\n                onClose: () => {\n                    setAnimating(false);;\n                }\n            });\n        }\n    }, [feedbackReminder, setFeedbackReminder]);\n\n    return <>\n        <FaqButtonLabel id={FAD_BUTTON_ID} $animating={animating} onClick={() => setVisible(cur => !cur)}>\n            {'FAQ'}\n        </FaqButtonLabel>\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\n            <Tabs>\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\n                    <div><i>Solved feedbacks are removed.</i></div>\n                    <br />\n                    {[\n                        {\n                            author: 'Skip at Jun 27, 2025',\n                            question: 'Good job! I notice a mistake with the attribute spell card in french. It is not \"SPELL\" but \"MAGIE\" we should use.',\n                            answer: 'Indeed, I have messed up the Spell attribute between French and German cards. It should be fixed by now.'\n                        },\n                        {\n                            author: 'Anonymous User at Jun 24, 2025',\n                            question: 'In a line with brackets (), with no justifing syntax, the line with brackets will appear more compressed compared to a line with no brackets',\n                            answer: 'The first line (\"3 Xyz...\") is using the non-breakable line syntax, which does not obey the overall compressing ratio. I will update the description to make it more clear.'\n                        },\n                        {\n                            author: 'Blake at Jun 23, 2025',\n                            question: 'When choose an image for the background of the card, not only it covers the card but also the main image of the card. Can you do something to fix it please?',\n                            answer: 'Hi there, the background system is indeed has a bug, but in your case, it seems that you are using the \"Replace Frame\" option, which will replace the usual card frame (Normal, Effect, etc...) with your background. You may want to switch cover type into \"Fit to art border\" instead.',\n                        },\n                        {\n                            author: 'Die Frauen at Jun 22, 2025',\n                            question: 'Looking good. One last change for now I\\'d like to see is, if you could implement that dye feature on the card layout for the card frames as well. That way you could get different variations from just Gold and Platinum',\n                            answer: 'Update: I already implement the feature.\\nFoil system contains more parts, but I think it should be doable. I will look into it later.',\n                        },\n                        {\n                            author: 'Rush Duel at Jun 22, 2025',\n                            question: 'This card maker is amazing! Have you ever consider doing a rush duel section as well?',\n                            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\n                        },\n                        {\n                            author: 'Die Frauen at Jun 22, 2025',\n                            question: 'Fantastic job, you understood the assignment. It sappears it still needs to be better centered out , the custom array is a bit skewed to the right, and it appears the toggle to move them to the left/center aren\\'t quite there yet.\\n\\nA minor update I would like is, to add a \"normal spell/trap\" icon, I think you can find it on the wiki if you look it up, as a blank template.',\n                        },\n                        {\n                            author: 'Die Frauen at Jun 22, 2025',\n                            question: 'Addendum (Disregard the alignment comment, or to rephrase, it works fine. I was under the impression it would align on its own, and put the level at the edges and it projected as though it were the 13th icon).\\n\\nI assume you can organize those manually, but for all intents and purposes it is perfectly functional!',\n                            answer: 'Come to think of it, maybe the star editor is not intuitive enough to use, so I have updated it a bit more. Also the normal icon for Spell/Trap is now available.',\n                        },\n                        {\n                            author: 'Die Frauen at Jun 19, 2025',\n                            question: 'This may be a bit crazy, but since you\\'ve already come a long way with customization, do you think it\\'d be possible to toggle Star Types to be sorted manually in any combinations of the ones currently available?\\n\\nAnd on that note, and this here may be a bit too out there, but do you think you could use the Spell/Trap iconography as you would any of those? And if it\\'s not too much of a bother, maybe the monster Attributes downsized on that row as well?',\n                            answer: 'Putting Spell/Trap/Monster Attribute icon in star slots is possible. As for manual icon of each star slot, I think *technically* it should be doable, but I need to do a bit more test, probably will look into it this weekend.\\nUpdate: I have added those options, you may try it out now.',\n                        },\n                        {\n                            author: 'Die Frauen at Jun 19, 2025',\n                            question: 'Hello, first of all I would like to congratulate you on creating what\\'s probably the best card editor there is, and thank you for making things convenient for everyone using it. I shall formally make a request of sorts in a different report, but I couldn\\'t just not commend the efforts you and all others involved have done. Even managed to  mesh together the Link Arrows for a Pendulum frame in a not entirely unsightly way, and the new hue feature for advanced layouts is also superb for custom card frame efforts.\\n\\nSuperb work, keep it up',\n                            answer: 'Thanks for your kind words, appreciate your support.',\n                        },\n                        {\n                            author: 'Not really a feedback but... at Jun 19, 2025',\n                            question: 'It would be cool to see the Attributes in other languages available in TCG',\n                            answer: 'I have added many more Attributes that I could find on Yugipedia.',\n                        },\n                        {\n                            author: 'KaibaSetoo at Jun 15, 2025',\n                            question: 'Hello, can you fix the scale number 10, 11 and 12. They are not in the center of the scale value border. Thank you.',\n                            answer: 'I have updated some cases, but please note that some scale numbers does not place at the center of the box at all, but deviated a bit to the right side (very clear in cards like \"D/D Savant Kepler\").',\n                        },\n                        {\n                            author: 'Anonymous User at Jun 16, 2025',\n                            question: 'Can you change back the *LINK-* text as before, like before the increase card larger update, the letter *L* is now higher.',\n                        },\n                        {\n                            author: 'Anonymous User at Jun 16, 2025',\n                            question: 'And the LINK number are now higher then the text too.',\n                        },\n                        {\n                            author: 'TheDuelistt at Jun 15, 2025',\n                            question: 'Can you make this L letter to be consistent with the rest of the INK, also, can you make the Link Rating value (number) lower and consistent with the INK, and the dash \"-\" a little bolder, so that the overall look is similar to the official Konami Yugioh Card template. Thank you.',\n                            answer: 'I have updated the layer, hopefully it look better now.',\n                        },\n                        {\n                            author: 'text format at Jun 14, 2025',\n                            question: 'The text format looks completely different with the pendulum effect than with the monster effect',\n                            answer: 'Text effect is automatically calculated to best fit in the card, I always recommended to let it flow naturally, but regardless, I have added input to define the minimum lines of effect you would want in your cards.',\n                        },\n                        {\n                            author: 'Anonymous User at Jun 14, 2025',\n                            question: 'The outline is a bit uneven depending on the letter.',\n                            answer: 'This is a known issue, unfortunately this is the best I can offer right now.',\n                        },\n                        {\n                            author: 'Anonymous User at Jun 14, 2025',\n                            question: 'Justify doesn\\'t seem to work',\n                            answer: 'It should work normally by now.',\n                        },\n                        {\n                            author: 'Phan Trí Dĩ at Jun 11, 2025',\n                            question: 'Hi, firstly, I want to thanks to your hardwork for making a wonderful website, very appreciate your work. There\\'s some K9 card with a special hash sign. It get a bit smaller when I use it. I wondering if you can fix it. Thank you very much.',\n                            answer: 'Hi there. There are two parts of the problem here:\\nThe first thing is the hash sign, which is not a bug. This design has been used on many cards in the past, for example \"Hi-Speedroid Glider #2\", and there is no sign that it would be different this time.\\nThe second thing is the letter \"Ø\", which currently only appear on the OCG card, as Lupus itself is not yet revealed for TCG, we doesn\\'t know if the TCG would keep this letter or not.',\n                        },\n                        {\n                            author: 'Anonymous User at Jun 06, 2025',\n                            question: 'When using the Link Arrows on a Pendulum card, the Link Rating disappears',\n                            answer: 'It should be fixed by now',\n                        },\n                        {\n                            author: 'Shanaya User at Jun 04, 2025',\n                            question: 'I would like to request another artwork effect like this, like the effect of the attached picture its a secret rare effect',\n                            answer: 'I have added finish type 9, this is my best and final attempt, sorry if it does not match your need.',\n                        },\n                        {\n                            author: 'Yugiohfann at Jun 03, 2025',\n                            question: 'Please fix the ATK/DEF font text, the numbers are higher than the ATK/DEF text.',\n                        },\n                        {\n                            author: 'Anonymous User at Jun 03, 2025',\n                            question: 'Small adjustment for size and style of card stats (ATK, DEF). Can you bring back the old size and style of card stats. Now the stats are higher than the ATK and DEF text.',\n                            answer: 'Can you provide a sample image so I can see the difference? I cannot take action blindly wihout any reference.',\n                        },\n                        {\n                            author: 'Anonymous User at Jun 02, 2025',\n                            question: 'please can you add sizing selection in card name? please? thank you!',\n                            answer: 'Can you provide a sample image of the old card? I would like to take a look to see if it is possible to implement it or not.',\n                        },\n                        {\n                            author: 'Cardmaker_01',\n                            question: 'Hello, the Xyz cards have black font in Set ID and Copyright, making it invisible to Xyz cards. Attached screenshot is an example. Can you please fix those fields to white font again? tysm and more power to you :)',\n                            answer: 'It should be fixed by now, thanks for your feedback.'\n                        },\n                        {\n                            author: 'galaxy dragon',\n                            question: 'Can you add a little space on the edge of the spell and trap card? when it is full of text. Thank you.',\n                            answer: 'I can\\'t quite understand what you mean, can you be more specific, or provide a sample image?',\n                        },\n                        {\n                            author: 'Anonymous User at May 27, 2025',\n                            question: 'Hello, can you add a selection of sizes in card title? because the old card and new card have different card title alignment, the old card seems to appear the title is more stretch than the new maybe because of the card size of the old card. can you fix it pls? maybe add some choices of card title alignments?\\nor maybe size? THANK YOU SO MUCH!!',\n                            answer: 'Do you have any sample image of the old card? I would like to see the difference between the two so I can decide that if it is possible or not.',\n                        },\n                        {\n                            author: 'ATK/DEF at May 26, 2025',\n                            question: 'The ATK/DEF text and values seem to have different sizes than usual. Also the ? seems to be in a different format to how it appears in TCG/OCG',\n                            answer: 'I have made a bit adjustment for font size and font family of stats text.',\n                        },\n                        {\n                            author: 'Maya at May 23, 2025',\n                            question: 'I\\'d like to make a request, is it possible to put a SPEED DUEL watermark in EVERY card types in the description area like the Speed Skill type when it is set to speed duel? thank you so much. Appreciate your lovely cardmaker',\n                            answer: 'I will try, but this is pretty hard to do to be honest, don\\'t keep your hope up.',\n                        },\n                    ].map(({ author, question, answer }, index) => {\n                        return <Quote key={index} author={author} question={question}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\n                    {[\n                        {\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\n                        },\n                    ].map(({ question, answer }, index) => {\n                        return <Quote key={index} question={question}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n            </Tabs>\n        </Modal>\n    </>;\n};","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage } from 'src/service';\nimport { Radio, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\nimport { VersionLogButton } from './version-log';\nimport { StyledPopMarkdown } from '../atom';\nimport { FAD_BUTTON_ID, QuestionAndFeedback } from './faq';\nimport './app-header.scss';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\n                    <span\n                        className=\"bug-report\"\n                        onMouseOver={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.add('js-highlight');\n                        }}\n                        onMouseOut={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.remove('js-highlight');\n                        }}\n                    >\n                        <div id=\"sentry-bug-report\">\n                            {language['contributor.bug-report.tooltip']}\n                        </div>\n                    </span>\n                </Tooltip>\n                <QuestionAndFeedback />\n                <VersionLogButton />\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<StyledPopMarkdown className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </StyledPopMarkdown>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasPanel = () => {\n    const language = useLanguage();\n\n    return <StyledPopMarkdown className=\"disclaimer\">\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\n    </StyledPopMarkdown>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<TaintedCanvasPanel />}\n    />;\n};","import { Button, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { StyledCode } from '../atom';\nimport './formatting-guide.scss';\n\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n    h2 {\n        margin-top: var(--spacing);\n    }\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['guide.format.close']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-6.label']}</h2>\n                {language['guide.format.section-6.content'](\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'justified non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'justified non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import React from 'react';\nimport { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n    &:focus {\n        background-color: var(--main-level-3);\n    }\n    &:focus-visible {\n        background-color: var(--main-level-3);\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    id,\n    tabIndex,\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n    onClick,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & {\n    id?: string,\n    tabIndex?: number,\n    className?: string,\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\n}) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        id={id}\n        tabIndex={tabIndex}\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n        onClick={onClick}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","\nimport { Input } from 'antd';\nimport { useColorPicker } from 'src/service';\nimport { getContrastColor } from 'src/util';\nimport styled from 'styled-components';\nimport { ColorBlock } from '../atom';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        gap: 3px; // Alignment\n        padding-left: 3px; // Alignment\n        input {\n            width: 58px; // Alignment\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\n\nexport type InlineColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nexport const InlineColorPicker = ({\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                const dotColor = getContrastColor(rgb);\n\n                return <ColorBlock key={hex}\n                    className=\"color-block\"\n                    title={hex}\n                    style={{ backgroundColor: hex }}\n                    onClick={() => onChange?.(hex)}\n                >\n                    {color.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </ColorBlock>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <ColorBlock $static style={{ backgroundColor: color.hex }} />\n            <Input\n                size=\"small\"\n                value={inputText}\n                onChange={e => {\n                    setColor(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};","import { Input } from 'antd';\nimport { CustomPicker, InjectedColorProps } from 'react-color';\nimport { Saturation } from 'react-color/lib/components/common';\nimport { UseColorPicker, useColorPicker } from 'src/service';\nimport { getContrastColor } from 'src/util';\nimport styled from 'styled-components';\nimport { ColorBlock } from '../atom';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { IconButton } from '../icon-button';\n\nconst SaturationBoardContainer = styled.div`\n    position: relative;\n    border-radius: var(--br);\n    > div,\n    .saturation-white,\n    .saturation-black {\n        border-radius: var(--br);\n    }\n`;\n\ntype UnlinkedSaturationBoard = InjectedColorProps;\nconst UnlinkedSaturationBoard = ({\n    onChange,\n    ...props\n}: UnlinkedSaturationBoard) => {\n    return <SaturationBoardContainer>\n        <Saturation\n            {...props}\n            onChange={color => {\n                onChange?.(color);\n            }}\n        />\n    </SaturationBoardContainer>;\n};\nconst SaturationBoard = CustomPicker(UnlinkedSaturationBoard);\n\nconst HorizontalSketchColorList = [\n    { hex: '#B80000', rgb: [184, 0, 0] },\n    { hex: '#EB9694', rgb: [235, 150, 148] },\n    { hex: '#DB3E00', rgb: [219, 62, 0] },\n    { hex: '#FAD0C3', rgb: [250, 208, 195] },\n    { hex: '#FCCB00', rgb: [252, 203, 0] },\n    { hex: '#FEF3BD', rgb: [254, 243, 189] },\n    { hex: '#008B02', rgb: [0, 139, 2] },\n    { hex: '#C1E1C5', rgb: [193, 225, 197] },\n    { hex: '#006B76', rgb: [0, 107, 118] },\n    { hex: '#BEDADC', rgb: [190, 218, 220] },\n    { hex: '#1273DE', rgb: [18, 115, 222] },\n    { hex: '#C4DEF6', rgb: [196, 222, 246] },\n    { hex: '#004DCF', rgb: [0, 77, 207] },\n    { hex: '#BED3F3', rgb: [190, 211, 243] },\n    { hex: '#5300EB', rgb: [83, 0, 235] },\n    { hex: '#D4C4FB', rgb: [212, 196, 251] },\n];\n\nconst HorizontalSketchPickerContainer = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 3.5rem 5rem max-content 1fr;\n    gap: var(--spacing-sm);\n    .color-input {\n        .color-state {\n            display: flex;\n            margin-bottom: var(--spacing-xs);\n        }\n        ${ColorBlock} {\n            display: inline-block;\n            flex: 1;\n            border: var(--bw) solid var(--sub-level-2);\n            height: 18px;\n        }\n    }\n    .color-list {\n        display: grid;\n        grid-template-columns: repeat(${HorizontalSketchColorList.length / 4}, max-content);\n        border-radius: var(--br);\n        overflow: hidden;\n        ${ColorBlock} {\n            height: 15px;\n            width: 15px;\n            box-shadow: none;\n            border-radius: 0;\n        }\n    }\n`;\nexport type HorizontalSketchPicker = {\n    children?: React.ReactNode,\n} & UseColorPicker;\nexport const HorizontalSketchPicker = ({\n    children,\n    onChange,\n    value,\n}: HorizontalSketchPicker) => {\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\n    const noColor = inputText === '';\n\n    return <HorizontalSketchPickerContainer className=\"horizontal-sketch-picker\">\n        <div className=\"input-label\">\n            {children}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-state\">\n                <ColorBlock\n                    $empty={noColor}\n                    style={noColor ? {} : { backgroundColor: color.hex }}\n                />\n                <IconButton\n                    size=\"sm\"\n                    Icon={CloseOutlined}\n                    onClick={() => {\n                        onChange('');\n                    }}\n                />\n            </div>\n            <Input\n                size=\"small\"\n                value={inputText}\n                onChange={e => {\n                    setColor(e.target.value);\n                }}\n            />\n        </div>\n        <div className=\"color-list\">\n            {HorizontalSketchColorList.map(({ hex, rgb }) => {\n                const dotColor = getContrastColor(rgb);\n\n                return <ColorBlock key={hex}\n                    className=\"color-block\"\n                    title={hex}\n                    style={{ backgroundColor: hex }}\n                    onClick={() => onChange?.(hex)}\n                >\n                    {color.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </ColorBlock>;\n            })}\n        </div>\n        <SaturationBoard color={color.hex} onChange={({ hex }) => setColor(hex)} />\n    </HorizontalSketchPickerContainer>;\n};","import { Modal } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasConst } from 'src/model';\nimport {\n    TransformWrapper,\n    TransformComponent,\n    ReactZoomPanPinchContentRef,\n} from 'react-zoom-pan-pinch';\nimport styled from 'styled-components';\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { CardActionButton } from '../atom';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nconst StyledLightboxContainer = styled.div`\n    width: ${CanvasWidth}px;\n    height: ${CanvasHeight}px;\n    overflow: hidden;\n    position: relative;\n    line-height: 0;\n    .card-lightbox-control {\n        position: absolute;\n        z-index: 1;\n        top: var(--spacing);\n        right: var(--spacing);\n        user-select: none;\n        text-align: right;\n        .action-list {\n            display: inline-flex;\n            gap: var(--spacing-xs);\n        }\n        .control-info {\n            background-color: var(--main-level-1);\n            padding: var(--spacing-xs);\n            margin-top: var(--spacing-xs);\n            border-radius: var(--br);\n            border: var(--bw) solid var(--sub-level-1);\n            line-height: 1;\n            box-shadow: var(--bs-1);\n        }\n    }\n    .card-lightbox-content {\n        cursor: grab;\n    }\n`;\n\nconst MAX_ZOOM = 4;\nconst Controls = ({\n    zoomIn,\n    zoomOut,\n    resetTransform,\n    setTransform,\n    scale,\n    globalScale,\n    width,\n    height,\n}: ReactZoomPanPinchContentRef & {\n    scale: number,\n    globalScale: number,\n    width: number,\n    height: number,\n}) => {\n    return <div className=\"control-container\">\n        <div className=\"action-list\">\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\n                zoomIn();\n            }}>\n                <ZoomInOutlined />\n            </CardActionButton>\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\n                zoomOut();\n            }}>\n                <ZoomOutOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                resetTransform();\n            }}>\n                <FullscreenExitOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                setTransform(\n                    -Math.max(0, width - CanvasWidth) / 2,\n                    -Math.max(0, height - CanvasHeight) / 2,\n                    1,\n                );\n            }}>\n                <FullscreenOutlined />\n            </CardActionButton>\n        </div>\n        <div className=\"control-info\">\n            {scale && <>×{\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\n            }</>}&nbsp;({width} × {height})\n        </div>\n    </div>;\n};\n\nexport type Lightbox = {\n    globalScale: number,\n};\nexport type LightboxRef = {\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\n    draw: (targetCanvas: HTMLCanvasElement) => void,\n    refresh: () => void,\n    getCanvasKey: () => number,\n};\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\n    globalScale,\n}, ref) => {\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [canvasKey, setCanvasKey] = useState(0);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\n    const [scale, setScale] = useState(() => 1 / globalScale);\n\n    useImperativeHandle(ref, () => ({\n        setVisible: setLightboxVisible,\n        draw: targetCanvas => {\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\n                targetCanvas,\n                0,\n                0,\n            );\n        },\n        refresh: () => setCanvasKey(cnt => cnt + 1),\n        getCanvasKey: () => canvasKey,\n    }));\n\n    useEffect(() => {\n        lightboxRef.current?.resetTransform();\n    }, [globalScale]);\n\n    return <Modal\n        width={`${CanvasWidth + 15 * 2}px`}\n        wrapClassName=\"card-lightbox-overlay\"\n        visible={lightboxVisible}\n        forceRender={true}\n        onCancel={() => setLightboxVisible(false)}\n        footer={null}\n    >\n        <StyledLightboxContainer\n            className=\"card-lightbox-container\"\n        >\n            <TransformWrapper ref={lightboxRef}\n                initialScale={1 / globalScale}\n                initialPositionX={0}\n                initialPositionY={0}\n                minScale={1 / globalScale}\n                maxScale={MAX_ZOOM}\n                onTransformed={ref => {\n                    setScale(ref.state.scale);\n                }}\n            >\n                {({ ...utils }) => {\n                    return <>\n                        <div\n                            className=\"card-lightbox-control\"\n                        >\n                            <Controls\n                                {...utils}\n                                scale={scale}\n                                globalScale={globalScale}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </div>\n                        <TransformComponent\n                            wrapperClass=\"card-lightbox-content\"\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\n                        >\n                            <canvas key={canvasKey + 0.1}\n                                id=\"lightbox-canvas\"\n                                ref={lightboxCanvasRef}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </TransformComponent>\n                    </>;\n                }}\n            </TransformWrapper>\n        </StyledLightboxContainer>\n    </Modal>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst LINK_MARKER_HALF_SIZE = 13;\nexport const LINK_MARKER_PICKER_WIDTH = 3 * 2 * LINK_MARKER_HALF_SIZE + 5 * 2; // 5 = --spacing-xs\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: ${LINK_MARKER_HALF_SIZE}px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    display: inline-block;\n    .title {\n        line-height: 1;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkerPicker = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkerPicker = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkerPicker) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-picker', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import { Menu, Popover } from 'antd';\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\nimport { useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-setting {\n        background-color: var(--main-active);\n    }\n`;\nexport type ResolutionPicker = {\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ResolutionPicker = ({\n    onChange,\n    ...rest\n}: ResolutionPicker) => {\n    const language = useLanguage();\n    const {\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.resolution.label']}\n        </StyledDownloadDropdownLabel>\n        {ResolutionList.map(({ width, height, label, scale }) => {\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        resolution: [width, height],\n                        globalScale: scale,\n                    });\n                    onChange?.([width, height], scale);\n                }}\n            >\n                {scale > 1\n                    ? <Popover\n                        overlayClassName=\"explanation-overlay\"\n                        placement=\"left\"\n                        content={<StyledPopMarkdown>\n                            {language['setting.option.resolution.warning']}\n                        </StyledPopMarkdown>}\n                    >\n                        <ResolutionLabel width={width} height={height} warning={true} />\n                    </Popover>\n                    : <ResolutionLabel width={width} height={height} />}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};\n\nexport type ExportFormatPicker = {\n    onChange?: (nextFormat: ExportFormat) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ExportFormatPicker = ({\n    onChange,\n    ...rest\n}: ExportFormatPicker) => {\n    const language = useLanguage();\n    const {\n        exportFormat,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, exportFormat },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        exportFormat,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.export-format.label']}\n        </StyledDownloadDropdownLabel>\n        {ExportFormatList.map(({ value, label }) => {\n            return <StyledDownloadDropdownOption key={label}\n                className={value === exportFormat ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        exportFormat: value,\n                    });\n                    onChange?.(value);\n                }}\n            >\n                {label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\nexport const isCropEqual = (cropL: Partial<ReactCrop.Crop>, cropR: Partial<ReactCrop.Crop>) => {\n    const { aspect: aspectL, height: heightL, unit: unitL, width: widthL, x: xL, y: yL } = cropL;\n    const { aspect: aspectR, height: heightR, unit: unitR, width: widthR, x: xR, y: yR } = cropR;\n    if (Math.abs(widthL - widthR) > 0.01) return false;\n    if (Math.abs(heightL - heightR) > 0.01) return false;\n    if (Math.abs(xL - xR) > 0.01) return false;\n    if (Math.abs(yL - yR) > 0.01) return false;\n    if (Math.abs(aspectL - aspectR) > 0.01) return false;\n    if (unitL !== unitR) return false;\n    return true;\n};\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / 375;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: (crossorigin?: string) => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const targetFile = e.target.files[0];\n            const maxFileSize = 4;\n\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\n                setLoading(true);\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    if (typeof reader.result === 'string') {\n                        setCrossOrigin('anonymous');\n                        setInternalSource(reader.result);\n                        setSourceType('offline');\n                        setInputMode('offline');\n                        onSourceChange('offline', reader.result);\n                        setLoading(false);\n                    }\n                });\n                reader.readAsDataURL(targetFile);\n            } else {\n                onMaxSizeExceeded(maxFileSize);\n            }\n        } else alert(language['image-cropper.not-found-warning']);\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded(crossorigin);\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [crossorigin, onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setCrossOrigin('anonymous');\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setCrossOrigin('anonymous');\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={`card-image-cropper ${className}`}>\n            <div className=\"card-image-source-input\">\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        setCrossOrigin('anonymous');\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                    // setLoading(true);\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Tooltip\n                                title={<div className=\"image-info\">\n                                    {language['image-cropper.online-tip']}\n                                </div>}\n                            >\n                                <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                    {language['image-cropper.source.online.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                            <Tooltip\n                                title={<div className=\"image-warning\">\n                                    {language['image-cropper.offline-warning']}\n                                </div>}\n                            >\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={applyOfflineSource}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                    </div>\n                </div>\n                {children}\n            </div>\n            {beforeCropper}\n            <div className=\"card-cropper\" onKeyDown={() => {\n                /** Nudge selection also count as user interaction */\n                setInteracted(true);\n            }}>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <Tooltip\n                        placement=\"left\"\n                        overlay={forceFit\n                            ? language['image-cropper.button.use-crop.tooltip']\n                            : language['image-cropper.button.force-fit.tooltip']}\n                    >\n                        <div\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                            onClick={() => {\n                                setInteracted(true);\n                                onForceFitChange(!forceFit);\n                            }}\n                        >\n                            <FullscreenOutlined />\n                        </div>\n                    </Tooltip>\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { width, x } = cur.completed ?? {};\n\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    x: (100 - width) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { height, y } = cur.completed ?? {};\n\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    y: (100 - height) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                </div>}\n                {((!hasImage || (error && crossorigin === undefined)) && !isLoading) && <Empty\n                    description={language['image-cropper.not-found-warning']}\n                    image={null}\n                />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        if (!receivingCanvas) {\n                            pendingCrop.current = {\n                                source: '',\n                                crop: null,\n                            };\n                            setLoading(false);\n                            setError('No receiving canvas');\n                            onTainted();\n                        }\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            pendingCrop.current = {\n                                source: '',\n                                crop: null,\n                            };\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded(crossorigin);\n                            setLoading(false);\n                            setError('Image not found');\n                        } else {\n                            setCrossOrigin(undefined);\n                            onTainted();\n                        }\n                        if (crossorigin === undefined) {\n                            setLoading(false);\n                            setError('Tainted canvas');\n                        }\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdownLabel = styled.div`\n    color: var(--color);\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    padding: 0 var(--spacing);\n    padding-bottom: var(--spacing-xs);\n    line-height: 1;\n    cursor: default;\n    &:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './angle-picker';\nexport * from './app-header';\nexport * from './atom';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './icon-button';\nexport * from './inline-color-picker';\nexport * from './inline-sketch-picker';\nexport * from './input-train';\nexport * from './lightbox';\nexport * from './link-marker';\nexport * from './setting';\nexport * from './setting-panel';\nexport type { ImageCropperRef } from './image-cropper';\nexport { ImageCropper } from './image-cropper';\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { GatewayOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\nimport { ResolutionPicker } from 'src/component';\n\nexport const ResolutionButton = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    border-left: var(--bw) solid var(--sub-secondary);\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    color: var(--color);\n    cursor: pointer;\n    .anticon {\n        font-size: var(--fs-2xl);\n        margin-left: 0;\n    }\n    .resolution-overlay {\n        position: absolute;\n        left: 50%;\n        bottom: 3px; // Alignment\n        font-size: var(--fs-xs);\n        text-align: center;\n        transform: translateX(-50%);\n    }\n    .resolution-icon {\n        transform: translateY(-5px); // Alignment\n    }\n`;\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    globalScale: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    globalScale,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey, resolution,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n            globalScale,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n            >\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                    <GatewayOutlined className=\"resolution-icon\" />\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\n                </ResolutionButton>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport copy from 'copy-to-clipboard';\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        padding-bottom: var(--spacing-sm);\n        .icon {\n            font-size: var(--fs-4xl);\n        }\n        &.export-download-image {\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\n            border-bottom: var(--bw) solid var(--sub-secondary);\n            &:disabled {\n                border-bottom: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        gap: var(--spacing-lg);\n        align-items: center;\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        &.mode_other {\n            grid-template-columns: 1fr 1fr;\n        }\n        button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            width: 100%;\n            height: 100%;\n        }\n        > div {\n            height: 100%;\n        }\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .resolution-picker {\n        background-color: var(--main-level-4);\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\n        padding: var(--spacing-xs);\n        line-height: 1;\n        text-align: center;\n        border: var(--bw) solid transparent;\n        cursor: pointer;\n    }\n    .export-input-raw {\n        grid-column: 1 / -1;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n    withText?: boolean,\n    disabled: boolean,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n    disabled,\n    withText,\n}: CardDataCopyButton) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledCardDataCopyButton\n        disabled={disabled}\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay\n            ? <div className=\"copiable-overlay\">\n                {withText\n                    ? <>Copied&nbsp;<CheckOutlined /></>\n                    : <CheckOutlined />}\n                </div>\n            : null}\n        {children}\n    </StyledCardDataCopyButton>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    tainted: boolean,\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    tainted,\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey,\n        resolution,\n    })));\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            width={600}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\n                        <div>\n                            <StyledActionIconButton\n                                disabled={tainted && mode === 'other'}\n                                onClick={() => {\n                                    const blob = new Blob([data], { type: 'application/json' });\n                                    downloadBlob(\n                                        normalizeCardName(name),\n                                        blob,\n                                        'application/json',\n                                    );\n                                }}\n                            >\n                                <div className=\"icon\"><DownloadOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.download-button.label']}\n                                </div>\n                            </StyledActionIconButton>\n                        </div>\n                    </InternalPopover>\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['prompt.export.offline-warning.message']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={internalCardData.ygocarder.data}\n                                withText\n                            >\n                                <div className=\"icon\"><CopyOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.copy-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['image-cropper.offline-warning']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={window.location.href}\n                                withText\n                            >\n                                <div className=\"icon\"><LinkOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.share-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    <div>\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\n                            <div>\n                                <StyledActionIconButton\n                                    disabled={tainted}\n                                    className=\"export-download-image\"\n                                    onClick={onRequireDownload}\n                                >\n                                    <div className=\"icon\"><FileImageOutlined /></div>\n                                    <div className=\"label\">\n                                        {language['button.export-modal.save-button.label']}\n                                    </div>\n                                </StyledActionIconButton>\n                            </div>\n                        </InternalPopover>\n                        <Dropdown overlay={<ResolutionPicker />}>\n                            <div className=\"resolution-picker\">\n                                {resolution[0]} × {resolution[1]}\n                            </div>\n                        </Dropdown>\n                    </div>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                        rows={5}\n                    />}\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['button.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown \n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport {\n    isYgoprodeckImage,\n    // uploadToImgur,\n} from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 * \n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    // try {\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\n                    //     if (imgurResponse.status !== 200) {\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\n                    //     }\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\n                    // } catch (e) {\n                    //     /** Failing the upload process does not terminate the import process */\n                    //     console.error('Upload error:', e);\n                    //     notification.error({\n                    //         message: language['prompt.import.imgur.message'],\n                    //         description: language['prompt.import.imgur.description'],\n                    //     });\n                    // }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['button.import.label']}\n            className=\"global-overlay\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl-E / ⌘-E</div>\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['button.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n    PendulumSizeMap,\n    OtherFinishTypeMap,\n    ExtraAttributeList,\n    RegionMap,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\n    label: labelKey ? dictionary[labelKey] : label,\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\n    value,\n}));\n\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n    label: dictionary[labelKey],\n    value,\n}));\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (region: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${RegionMap[region]?.fileKey}-${name.toLowerCase()}.png`}\n                />\n            </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getExtraAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => ExtraAttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);\n\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation, StyledPopMarkdown } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '★',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                '∅',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<StyledPopMarkdown>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </StyledPopMarkdown>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n};\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n            </CircularAnglePicker>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import { StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={8} xmin={-8}\n                ymax={8} ymin={-8}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {widthLabel}:&nbsp;<GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { InputNumber } from 'antd';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\nimport styled from 'styled-components';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport { getDefaultNameStyle } from 'src/model';\n\nconst MaterialColor = styled.div<{ $color: string }>`\n    border: var(--bw) solid var(--sub-level-2);\n    display: inline-block;\n    width: 2rem;\n    height: 1em;\n    border-radius: var(--br-sm);\n    cursor: pointer;\n    ${({ $color }) => `background-color: ${$color};`}\n`;\nconst EmbossControlContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: max-content max-content;\n    color: var(--color);\n    .emboss-control-title {\n        grid-column: -1 / 1;\n        font-size: var(--fs-sm);\n        text-align: center;\n        padding: var(--spacing-sm);\n        padding-bottom: 0;\n    }\n    .emboss-control-left h2 {\n        padding: var(--spacing-sm) 0;\n    }\n    .angle-picker-container {\n        text-align: center;\n    }\n    .emboss-control-right {\n        padding: var(--spacing-sm) 0;\n    }\n    .emboss-control-left {\n        padding: var(--spacing-sm);\n        padding-top: 0;\n    }\n    .slider-label {\n        padding: 0;\n        border: none;\n    }\n    .vertical-angle-control {\n        grid-template-columns: max-content 60px 85px 12px;\n    }\n    .reset-button {\n        cursor: pointer;\n        &:hover {\n            color: var(--color-heavy);\n        }\n    }\n    .navigate-button {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n    .thickness-row {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        column-gap: var(--spacing-sm);\n        align-items: center;\n        .ant-slider {\n            height: unset;\n            margin-top: var(--spacing-xs);\n            margin-bottom: var(--spacing-xs);\n        }\n    }\n`;\n\nconst VECTOR_VALUE_EPSILON = 0.01;\nconst DEFAULT_PITCH = 90;\nconst DEFAULT_YAW = 90;\nfunction hexToRgb(hex: string) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    return (result\n        ? [\n            parseInt(result[1], 16),\n            parseInt(result[2], 16),\n            parseInt(result[3], 16)\n        ]\n        : [0, 0, 0]) as [number, number, number];\n  }\n\nexport type EmbossControllerRef = {\n    setValue: (value: {\n        color?: string,\n        pitch?: number,\n        yaw?: number,\n        thickness?: number,\n    }) => void,\n};\nexport type EmbossController = {\n    defaultPitch?: number,\n    defaultYaw?: number,\n    defaultThickness?: number,\n    materialColor?: string,\n    children?: React.ReactNode,\n    language: LanguageDataDictionary,\n    onColorTabNavigate: () => void,\n    onChange: (value: {\n        lightColorVec: [number, number, number],\n        lightAngleVec: [number, number, number],\n        yaw: number,\n        pitch: number,\n        thickness: number,\n    }) => void,\n};\nconst defaultValue = getDefaultNameStyle();\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\n    defaultPitch = defaultValue.embossPitch,\n    defaultYaw = defaultValue.embossYaw,\n    defaultThickness = defaultValue.embossThickness,\n    materialColor,\n    children,\n    language,\n    onColorTabNavigate,\n    onChange,\n}, ref) => {\n    const [requestUpdate, internalId] = useRefresh();\n    const [color, setColor] = useState('#ffffff');\n    const [thickness, setThickness] = useState(defaultThickness);\n    const [angle, setAngle] = useState(defaultYaw);\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\n    const currentThickness = useRef(defaultThickness);\n    /** Currently we only allow pure white light to avoid confusion for user. */\n    const [allowPickColor] = useState(false);\n\n    useEffect(() => {\n        let relevant = true;\n        if (internalId) setTimeout(() => {\n            if (relevant) {\n                const nextAngle = angleToVector(angle, verticalAngle);\n                const nextColor = hexToRgb(color);\n\n                if (\n                    nextColor[0] !== currentColorVec.current[0]\n                    || nextColor[1] !== currentColorVec.current[1]\n                    || nextColor[2] !== currentColorVec.current[2]\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\n                    || thickness !== currentThickness.current\n                ) {\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\n                }\n                currentColorVec.current = nextColor;\n                currentAngleVec.current = nextAngle;\n                currentThickness.current = thickness;\n            }\n        }, 150);\n\n        return () => {\n            relevant = false;\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [internalId, color, angle, verticalAngle, thickness]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ color, pitch, yaw, thickness }) => {\n            if (color) setColor(color);\n            if (pitch) setVerticalAngle(pitch);\n            if (yaw) setAngle(yaw);\n            if (typeof thickness === 'number') setAngle(thickness);\n        }\n    }));\n\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\n        <div className=\"emboss-control-title\">\n            {children}\n        </div>\n        <div className=\"emboss-control-left\">\n            <h2>\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\n                    className=\"material-color\"\n                    onClick={onColorTabNavigate}\n                    $color={materialColor}\n                />\n            </h2>\n            {language['input.name-style.emboss.color.alert'](<span key=\"color-navigate\" className=\"navigate-button\" onClick={onColorTabNavigate}>\n                {language['input.name-style.color.label']}\n            </span>)}\n            <h2 className=\"thickness-row\">\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\n                <GuardedSlider\n                    value={thickness}\n                    min={0}\n                    max={4}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setThickness(value);\n                            requestUpdate();\n                        }\n                    }}\n                />\n            </h2>\n            <h2>\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\n                    className=\"reset-button\"\n                    onClick={() => {\n                        setVerticalAngle(DEFAULT_PITCH);\n                        requestUpdate();\n                    }}\n                />\n            </h2>\n            <CombinedSliderContainer className=\"vertical-angle-control\">\n                <div className=\"slider-label\" />\n                <InputNumber\n                    size=\"small\"\n                    min={-90}\n                    max={90}\n                    onChange={value => {\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\n                        requestUpdate();\n                    }}\n                    value={verticalAngle}\n                />\n                <GuardedSlider\n                    min={-90}\n                    max={90}\n                    value={verticalAngle}\n                    onChange={value => {\n                        setVerticalAngle(value);\n                        requestUpdate();\n                    }}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\n                className=\"reset-button\"\n                onClick={() => {\n                    setAngle(DEFAULT_YAW);\n                    requestUpdate();\n                }}\n            /></h2>\n            <div className=\"horizontal-angle-contorl\">\n                <CircularAnglePicker\n                    angle={angle}\n                    size={120}\n                    setAngle={angle => {\n                        setAngle(angle);\n                        requestUpdate();\n                    }}\n                />\n            </div>\n        </div>\n        {allowPickColor && <div className=\"emboss-control-right\">\n            <h2>Light color</h2>\n            <ChromePicker\n                styles={{\n                    default: {\n                        picker: {\n                            color: '#000000',\n                            background: 'var(--main-level-3)',\n                            boxShadow: 'none',\n                        },\n                        body: {\n                            padding: 'var(--spacing) var(--spacing)',\n                        }\n                    },\n                }}\n                disableAlpha={true}\n                color={color}\n                onChange={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n                onChangeComplete={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n            />\n        </div>}\n    </EmbossControlContainer>;\n});","import { useEffect, useState } from 'react';\nimport { ChromePicker, CompactPicker } from 'react-color';\nimport { DefaultColorList } from 'src/model';\nimport styled from 'styled-components';\n\nconst TextColorPickerContainer = styled.div`\n    .chrome-picker {\n        /** Target color format swapper in picker's body */\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\n            display: none !important;\n        }\n    }\n`;\nexport type TextColorPicker = {\n    color: string,\n    onChange: (color: string) => void,\n};\nexport const TextColorPicker = ({\n    color,\n    onChange,\n}: TextColorPicker) => {\n    const [internalColor, setInternalColor] = useState(color);\n\n    useEffect(() => {\n        setInternalColor(color);\n    }, [color]);\n\n    return <TextColorPickerContainer>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                        padding: 'var(--spacing-sm) var(--spacing)',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    },\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onChange(color.hex);\n            }}\n        />\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => {\n                onChange(color.hex);\n            }}\n        />\n    </TextColorPickerContainer>;\n};","import { Checkbox, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown, PopoverButton } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPatternOption,\n} from './style-picker.styled';\nimport { useLanguage, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\nimport { TextColorPicker } from './text-color-picker';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        requestUpdateCustomStyle();\n    }, [requestUpdateCustomStyle]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n                embossPitch, embossYaw, embossThickness,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n            embossControllerRef.current?.setValue({\n                pitch: embossPitch,\n                yaw: embossYaw,\n                thickness: embossThickness,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        hasEmboss, embossPitch, embossYaw, embossThickness,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n\n    const colorPickerButtonId = 'color-picker';\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <TextColorPicker\n                                        color={fillStyle}\n                                        onChange={hexColor => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            id={colorPickerButtonId}\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom}\n                            className=\"picker-dropdown color-picker-dropdown\"\n                        >\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\n                            {language['input.name-style.font.label']}\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className=\"custom-style-picker\">\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.emboss.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\n                                    language={language}\n                                    defaultPitch={embossPitch}\n                                    defaultYaw={embossYaw}\n                                    defaultThickness={embossThickness}\n                                    materialColor={fillStyle}\n                                    onColorTabNavigate={() => {\n                                        document.getElementById(colorPickerButtonId)?.click();\n                                    }}\n                                    onChange={({ thickness, yaw, pitch }) => {\n                                        setValue(cur => ({ ...cur,\n                                            embossPitch: pitch,\n                                            embossYaw: yaw,\n                                            embossThickness: thickness,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                >\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\n                                </EmbossController>}\n                            </div>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasEmboss}\n                            className=\"picker-dropdown emboss-picker-dropdown\"\n                        >\n                            {language['input.name-style.emboss.label']}\n                        </PopoverButton>\n                    </Popover>}\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrainRef = {\n    changeFrame: (frameValue: number | string) => void,\n};\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n    onPasswordChange: (value: string) => void,\n    onStatChange: (atk: string, def: string, linkRating: string) => void,\n};\nexport const FrameTrain = forwardRef<FrameTrainRef, FrameTrain>(({\n    onSTFrameChange,\n    onPasswordChange,\n    onStatChange,\n}, ref) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                attribute,\n                format,\n                password,\n                star,\n                atk,\n                def,\n                linkRating,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const nextTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            const nextPassword = nextFrame === 'token'\n                ? passwordSentenceMap[format]\n                : password;\n            const nextAtk = willRemoveStat ? '' : (atk === '' ? '0' : atk);\n            const nextDef = willRemoveStat ? '' : (def === '' ? '0' : def);\n            const nextLinkRating = willRemoveStat ? '' : linkRating;\n            const nextStar = nextFrame === 'token'\n                ? 0\n                : star;\n\n            onPasswordChange(nextPassword);\n            if (willBecomeST) {\n                onSTFrameChange(nextTypeAbility);\n            }\n            onStatChange(nextAtk, nextDef, nextLinkRating);\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: nextFrame === 'token'\n                    ? NO_ATTRIBUTE\n                    : willBecomeST\n                        ? `${nextFrame}`.toUpperCase()\n                        : attribute,\n                star: nextStar,\n                typeAbility: nextTypeAbility,\n                password: nextPassword,\n                atk: nextAtk,\n                def: nextDef,\n                linkRating: nextLinkRating,\n            };\n        });\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\n\n    useImperativeHandle(ref, () => ({\n        changeFrame,\n    }));\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n});","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\nimport { Tooltip } from 'antd';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props, tooltip } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n                const children = <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n\n                return tooltip\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\n                    : children;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: 375px;\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum, pendulumSize,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain, SolidLabel } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .art-frame {\n        span {\n            padding: 0;\n        }\n    }\n    div.ant-slider {\n        .ant-slider-handle {\n            height: 19px;\n            top: 8px;\n            border-radius: 0;\n            width: 10px;\n        }\n        .ant-slider-step,\n        .ant-slider-track,\n        .ant-slider-rail {\n            height: 10px;\n        }\n    }\n    .card-opacity-slider {\n        flex: 0 1 auto;\n        .ant-slider {\n            padding-top: 8px;\n        }\n    }\n    .background-label {\n        cursor: pointer;\n        &:hover {\n            .background-preview {\n                box-shadow: 0 0 2px 0 #2a2a2a;\n            }\n        }\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        text-align: center;\n        user-select: none;\n        .background-preview-callback-passer {\n            width: 100%;\n            height: 100%;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .layout-picker-panel {\n            margin-top: var(--spacing);\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .background-type-picker {\n            .radio-train-input-group {\n                display: grid;\n            }\n            .ant-radio-button-wrapper {\n                border-left: var(--bw) solid var(--sub-level-1);\n            }\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background,\n            backgroundData,\n            backgroundSource,\n            backgroundType,\n            hasBackground,\n            isPendulum,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <SolidLabel className=\"background-label\">\n                <Checkbox\n                    className=\"art-frame\"\n                    onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                    checked={opacity.boundless}\n                >\n                    &nbsp;{language['input.opacity.boundless.label']}\n                </Checkbox>\n            </SolidLabel>\n        </Tooltip>\n        <Popover\n            visible={backgroundInputVisible}\n            destroyTooltipOnHide={false}\n            trigger={['click']}\n            onVisibleChange={setBackgroundInputVisible}\n            overlayClassName={[\n                'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                backgroundInputVisible ? 'picker-visible' : '',\n                backgroundInputHidden ? 'picker-hidden' : '',\n            ].join(' ')}\n            content={<div className=\"overlay-event-absorber\">\n                <StyledBaseFillPickerContainer\n                    className={[\n                        'custom-style-picker',\n                        noBackground ? 'overlay-no-background-image' : ''\n                    ].join(' ')}\n                >\n                    <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                        <Checkbox\n                            checked={hasBackground}\n                            onChange={e => {\n                                changeHasBackground(e);\n                            }}\n                        >{language['input.background.toggle-label']}</Checkbox>\n                        <br />\n                        <i>{language['input.background.description']}</i>\n                    </h3>\n                    <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                        <BackgroundInputGroup\n                            ref={backgroundInputRef}\n                            receivingCanvas={receivingCanvas}\n                            onSourceLoaded={onSourceLoaded}\n                            onTainted={onTainted}\n                            onCropChange={onCropChange}\n                            backgroundColor={opacity.baseFill}\n                        >\n                            <div className=\"layout-picker-panel\">\n                                <div className=\"layout-picker-subpanel color-section\">\n                                    <h2>{language['input.background-color.label']}</h2>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={opacity.baseFill}\n                                        onChangeComplete={color => {\n                                            setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                        }}\n                                    />\n                                </div>\n                                {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                    <h2>{language['input.background-type.label']}</h2>\n                                    <RadioTrain\n                                        className=\"background-type-picker\"\n                                        onChange={changeBackgroundType}\n                                        optionList={getBackgroundTypeList({\n                                            fit: language['input.background-type.fit.label'],\n                                            full: language['input.background-type.full.label'],\n                                            frame: language['input.background-type.frame.label'],\n                                        })}\n                                        value={backgroundType}\n                                    />\n                                </div>}\n                            </div>\n                        </BackgroundInputGroup>\n                    </div>\n                </StyledBaseFillPickerContainer>\n            </div>}\n            placement=\"bottom\"\n        >\n            <SolidLabel className=\"background-label\">\n                <div\n                    className=\"background-preview\"\n                    style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                >\n                    {hasBackground\n                        ? background || backgroundData\n                            ? <img\n                                className=\"background-image-preview\"\n                                src={backgroundSource === 'online'\n                                    ? background\n                                    : backgroundData}\n                                alt=\"Background\"\n                            />\n                            : null\n                        : <BorderOuterOutlined className=\"no-background-icon\" />}\n                </div>\n                {language['input.background.label']}\n            </SolidLabel>\n        </Popover>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <CombinedSliderContainer key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <SolidLabel className=\"slider-label\">\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </SolidLabel>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { IconButton, RadioTrain } from 'src/component';\nimport { useCard, useSetting, WithLanguage } from 'src/service';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { useMemo } from 'react';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getAttributeList, getExtraAttributeList } from '../const';\nimport { RegionMap } from 'src/model';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\n\nconst AttributeRegionTrain = styled.div`\n    align-self: flex-end;\n    position: relative;\n    min-height: 6px; // Alignment\n    .attribute-region-picker {\n        position: absolute;\n        right: 0;\n        top: calc(var(--spacing-xxs) * -1);\n        z-index: 1;\n    }\n    &.container-block .attribute-region-picker {\n        position: relative;\n        right: 0;\n        top: 0;\n    }\n    .ant-radio-button-wrapper {\n        font-size: var(--fs-sm);\n        height: unset;\n        line-height: 1.25;\n    }\n`;\n\nexport type AttributeInputGroup = {\n} & WithLanguage;\nexport const AttributeInputGroup = ({\n    language,\n}: AttributeInputGroup) => {\n    const {\n        format,\n        region,\n        attribute,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            region,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n    }) => ({\n        format,\n        region,\n        isLink,\n        attribute,\n        getUpdater,\n    })));\n    const { setting, updateSetting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption, showExtraAttribute } = setting;\n\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeRegion = useMemo(() => getUpdater('region'), [getUpdater]);\n\n    const attributeList = useMemo(() => getAttributeList(region, language, showCreativeOption), [region, language, showCreativeOption]);\n    const extraAttributeList = useMemo(() => getExtraAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n\n    return <>\n        <RadioTrain\n            className=\"fill-input-train span-input-train attribute-input\"\n            value={attribute}\n            onChange={changeAttribute}\n            optionList={attributeList}\n            suffix={!showExtraAttribute && showExtraDecorativeOption\n                ? <IconButton\n                    onClick={() => updateSetting({ showExtraAttribute: true })}\n                    Icon={DoubleRightOutlined}\n                    tooltipProps={{ overlay: language['button.more.label'] }}\n                />\n                : null}\n        >\n            <span>{language['input.attribute.label']}</span>\n        </RadioTrain>\n        {showExtraDecorativeOption && <AttributeRegionTrain\n            className={mergeClass('attribute-region-container', showExtraAttribute ? 'container-block' : 'container-float')}\n        >\n            <RadioTrain\n                className=\"attribute-region-picker\"\n                optionList={Object\n                    .values(RegionMap)\n                    .map(({ key }) => ({\n                        value: key,\n                        label: key.toUpperCase(),\n                    }))\n                }\n                value={region}\n                onChange={changeRegion}\n            />\n        </AttributeRegionTrain>}\n        {(showExtraDecorativeOption && showExtraAttribute) && <RadioTrain\n            className=\"fill-input-train extra-attribute-input\"\n            value={attribute}\n            onChange={changeAttribute}\n            optionList={extraAttributeList}\n            suffix={showExtraDecorativeOption && showExtraAttribute\n                ? <IconButton\n                    onClick={() => updateSetting({ showExtraAttribute: false })}\n                    Icon={DoubleLeftOutlined}\n                    tooltipProps={{ overlay: language['button.less.label'] }}\n                />\n                : null}\n        >\n            &nbsp;\n        </RadioTrain>}\n    </>;\n};","import { Button, Checkbox, Modal } from 'antd';\nimport { forwardRef, useImperativeHandle, useMemo, useState } from 'react';\nimport {\n    IconTypeAttributeList,\n    IconTypeInfo,\n    IconTypeList,\n    IconTypeStList,\n    MAX_STAR_LENGTH,\n    NORMAL_STAR_LENGTH,\n    TotalIconTypeMap,\n} from 'src/model';\nimport { useCard, WithLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CloseCircleOutlined, DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { StyledDropdown } from 'src/component';\nimport { mergeClass, padRight } from 'src/util';\n\nconst IconDropdownOverlay = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: var(--br-lg);\n    cursor: not-allowed;\n`;\nexport const StyledIconDropdown = styled(StyledDropdown.Container)`\n    .anticon-close-circle {\n        font-size: var(--fs-lg);\n    }\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nexport const IconDropdownContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: var(--spacing-px);\n    background-color: var(--sub-level-1);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    overflow: hidden;\n    position: relative;\n    .container-group {\n        box-shadow: none;\n        border: none;\n        border-radius: 0;\n    }\n    &.selector-disabled {\n        filter: opacity(0.65) grayscale(0.85);\n    }\n`;\nexport type StarTypeSelector = {\n    disabled?: boolean,\n    className?: string,\n    activeCardIcon: string,\n    onChange: (value: string) => void,\n    onRemove?: () => void,\n    showMixableOnly?: boolean,\n    showRemove?: boolean,\n} & WithLanguage;\nexport const StarTypeSelector = ({\n    disabled = false,\n    className,\n    language,\n    activeCardIcon,\n    showMixableOnly = false,\n    showRemove = false,\n    onChange,\n    onRemove,\n}: StarTypeSelector) => {\n    const filterFunction = showMixableOnly ? (entry: IconTypeInfo) => entry.isMixable : () => true;\n\n    return <IconDropdownContainer\n        className={mergeClass('icon-dropdown-container overlay-event-absorber', disabled ? 'selector-disabled' : '', className)}\n    >\n        {disabled && <IconDropdownOverlay className=\"container-disable-overlay\" />}\n        <StyledIconDropdown className=\"container-group container-star\">\n            {showRemove && <StyledDropdown.Option\n                onClick={() => onRemove?.()}\n            >\n                <CloseCircleOutlined />&nbsp;{language['input.icon-type.remove.label']}\n            </StyledDropdown.Option>}\n            {IconTypeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n        <StyledIconDropdown className=\"container-group container-attribute\">\n            {IconTypeAttributeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n        <StyledIconDropdown className=\"container-group container-icon\">\n            {IconTypeStList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\n                return <StyledDropdown.Option key={value}\n                    className={value === activeCardIcon ? 'menu-active' : ''}\n                    onClick={() => onChange(value)}\n                >\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                </StyledDropdown.Option>;\n            })}\n        </StyledIconDropdown>\n    </IconDropdownContainer>;\n};\n\nconst StarListSelectPanel = styled.div`\n    margin-bottom: var(--spacing);\n`;\nconst StarListControlPanel = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: var(--spacing);\n`;\nconst StarListContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(13, 2rem);\n    gap: var(--spacing-xs);\n    align-items: center;\n    text-align: center;\n    margin-bottom: var(--spacing-sm);\n    line-height: 0;\n    .star-value {\n        display: inline-flex;\n        height: 2rem;\n        width: 2rem;;\n        align-items: center;\n        justify-content: center;\n        background-color: var(--main-level-1);\n        border-radius: var(--br-lg);\n        margin-top: var(--spacing-xs);\n        cursor: pointer;\n        border: var(--bw) solid transparent;\n        .anticon-close-circle {\n            font-size: var(--fs-lg)\n        }\n    }\n    .icon-image {\n        max-width: 1.5rem; // Alignment\n        max-height: 1.5rem;; // Alignment\n    }\n    .entry-active {\n        .star-value {\n            border-color: var(--main-active);\n        }\n    }\n    .entry-disable {\n        filter: opacity(0.65) grayscale(0.85);\n        * {\n            cursor: not-allowed;\n        }\n    }\n    :not(.entry-disable) .star-value:hover {\n        border-color: var(--sub-active);\n    }\n`;\n\nexport type StarPickerRef = {\n    changeStatus: (status: 'open' | 'close' | 'toggle') => void,\n};\nexport type StarPicker = {\n\n} & WithLanguage;\nexport const StarPicker = forwardRef<StarPickerRef, StarPicker>(({\n    language,\n}, ref) => {\n    const {\n        starList,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            starList,\n        },\n        setCard,\n    }) => ({\n        starList,\n        setCard,\n    })));\n    const [visible, setVisible] = useState(false);\n    const changeStarList = useMemo(() => (transformer: string[] | ((prev: string[]) => string[])) => {\n        setCard(card => {\n            const nextStarList = Array.isArray(transformer) ? transformer : transformer(card.starList);\n\n            return {\n                ...card,\n                starList: nextStarList,\n            };\n        });\n    }, [setCard]);\n    const [{\n        slotList,\n        use12,\n    }, setSlot] = useState(() => {\n        const slotList: { slot: string, index: number, disabled: boolean }[] = [];\n        const use12 = starList.length <= NORMAL_STAR_LENGTH ? true : false;\n        for (let cnt = 0; cnt < MAX_STAR_LENGTH; cnt++) {\n            slotList.push({ slot: `slot-${cnt}`, index: cnt, disabled: false });\n        }\n        if (use12) slotList[MAX_STAR_LENGTH - 1].disabled = true;\n\n        return {\n            slotList,\n            use12,\n        };\n    });\n    const [activeInformation, setActiveInformation] = useState({\n        activeList: [] as number[],\n    });\n\n    useImperativeHandle(ref, () => ({\n        changeStatus: status => {\n            if (status === 'open') {\n                setVisible(true);\n            } else if (status === 'close') {\n                setVisible(false);\n            } else if (status === 'toggle') {\n                setVisible(cur => !cur);\n            }\n            setActiveInformation({ activeList: [] });\n        }\n    }));\n\n    const {\n        activeList\n    } = activeInformation;\n    return <Modal\n        className=\"global-overlay global-no-close\"\n        visible={visible}\n        width={506}\n        onCancel={() => setVisible(false)}\n        cancelText={language['manager.template.button.cancel.label']}\n        okButtonProps={{\n            style: { display: 'none' },\n        }}\n    >\n        <StarListSelectPanel className=\"star-list-control-panel\">\n            <Checkbox\n                checked={use12}\n                onChange={e => {\n                    if (e.target.checked) {\n                        setSlot(({ slotList }) => {\n                            const nextSlotList: typeof slotList = [\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\n                                { disabled: true, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\n                            ];\n\n                            return { slotList: nextSlotList, use12: true };\n                        });\n                        changeStarList(currentStarList => currentStarList.slice(0, NORMAL_STAR_LENGTH));\n                        setActiveInformation(({ activeList }) => ({ activeList: activeList.filter(entry => entry !== MAX_STAR_LENGTH - 1) }));\n                    } else {\n                        setSlot(({ slotList }) => {\n                            const nextSlotList: typeof slotList = [\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\n                                { disabled: false, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\n                            ];\n\n                            return { slotList: nextSlotList, use12: false };\n                        });\n                        changeStarList(currentStarList => padRight(currentStarList, MAX_STAR_LENGTH));\n                    }\n                }}\n            >{language['input.icon-type.slot.use-12.label']}</Checkbox>\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation(cur => {\n                    const nextActiveList = slotList\n                        .filter(entry => !cur.activeList.includes(entry.index) && !entry.disabled)\n                        .map(entry => entry.index);\n\n                    return { activeList: nextActiveList };\n                });\n            }}>\n                {language['input.icon-type.slot.revert.label']}\n            </Button>\n            &nbsp;\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation({ activeList: slotList.filter(entry => !entry.disabled).map(entry => entry.index) });\n            }}>\n                {language['input.icon-type.slot.select-all.label']}\n            </Button>\n            &nbsp;\n            <Button size=\"small\" onClick={() => {\n                setActiveInformation({ activeList: [] });\n            }}>\n                {language['input.icon-type.slot.deselect-all.label']}\n            </Button>\n        </StarListSelectPanel>\n        <StarListContainer className=\"star-list-container\">\n            {slotList.map(({ slot, index, disabled }) => {\n                const slotValue = starList[index];\n                const starInfo = TotalIconTypeMap[slotValue ?? ''];\n                const active = activeList.includes(index);\n\n                return <div key={slot}\n                    className={mergeClass(\n                        'star-list-entry',\n                        active ? 'entry-active' : '',\n                        disabled ? 'entry-disable' : '',\n                    )}\n                >\n                    <div className=\"checkbox-container\">\n                        <Checkbox\n                            disabled={disabled}\n                            checked={active}\n                            onChange={e => {\n                                if (disabled) return;\n                                const willChecked = e.target.checked;\n                                if (willChecked) {\n                                    setActiveInformation(cur => {\n                                        const nextActiveList = [...cur.activeList, index];\n\n                                        return { activeList: nextActiveList };\n                                    });\n                                } else {\n                                    setActiveInformation(cur => {\n                                        const nextActiveList = cur.activeList.filter(entry => entry !== index);\n\n                                        return { activeList: nextActiveList };\n                                    });\n                                }\n                            }}\n                        />\n                    </div>\n                    <div\n                        className=\"star-value\"\n                        onClick={() => {\n                            if (disabled) return;\n                            setActiveInformation({ activeList: [index] });\n                        }}\n                    >\n                        {!starInfo ? <CloseCircleOutlined /> : starInfo.icon}\n                    </div>\n                </div>;\n            })}\n        </StarListContainer>\n        <StarListControlPanel>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    changeStarList(currentStarList => {\n                        return [...currentStarList.slice(1, currentStarList.length), ''];\n                    });\n                    setActiveInformation({ activeList: [] });\n                }}\n            >\n                <DoubleLeftOutlined />&nbsp;{language['input.icon-type.slot.shift-left.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => {\n                    changeStarList(currentStarList => {\n                        return ['', ...currentStarList.slice(0, currentStarList.length - 1)];\n                    });\n                    setActiveInformation({ activeList: [] });\n                }}\n            >\n                {language['input.icon-type.slot.shift-right.label']}&nbsp;<DoubleRightOutlined />\n            </Button>\n        </StarListControlPanel>\n        <StarTypeSelector\n            disabled={activeList.length === 0}\n            language={language}\n            activeCardIcon={activeList.length > 1 ? '' : starList[activeList[0]]}\n            showMixableOnly={true}\n            showRemove={true}\n            onRemove={() => {\n                changeStarList(currentStarList => {\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\n                        if (activeList.includes(index)) return '';\n                        return currentStarList[index];\n                    });\n                });\n            }}\n            onChange={value => {\n                changeStarList(currentStarList => {\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\n                        if (activeList.includes(index)) return value;\n                        return currentStarList[index];\n                    });\n                });\n            }}\n        />\n    </Modal>;\n});","import { Button, Input, Popover } from 'antd';\nimport { PopoverButton, RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage, useSetting, WithLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { getCardIconFromFrame } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeAttributeList, IconTypeList, IconTypeStList, TotalIconTypeMap } from 'src/model';\nimport { StarPicker, StarPickerRef, StarTypeSelector, StyledIconDropdown } from '../star-picker';\n\nconst TypeWithIconContainer = styled.div`\n    .icon-image {\n        width: 26px;\n        height: 26px;\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 7rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\nconst PopoverButtonInCardIconInput = styled(PopoverButton)`\n    margin-left: var(--spacing-sm);\n`;\nconst CustomStarContainer = styled.div`\n    display: flex;\n    align-items: center;\n    .custom-star-preview {\n        display: inline-flex;\n        line-height: 0;\n        align-items: center;\n        background-color: var(--main-level-1);\n        padding: var(--spacing-xs);\n        border-radius: var(--br);\n        .star-preview-entry {\n            margin-right: var(--spacing-xs);\n            .icon-image {\n                max-width: 22px; // Alignment\n                max-height: 22px; // Alignment\n            }\n            .anticon-close-circle {\n                font-size: var(--fs-xl);\n            }\n            &:last-child {\n                margin-right: 0;\n            }\n        }\n    }\n    .custom-star-content {\n        display: inline-flex;\n        flex-wrap: wrap;\n        align-items: center;\n        gap: var(--spacing-sm);\n        margin-right: var(--spacing-sm);\n    }\n`;\n\ntype CardIconAlignmentPicker = {\n    value: string,\n    onChange: (value: string) => void,\n} & WithLanguage;\nconst CardIconAlignmentPicker = ({\n    language,\n    value,\n    onChange,\n}: CardIconAlignmentPicker) => {\n    return <RadioTrain\n        value={value}\n        onChange={onChange}\n        optionList={[\n            {\n                value: 'auto',\n                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                label: <CloseCircleOutlined />,\n            },\n            {\n                value: 'left',\n                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                label: <AlignLeftOutlined />,\n            },\n            {\n                value: 'center',\n                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                label: <AlignCenterOutlined />,\n            },\n            {\n                value: 'right',\n                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                label: <AlignRightOutlined />,\n            },\n        ]}\n    />;\n};\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starList,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starList,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starList,\n        starAlignment,\n        getUpdater,\n    })));\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n    const starPickerRef = useRef<StarPickerRef>(null);\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const autoIconType = getCardIconFromFrame(frame);\n    const iconTypeData = cardIcon === 'auto'\n        ? TotalIconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\n        : TotalIconTypeMap[cardIcon];\n    const {\n        labelKey,\n        icon,\n        showIcon,\n        value: iconType,\n    } = iconTypeData ?? TotalIconTypeMap['level'];\n    const iconDropdownText = typeof labelKey === 'string'\n        ? language[labelKey]\n        : labelKey({ language });\n    const IconDropdownLabel = showCreativeOption\n        ? <TypeWithIconContainer>{showIcon ? icon : null} {iconDropdownText} <CaretDownOutlined /></TypeWithIconContainer>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay\"\n        content={<StarTypeSelector\n            language={language}\n            activeCardIcon={cardIcon}\n            onChange={value => {\n                changeCardIcon(value);\n                if (value === 'custom') starPickerRef.current?.changeStatus('open');\n            }}\n        />}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return <>\n        <StarPicker ref={starPickerRef} language={language} />\n        {cardIcon === 'auto' && autoIconType === 'none'\n            ? showCreativeOption\n                ? <>\n                    <RadioTrain\n                        className=\"fill-input-train\"\n                        value={cardIcon}\n                        onChange={changeCardIcon}\n                        optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\n                            return {\n                                label: icon ?? <CloseCircleOutlined />,\n                                value,\n                                tooltipProps: {\n                                    title: language[fullLabelKey],\n                                },\n                            };\n                        })}\n                    >\n                        {DropdownChildren}\n                    </RadioTrain>\n                    <Popover\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledIconDropdown className=\"container-group container-attribute\">\n                                {IconTypeAttributeList.map(({ fullLabelKey, value, icon }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={value === cardIcon ? 'menu-active' : ''}\n                                        onClick={() => changeCardIcon(value)}\n                                    >\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledIconDropdown>\n                        </div>}\n                    >\n                        <PopoverButtonInCardIconInput\n                            $softMode={reduceColorMotion}\n                            className={showCreativeOption ? '' : 'disabled'}\n                        >\n                            {language['input.attribute.label']}\n                        </PopoverButtonInCardIconInput>\n                    </Popover>\n                    <Popover\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledIconDropdown className=\"container-group container-icon\">\n                                {IconTypeStList.map(({ fullLabelKey, value, icon }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={value === cardIcon ? 'menu-active' : ''}\n                                        onClick={() => changeCardIcon(value)}\n                                    >\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledIconDropdown>\n                        </div>}\n                    >\n                        <PopoverButtonInCardIconInput\n                            $softMode={reduceColorMotion}\n                            className={showCreativeOption ? '' : 'disabled'}\n                        >\n                            {language['input.attribute.spell']}&nbsp;/&nbsp;{language['input.attribute.trap']}\n                        </PopoverButtonInCardIconInput>\n                    </Popover>\n                    <PopoverButtonInCardIconInput\n                        $softMode={reduceColorMotion}\n                        className={showCreativeOption ? '' : 'disabled'}\n                        onClick={() => {\n                            changeCardIcon('custom');\n                            starPickerRef.current?.changeStatus('open');\n                        }}\n                    >\n                        {language['input.icon-type.custom.label']}\n                    </PopoverButtonInCardIconInput>\n                </>\n                : null\n            : iconType === 'st'\n                ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                    {DropdownChildren}\n                </RadioTrain>\n                : iconType === 'custom'\n                    ? <CustomStarContainer className=\"custom-star-picker\">\n                        <label className=\"standalone-addon ant-input-group-addon\">{DropdownChildren}</label>\n                        <div className=\"custom-star-content\">\n                            {starList.length > 0\n                                ? <div className=\"custom-star-preview\">\n                                    {starList.map((entry, index) => {\n                                        const iconEntry = TotalIconTypeMap[entry];\n\n                                        return <span key={`${entry}-${index}`} className=\"star-preview-entry\">\n                                            {iconEntry ? iconEntry.icon : <CloseCircleOutlined />}\n                                        </span>;\n                                    })}\n                                </div>\n                                : null}\n                            <Button\n                                size=\"small\" \n                                onClick={() => {\n                                    changeCardIcon('custom');\n                                    starPickerRef.current?.changeStatus('open');\n                                }}\n                            >{language['input.icon-type.slot.edit.label']}</Button>\n                        </div>\n                    </CustomStarContainer>\n                    : <StyledCheckboxStarTrain\n                        className=\"checkbox-star-train\"\n                        value={star}\n                        onChange={changeStar}\n                        optionList={StarButtonList}\n                        strict={true}\n                        suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                            <Input\n                                className=\"custom-star-input\"\n                                value={typeof star === 'number' ? '' : star}\n                                allowClear\n                                onChange={changeStar}\n                                placeholder={language['input.icon-type.custom.placeholder']}\n                            />\n                            <CardIconAlignmentPicker\n                                language={language}\n                                value={starAlignment}\n                                onChange={changeStarAlignment}\n                            />\n                        </div>}\n                    >\n                        {DropdownChildren}\n                    </StyledCheckboxStarTrain>}\n    </>;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    holdingShift: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': {\n            if (holdingShift) {\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 4 : 5;\n            } else {\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 2 : 3;\n            }\n            break;\n        }\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`card-textarea ${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        autoSize={{\n            minRows: 9,\n        }}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    position: relative;\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 480px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .radio-train.foil-radio {\n        display: grid;\n        grid-template-columns: 1fr;\n        gap: var(--spacing-px); // Alignment\n        .ant-radio-button-wrapper {\n            font-size: var(--fs);\n        }\n        .standalone-addon {\n            border: none;\n            padding-bottom: var(--spacing-xxs);\n        }\n        .radio-train-input-group {\n            gap: 0;\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .inline-input {\n        margin-bottom: var(--spacing-xs);\n    }\n    .checkbox-disabled {\n        .ant-checkbox {\n            display: none;\n        }\n        visibility: hidden; // Avoid collapsing\n    }\n    .frame-part-name {\n        position: absolute;\n        padding: 0 var(--spacing);\n        top: calc(-1 * var(--spacing-sm));\n        right: calc(-1 * var(--spacing-sm));\n        border-radius: 0 0 0 var(--br-lg);\n        background-color: var(--main-level-4);\n        border-left: var(--bw) solid var(--sub-level-4);\n        border-bottom: var(--bw) solid var(--sub-level-4);\n        &:empty {\n            display: none;\n        }\n    }\n    .horizontal-sketch-picker {\n        margin-top: var(--spacing);\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { checkDiplayLinkRating, randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Checkbox, Dropdown, Menu, Tooltip } from 'antd';\nimport { copyrightMap, FlagIndexMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\nconst StyledLinkRatingInputContainer = styled(StyledInputLabelWithButton)`\n    .auto-link-rating-input {\n        margin-left: var(--spacing-sm);\n    }\n    .auto-link-rating {\n        display: inline-block;\n        width: 1.5rem;\n        height: 1.5rem;\n        line-height: 1;\n        text-align: center;\n        padding: var(--spacing-xs);\n        background: var(--main-level-4);\n        border-radius: var(--br-lg);\n        font-family: 'RoGSanSrfStd-Bd';\n        box-shadow: var(--bs-button);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string, linkRating?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isLink,\n        linkRating,\n        autoLinkRating,\n        showDefAndLink,\n        linkRatingDisplayMode,\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format, flag, isLink, linkRating, linkMap },\n        getUpdater,\n    }) => ({\n        linkRating,\n        autoLinkRating: linkMap.length,\n        isLink,\n        sticker,\n        format,\n        showDefAndLink: flag[FlagIndexMap['showDefAndLink']] === 1,\n        linkRatingDisplayMode: flag[FlagIndexMap['linkRating']],\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n    const linkRatingInputRef = useRef<CardTextInputRef>(null);\n\n    const showAtkInput = true;\n    const showLinkInput = checkDiplayLinkRating(linkRatingDisplayMode, isLink);\n    const showDefInput = showLinkInput\n        ? showDefAndLink\n        : true;\n    const showPadding = [showAtkInput, showDefInput, showLinkInput].filter(entry => entry === true).length % 2 === 1;\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeLinkRating = useMemo(() => getUpdater('linkRating', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def, linkRating }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n            if (typeof linkRating === 'string') linkRatingInputRef.current?.setValue(linkRating);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            {showAtkInput && <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />}\n            {showDefInput && <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />}\n            {showPadding && <div />}\n            {showLinkInput && <CardTextInput ref={linkRatingInputRef}\n                id=\"link\"\n                addonBefore={<StyledLinkRatingInputContainer className=\"input-label-with-button\">\n                    <div className=\"input-label\">{language['input.link.label']}</div>\n                    <Tooltip title={language['input.link.auto.tooltip']}>\n                        <div className=\"auto-link-rating-input\">\n                            {(typeof linkRating === 'string' && linkRating.length > 0)\n                                ? <Checkbox\n                                    onChange={e => {\n                                        if (e.target.checked) {\n                                            changeLinkRating('');\n                                            linkRatingInputRef.current.setValue('');\n                                        }\n                                    }}\n                                />\n                                : <div className=\"auto-link-rating\">\n                                    {isLink ? autoLinkRating : '-'}\n                                </div>}\n                        </div>\n                    </Tooltip>\n                </StyledLinkRatingInputContainer>}\n                defaultValue={`${useCard.getState().card.linkRating}`}\n                onChange={changeLinkRating}\n                onTakePicker={onTakePicker}\n                placeholder={language['input.link.custom.placeholder']}\n            />}\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                        <IconButton\n                            onClick={() => {}}\n                            Icon={UnorderedListOutlined}\n                        />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\nimport {\n    ImageCropper,\n    ImageCropperRef,\n    LINK_MARKER_PICKER_WIDTH,\n    LinkMarkerPicker,\n    RadioTrain,\n    StyledDropdown,\n    StyledDropdownLabel,\n} from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\nimport styled from 'styled-components';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { notification, Popover } from 'antd';\nimport { mergeClass } from 'src/util';\n\nconst LinkPickerContainer = styled.div<{ $hover: boolean }>`\n    position: relative;\n    ${({ $hover }) => $hover\n        ? `\n            .link-marker-picker {\n                position: absolute;\n                top: 0;\n                left: 0;\n            }\n        `\n        : ''}\n`;\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    text-align: left;\n    .ant-input-group-addon {\n        flex: 0 0 auto;\n        text-align: left;\n    }\n    .radio-train-input-group {\n        flex: 1;\n    }\n    .ant-radio-button-wrapper {\n        padding: 0 var(--spacing-xs);\n    }\n`;\nconst FinishLabel = styled(StyledDropdown.Option)`\n    display: grid;\n    grid-template-columns: 30px 1fr;\n    column-gap: var(--spacing-xs);\n    .tag {\n        background: var(--sub-level-2);\n        color: var(--color-contrast);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    &.default {\n        .tag {\n            background: var(--sub-level-4);\n        }\n    }\n`;\n\ntype OtherFinishPicker = {\n    finishValueList: [art: string, ...OtherFinish],\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\n    language: LanguageDataDictionary,\n    showCreativeOption: boolean,\n};\nconst OtherFinishPicker = ({\n    finishValueList,\n    changeFinish,\n    language,\n    showCreativeOption,\n}: OtherFinishPicker) => {\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\n    /** Be careful, we use added order here, so latest finish target is highest index. */\n    const valueMap = {\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[1],\n        [OtherFinishTypeMap['background'].key]: finishValueList[4],\n        [OtherFinishTypeMap['icon'].key]: finishValueList[2],\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[3],\n        [OtherFinishTypeMap['art'].key]: finishValueList[0],\n    };\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\n\n    const IconDropdownLabel = showCreativeOption\n        ? <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined />\n        </>\n        : <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]}\n        </>;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledDropdown.Container>\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\n                {finishList.map(({ label, value }) => {\n                    return <FinishLabel key={value}\n                        className={mergeClass(\n                            valueMap[value] === 'normal' ? 'default' : '',\n                            selectedType === value ? 'menu-active' : '',\n                        )}\n                        onClick={() => {\n                            setSelectedType(value);\n                        }}\n                    >\n                        <div className=\"value\">\n                            <div className=\"tag\">{valueMap[value] === 'normal' || valueMap[value] === '' ? 'Auto' : valueMap[value]}</div>\n                        </div>\n                        <div className=\"label\">{label}</div>\n                    </FinishLabel>;\n                })}\n            </StyledDropdown.Container>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n\n    return <StyledImageRadioTrain\n        className=\"art-finish-checkbox fill-input-train\"\n        value={valueMap[selectedType]}\n        onChange={value => {\n            const nextValueMap = { ...valueMap };\n            nextValueMap[selectedType] = `${value}`;\n\n            changeFinish(nextValueMap);\n        }}\n        optionList={ArtFinishButtonList}\n    >\n        {IconDropdown}\n    </StyledImageRadioTrain>;\n};\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    showCreativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    showCreativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish, otherFinish,\n            linkMap,\n            isPendulum, pendulumSize,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <OtherFinishPicker\n                finishValueList={[artFinish, ...otherFinish]}\n                changeFinish={finishMap => {\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\n                    changeOtherFinish([\n                        finishMap[OtherFinishTypeMap['attribute'].key],\n                        finishMap[OtherFinishTypeMap['icon'].key],\n                        finishMap[OtherFinishTypeMap['sticker'].key],\n                        finishMap[OtherFinishTypeMap['background'].key],\n                    ]);\n                }}\n                language={language}\n                showCreativeOption={showCreativeOption}\n            />\n            : null\n        }\n    >\n        <LinkPickerContainer\n            className=\"link-picker-container\"\n            style={{ minWidth: LINK_MARKER_PICKER_WIDTH }}\n            $hover={showExtraDecorativeOption}\n        >\n            <LinkMarkerPicker key={`link-${JSON.stringify(linkMap)}`}\n                active={isLink === true}\n                defaultValue={linkMap}\n                onChange={changeLinkMap}\n                onStatusChange={changeLinkStatus}\n            />\n        </LinkPickerContainer>\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { Checkbox } from 'antd';\nimport { RadioTrain } from 'src/component';\nimport {\n    CardFlag,\n    FlagInfoList,\n    LINK_RATING_ALWAYS_AUTO,\n    LINK_RATING_ALWAYS_HIDE,\n    LINK_RATING_ALWAYS_SHOW,\n} from 'src/model';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst FrameBehaviorSettingPanelContainer = styled.div`\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border-top: var(--bw) solid var(--sub-level-3);\n    > * + * {\n        margin-top: var(--spacing-sm);\n    }\n    .link-rating-behavior-panel {\n        .radio-train-input-group {\n            flex: 0 0 auto;\n            margin-right: var(--spacing-sm);\n        }\n        label {\n            flex: 1 1 auto;\n            text-align: left;\n            font-size: var(--fs);\n            color: var(--color);\n        }\n    }\n`;\n\nexport type FrameBehaviorSettingPanel = {\n    \n};\nexport const FrameBehaviorSettingPanel = () => {\n    const language = useLanguage();\n    const {\n        flag,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        flag,\n        setCard,\n        getUpdater,\n    })));\n\n    const updateFlag = (value: number, index: number) => setCard(currentCard => {\n        const nextFlagList: CardFlag = [...currentCard.flag];\n        nextFlagList[index] = value;\n\n        return {\n            ...currentCard,\n            flag: nextFlagList,\n        };\n    });\n\n    return <FrameBehaviorSettingPanelContainer>\n        {flag.map((entry, index) => {\n            const { labelKey, type } = FlagInfoList[index] ?? {};\n\n            if (type === 'checkbox') {\n                return <div key={labelKey}>\n                    <Checkbox\n                        checked={entry !== 0}\n                        onChange={e => {\n                            const value = e.target.checked ? 1 : 0;\n\n                            updateFlag(value, index);\n                        }}\n                    >{language[labelKey]}</Checkbox>\n                </div>;\n            }\n            if (type === 'link-rating-behavior') {\n                return <RadioTrain key={labelKey}\n                    className=\"link-rating-behavior-panel\"\n                    onChange={(value) => updateFlag(Number(value), index)}\n                    optionList={[\n                        { label: language['input.flag.link-rating-behavior.auto'], value: LINK_RATING_ALWAYS_AUTO },\n                        { label: language['input.flag.link-rating-behavior.show'], value: LINK_RATING_ALWAYS_SHOW },\n                        { label: language['input.flag.link-rating-behavior.hide'], value: LINK_RATING_ALWAYS_HIDE },\n                    ]}\n                    value={entry}\n                    suffix={<label>\n                        {language[labelKey]}\n                    </label>}\n                />;\n            }\n            return null;\n        })}\n    </FrameBehaviorSettingPanelContainer>;\n};","import { getNavigationProps, HexColorRegex, mergeClass, resolveFrameStyle } from 'src/util';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useCard, useLanguage, WithLanguage } from 'src/service';\nimport { getFoilButtonList, getFrameButtonList } from '../const';\nimport { Button, Checkbox } from 'antd';\nimport { FrameInfoBlock, HorizontalSketchPicker, RadioTrain } from 'src/component';\nimport styled from 'styled-components';\nimport { CanvasConst, DefaultFrameInfo, DyeIndexMap, Foil, FoilMap, FrameDyeList, FrameInfoMap, FramePositionMap, getDefaultDyeList } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\nconst FrameLayoutContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    column-gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    ${StyledPendulumFrameContainer} {\n        border: none;\n        box-shadow: none;\n        padding: 0;\n    }\n    .visual-preview-container {\n        color: var(--color-heavy);\n        width: 110px; // Alignment\n        text-align: center;\n        label {\n            display: block;\n            padding-bottom: var(--spacing-xxs);\n        }\n        .frame-info-block {\n\t\t\theight: 30px; // Alignment\n\t\t\tline-height: 28px; // Alignment with border 1px\n            border: var(--bw) solid var(--sub-level-1);\n            background-color: var(--main-level-1);\n            margin-bottom: var(--spacing-xs);\n            cursor: pointer;\n            .frame-info-block-label {\n                padding: 0 var(--spacing-xs);\n            }\n            &.active {\n                border: var(--bw) dashed var(--main-level-2);\n            }\n            &:hover {\n                border: var(--bw) solid var(--main-level-2);\n            }\n        }\n    }\n`;\nconst CardLayoutContainer = styled.div<{ $width: number, $height: number, $hoverable: boolean }>`\n    /** Ensure even width */\n    --layout-width: ${props => Math.round(props.$width / 2) * 2}px;\n    --layout-height: ${props => props.$height}px;\n    display: inline-block;\n    width: var(--layout-width);\n    height: var(--layout-height);\n    box-shadow: 0 0 2px 0 #202020;\n    position: relative;\n    background: var(--main-level-2);\n    button {\n        border: none;\n    }\n    .overlay-patch {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n    }\n    .dye-patch {\n        position: absolute;\n        z-index: 1;\n        top: 10%;\n        left: 50%;\n        min-width: 6px;\n        min-height: 6px;\n        width: ${props => props.$width / 6}px;\n        height: ${props => props.$width / 6}px;\n        border-radius: var(--br-lg);\n        transform: translateX(-50%);\n    }\n    .card-layout {\n        position: absolute;\n        cursor: pointer;\n        padding: 0;\n        &.unmodified .overlay-patch {\n            background: var(--gradient-diagonal-stripe);\n        }\n    }\n    .partial-layout {\n        background-clip: padding-box;\n        ${props => props.$hoverable\n        ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) dashed var(--main-level-2);\n                }\n            `\n        : ''}\n    }\n    .float-layout {\n        ${props => props.$hoverable\n        ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) solid var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n            `\n        : ''}\n    }\n    /** For Zarc's gradient */\n    .partial-layout {\n        background-size: 200%;\n    }\n    .top-left {\n        width: 50%; height: 50%;\n        top: 0; left: 0;\n    }\n    .top-right {\n        width: 50%; height: 50%;\n        top: 0; left: 50%;\n        background-position-x: 100%;\n    }\n    .bottom-left {\n        width: 50%; height: 50%;\n        top: 50%; left: 0;\n    }\n    .bottom-right {\n        width: 50%; height: 50%;\n        top: 50%; left: 50%;\n        background-position-x: 100%;\n    }\n    /** Background width is slightly reduced to help active bottom frames easier */\n    .effect-background {\n        width: 80%;\n        height: 20%;\n        bottom: 5%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n    .pendulum-effect-background {\n        width: 80%;\n        height: 13%;\n        bottom: 28%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n    &.is-vertical {\n        margin-bottom: var(--spacing-3xl);\n        .float-layout.foil {\n            width: 100%;\n            left: 0;\n            bottom: -22.5%;\n            font-size: var(--fs-sm);\n            background-color: var(--main-level-1);\n        }\n    }\n    &.is-horizontal {\n        margin-right: var(--spacing-lg);\n        .float-layout.foil {\n            width: 50%;\n            height: 80%;\n            top: 10%;\n            right: -60%;\n            font-size: 0;\n            background-color: var(--main-level-1);\n        }\n    }\n`;\n\nexport type CardLayoutPreview = {\n    tabIndex?: number,\n    width: number,\n    height: number,\n    baseLayoutState?: Record<string, string | undefined>,\n    resolvedLayoutState: Record<string, string | undefined>,\n    isPendulum: boolean,\n    activeLayout?: string,\n    dyeList: string[],\n    foil: Foil,\n    onClick?: (key: string) => void,\n    vertical?: boolean,\n} & WithLanguage;\nexport const CardLayoutPreview = ({\n    tabIndex = 0,\n    width,\n    height,\n    baseLayoutState,\n    resolvedLayoutState,\n    isPendulum,\n    activeLayout,\n    dyeList,\n    foil,\n    onClick,\n    language,\n    vertical = false,\n}: CardLayoutPreview) => {\n    return <CardLayoutContainer\n        $width={width}\n        $height={height}\n        $hoverable={!!onClick}\n        className={mergeClass('card-layout-container', vertical ? 'is-vertical' : 'is-horizontal')}\n    >\n        {[\n            { key: 'topLeftFrame', className: 'card-layout partial-layout top-left' },\n            { key: 'topRightFrame', className: 'card-layout partial-layout top-right' },\n            { key: 'bottomLeftFrame', className: 'card-layout partial-layout bottom-left' },\n            { key: 'bottomRightFrame', className: 'card-layout partial-layout bottom-right' },\n            { key: 'effectBackground', className: 'card-layout float-layout effect-background' },\n            { key: 'pendulumEffectBackground', className: 'card-layout float-layout pendulum-effect-background' },\n        ].map(({ className, key }) => {\n            const frame = resolvedLayoutState[key];\n            const dyeIndex = DyeIndexMap[key];\n            const dyeColor = dyeIndex == null ? undefined : dyeList[DyeIndexMap[key]];\n\n            if (!frame) return null;\n            if (!isPendulum && key === 'pendulumEffectBackground') return null;\n            const {\n                labelBackgroundColor,\n                labelBackgroundImage,\n            } = FrameInfoMap[frame] ?? {};\n            return <button key={key}\n                {...tabIndex < 0 ? {} : { tabIndex }}\n                className={mergeClass(\n                    className,\n                    key === activeLayout ? 'active' : '',\n                    baseLayoutState?.[key] === 'auto' ? 'unmodified' : '',\n                )}\n                onClick={() => onClick?.(key)}\n                style={labelBackgroundImage\n                    ? { backgroundImage: labelBackgroundImage }\n                    : { backgroundColor: labelBackgroundColor }\n                }\n            >\n                <div\n                    className=\"overlay-patch\"\n                    style={dyeColor\n                        ? {\n                            boxShadow: `0 0 0 ${Math.round(width / 16)}px ${dyeColor} inset`,\n                        }\n                        : {}}\n                />\n            </button>;\n        })}\n        <button\n            {...tabIndex < 0 ? {} : { tabIndex }}\n            className={mergeClass(\n                'card-layout float-layout foil',\n                'foil' === activeLayout ? 'active' : '',\n            )}\n            onClick={() => onClick?.('foil')}\n            style={{ boxShadow: `0 0 0 2px ${HexColorRegex.test(dyeList[DyeIndexMap.foil])\n                ? dyeList[DyeIndexMap.foil]\n                : FoilMap[foil].color} inset` }}\n        >\n            {language['input.foil.label']}\n        </button>\n    </CardLayoutContainer>;\n};\n\ntype FramelayoutSettingPanelRef = {\n    focus: () => void,\n};\nexport type FramelayoutSettingPanel = {\n    isPendulum: boolean,\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onFrameChange: (frame: string) => void,\n    onCancel: () => void,\n};\nexport const FrameLayoutSettingPanel = forwardRef<FramelayoutSettingPanelRef, FramelayoutSettingPanel>(({\n    frameList,\n    onFrameChange,\n    onCancel,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        foil,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        dyeList,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            foil,\n            frame,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            dyeList,\n            effectStyle,\n            pendulumStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        foil,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        dyeList,\n        setCard,\n        getUpdater,\n    })));\n    const recentCustomPendulumFrame = useRef({\n        topLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        topRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        effectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        pendulumEffectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n    });\n    const [focus, setFocus] = useState(0);\n    const [activeLayout, setActiveLayout] = useState('frame');\n    const frameLayoutMainId = 'frame-layout-main';\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    useEffect(() => {\n        /** Avoid confusion */\n        if (activeLayout === 'pendulumEffectBackground' && !isPendulum) setActiveLayout('frame');\n    }, [activeLayout, isPendulum]);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => document.getElementById(frameLayoutMainId)?.focus(),\n    }));\n\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const changeBottomLeftFrame = useMemo(() => getUpdater('pendulumFrame'), [getUpdater]);\n    const changeBottomRightFrame = useMemo(() => getUpdater('pendulumRightFrame'), [getUpdater]);\n    const changeTopLeftFrame = useMemo(() => getUpdater('leftFrame'), [getUpdater]);\n    const changeTopRightFrame = useMemo(() => getUpdater('rightFrame'), [getUpdater]);\n    const changeEffectBackground = (background: string) => setCard(currentCard => {\n        const nextEffectStyle = { ...currentCard.effectStyle };\n        nextEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            effectStyle: nextEffectStyle,\n        };\n    });\n    const changePendulumEffectBackground = (background: string) => setCard(currentCard => {\n        const nextPendulumEffectStyle = { ...currentCard.pendulumStyle };\n        nextPendulumEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            pendulumStyle: nextPendulumEffectStyle,\n        };\n    });\n    const changeDyeList = useMemo(() => getUpdater('dyeList'), [getUpdater]);\n    const changeDye = (color: string, name: string) => setCard(currentCard => {\n        const position = DyeIndexMap[name];\n\n        if (typeof position !== 'number') return currentCard;\n        const nextDyeList = [...currentCard.dyeList] as FrameDyeList;\n        nextDyeList[position] = color;\n\n        return {\n            ...currentCard,\n            dyeList: nextDyeList,\n        };\n    });\n    const changeLayout = (layoutValue: string) => {\n        if (activeLayout === 'bottomLeftFrame') changeBottomLeftFrame(layoutValue);\n        if (activeLayout === 'bottomRightFrame') changeBottomRightFrame(layoutValue);\n        if (activeLayout === 'topLeftFrame') changeTopLeftFrame(layoutValue);\n        if (activeLayout === 'topRightFrame') changeTopRightFrame(layoutValue);\n        if (activeLayout === 'effectBackground') changeEffectBackground(layoutValue);\n        if (activeLayout === 'pendulumEffectBackground') changePendulumEffectBackground(layoutValue);\n    };\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const activeFrame = layoutState[activeLayout];\n    const resolvedLayoutStyle = resolveFrameStyle(layoutState, isPendulum);\n    const dyeColor = DyeIndexMap[activeLayout];\n    return <FrameLayoutContainer>\n        <div className=\"visual-preview-container\">\n            <label>{language['input.advanced-frame.main.label']}</label>\n            <FrameInfoBlock\n                id={frameLayoutMainId}\n                tabIndex={0}\n                className={activeLayout === 'frame' ? 'active' : ''}\n                {...FrameInfoMap[frame] ?? DefaultFrameInfo}\n                onClick={() => setActiveLayout('frame')}\n            />\n            <label>{language['input.advanced-frame.detailed.label']}</label>\n            <CardLayoutPreview\n                width={Math.round(width / 20) * 2}\n                height={Math.round(height / 20) * 2}\n                isPendulum={isPendulum}\n                baseLayoutState={layoutState}\n                resolvedLayoutState={resolvedLayoutStyle}\n                activeLayout={activeLayout}\n                onClick={key => setActiveLayout(key)}\n                dyeList={dyeList}\n                foil={foil}\n                language={language}\n                vertical={true}\n            />\n            <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    changeBottomLeftFrame('auto');\n                    changeBottomRightFrame('auto');\n                    changeTopLeftFrame('auto');\n                    changeTopRightFrame('auto');\n                    changeEffectBackground('auto');\n                    changePendulumEffectBackground('auto');\n                    changeFoil('normal');\n                    changeDyeList(getDefaultDyeList());\n                }}\n            >\n                {language['button.reset.label']}\n            </Button>\n        </div>\n        <div>\n            <StyledPendulumFrameContainer\n                className=\"pendulum-frame-picker\"\n                {...getNavigationProps({\n                    stopPropagation: true,\n                    optionLength: frameList.length,\n                    setFocus,\n                    onTrigger: () => {\n                        if (focus >= 0) changeLayout(frameList[focus].value);\n                    },\n                    onCancel,\n                })}\n            >\n                <div className=\"frame-part-name\">\n                    {language[FramePositionMap[activeLayout]?.labelKey]}\n                </div>\n                {/** Avoid collapsing in case of frame */}\n                {activeLayout !== 'foil' && <Checkbox\n                    className={mergeClass('inline-input', activeLayout === 'frame' ? 'checkbox-disabled' : '')}\n                    checked={activeFrame === 'auto'}\n                    disabled={activeLayout === 'frame'}\n                    onChange={e => {\n                        changeLayout(e.target.checked ? 'auto' : (recentCustomPendulumFrame.current[activeLayout] ?? 'auto'));\n                    }}\n                >{language['input.frame.auto']}</Checkbox>}\n                {activeLayout === 'foil'\n                    ? <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                        <span>{language['input.foil.label']}</span>\n                    </RadioTrain>\n                    : <RadioTrain\n                        className=\"frame-radio\"\n                        value={activeFrame}\n                        onChange={value => {\n                            if (activeLayout === 'frame') onFrameChange(value);\n                            else changeLayout(value);\n                        }}\n                        optionList={frameList}\n                    />}\n                {typeof dyeColor === 'number' && <HorizontalSketchPicker\n                    value={dyeList[dyeColor]}\n                    onChange={color => {\n                        if (color !== dyeList[dyeColor]) changeDye(color, activeLayout);\n                    }}\n                >\n                    {language['input.advanced-frame.dye']}\n                </HorizontalSketchPicker>}\n            </StyledPendulumFrameContainer>\n        </div>\n    </FrameLayoutContainer>;\n});\n\nexport * from './frame-behavior-setting-panel';","import { CopiableCode } from 'src/component';\nimport { LINK_RATING_ALWAYS_AUTO, LINK_RATING_ALWAYS_SHOW, LINK_RATING_ALWAYS_HIDE, FlagInfoList } from 'src/model';\nimport { LanguageDataDictionary } from 'src/service';\n\nexport const FlagPresentationList = [\n    {\n        ...FlagInfoList[0],\n        valueDisplay: (language: LanguageDataDictionary, _value: number) => language['input.flag.mix-def-link'],\n        sampleDisplay: (language: LanguageDataDictionary) => <>\n            {language['input.flag.mix-def-link']}:\n            <ul>\n                <li><CopiableCode data={0}>0</CopiableCode>: {language['manager.template.description.true']}</li>\n                <li><CopiableCode data={1}>1</CopiableCode>: {language['manager.template.description.false']}</li>\n            </ul>\n        </>,\n    },\n    {\n        ...FlagInfoList[1],\n        valueDisplay: (language: LanguageDataDictionary, value: number) => <>\n            {language['input.flag.link-rating-behavior']}: {language[value === 1\n                ? 'input.flag.link-rating-behavior.show'\n                : 'input.flag.link-rating-behavior.hide']}\n        </>,\n        sampleDisplay: (language: LanguageDataDictionary) => <>\n            {language['input.flag.link-rating-behavior']}:\n            <ul>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_AUTO}>\n                        {LINK_RATING_ALWAYS_AUTO}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.auto']}\n                </li>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_SHOW}>\n                        {LINK_RATING_ALWAYS_SHOW}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.show']}\n                </li>\n                <li>\n                    <CopiableCode data={LINK_RATING_ALWAYS_HIDE}>\n                        {LINK_RATING_ALWAYS_HIDE}\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.hide']}\n                </li>\n            </ul>\n        </>,\n    },\n];","import { Checkbox, Input, Popover } from 'antd';\nimport { InternalPopover, PopoverButton, StyledDropdown, StyledPopMarkdown } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CanvasConst, DEFAULT_PENDULUM_SIZE, PendulumSizeMap } from 'src/model';\nimport { CaretDownOutlined, ApartmentOutlined } from '@ant-design/icons';\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\nimport styled from 'styled-components';\nimport { resolveFrameStyle } from 'src/util';\nimport { CardLayoutPreview, FrameBehaviorSettingPanel, FramelayoutSettingPanel, FrameLayoutSettingPanel } from '../frame-setting-panel';\nimport { FlagPresentationList } from '../../common';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-4);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n    .card-layout-preview-container {\n        line-height: 0;\n        border: var(--bw) solid var(--sub-level-1);\n        overflow: hidden;\n    }\n    .anticon {\n        align-content: center;\n        padding: 0 var(--spacing-xs);\n        border: var(--bw) solid var(--sub-level-1);\n        border-left: none;\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .pendulum-option {\n        display: grid;\n        grid-template-columns: var(--width-label) 1fr;\n        align-items: center;\n        .pendulum-frame-input,\n        .pendulum-checkbox {\n            flex: 0 0 auto;\n        }\n        .mirror-scale {\n            /** Alignment **/\n            line-height: 32px;\n            align-items: center;\n        }\n    }\n    .joined-row {\n        position: relative;\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            /** Alignment **/\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing);\n        }\n        .pendulum-size {\n            display: inline-block;\n            line-height: 1.15; // Alignment\n            margin-right: var(--spacing);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    softMode: boolean,\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n}\n    & Pick<CardTextInput, 'onTakePicker'>\n    & Pick<FramelayoutSettingPanel, 'onFrameChange'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    softMode,\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n    onFrameChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        frame,\n        foil,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        dyeList,\n        flag,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            frame,\n            foil,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            effectStyle,\n            pendulumStyle,\n            dyeList,\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        frame,\n        foil,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        dyeList,\n        flag,\n        setCard,\n        getUpdater,\n    })));\n    const {\n        mirrorPendulumScale,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { mirrorPendulumScale },\n        updateSetting,\n    }) => ({\n        mirrorPendulumScale,\n        updateSetting,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n        };\n    });\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const advanceLayoutPreviewHeight = 30; // Alignment with frame input\n    const flagList = flag\n        .map((entry, index) => {\n            const target = FlagPresentationList[index];\n\n            if (entry !== 0 && target) return <li key={target.labelKey}>\n                {target.valueDisplay(language, entry)}\n            </li>;\n            return null;\n        })\n        .filter(entry => entry != null);\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            <div className=\"pendulum-option-container\">\n                {showCreativeOption && <Popover\n                    visible={frameDropdownVisible}\n                    onVisibleChange={setFrameDropdownVisibleVisible}\n                    trigger={['click']}\n                    placement=\"bottom\"\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\n                    content={<div className=\"overlay-event-absorber\">\n                        <FrameLayoutSettingPanel ref={bottomFrameOptionGridRef}\n                            isPendulum={isPendulum}\n                            frameList={frameList}\n                            pendulumFrame={pendulumFrame}\n                            onFrameChange={onFrameChange}\n                            onCancel={() => {\n                                setFrameDropdownVisibleVisible(false);\n                                containerRef.current?.focus();\n                            }}\n                        />\n                        <FrameBehaviorSettingPanel />\n                    </div>}\n                >\n                    <StyledPendulumFrameInputContainer ref={containerRef}\n                        className=\"pendulum-frame-input\"\n                        tabIndex={0}\n                        onKeyDown={e => {\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                                setFrameDropdownVisibleVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    bottomFrameOptionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        }}\n                    >\n                        <span className=\"pendulum-frame-label\">\n                            {language['input.advanced-frame.label']}\n                        </span>\n                        <div className=\"card-layout-preview-container\">\n                            <CardLayoutPreview\n                                width={Math.round(advanceLayoutPreviewHeight * width / height)}\n                                height={advanceLayoutPreviewHeight}\n                                isPendulum={isPendulum}\n                                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                                tabIndex={-1}\n                                dyeList={dyeList}\n                                foil={foil}\n                                language={language}\n                            />\n                        </div>\n                        {flagList.length > 0\n                            ? <InternalPopover\n                                content={<StyledPopMarkdown>\n                                    {language['input.flag.effective.label']}\n                                    <ul>{flagList}</ul>\n                                </StyledPopMarkdown>}\n                            >\n                                <ApartmentOutlined />\n                            </InternalPopover>\n                            : null}\n                        <CaretDownOutlined />\n                    </StyledPendulumFrameInputContainer>\n                </Popover>}\n                {(isPendulum && showCreativeOption) && <div className=\"pendulum-size\">\n                    <Popover key=\"color-picker\"\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {pendulumSizeList.map(({ value, label }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={pendulumSize === value ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            onPendulumSizeChange(value);\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={softMode}\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\n                        >\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\n                        </PopoverButton>\n                    </Popover>\n                </div>}\n                {(isPendulum && showCreativeOption)\n                    && <Checkbox\n                        className=\"mirror-scale\"\n                        onChange={e => {\n                            const willMirror = e.target.checked;\n\n                            updateSetting({ mirrorPendulumScale: willMirror });\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\n                        }}\n                        checked={mirrorPendulumScale}\n                    >\n                        {language['input.mirror-scale.label']}\n                    </Checkbox>}\n            </div>\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\" className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    allowClear\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (mirrorPendulumScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    allowClear\n                    onChange={e => {\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    autoSize={{\n                        minRows: 5,\n                    }}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, InputNumber, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst PostPendulumFirstLineContainer = styled.div`\n    &.first-line,\n    &.second-line {\n        display: flex;\n        flex-wrap: wrap;\n        gap: var(--spacing-sm);\n        align-items: center;\n        justify-content: right;\n    }\n    .type-ability-input {\n        flex: 1 1 auto;\n        width: unset;\n        max-width: 40rem;\n    }\n    .condense-input {\n        flex: 1 1 auto;\n    }\n    .line-input {\n        flex: 0 0 auto;\n        display: inline-grid;\n        grid-template-columns: var(--width-label) max-content max-content;\n        gap: var(--spacing-sm);\n        align-items: center;\n        .ant-input-number {\n            width: 65px;\n        }\n    }\n    .formatting-help-button,\n    .input-kanji-helper {\n        flex: 0 0 auto;\n    }\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .condense-input {\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: {\n        typeAbility?: string[],\n        effectMinLine?: number,\n        pendulumEffectMinLine?: number,\n    }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const showExtraDecorativeOption = useSetting(state => state.setting.showExtraDecorativeOption);\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const [effectMinLine, setEffectMinLine] = useState(() => useCard.getState().card.effectStyle.minLine);\n    const [pendulumEffectMinLine, setPendulumEffectMinLine] = useState(() => useCard.getState().card.pendulumStyle.minLine);\n\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useEffect(() => {\n        /** Changing min line force render effect, so we should do so sparingly */\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) setCard(currentCard => {\n                const newEffectStyle = { ...currentCard.effectStyle, minLine: effectMinLine };\n                const newPendulumEffectStyle = { ...currentCard.pendulumStyle, minLine: pendulumEffectMinLine };\n\n                return {\n                    ...currentCard,\n                    effectStyle: newEffectStyle,\n                    pendulumStyle: newPendulumEffectStyle,\n                };\n            });\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [effectMinLine, pendulumEffectMinLine, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ typeAbility, effectMinLine, pendulumEffectMinLine }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n            if (typeof effectMinLine === 'number') setEffectMinLine(effectMinLine);\n            if (typeof pendulumEffectMinLine === 'number') setPendulumEffectMinLine(pendulumEffectMinLine);\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon]?.value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <>\n        <PostPendulumFirstLineContainer className={`post-pendulum-input first-line variant-${format}`}>\n            <CardTextInput ref={typeAbilityInputRef}\n                addonBefore={language[typeLabel]}\n                id=\"type-ability\"\n                defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n                onChange={changeTypeAbility}\n                onTakePicker={onTakePicker}\n            />\n            {isOCG && <Tooltip\n                overlay={language['input.furigana-helper.tooltip']}\n                overlayClassName=\"long-tooltip-overlay\"\n            >\n                <Checkbox\n                    className=\"input-kanji-helper\"\n                    onChange={toggleFuriganaHelper}\n                    checked={furiganaHelper}\n                >\n                    {language['input.furigana-helper.label']}\n                </Checkbox>\n            </Tooltip>}\n            <FormattingHelpDrawer />\n        </PostPendulumFirstLineContainer>\n        <PostPendulumFirstLineContainer className={`post-pendulum-input second-line variant-${format}`}>\n            <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n                onChange={value => onCondenseTolerantChange(value as CondenseType)}\n                optionList={CondenseThresholdButtonList}\n            >\n                <span>\n                    {language['input.condense.label']} <Explanation\n                        content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\n                    />\n                </span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <div className=\"line-input\">\n                <div>\n                    {language['input.text-style.min-line.label']}\n                </div>\n                <InputNumber\n                    id=\"effect-line\"\n                    value={effectMinLine}\n                    placeholder={language['input.text-style.min-line.effect.placeholder']}\n                    onChange={value => setEffectMinLine(typeof value === 'number' ? value : 0)}\n                    min={0}\n                    max={50}\n                />\n                <InputNumber\n                    id=\"pendulum-effect-line\"\n                    value={pendulumEffectMinLine}\n                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\n                    onChange={value => setPendulumEffectMinLine(typeof value === 'number' ? value : 0)}\n                    min={0}\n                    max={50}\n                />\n            </div>}\n        </PostPendulumFirstLineContainer>\n    </>;\n});","import { Checkbox, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { InlineColorPicker, RadioTrain } from 'src/component';\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker,\n        h2.font-style-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\n                                <h2 className=\"font-style-picker\">\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={fontStyle}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    IconButton,\n    RadioTrain,\n    StandaloneLabel,\n    StyledPopMarkdown,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getFinishList,\n    FormatButtonList,\n} from './const';\nimport { ClearOutlined } from '@ant-design/icons';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain, FrameTrainRef } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    AttributeInputGroup,\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledInputLabelWithButton,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isLink,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isLink,\n        getUpdater,\n        setCard,\n    })));\n    const { setting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const frameTrainRef = useRef<FrameTrainRef>(null);\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const finishList = useMemo(() => getFinishList(language), [language]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n                effectStyle, pendulumStyle,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({\n                typeAbility,\n                effectMinLine: effectStyle.minLine,\n                pendulumEffectMinLine: pendulumStyle.minLine,\n            });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={finishList}\n            >\n                <StyledInputLabelWithButton className=\"finish-checkbox-label\">\n                    <div className=\"input-label\">{language['input.finish.label']}</div>\n                    <IconButton\n                        onClick={() => onFinishChange([])}\n                        Icon={ClearOutlined}\n                        tooltipProps={{\n                            title: language['input.other-finish.reset.tooltip'],\n                        }}\n                    />\n                </StyledInputLabelWithButton>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain ref={frameTrainRef}\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\n            onStatChange={(atk, def, linkRating) => footerInputGroupRef.current?.setValue({ atk, def, linkRating })}\n        />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <AttributeInputGroup language={language} />\n\n                <PendulumInputGroup ref={pendulumInputGroupRef}\n                    showCreativeOption={showCreativeOption}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    softMode={reduceMotionColor}\n                    onTakePicker={setPickerTarget}\n                    onFrameChange={frame => frameTrainRef.current.changeFrame(frame)}\n                />\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showCreativeOption={showCreativeOption}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    DEFAULT_BASE_FILL_COLOR,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkOffsetList,\n    LinkPendulumIndentList,\n    LinkPendulumOffsetList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName, resolveFrameStyle } from 'src/util';\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Checkbox, Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .select-box {\n            display: inline-block;\n            margin-right: var(--spacing-xs);\n        }\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 50%;\n            height: 50%;\n            position: absolute;\n            &.top-left-frame {\n                top: 0;\n                left: 0;\n            }\n            &.top-right-frame {\n                top: 0;\n                left: 50%;\n            }\n            &.bottom-left-frame {\n                top: 50%;\n                left: 0;\n            }\n            &.bottom-right-frame {\n                top: 50%;\n                left: 50%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            left: 21px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #2a2a2a;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    selected,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onActive: (card: InternalCard) => void,\n    onSelect: (card: InternalCard, type: 'add' | 'remove') => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    selected,\n    language,\n    onDuplicate,\n    onActive,\n    onDelete,\n    onSelect,\n    // onDownload,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artData,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundData,\n        backgroundFit,\n        backgroundSource,\n        backgroundType,\n        cardIcon,\n        def,\n        format,\n        frame,\n        leftFrame, rightFrame,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        opacity,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n        effectStyle,\n        pendulumStyle,\n    } = card;\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n    } = resolveFrameStyle({\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n    }, isPendulum);\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedCardArt = artSource === 'offline'\n        ? !art\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\n            : artData\n        : art;\n    const normalizedBackgroundArt = backgroundSource === 'offline'\n        ? !background\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\n            : backgroundData\n        : background;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onActive(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame top-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={normalizedBackgroundArt}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\n\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\n                    )}\n                    style={{\n                        top: isPendulum ? 16 : 19,\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\n                    }}\n                />;\n            })}\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                <div className=\"select-box\" onClick={e => e.stopPropagation()}>\n                    <Checkbox\n                        checked={selected}\n                        onChange={e => {\n                            onSelect(card, e.target.checked ? 'add' : 'remove');\n                        }}\n                    />\n                </div>\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${(normalizedCardIcon === 'custom'\n                        ? 'icon-list'\n                        : normalizedCardIcon).toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(normalizedCardIcon !== NO_ICON\n                    && normalizedCardIconType !== 'st'\n                    && normalizedCardIconType !== 'none'\n                    && normalizedCardIconType !== 'custom'\n                ) && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\n                </Tooltip> */}\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\n        }px) translateY(${\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\n        }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { Button, Modal } from 'antd';\nimport JSZip from 'jszip';\nimport { useEffect, useRef } from 'react';\nimport { InternalCard } from 'src/model';\nimport { useBatchDownload, useCardList, WithLanguage } from 'src/service';\nimport { downloadBlob } from 'src/util';\nimport styled from 'styled-components';\nimport { CheckCircleOutlined, LoadingOutlined, HourglassOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst ExportingListContainer = styled.div`\n    .exporting-item {\n        display: grid;\n        grid-template-columns: 1.5rem 1fr;\n    }\n    .anticon-hourglass {\n        color: var(--main-info);\n    }\n    .anticon-loading {\n        color: var(--main-active);\n    }\n    .anticon-check-circle {\n        color: var(--main-online);\n    }\n`;\n\nexport type BatchDownloadButton = {\n    onActive: (card: InternalCard) => void,\n} & WithLanguage;\nexport const BatchDownloadButton = ({\n    language,\n    onActive,\n}: BatchDownloadButton) => {\n    const {\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    } = useCardList(useShallow(({\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    }) => ({\n        selectedMap,\n        listName,\n        activeId,\n        cardDisplayList,\n    })));\n    const {\n        batchQueue,\n        batchDataMap,\n        isBatchDownloading,\n        isReady,\n        clearQueue,\n        stopBatchDownload,\n        startBatchDownload,\n    } = useBatchDownload();\n    /**\n     * The batch download process is as follow:\n     * * Start the process, block the screen with a popup and mark the process as started.\n     * * During the process, the top card of the exporting list is picked, and force select.\n     * * After it fully render (we check it at the useCardExport hook), it trigger the recording process, while also remove the recorded card from exporting list.\n     * * When the exporting list changed, jump back to step 2. If the exporting list is now empty, we zip it and trigger the download.\n     * * Clean up and end the process.\n     */\n    const nextSelectedId = batchQueue[0];\n    const lastSelectedId = useRef('');\n    useEffect(() => {\n        if (nextSelectedId && isBatchDownloading && nextSelectedId !== lastSelectedId.current) {\n            lastSelectedId.current = nextSelectedId;\n            const targetCard = cardDisplayList.find(card => card.id === nextSelectedId);\n\n            if (targetCard) {\n                onActive(targetCard);\n            }\n        }\n    }, [cardDisplayList, isBatchDownloading, nextSelectedId, onActive]);\n\n    useEffect(() => {\n        let relevant = true;\n        if (isReady) {\n            (async () => {\n                const { batchName, batchDataMap } = useBatchDownload.getState();\n                const zipObject = new JSZip();\n                const batchDataList = Object.values(batchDataMap);\n\n                if (batchDataList.length > 0) {\n                    Object.values(batchDataMap).forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    if (relevant) {\n                        downloadBlob(\n                            `${batchName}.zip`,\n                            zipBlob,\n                            'application/zip',\n                        );\n                        stopBatchDownload();\n                    }\n                }\n            })();\n        }\n        return () => {\n            relevant = false;\n        };\n    }, [isReady, stopBatchDownload]);\n\n    const exportAllCard = Object.keys(selectedMap).length === 0;\n    return <>\n        <Modal\n            visible={isBatchDownloading}\n            onCancel={() => stopBatchDownload()}\n            onOk={() => clearQueue()}\n            cancelText={language['manager.batch.batch-download.cancel-all.label']}\n            okText={language['manager.batch.batch-download.premature-stop.label']}\n            okButtonProps={{\n                type: 'default',\n            }}\n        >\n            <ExportingListContainer className=\"exporting-list\">\n                {Object\n                    .values(cardDisplayList)\n                    .map(({ id, name }) => {\n                        if (!exportAllCard && !selectedMap[id]) return null;\n                        return <div key={id} className=\"exporting-item\">\n                            <div className=\"export-status\">\n                                {activeId === id\n                                    ? <LoadingOutlined />\n                                    : batchDataMap[id]\n                                        ? <CheckCircleOutlined />\n                                        : <HourglassOutlined />}\n                            </div>\n                            <div className=\"export-name\">{name}</div>\n                        </div>;\n                    })}\n            </ExportingListContainer>\n        </Modal>\n        <Button\n            className=\"batch-download-button\"\n            onClick={() => startBatchDownload(\n                listName,\n                exportAllCard\n                    ? cardDisplayList.map(card => card.id)\n                    : Object.keys(selectedMap),\n            )}\n        >\n            {exportAllCard\n                ? language['manager.batch.batch-download.label']\n                : language['manager.batch.batch-download.partial-download.label']}\n        </Button>\n    </>;\n};","import { LanguageDataDictionary, useCardList, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useCallback, useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button, Dropdown, Menu } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\nimport { BatchDownloadButton } from './batch-download-button';\nimport { CaretDownFilled } from '@ant-design/icons';\n\nconst StyledMenuItem = styled(Menu.Item)`\n    &.menu-active {\n        background-color: var(--main-active);\n    }\n`;\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .batch-download-button {\n        margin-bottom: var(--spacing-xs);\n    }\n    .select-panel {\n        display: grid;\n        grid-template-columns: max-content max-content 1fr;\n        padding: var(--spacing-xs);\n        gap: var(--spacing-xs);\n        text-align: right;\n        .ant-checkbox-wrapper span {\n            padding-right: 0;\n        }\n        .scheme-button {\n            display: inline-block;\n        }\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        position: absolute;\n        width: 100%;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    selectedMap: Record<string, string>,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onActive: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n} & Pick<CardThumb, 'onSelect'>;\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        selectedMap,\n        language,\n        list,\n        onDelete,\n        onDownload,\n        onDuplicate,\n        onActive,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        selected={!!selectedMap[list[index].id]}\n        language={language}\n        onDuplicate={onDuplicate}\n        onActive={onActive}\n        onDownload={onDownload}\n        onDelete={onDelete}\n        onSelect={onSelect}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onActive: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onActive,\n    onDownload,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        selectedMap,\n        selectCard,\n        deleteCard,\n        duplicateCard,\n        setSelectMap,\n        resetFilter,\n    })));\n    const {\n        exportScheme,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { exportScheme },\n        updateSetting,\n    }) => ({\n        exportScheme,\n        updateSetting,\n    })));\n\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const onSelect: CardThumbRowData['onSelect'] = useCallback((card, type) => {\n        selectCard(card.id, type);\n    }, [selectCard]);\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onActive(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onActive, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        {cardDisplayList.length > 0 && <div className=\"select-panel\">\n            <Button\n                size=\"small\"\n                onClick={() => setSelectMap([], 'replace')}\n            >\n                {language['manager.batch.batch-download.clear.label']}\n            </Button>\n            <Button\n                size=\"small\"\n                onClick={() => setSelectMap(cardDisplayList, 'add')}\n            >\n                {language['manager.batch.batch-download.all.label']}\n            </Button>\n            <div>\n                <Dropdown\n                    overlay={<Menu>\n                        {[\n                            {\n                                value: 'with-name',\n                                label: language['manager.batch.batch-download.export-option.with-name.label'],\n                            },\n                            {\n                                value: 'with-id',\n                                label: language['manager.batch.batch-download.export-option.with-id.label'],\n                            },\n                        ].map(({ value, label }) => {\n                            return <StyledMenuItem\n                                key={value}\n                                onClick={() => updateSetting({ exportScheme: value })}\n                                className={value === exportScheme ? 'menu-active' : ''}\n                            >\n                                {label}\n                            </StyledMenuItem>;\n                        })}\n                    </Menu>}\n                >\n                    <div\n                        className=\"scheme-button\"\n                    >\n                        {language['manager.batch.batch-download.export-scheme.label']} <CaretDownFilled />\n                    </div>\n                </Dropdown>\n            </div>\n        </div>}\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            selectedMap,\n                            onDuplicate: duplicateCard,\n                            onActive,\n                            onDownload,\n                            onDelete: deleteAndReselect,\n                            onSelect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        {cardDisplayList.length !== 0 && <BatchDownloadButton\n            language={language}\n            onActive={onActive}\n        />}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    RegionMap,\n    CondenseTolerantMap,\n    DyeIndexMap,\n    ExtraAttributeList,\n    FinishMap,\n    frameList,\n    FramePositionMap,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PendulumSizeList,\n    PresetNameStyleMap,\n    StickerList,\n    TotalIconTypeMap,\n} from 'src/model';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport { CopiableCode, StyledMono } from 'src/component';\nimport { FlagPresentationList } from '../common';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\n        padding: 0;\n        padding-left: 24px;\n        .ant-collapse-arrow {\n            top: 5px;\n            left: 0;\n        }\n    }\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n        padding: var(--spacing-sm) 0 0 0;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\n\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tbody>\n                                <tr>\n                                    <th><b>{language['manager.template.header.field.label']}</b></th>\n                                    <th><b>{language['manager.template.header.value.label']}</b></th>\n                                </tr>\n                                {[\n                                    {\n                                        field: 'Format',\n                                        value: <div>\n                                            {[\n                                                'tcg',\n                                                'ocg',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Frame',\n                                        altField: 'Bottom Frame',\n                                        value: <div>\n                                            {frameList\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Attribute',\n                                        value: <div>\n                                            {[...AttributeList, ...ExtraAttributeList]\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Spell/Trap Icon',\n                                        value: <div>\n                                            {IconList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Sticker',\n                                        value: <div>\n                                            {StickerList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Foil',\n                                        value: <div>\n                                            {getFoilList()\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Card Finish',\n                                        value: <div>\n                                            {Object.values(FinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                            <div>{language['manager.template.description.joinable']}</div>\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Art Finish',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star Type',\n                                        value: <div>\n                                            {[\n                                                'number',\n                                                'text',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star Alignment',\n                                        value: <div>\n                                            {[\n                                                'left',\n                                                'center',\n                                                'right',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Card Icon Type',\n                                        value: <div>\n                                            {IconTypeList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Background Type',\n                                        value: <div>\n                                            {getBackgroundTypeList()\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Condense Rate',\n                                        value: <div>\n                                            {Object.keys(CondenseTolerantMap)\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style Type',\n                                        value: <div>\n                                            {[\n                                                'predefined',\n                                                'custom',\n                                            ].map(value => {\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                            })}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style - Font',\n                                        value: <div>\n                                            <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                        </div>,\n                                    },\n                                    {\n                                        field: 'Name Style - Preset',\n                                        value: <div>\n                                            {Object.keys(PresetNameStyleMap)\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Name Style - Pattern',\n                                        value: <div>\n                                            {PatternList\n                                                .filter(({ isOption }) => isOption)\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Pendulum Size',\n                                        value: <div>\n                                            {PendulumSizeList\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Attribute',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Background',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Icon',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Other Finish - Sticker',\n                                        value: <div>\n                                            {Object.values(ArtFinishMap)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Region',\n                                        value: <div>\n                                            {Object.values(RegionMap)\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Star List',\n                                        value: <div>\n                                            <div>{language['manager.template.description.star-list']}</div>\n                                            {Object\n                                                .values(TotalIconTypeMap)\n                                                .filter(({ isMixable }) => isMixable)\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Dye List',\n                                        value: <div>\n                                            <div>{language['manager.template.description.dye-list']}</div>\n                                            <ul>\n                                                {Object\n                                                    .entries(DyeIndexMap)\n                                                    .sort((l, r) => l[1] - r[1])\n                                                    .map(([key]) => <li key={key}>{language[FramePositionMap[key]?.labelKey ?? '']}</li>)}\n                                            </ul>\n                                        </div>\n                                    },\n                                    {\n                                        field: 'Flag',\n                                        value: <div>\n                                            <div>{language['manager.template.description.flag']}</div>\n                                            {FlagPresentationList\n                                                .map(({ sampleDisplay, index }) => <div key={index}>{sampleDisplay(language)}</div>)}\n                                        </div>\n                                    },\n                                ].map(({\n                                    field,\n                                    altField,\n                                    value,\n                                }) => {\n                                    return <tr key={field}>\n                                        <td>\n                                            <StyledMono>{field}</StyledMono>\n                                            {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                        </td>\n                                        <td>{value}</td>\n                                    </tr>;\n                                })}\n                            </tbody>\n                        </table>\n                    </Panel>\n                </Collapse>\n                \n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const exportFormat = useSetting(state => state.setting.exportFormat);\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const [savingFile, setSavingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            className=\"card-manager-panel\"\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                setSavingFile(true);\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    try {\n                                        const {\n                                            error,\n                                            value: csvdata,\n                                        } = cardListToCsv(useCardList.getState().cardList);\n\n                                        if (error) {\n                                            let errorMessage = '';\n                                            let errorDescription = '';\n                                            switch (error) {\n                                                case 'offline-data': {\n                                                    errorMessage = language['error.export.offline-data.message'];\n                                                    errorDescription = language['error.export.offline-data.description'];\n                                                    break;\n                                                }\n                                            }\n\n                                            if (errorMessage || errorDescription) {\n                                                notification.error({\n                                                    message: errorMessage,\n                                                    description: errorDescription,\n                                                });\n                                            }\n                                        }\n                                        switch (exportFormat) {\n                                            case 'xlsx': {\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\n                                                break;\n                                            }\n                                            default: {\n                                                downloadBlob(\n                                                    useCardList.getState().listName,\n                                                    new Blob([csvdata], { type: 'text/csv' }),\n                                                    'text/csv',\n                                                );\n                                            }\n                                        }\n                                        changeEditStatus('download');\n                                    } catch (e) {}\n                                }\n                                setSavingFile(false);\n                            }}\n                        >\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\n\n                                            /** Assume data from only the very first sheet */\n                                            /** 65001 codepage allow display unicode characters such as Japanese */\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setListName(fileName);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onActive={activeCard}\n                onDownload={onDownload}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\nimport { CardActionButton } from './component';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .save-button-tainted {\n        .alert-label {\n            flex: 1;\n            padding-top: var(--spacing-px);\n        }\n        .resolution-option {\n            position: relative;\n            border: none;\n            border-radius: var(--br-lg);\n            background: var(--main-primary);\n        }\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n            border-left: var(--bw) solid var(--sub-level-3);\n        }\n    }\n`;\n\nexport const CardPreviewContainer = styled.div`\n    position: relative;\n    display: block;\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\n    margin: var(--spacing);\n    margin-top: 0;\n    .reset-button,\n    .lightbox-button {\n        display: none;\n    }\n    #preview-canvas {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\n            scale(var(--resize-ratio))\n            translateZ(0);\n        &.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n    }\n`;\nexport const CardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled(CardActionButton)`\n    position: absolute;\n    z-index: 101;\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    InternalCard,\n    CanvasConst,\n    Card,\n    getDefaultCard,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n    ResolutionButton,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCardList,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { Dropdown, notification, Tooltip } from 'antd';\nimport { Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\nimport {\n    CardPreviewContainer,\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    CardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+b', 'command+b'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n        globalScale,\n        resolution,\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale, resolution } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n        globalScale,\n        resolution,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const [isInitializing, setInitializing] = useState(true);\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const [managerVisible, setManagerVisible] = useState(false);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<LightboxRef>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'StoneSerif-Italic',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const exportCardInList = useCallback((card: InternalCard) => {\n        const { id, ...exportableCard } = card;\n\n        exportData(undefined, false, exportableCard);\n    }, [exportData]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\n        if (crossorigin === 'anonymous') {\n            setTainted(false);\n            lightboxRef.current?.refresh();\n        }\n        setImageChangeCount(cnt => cnt + 1);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${\n                        process.env.PUBLIC_URL\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasHeight * globalScale}px`,\n                        '--card-width': `${CanvasWidth * globalScale}px`,\n                        '--global-scale': `${globalScale}`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                            <div className=\"imexport\">\n                                <ExportPanel ref={exportPanelRef}\n                                    tainted={isTainted}\n                                    artworkCanvas={artworkCanvasRef.current}\n                                    onRequireExportData={exportData}\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\n                                    onClose={forceRefocus}\n                                />\n                                <div />\n                                <ImportPanel ref={importPanelRef}\n                                    onImport={treatNewCard}\n                                    onClose={forceRefocus}\n                                    allowHotkey={allowHotkey}\n                                    language={language}\n                                />\n                            </div>\n                            <BatchConverter language={language} />\n                            <DownloadButton ref={downloadButtonRef}\n                                canvasMap={canvasMap}\n                                imageChangeCount={imageChangeCount}\n                                isTainted={isTainted}\n                                isInitializing={isInitializing}\n                                globalScale={globalScale}\n                                onDownloadError={alertDownloadError}\n                            />\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\n                                <div className=\"alert-label\">\n                                    {language['alert.download.tainted-first-line']}<br />\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\n                                </div>\n                                <Dropdown\n                                    className=\"save-button-dropdown\"\n                                    placement=\"bottomRight\"\n                                    overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n                                >\n                                    <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                                        <GatewayOutlined className=\"resolution-icon\" />\n                                        <span className=\"resolution-overlay\">{resolution[1]}</span>\n                                    </ResolutionButton>\n                                </Dropdown>\n                            </div>}\n                        </StyledDataButtonPanelContainer>\n                        <CardPreviewContainer className=\"card-preview-container\">\n                            <Tooltip title={language['button.reset.tooltip']}>\n                                <ResetButton\n                                    className=\"reset-button\"\n                                    onClick={() => {\n                                        const consent = window.confirm(language['prompt.reset.message']);\n\n                                        if (consent) {\n                                            const { setCard, card } = useCard.getState();\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\n                                            const contextualDefaultCardData = card.format === 'tcg'\n                                                ? defaultCard\n                                                : changeCardFormat(defaultCard, 'ocg');\n\n                                            setCard(contextualDefaultCardData, true);\n                                            setImageChangeCount(cnt => cnt + 1);\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                        }\n                                    }}\n                                >\n                                    <ClearOutlined />\n                                </ResetButton>\n                            </Tooltip>\n                            <Tooltip title={<div className=\"center\">\n                                {language['button.full-size.label']}\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\n                            </div>}>\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                    <ZoomInOutlined />\n                                </LightboxButton>\n                            </Tooltip>\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\n                             */}\n                            <canvas\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\n                                id=\"preview-canvas\"\n                                ref={previewCanvasRef}\n                                width={CanvasWidth}\n                                height={CanvasHeight}\n                            />\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\n                                <canvas\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\n                                    id=\"export-canvas\"\n                                    ref={exportCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                </div>\n                                <canvas id=\"frameCanvas\"\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\n                                    ref={frameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"nameCanvas\"\n                                    ref={nameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={148 * globalScale}\n                                />\n                                <canvas id=\"cardIconCanvas\"\n                                    ref={cardIconCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={222 * globalScale}\n                                />\n                                <canvas id=\"pendulumScaleCanvas\"\n                                    ref={pendulumScaleCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={920 * globalScale}\n                                />\n                                <canvas id=\"pendulumEffectCanvas\"\n                                    ref={pendulumEffectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={920 * globalScale}\n                                />\n                                <canvas id=\"typeCanvas\"\n                                    ref={typeCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"effectCanvas\"\n                                    ref={effectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"statCanvas\"\n                                    ref={statCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"setIdCanvas\"\n                                    ref={setIdCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"passwordCanvas\"\n                                    ref={passwordCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"creatorCanvas\"\n                                    ref={creatorCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"stickerCanvas\"\n                                    ref={stickerCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"finishCanvas\"\n                                    ref={finishCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={artworkCanvasRef}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={backgroundCanvasRef}\n                                />\n                            </CardCanvasGroupContainer>\n                        </CardPreviewContainer>\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onDownload={exportCardInList}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Lightbox\n                    ref={lightboxRef}\n                    globalScale={globalScale}\n                />\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}