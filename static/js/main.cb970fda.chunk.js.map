{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/compatible-card.tsx","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/imgur.ts","util/navigation.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","page/canvas-panel/batch-converter.tsx","page/canvas-panel/download-button.tsx","component/error-boundary/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/setting/index.tsx","component/app-header/index.tsx","component/atom.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/index.tsx","util/hook.ts","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","util/random.ts","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","topToPendulumStructure","topToArtFrame","pendulumStructureHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","_objectSpread","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","concat","process","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","FoilNameMap","getFoilList","DefaultFontSizeData","bulletSymbolOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontDeviation","yOffset","yRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","EffectFontData","bulletSymbolWidth","fontSize","lineHeight","lineCount","TCGVanillaTypeStatFontList","wordLetterSpacing","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","fontData","letterDeviationMap","i","ì","í","î","ï","ĩ","ī","ĭ","į","ǐ","ȉ","ȋ","ɨ","ɩ","ᵹ","ᵼ","ᶖ","ḭ","ḯ","ỉ","ị","I","Ì","Í","Î","Ï","Ĩ","Ī","Ĭ","Į","İ","Ɩ","Ɨ","Ǐ","Ȉ","Ȋ","Ḭ","Ḯ","Ỉ","Ị","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionList","top","left","LinkRotateList","LinkIndentList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","checkXyz","card","checkSpeedSkill","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","e","n","substring","length","split","r","pop","JSONCrushSwap","arguments","undefined","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","Array","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","clone","kanjiHelper","checkYgoCarderCard","object","console","error","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","Math","abs","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","blob","document","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","zarc","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","_ref","rarity","rest","level","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","frameType","monster_desc","pend_desc","race","scale","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","slice","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","style","size","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","this","setStyle","nextStyle","setSize","nextSize","calculatedSize","setFamily","nextFamily","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","index","uploadToImgur","async","myHeaders","Headers","append","formdata","FormData","imgLink","fetch","method","headers","redirect","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","floor","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","_termMap$entry","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","children","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","scaleType","useI18N","create","set","get","defaultLanguageName","url","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","languageName","_languageMap$eng","response","languageData","json","Error","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","data","normalizeBoolean","fallback","normalizedValue","normalizeInt","isFinite","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","row","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader$split$filter","_reader11","_reader12","_reader13","_reader14","_ref4","_reader15","_reader16","_reader17","_ref5","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","rawTypeAbility","effectUpSize","pendulumEffectUpSize","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader34","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","cnt","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","status","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","current","_e$target","target","variantConfig","useSetting","resolution","allowHotkey","reduceMotionColor","showCreativeOption","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","useCallback","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","getContext","clonedCanvasContext","drawImage","click","classList","useEffect","relevant","setTimeout","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB4","_document$getElementB5","_document$getElementB6","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","add","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","ctx","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","option","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","Promise","resolve","finishType","finishInformation","_partInstructionMap$n","instructionList","globalCompositeOperation","globalAlpha","DEFAULT_SHADOW_OFFSET_X","DEFAULT_SHADOW_OFFSET_Y","DEFAULT_SHADOW_BLUR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","imageCacheMap","drawFrom","source","sx","sy","_imageCacheMap$source","_imageCacheMap$source2","ready","normalizedX","normalizedY","imageCached","cache","Image","once","drawAsset","drawAssetWithSize","dw","dh","_imageCacheMap$source3","_imageCacheMap$source4","normalizedW","normalizedH","drawFromWithSize","drawWithStyle","canvas","dx","dy","sw","sh","clonedCtx","willReadFrequently","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","deviation","letterMetric","textDrawer","deviationYOffset","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","tokenizeText","keepControlCharacter","regex","getTextWorker","fontSizeData","fontController","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","PI","fill","strokeStyle","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","round","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","_fullLineList$length","content","isNormal","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","effectSizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","_flavorConditionRegex","wholeLineRegex","materialReplacement","material","_wholeLineRegex$exec","_wholeLineRegex$exec2","exec","flavorConditionRegex","potentialFlavorConditionText","splitEffect","_CondenseTolerantMap$","_sizeList$effectSizeL","_tolerancePerSentence","tolerancePerSentence","trueWidthStart","trueBaselineStart","lineListWithRatio","resetStyle","flavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","pendulumSize","isSpeedSkill","isXyz","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","drawFrame","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","drawStar","normalizedCardIcon","onStarDraw","normalizedStarCount","leftEdge","resetShadow","all","starWidth","coordinate","drawStarContent","drawPendulumScaleIcon","drawLinkArrowMap","isActive","baseLink","activeLink","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","withBorder","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","cloneCtx","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","hasDefaultOutline","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","actualBoundingBoxAscent","actualBoundingBoxDescent","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","cx","cy","AD","sqrt","FDA","asin","AF","sin","AL","FL","cos","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","lineJoin","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","drawScale","digitScaleRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkLink","isMonster","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","statInEffect","typeInEffect","imageChangeCount","readyToDraw","_frameCanvasRef$curre","_resolvedStatTextStyl","fillBaseColor","w","h","hasArtBorder","artHeight","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","endOfPassword","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","isNumberPassword","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","drawSticker","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","normalizedUpSize","effectIndexSize","coordinateKey","fontDataKey","getEffectFontAndCoordinate","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","naturalWidth","drawTypeAbility","_pendulumEffectCanvas","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","exportCtx","generateLayer","canvasLayer","delayQueue","toBlob","layer","onload","revokeObjectURL","onerror","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","catch","StyledBatchConverterModal","Modal","BatchConverter","setVisible","useState","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","_templateObject2","StyledDownloadButton","Button","_templateObject3","DownloadButton","forwardRef","ref","useShallow","isDownloading","setDownloading","useImperativeHandle","Dropdown","placement","domEvent","MenuOutlined","ErrorBoundary","Component","constructor","super","hasError","componentDidCatch","Sentry","componentStack","render","Explanation","overlayClassName","iconProps","restIconProps","Popover","ExclamationCircleOutlined","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","div","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","$softMode","css","_templateObject4","SettingButton","trigger","Checkbox","checked","SettingFilled","Affiliation","rel","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","BugOutlined","DatabaseFilled","TaintedCanvasWarning","StyledCode","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","footer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","InputTrainStyle","StyledRadioTrainContainer","UnrefRadioTrain","activeValue","optionList","suffix","internalRef","_internalRef$current","isChecked","RadioTrain","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setLoading","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","TextArea","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","loading","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","imgurResponse","imgurResponseData","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","rows","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","Number","AnglePicker","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","_templateObject5","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","setType","customStyleSignal","sendCustomStyleSignal","useRefresh","setCnt","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","_shadowPickeRef$curre","_outlinePickeRef$curr","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","changeFrame","frameValue","nextFrame","isST","newTypeAbility","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","isDarkSynchro","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","SyncOutlined","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","_postPendulumInputGro3","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","onDownload","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","CopyOutlined","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","_listUploadRef$curren","announceError","willImport","arrayBuffer","workbook","XLSX","read","csvBook","utils","sheet_to_json","Sheets","SheetNames","LoadingOutlined","maskClosable","mask","forceRender","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","StyledCardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","_templateObject6","LightboxButton","_templateObject7","ResetButton","_templateObject8","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","canvasKey","setCanvasKey","lightboxVisible","setLightboxVisible","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","ZoomInOutlined","onContextMenu","_importPanelRef$curre3","wrapClassName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,gCAGLG,EAAoBL,EAAmBM,QAAO,CAACC,EAAKC,KAC7DD,EAAIC,EAAIP,WAAaO,EACdD,IACR,ICpiCGE,EAA8C,CAAC,CAAEnC,UAAW,UAAWtE,QAAS,IAChF0G,EAA8C,CAChD,CAAEpC,UAAW,UAAWtE,QAAS,KACjC,CAAEsE,UAAW,WAAYtE,QAAS,MAUzB2G,EAA+C,CACxDpC,MAAO,CACHvH,MAAO,QACPC,MAAO,IACP2J,mBAAoB,IAExBpC,MAAO,CACHxH,MAAO,QACPC,MAAO,IACP2J,mBAAoB,IAExBnC,MAAO,CACHzH,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChB,cAAeH,EACf,aAAcA,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,UAAaA,EACb,MAASA,IAGjB/B,MAAO,CACH1H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,IAExBjC,MAAO,CACH3H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,IAExB/B,MAAO,CACH7H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,IAExB9B,MAAO,CACH9H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChB,gBAAiB,CAAC,CAAEtC,UAAW,SAAUtE,QAAS,MAAS,CAAEsE,UAAW,cAAetE,QAAS,SAGxG+E,MAAO,CACH/H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChB,aAAcF,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,MAASA,EACT,mBAAoBA,EACpB,KAAQA,EACR,KAAQA,IAGhB1B,MAAO,CACHhI,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChB,gBAAiB,CAAC,CAAEtC,UAAW,SAAUtE,QAAS,SAKjD6G,EAAkD,CAC3DtC,MAAO,CACHvH,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CAAC,MAGdtC,MAAO,CACHxH,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CACD,CAAE9G,QAAS,IAAMsE,UAAW,UAC5B,CAAEtE,QAAS,IAAMsE,UAAW,eAC5B,CAAEtE,QAAS,IAAMsE,UAAW,eAIxCG,MAAO,CACHzH,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CAAC,CAAE9G,QAAS,IAAMsE,UAAW,eAAiB,CAAEtE,QAAS,IAAMsE,UAAW,eAGvFI,MAAO,CACH1H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CAAC,CAAE9G,QAAS,IAAMsE,UAAW,eAAiB,CAAEtE,QAAS,GAAKsE,UAAW,eAGtFK,MAAO,CACH3H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CAAC,CAAE9G,QAAS,IAAMsE,UAAW,eAAiB,CAAEtE,QAAS,GAAKsE,UAAW,eAGtFO,MAAO,CACH7H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CAAC,CAAE9G,QAAS,IAAMsE,UAAW,eAAiB,CAAEtE,QAAS,GAAKsE,UAAW,eAGtFQ,MAAO,CACH9H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CAAC,OAULC,EAAc,CACvBnI,OAAQ,SACRgF,KAAM,OACNL,SAAU,YAEDyD,EAAejK,GAAgC,CACxD,CACIuB,KAAMyI,EAAoB,OAC1B9J,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAY6B,OACnB2B,MAAO,UACPE,UAAU,GAEd,CACInC,KAAMyI,EAAkB,KACxB9J,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAY6G,KACnBrD,MAAO,UACPE,UAAU,GAEd,CACInC,KAAMyI,EAAsB,SAC5B9J,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYwG,SACnBhD,MAAO,UACPE,UAAU,ICnILwG,EAAsB,CAC/BC,mBAAoB,EACpBC,mBAAoB,EACpBC,kBAAmB,KACnBC,gBAAiB,IACjBC,iBAAkB,KAClBC,cAAe,EACfC,QAAS,EACTC,oBAAqB,EACrBC,iBAAkB,EAAI,IACtBC,mBAAoB,GAQXC,EAAgD,CACzDC,QAAS,EACTC,OAAQ,GA4BCC,EAAkB,CAC3BC,oBAAqB,GACrBC,iBAAkB,SAClBC,cAAc,EACdC,iBAAkB,QAQhBC,EAAwB,CAC1BC,aAAc,0BACdC,aAAc,2BACdlB,kBAAmB,GACnBY,oBAAqB,KACrBO,YAAa,sBACbC,WAAY,SACZC,gBAAiB,EACjBN,iBAAkB,GAEhBO,EAAkCxI,wBAAA,GACjCkI,GAAqB,IACxBvF,KAAM,aACNmF,oBAAqB,IACrBW,UAAW,MACXC,SAAU,KAEDC,EAAkC3I,wBAAA,GACxCkI,GAAqB,IACxBvF,KAAM,qBACNmF,oBAAqB,IACrBW,UAAW,MACXC,SAAU,KAERE,EAAkC5I,wBAAA,GACjCkI,GAAqB,IACxBvF,KAAM,0BACN8F,UAAW,MACXI,aAAc,UACdH,SAAU,KAKDI,EAA2C,CACpD,IAAK9I,wBAAA,GACEwI,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,GAC7F,CAAE+B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,MAAOC,UAAW,OAGhF,WAAUlJ,wBAAA,GACHwI,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,GAC7F,CAAE+B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,MAG9E,gBAAelJ,wBAAA,GACRwI,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,GAC7F,CAAE+B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,GAC7F,CAAE+B,kBAAmB,GAAIC,SAAU,GAAMC,WAAY,GAAMC,UAAW,GAAIlC,mBAAoB,MAGtG,WAAUhH,wBAAA,GACHwI,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,GAC7F,CAAE+B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,MAG9E,IAAKlJ,wBAAA,GACE4I,GAAwB,IAC3BF,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAE6B,kBAAmB,GAAIC,SAAU,GAAIC,WAAY,GAAIC,UAAW,GAClE,CAAEH,kBAAmB,GAAIC,SAAU,GAAIC,WAAY,GAAIC,UAAW,MAG1E,WAAUlJ,wBAAA,GACH4I,GAAwB,IAC3BF,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAE6B,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,MAG/E,gBAAelJ,wBAAA,GACR4I,GAAwB,IAC3BF,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAE6B,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,MAG/E,WAAUlJ,wBAAA,GACH4I,GAAwB,IAC3BF,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGlC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAE6B,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,OAKtEC,EAA6C,CACtD,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,EAAGE,mBAAoB,KAC9F,CAAEL,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,GAAMC,UAAW,KAG9DG,EAAmD,CAC5D/D,IAAGtF,wBAAA,GACIwI,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,EAAGlC,mBAAoB,GAC9F,CAAE+B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,EAAGlC,mBAAoB,GAC9F,CAAE+B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,MAG/EvD,IAAG3F,wBAAA,GACI4I,GAAwB,IAC3BF,SAAU,CACN,CACIK,kBAAmB,GACnB/B,mBAAoB,EACpBgC,SAAU,MACVC,WAAY,KACZ/B,kBAAmB,GACnBgC,UAAW,GAEf,CACIH,kBAAmB,GACnB/B,mBAAoB,EACpBgC,SAAU,MACVC,WAAY,KACZ/B,kBAAmB,GACnBgC,UAAW,GAEf,CACIH,kBAAmB,GACnB/B,mBAAoB,EACpBgC,SAAU,MACVC,WAAY,KACZ/B,kBAAmB,IACnBgC,UAAW,GAEf,CACIH,kBAAmB,GACnBC,SAAU,MACVC,WAAY,KACZ/B,kBAAmB,GACnBgC,UAAW,OAOdI,GAAoE,CAC7EC,WAAY,CACR,EAAK,IACL,EAAK,IACL,EAAK,KAETC,OAAQ,CACJ,EAAK,IACL,EAAK,IACL,EAAK,KAETC,MAAO,CACH,EAAK,IACL,EAAK,IACL,EAAK,KAETC,UAAW,CACP,EAAK,IACL,EAAK,IACL,EAAK,KAETC,QAAS,CACL,EAAK,IACL,EAAK,IACL,EAAK,MC7RAC,GAAqE,CAC9EC,QAAS,CACL/M,MAAO,UACPiE,SAAU,qCACV+I,SAAU,CACN3B,aAAc,yBACdxF,KAAM,yBACNyF,aAAc,2BACdC,YAAa,sBACbI,UAAW,MACXH,WAAY,SACZC,gBAAiB,KACjBT,oBAAqB,IACrBY,SAAU,CAAC,CACPK,kBAAmB,GACnBC,SAAU,KACV9B,kBAAmB,IACnBG,cAAe,KACf6B,UAAW,EACXD,WAAY,KACZ3B,QAAS,IAEbyC,mBAAoB,CAChBC,EAAG,CAAErC,QAAS,EAAGC,OAAQ,MACzBqC,OAAG,CAAEtC,QAAS,EAAGC,OAAQ,MACzBsC,OAAG,CAAEvC,QAAS,EAAGC,OAAQ,MACzBuC,OAAG,CAAExC,QAAS,EAAGC,OAAQ,MACzBwC,OAAG,CAAEzC,QAAS,EAAGC,OAAQ,MACzByC,SAAG,CAAE1C,QAAS,EAAGC,OAAQ,MACzB0C,SAAG,CAAE3C,QAAS,EAAGC,OAAQ,MACzB2C,SAAG,CAAE5C,QAAS,EAAGC,OAAQ,MACzB4C,SAAG,CAAE7C,QAAS,EAAGC,OAAQ,MACzB6C,SAAG,CAAE9C,QAAS,EAAGC,OAAQ,MACzB8C,SAAG,CAAE/C,QAAS,EAAGC,OAAQ,MACzB+C,SAAG,CAAEhD,QAAS,EAAGC,OAAQ,MACzBgD,SAAG,CAAEjD,QAAS,EAAGC,OAAQ,MACzBiD,SAAG,CAAElD,QAAS,EAAGC,OAAQ,MACzBkD,SAAG,CAAEnD,QAAS,EAAGC,OAAQ,MACzBmD,SAAG,CAAEpD,QAAS,EAAGC,OAAQ,MACzBoD,SAAG,CAAErD,QAAS,EAAGC,OAAQ,MACzBqD,SAAG,CAAEtD,QAAS,EAAGC,OAAQ,MACzBsD,SAAG,CAAEvD,QAAS,EAAGC,OAAQ,MACzBuD,SAAG,CAAExD,QAAS,EAAGC,OAAQ,MACzBwD,SAAG,CAAEzD,QAAS,EAAGC,OAAQ,MACzByD,EAAG,CAAE1D,QAAS,EAAGC,OAAQ,OACzB0D,OAAG,CAAE3D,QAAS,EAAGC,OAAQ,OACzB2D,OAAG,CAAE5D,QAAS,EAAGC,OAAQ,OACzB4D,OAAG,CAAE7D,QAAS,EAAGC,OAAQ,OACzB6D,OAAG,CAAE9D,QAAS,EAAGC,OAAQ,OACzB8D,SAAG,CAAE/D,QAAS,EAAGC,OAAQ,OACzB+D,SAAG,CAAEhE,QAAS,EAAGC,OAAQ,OACzBgE,SAAG,CAAEjE,QAAS,EAAGC,OAAQ,OACzBiE,SAAG,CAAElE,QAAS,EAAGC,OAAQ,OACzBkE,SAAG,CAAEnE,QAAS,EAAGC,OAAQ,OACzBmE,SAAG,CAAEpE,QAAS,EAAGC,OAAQ,OACzBoE,SAAG,CAAErE,QAAS,EAAGC,OAAQ,OACzBqE,SAAG,CAAEtE,QAAS,EAAGC,OAAQ,OACzBsE,SAAG,CAAEvE,QAAS,EAAGC,OAAQ,OACzBuE,SAAG,CAAExE,QAAS,EAAGC,OAAQ,OACzBwE,SAAG,CAAEzE,QAAS,EAAGC,OAAQ,OACzByE,SAAG,CAAE1E,QAAS,EAAGC,OAAQ,OACzB0E,SAAG,CAAE3E,QAAS,EAAGC,OAAQ,OACzB2E,SAAG,CAAE5E,QAAS,EAAGC,OAAQ,UAIrC4E,MAAO,CACH1P,MAAO,QACPiE,SAAU,mCACV+I,SAAU,CACN3B,aAAc,QACdxF,KAAM,QACNyF,aAAc,2BACdC,YAAa,sBACbI,UAAW,MACXH,WAAY,SACZC,gBAAiB,KACjBT,oBAAqB,KACrB2E,OAAQ,OACR/D,SAAU,CAAC,CACPK,kBAAmB,MACnBC,SAAU,GACV9B,kBAAmB,IACnBG,eAAgB,IAChB6B,UAAW,EACXD,WAAY,GACZ3B,QAAS,MAIrBoF,IAAK,CACD5P,MAAO,MACPiE,SAAU,iCACV+I,SAAU,CACN3B,aAAc,0BACdxF,KAAM,0BACNyF,aAAc,2BACdN,oBAAqB,KACrBC,iBAAkB,WAClBC,cAAc,EACda,aAAc,OACd8D,WAAY,oBACZC,gBAAiB,EACjBvE,YAAa,sBACbC,WAAY,SACZC,gBAAiB,KACjBE,UAAW,MACXC,SAAU,CAAC,CACPK,kBAAmB,MACnBC,SAAU,GACV9B,kBAAmB,KACnBC,gBAAiB,EACjBE,eAAgB,IAChB6B,UAAW,EACXD,WAAY,GACZ3B,QAAS,OCvEZuF,GAA4C,CACrDvH,IAlDwC,CACxC3C,KAAM,sBACNwF,aAAc,sBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACIpB,SAAU,EACVyB,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX7B,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACI2B,kBAAmB,MACnBC,SAAU,GACVC,WAAY,GACZC,UAAW,EACX7B,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,QAyB1BzB,IArBwC,CACxChD,KAAM,oBACNwF,aAAc,oBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdS,aAAc,UACdJ,UAAW,MACXC,SAAU,CAAC,CACPK,kBAAmB,GACnBC,SAAU,GACV3B,cAAe,IACf4B,WAAY,KACZC,UAAW,EACXhC,kBAAmB,EACnBkC,kBAAmB,QAsEd0D,GAA6C,CACtDxH,IA/DyC,CACzC3C,KAAM,sBACNwF,aAAc,sBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACIK,kBAAmB,MACnBC,SAAU,OACVC,WAAY,OACZC,UAAW,EACX7B,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACI2B,kBAAmB,MACnBC,SAAU,GACVC,WAAY,GACZC,UAAW,EACX7B,cAAe,EACfH,kBAAmB,GACnBE,iBAAkB,KAClBE,QAAS,KAsCjB3B,IAlCyC,CACzChD,KAAM,oBACNwF,aAAc,oBACdwE,WAAY,sBACZrE,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXI,aAAc,WACdH,SAAU,CACN,CACIK,kBAAmB,MACnBC,SAAU,OACVC,WAAY,OACZC,UAAW,EACX7B,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACI2B,kBAAmB,MACnBC,SAAU,GACV9B,kBAAmB,EACnBE,iBAAkB,KAClB8B,UAAW,EACXD,WAAY,KACZ1B,mBAAoB,EACpBC,iBAAkB,SASjBuF,GAAmC,CAC5CpK,KAAM,yBACNwF,aAAc,yBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,yBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACIK,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX8D,gBAAiB,GACjB/F,mBAAoB,IACpBI,cAAe,IACfH,kBAAmB,IAEvB,CACI6B,kBAAmB,KACnBC,SAAU,MACVC,WAAY,MACZC,UAAW,EACX8D,gBAAiB,GACjB/F,mBAAoB,IACpBI,eAAgB,IAChBH,kBAAmB,IAEvB,CACI6B,kBAAmB,KACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX8D,gBAAiB,GAEjB/F,mBAAoB,OACpBQ,mBAAoB,OACpBJ,eAAgB,IAChBH,kBAAmB,MAIlB+F,GAAmC,CAC5CtK,KAAM,0BACNwF,aAAc,0BACdG,WAAY,SACZC,gBAAiB,GACjBT,oBAAqB,KACrBO,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACIK,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX8D,gBAAiB,GACjB9F,kBAAmB,IAEvB,CACI6B,kBAAmB,KACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX8D,gBAAiB,GACjB9F,kBAAmB,IAEvB,CACI6B,kBAAmB,KACnBC,SAAU,GACVC,WAAY,GACZC,UAAW,EACX8D,gBAAiB,GACjB9F,kBAAmB,IACnBC,gBAAiB,EACjBE,eAAgB,IAChBI,mBAAoB,WCxMnByF,GAA4C,CACrrtD,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,UAICC,GAAe,CACxB1H,IAAK,CACD,+HACA,wGACA,wDAEJL,IAAK,CACD,kDACA,4BACA,oCAKKgI,GAA0C,CAEnD,eAAM,OACN,eAAM,QACN,2BAAQ,gBACR,2BAAQ,cACR,uCAAU,UACV,qBAAO,WACP,2BAAQ,eACR,iCAAS,SACT,qBAAO,QACP,qBAAO,QACP,eAAM,OACN,6CAAW,SACX,2BAAQ,WACR,qBAAO,SACP,qBAAO,UACP,qBAAO,QACP,uCAAU,UACV,eAAM,OACN,2BAAQ,UACR,qBAAO,OACP,qBAAO,cACP,iCAAS,cACT,eAAM,UACN,qBAAO,UACP,qBAAO,eACP,qBAAO,OACP,uCAAU,SACV,uCAAU,SACV,iCAAS,oBACT,6CAAW,cACX,iCAAS,iBACT,yDAAa,gBAEb,iCAAS,UACT,iCAAS,aACT,2BAAQ,YACR,iCAAS,SAET,eAAM,SACN,eAAM,SACN,eAAM,SACN,uCAAU,SACV,eAAM,SACN,2BAAQ,UACR,iCAAS,MACT,uCAAU,WACV,qBAAO,OACP,iCAAS,UACT,2BAAQ,QACR,2BAAQ,iBACR,2EAAgB,eAEhB,iCAAS,QACT,2BAAQ,SACR,2BAAQ,OACR,2BAAQ,OACR,iCAAS,SACT,2BAAQ,QAER,CAACD,GAAa1H,IAAI,IAAK0H,GAAa/H,IAAI,GACxC,CAAC+H,GAAa1H,IAAI,IAAK0H,GAAa/H,IAAI,GACxC,CAAC+H,GAAa1H,IAAI,IAAK0H,GAAa/H,IAAI,GAExC,6CAAgB,QAChB,o5CAGA,+GAAsB,sCAEtB,gQAA+C,gFAEtCiI,GAAkB/L,OAAOgM,QAAQF,IAAiBlH,QAAO,CAACC,EAAKC,KACxE,MAAOmH,EAASC,GAAWpH,EAG3B,OAFAD,EAAIqH,GAAWD,EAERpH,IACR,CAEC,oFAAgF,kQCvUvEsH,GAA0C,CACnD,OAAU,CACNvP,KAAM,SACNgC,QAAS,qBACTwN,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,KAEhB,OAAU,CACN3P,KAAM,SACNgC,QAAS,qBACTwN,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACN3P,KAAM,SACNgC,QAAS,qBACTwN,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,QAAW,CACP3P,KAAM,UACNgC,QAAS,sBACTwN,WAAY,OACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,IAAO,CACH3P,KAAM,MACNgC,QAAS,kBACTwN,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,KAAQ,CACJ3P,KAAM,OACNgC,QAAS,mBACTwN,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACN3P,KAAM,SACNgC,QAAS,qBACTwN,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,MAAS,CACL3P,KAAM,QACNgC,QAAS,oBACTwN,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,KAAQ,CACJ3P,KAAM,OACNgC,QAAS,mBACTwN,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,MAAS,CACL3P,KAAM,QACNgC,QAAS,oBACTwN,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,GAEhB,eAAgB,CACZ3P,KAAM,eACNgC,QAAS,2BACTwN,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,IAEhB,QAAW,CACP3P,KAAM,UACNgC,QAAS,sBACTwN,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACN3P,KAAM,SACNgC,QAAS,qBACTwN,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,GAAM,CACF3P,KAAM,KACNgC,QAAS,iBACTwN,WAAY,OACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,OAAU,CACN3P,KAAM,SACNgC,QAAS,qBACTwN,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,KAAQ,CACJ3P,KAAM,OACNgC,QAAS,mBACTwN,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,MAAS,CACL3P,KAAM,QACNgC,QAAS,oBACTwN,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,YAAa,CACT3P,KAAM,YACNgC,QAAS,wBACTwN,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,cAAe,CACX3P,KAAM,cACNgC,QAAS,0BACTwN,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,KAAQ,CACJ3P,KAAM,OACNgC,QAAS,mBACTwN,WAAY,OACZC,QAAS,YACTG,yBAA0B,CACtB,qBACA,qBACA,sBACA,iBAEJC,qBAAqB,0BAAD5M,OAA4B,CAC5C,yBACA,yBACA,yBACA,0BACA,0BACA,qBACF6M,KAAK,MAAK,KACZH,WAAY,IAGPI,GAAY3M,OAAOC,OAAOkM,ICzL1BS,GAAoB,CAC7B,CAAEC,IAAK,IAAKC,KAAM,GAAIlR,MAAO,IAAKC,OAAQ,KAC1C,CAAEgR,IAAK,IAAKC,KAAM,IAAKlR,MAAO,IAAKC,OAAQ,IAC3C,CAAEgR,IAAK,IAAKC,KAAM,IAAKlR,MAAO,IAAKC,OAAQ,KAC3C,CAAEgR,IAAK,IAAKC,KAAM,GAAIlR,MAAO,GAAIC,OAAQ,KACzC,CAAEgR,IAAK,EAAGC,KAAM,EAAGlR,MAAO,EAAGC,OAAQ,GACrC,CAAEgR,IAAK,IAAKC,KAAM,IAAKlR,MAAO,GAAIC,OAAQ,KAC1C,CAAEgR,IAAK,IAAKC,KAAM,GAAIlR,MAAO,IAAKC,OAAQ,KAC1C,CAAEgR,IAAK,IAAKC,KAAM,IAAKlR,MAAO,IAAKC,OAAQ,IAC3C,CAAEgR,IAAK,IAAKC,KAAM,IAAKlR,MAAO,IAAKC,OAAQ,MAElCkR,GAAiB,EAAE,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,KACrDC,GAAiB,EAAE,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,ICPzDC,GAAqB,IAAIC,OADD,sBAIxBC,GAA2B,IAAID,OADP,wBAGxBE,GAAoB,8IACpBC,GAAiB,IAAIH,OAAOE,IAE5BE,GAAqB,IAAIJ,OAAO,cAADrN,OAAeuN,GAAiB,QAK/DG,GAAe,SACfC,GAAgB,SAChBC,GAAe,SACfC,GAAgB,SAChBC,GAAwB,SACxBC,GAAsB,SAEtBC,GAAqB,IAAIX,OAAO,IAADrN,OAAK,CAC7C0N,GACAC,GACAC,GACAC,GACAC,GACAC,IACFlB,KAAK,IAAG,iBAAiB,KAEdoB,GAA2B,GAAAjO,OAAM0N,GAAY,KAAA1N,OAAI2N,IACjDO,GAA0B,IAAIb,OAAOY,IAGrCE,GAAuB,kGAAAnO,OAAqG0N,GAAY,uBAAA1N,OAAsB2N,GAAa,WAK3KS,GAAuB,IAAIf,OAAO,IAADrN,OADX,iBACmC,MAEzDqO,GAAyB5J,EAAmB6J,KAAIC,IAAK,IAAAC,EAAA,OAAmB,QAAnBA,EAAID,EAAM3J,iBAAS,IAAA4J,IAAID,EAAM7J,aAAWmI,KAAK,KAClG4B,GAAkB,IAAAzO,OAAOqO,GAAsB,eAE/CK,GAAwB,iRACxBC,GAAe,IAAItB,OAAO,IAADrN,OAAK0O,GAAqB,MAGnDE,GAAwB,KAAA5O,OAAQ0O,GAAqB,8LAMrDG,GAAuB,IAAIxB,OADD,yBAI1ByB,GAAmB,IAAIzB,OADD,gCAGtB0B,GAAiB,IAAI1B,OAAO,mBAC5B2B,GAAc,IAAI3B,OAAO,SAEzB4B,GAAgB,icAEhBC,GAAgB,ydAEhBC,GAAc,IAAI9B,OAAO,YACzB+B,GAAe,IAAI/B,OAAO,YAC1BgC,GAAe,IAAIhC,OAAO,YAG1BiC,GAA+B,IAAIjC,OAAO,IAADrN,OADT,SACkD,MAGlFuP,GAAyB,IAAIlC,OAAO,IAADrN,OADX,eAC4C,MAGpEwP,GAAwB,IAAInC,OAAO,IAADrN,OADV,SAC2C,MAEnEyP,GAAuC,CAChD,UAAM,GACN,UAAM,GACN,SAAK,EACL,SAAK,EACL,SAAK,EACL,IAAK,IACL,KAAM,KAEGC,GAAiD,CAC1D,UAAM,GACN,UAAM,KAEGC,GAAgD,CACzD,IAAK,KACL,IAAK,MAEIC,GAAuC,GAIvCC,GAAiD,GAEjDC,GAAgD,GAQhDC,GAAoBC,GAA8B,QAAXA,EAAmB,EAAI,EAK9DC,GAAa,YAIbC,GAAmB,UAGnBC,IAAuB,KC7GvBC,GAAiBA,KAAA,CAC1BC,QAAS,EACTL,OAAQ,MACRnU,MAAO,SACPyU,KAAM,SACN7R,QAAS9B,IACT4T,OAAQ,GACRC,UAAW,SACXzT,KAAM,QACN0T,cAAe,OACfC,UZzB+B,CAC/BpP,KAAM,UACNN,UAAW,UACX2P,kBAAmB,UACnB1O,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,QYQTkQ,UAAW,QACXC,UAAW1R,EACX2R,SAAU,OACVC,KAAM,EACNC,cAAe,OACfzL,IAAK,kCACL0L,QAAS,GACTC,QAAQ,EACRC,UAAW,SACXC,QA9B0B,CAC1BC,EAAG,EACHC,EAAG,EACHvV,MAAO,IACPC,OAAQ,KACRuV,KAAM,IACNC,OAAQ,GAyBRC,eAAe,EACfC,WAAY,GACZC,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClBnT,eAAgB,MAChBoT,eArC0B,CAC1BT,EAAG,EACHC,EAAG,EACHvV,MAAO,IACPC,OAAQ,KACRuV,KAAM,IACNC,OAAQ,GAgCRO,QAAS,CACL,IACA,IACA,IACA,KAEJC,QAAQ,EACRxT,YAAY,EACZyT,cAAe,OACfC,eAAgB,+EAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,YAAa,CACT,QACA,SACA,UAEJC,YAAa,CACTC,iBAAkB,SAClBC,OAAQ,GAEZC,cAAe,CACXD,OAAQ,GAEZE,OAAO,oTAEPC,MAAO,aACPC,IAAK,OACLC,IAAK,OACLC,SAAU,WACVC,QAAS,QACTC,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EACdC,QAAS,kDACTC,gBAAgB,EAChBC,cZrDgD,EAChD,EACA,WACA,EACA,WYkDAC,cZtDgD,EAChD,EACA,WACA,EACA,WYmDAC,gBZvDgD,EAChD,EACA,WACA,EACA,WYoDAC,kBZxDgD,EAChD,EACA,WACA,EACA,WYqDAC,eZzDgD,EAChD,EACA,WACA,EACA,WYuDAC,aAAc,KAILC,GAAyBA,IAAAlV,YAAC,CACnCmV,GAAIC,eACD3D,MAGM4D,GAAeA,KAAA,CACxB3D,QAAS,EACTL,OAAQ,MACRnU,MAAO,SACPyU,KAAM,SACN7R,QAAS9B,IACT4T,OAAQ,GACRC,UAAW,SACXzT,KAAM,GACN0T,cAAe,OACfC,UZ1G+B,CAC/BpP,KAAM,UACNN,UAAW,UACX2P,kBAAmB,UACnB1O,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,QYyFTkQ,UAAW/R,EACXgS,UAAW1R,EACX2R,SAAU,OACVC,KAAM,EACNC,cAAe,OACfzL,IAAK,kCACL0L,QAAS,GACTE,UAAW,SACXD,QAAQ,EACRE,QAAS,CACLC,EAAG,EACHC,EAAG,EACHvV,MAAO,IACPC,OAAQ,KACRuV,KAAM,IACNC,OAAQ,GAEZC,eAAe,EACfC,WAAY,GACZC,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClBnT,eAAgB,MAChBoT,eAAgB,CACZT,EAAG,EACHC,EAAG,EACHvV,MAAO,IACPC,OAAQ,KACRuV,KAAM,IACNC,OAAQ,GAEZO,QAAS,GACTC,QAAQ,EACRxT,YAAY,EACZyT,cAAe,OACfC,eAAgB,GAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,YAAa,GACbC,YAAa,CACTC,iBAAkB,SAClBC,OAAQ,GAEZC,cAAe,CACXD,OAAQ,GAEZE,OAAQ,GACRC,MAAO,GACPC,IAAK,IACLC,IAAK,IACLC,SAAU,GACVC,QAASxT,EACTyT,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EAEdC,QAAS,GACTC,gBAAgB,EAChBC,cZ3IgD,EAChD,EACA,WACA,EACA,WYwIAC,cZ5IgD,EAChD,EACA,WACA,EACA,WYyIAC,gBZ7IgD,EAChD,EACA,WACA,EACA,WY0IAC,kBZ9IgD,EAChD,EACA,WACA,EACA,WY2IAC,eZ/IgD,EAChD,EACA,WACA,EACA,WY4IAC,aAAc,KAGLK,GAAc,CACvB,CACIhW,KAAM,OACNiW,QAAS,YACTxY,MAAO,OACPgE,SAAU,2BACVyU,WAAY,oCAEhB,CACIlW,KAAM,OACNiW,QAAS,aACTxY,MAAO,OACPgE,SAAU,2BACVyU,WAAY,qCAEhB,CACIlW,KAAM,WACNvC,MAAO,WACPgE,SAAU,+BACVyU,WAAY,MAEhB,CACIlW,KAAM,OACNvC,MAAO,SACPgE,SAAU,6BACVyU,WAAY,OAIPC,GAAmB,CAC5B,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,WCjN9CC,GAAYC,GACC,QAAfA,EAAKzY,MAQH0Y,GAAmBD,GACN,gBAAfA,EAAKzY,QAA4B2Y,GAAaF,GAE5CE,GAAgBF,GACH,UAAfA,EAAKzY,OAAoC,SAAfyY,EAAKzY,OAAmC,gBAAfyY,EAAKzY,MAgBtD4Y,GAAwB5Y,GACnB,UAAVA,GAA+B,SAAVA,EAAyB,KACpC,QAAVA,EAAwB,OACd,iBAAVA,EAAiC,iBACvB,gBAAVA,EAAgC,OAC7B,QAGE6Y,GAAoB7Y,IACrB2Y,GAAa,CAAE3Y,WAAY8Y,GAAgB9Y,GAG1C8Y,GAAmB9Y,GACrB,CAAC,OAAQ,MAAO,eAAgB,cAAe,QAAS,OAAQ,UAAU+Y,SAAS/Y,G,wBC3CvF,MAAonCgZ,GAAYC,IAAI,IAAIC,GAAGD,EAAEA,EAAEE,UAAU,EAAEF,EAAEG,OAAO,IAAIC,MAAM,QAAK,GAAGJ,EAAEC,EAAE,GAAG,EAAEA,EAAEE,OAAO,CAACF,EAAEA,EAAE,GAAG,IAAI,IAAII,KAAKJ,EAAED,GAAGA,EAAEA,EAAEI,MAAMC,IAAItI,KAAKiI,EAAEM,OAAO,OAAOC,GAAcP,EAAE,IAAIO,GAAc,SAACP,GAAS,IAAPC,EAACO,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAC,EAAK,MAAMH,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,OAAOK,EAAEA,CAACV,EAAEC,IAAID,EAAEW,QAAQ,IAAIpI,OAAO,GAADrN,QAAK+U,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,GAAE,KAAA/U,QAAK+U,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,IAAK,MAAKD,GAAGA,IAAIC,EAAE,GAAGA,EAAE,GAAGA,EAAE,KAAI,GAAGA,EAAE,IAAIA,EAAE,EAAEA,EAAEI,EAAEF,SAASF,EAAED,EAAEU,EAAEV,EAAEK,EAAEJ,SAAS,IAAIA,EAAEI,EAAEF,OAAOF,KAAKD,EAAEU,EAAEV,EAAEK,EAAEJ,IAAI,OAAOD,GC+HlkDY,GAAmB/W,wBAAA,GA9H+D,CACpF0R,QAAS,KACTL,OAAQ,KACRnU,MAAO,KACPyU,KAAM,KACN7R,QAAS,CACLkX,QAAS,KACT/Y,KAAM,OACNC,SAAU,OACVE,KAAM,OACND,KAAM,OACNK,UAAW,OAEXyY,SAAU,OACV3Y,UAAW,OACXC,WAAY,OACZF,SAAU,QAEduT,OAAQ,KACRhL,IAAK,KACL0L,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXX,UAAW,MACXY,QAAS,CACLuE,QAAS,MACTtE,EAAG,MACHC,EAAG,MACHvV,MAAO,MACPC,OAAQ,MACRuV,KAAM,MACNC,OAAQ,OAEZC,cAAe,MACfC,WAAY,KACZE,cAAe,KACfD,eAAgB,MAChBE,iBAAkB,MAClBnT,eAAgB,MAChBoT,eAAgB,CACZ6D,QAAS,MACTtE,EAAG,MACHC,EAAG,MACHvV,MAAO,MACPC,OAAQ,MACRuV,KAAM,MACNC,OAAQ,OAEZzU,KAAM,KACN0T,cAAe,MACf6B,YAAa,CACTqD,QAAS,KACTpD,iBAAkB,OAClBC,OAAQ,OAEZC,cAAe,CACXkD,QAAS,KACTnD,OAAQ,OAEZ9B,UAAW,CACPiF,QAAS,KACTrU,KAAM,OACNN,UAAW,OACX2P,kBAAmB,QACnB1O,YAAa,OACbC,cAAe,QACfC,cAAe,QACfC,WAAY,OACZ3B,UAAW,OACXW,UAAW,OACXD,UAAW,OACXoB,YAAa,QACbhB,YAAa,QACbf,WAAY,OACZkB,cAAe,OACfC,cAAe,OACfpB,YAAa,OACbQ,OAAQ,OACRL,QAAS,QAEbkQ,UAAW,KACXC,UAAW,KACXE,KAAM,KACNC,cAAe,KACfF,SAAU,KACViB,QAAS,KACTC,OAAQ,KACRxT,WAAY,KACZyT,cAAe,KACfC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBC,YAAa,KACbK,OAAQ,KACRC,MAAO,KACPC,IAAK,MACLC,IAAK,MACLC,SAAU,KACVC,QAAS,MACTC,eAAgB,MAChBC,YAAa,MACbE,mBAAoB,MACpBD,iBAAkB,MAClBE,aAAc,MACdC,QAAS,KACTC,eAAgB,KAChBG,gBAAiB,MACjBC,kBAAmB,MACnBH,cAAe,MACfC,cAAe,MACfG,eAAgB,MAChBC,aAAc,OAEgB,CAC9BiC,SAAU,KACVC,QAAS,KACTC,YAAa,CACTJ,QAAS,MACTtE,EAAG,MACHC,EAAG,MACHvV,MAAO,MACPC,OAAQ,MACRuV,KAAM,MACNC,OAAQ,SAQHwE,GAAmB,SAC5B1B,GAEE,IADF2B,EAA+BX,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAGI,GAElC,MAAMQ,EAAqC,GACrCC,EAAcxX,YAAA,GAAQ2V,GAkB5B,OAhBAnU,OAAOiW,KAAKD,GAAgBE,SAAQC,IAChC,MAAMC,EAAaJ,EAAeG,GAElC,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBC,MAAMC,QAAQF,GAMrE,CACH,MAAMG,EAAcT,EAAWK,GAEJ,kBAAhBI,IAA0BR,EAAcQ,GAAeH,OATmB,CAAC,IAADI,EACrF,MAAMC,EAA6B,QAAvBD,EAAGV,EAAWK,UAAS,IAAAK,OAAA,EAApBA,EAAsBhB,QAEjCiB,IACAV,EAAcU,GAAUZ,GAAiBO,EAAYN,EAAWK,SASrEJ,GAGEW,GAAqB,SAC9BX,GAEE,IADFD,EAA+BX,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAGI,GAElC,MAAMoB,EAAwC,GAgB9C,OAfA3W,OAAOiW,KAAKH,GAAYI,SAAQU,IAC5B,MAAMC,EAAaf,EAAWc,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBR,MAAMC,QAAQO,GAOvC,MAA7Bd,EAAcc,KACdF,EAAiBC,GAAWb,EAAcc,QARuC,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYrB,QAE5BsB,GAAef,EAAce,KAC7BH,EAAiBC,GAAWF,GAAmBX,EAAce,GAAchB,EAAWc,SAQ3FD,GAEEI,GAAiC,SAC1ChB,GAEE,IADFD,EAA+BX,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAGI,GAElC,MAAMyB,EAAmD,kBAAlBjB,EACjCkB,KAAKC,MAAMxC,GAAYyC,mBAAmBpB,KAC1CA,EAEAqB,EAAuC,GAgB7C,OAfApX,OAAOiW,KAAKH,GAAYI,SAAQU,IAC5B,MAAMC,EAAaf,EAAWc,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBR,MAAMC,QAAQO,GAO7B,MAAvCG,EAAwBH,KACxBO,EAAgBR,GAAWI,EAAwBH,QAR8B,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYrB,QAE5BsB,GAAeE,EAAwBF,KACvCM,EAAgBR,GAAWG,GAA+BC,EAAwBF,GAAchB,EAAWc,SAQhHQ,GAoBEC,GAAkB,SAAClD,GAAwE,IAADmD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA5CC,EAAQzC,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAGtB,KAClE,MAAMgE,EAAYrZ,wBAAA,CACdmV,GAAIC,eACDgE,GACAE,aAAM3D,IA0Eb,OAvEA0D,EAAa1F,YAAW3T,wBAAA,GACjBqV,KAAe1B,aACf0F,EAAa1F,aAGc,MAA9B0F,EAAavF,gBACbuF,EAAavF,cAAa9T,YAAA,GACnBqV,KAAevB,gBAIE,MAAxBuF,EAAa3H,UAAiB2H,EAAa3H,QAAU,GAC9B,MAAvB2H,EAAahI,SAAgBgI,EAAahI,OAAS,OACrB,MAA9BgI,EAAa/F,gBAAuB+F,EAAa/F,cAAgB,QAC1C,MAAvB+F,EAAazH,SAAgByH,EAAazH,OAAS,IAEzB,MAA1ByH,EAAaxH,YAAmBwH,EAAaxH,UAAY,UACxDwH,EAAqBlC,UAAYxB,EAAK/O,MAAKyS,EAAazS,IAAOyS,EAAqBlC,gBACjFkC,EAAqBlC,QAExBkC,EAAqBjC,cAAgBzB,EAAKlD,UAAS4G,EAAa5G,QAAW4G,EAAqBjC,oBAC7FiC,EAAqBjC,YAII,MAAZ,QAAjB0B,EAACO,EAAazS,WAAG,IAAAkS,IAAI,MAAYO,EAAazS,IAAM,IACnB,MAAZ,QAArBmS,EAACM,EAAa/G,eAAO,IAAAyG,IAAI,MAAYM,EAAa/G,QAAU,IACzB,MAAZ,QAAvB0G,EAACK,EAAa7G,iBAAS,IAAAwG,IAAI,MAAYK,EAAa7G,UAAY,UACzC,MAAvB6G,EAAa9G,SAAgB8G,EAAa9G,QAAS,GAED,mBAA1C8G,EAAavZ,QAAgBmX,UAA4D,MAAlCoC,EAAavZ,QAAQtB,YACpF6a,EAAavZ,QAAQtB,WAAc6a,EAAavZ,QAAgBmX,gBACxDoC,EAAavZ,QAAgBmX,UAEzCoC,EAAavZ,QAAOE,wBAAA,GAAQhC,KAA4Bqb,EAAavZ,gBAC7DuZ,EAAavZ,QAAgBmX,SAEG,MAAZ,QAAxBgC,EAACI,EAAatG,kBAAU,IAAAkG,IAAI,MAAYI,EAAatG,WAAa,IAC1B,MAAZ,QAA5BmG,EAACG,EAAarG,sBAAc,IAAAkG,IAAI,MAAYG,EAAarG,eAAiB,IAChC,MAAZ,QAA9BmG,EAACE,EAAanG,wBAAgB,IAAAiG,IAAI,MAAYE,EAAanG,iBAAmB,UAChD,MAA9BmG,EAAapG,gBAAuBoG,EAAapG,eAAgB,GACnC,MAA9BoG,EAAavG,gBACTuG,EAAatG,YAAcsG,EAAarG,gBAAkBqG,EAAavZ,QAAQzB,YAEnFgb,EAAavG,eAAgB,GAEjCuG,EAAalG,eAAcnT,wBAAA,GHlRD,CAC1B0S,EAAG,EACHC,EAAG,EACHvV,MAAO,IACPC,OAAQ,KACRuV,KAAM,IACNC,OAAQ,IG8QDwG,EAAalG,gBAGO,MAAvBkG,EAAahG,QAAyC,SAAvBgG,EAAanc,QAC5Cmc,EAAahG,QAAS,GAGrBgG,EAAqBE,cAAgB5D,EAAKhB,iBAAgB0E,EAAa1E,eAAkB0E,EAAqBE,oBAC3GF,EAAqBE,iBACO3C,IAAhCyC,EAAa1E,iBAA8B0E,EAAa1E,gBAAiB,GAExE0E,EAAqBnC,WAAavB,EAAKxB,WAAUkF,EAAalF,SAAYkF,EAAqBnC,iBAC5FmC,EAAqBnC,SAExBmC,EAAavE,kBAAiBuE,EAAavE,gBf3QA,EAChD,EACA,WACA,EACA,YewQKuE,EAAatE,oBAAmBsE,EAAatE,kBf5QF,EAChD,EACA,WACA,EACA,YeyQKsE,EAAaxE,gBAAewE,EAAaxE,cf7QE,EAChD,EACA,WACA,EACA,Ye0QKwE,EAAazE,gBAAeyE,EAAazE,cf9QE,EAChD,EACA,WACA,EACA,Ye2QKyE,EAAarE,iBAAgBqE,EAAarE,ef/QC,EAChD,EACA,WACA,EACA,Ye4Q6C,qBAAlCqE,EAAa9E,mBAAkC8E,EAAa9E,kBAAmB,GACjD,qBAA9B8E,EAAa5E,eAA8B4E,EAAa5E,cAAe,GAC7E4E,EAAahH,gBAAegH,EAAahH,cAAgB,QAEvDgH,GAGEG,GAAsBC,IAC/B,IAEI,MAAO,mBAAoBA,GACpB,gBAAiBA,GACjB,UAAWA,EACpB,MAAOtD,GAEL,OADAuD,QAAQC,MAAMxD,IACP,IAGFyD,GAA6BH,IACtC,IACI,MAAO,QAASA,GACT,OAAQA,GACR,OAAQA,EACjB,MAAOtD,GAEL,OADAuD,QAAQC,MAAMxD,IACP,IAIF0D,GAA4BA,CACrClE,EACAmE,KAEA,GAAuB,YAAnBnE,EAAKnD,WAAqD,YAA1BmD,EAAKzC,iBACrC,MAAO,CACH6G,WAAW,EACX9Z,OAAQoX,GAAiB1B,IAIjC,MAAM6B,EAAcxX,wBAAA,GAAQ2V,GAAI,IAAErD,QAAS,GAAIU,eAAgB,KAE/D,MAAO,CACH+G,WAAW,EACX9Z,OAAQoX,GAAiBG,KAK3BwC,GAAuBA,CAACC,EAAiBC,WAChCD,WAAsBC,IACP,kBAAfD,GAAkD,kBAAhBC,EAAiCC,KAAKC,IAAIH,EAAaC,IAH7E,GAIhBD,IAAeC,GAEpBG,GAAkBA,CAACC,EAAmCC,KACxD,MACI1H,OAAQ2H,EACRnd,OAAQod,EACRrd,MAAOsd,EACPhI,EAAGiI,EACHhI,EAAGiI,EACHhI,KAAMiI,GACE,OAARP,QAAQ,IAARA,IAAY,IAEZzH,OAAQiI,EACRzd,OAAQ0d,EACR3d,MAAO4d,EACPtI,EAAGuI,EACHtI,EAAGuI,EACHtI,KAAMuI,GACG,OAATZ,QAAS,IAATA,IAAa,GAEjB,OAAOP,GAAqBQ,EAAYM,IACjCd,GAAqBS,EAAYM,IACjCf,GAAqBU,EAAWM,IAChChB,GAAqBW,EAAOM,IAC5BjB,GAAqBY,EAAOM,IAC5BL,IAAaM,GAGXC,GAAkBA,CAACC,EAAwBC,KACpD,MACI7I,QAAS8I,EACTpI,eAAgBqI,GAEhBH,EADGI,EAASC,YACZL,EAAQ,+BAER5I,QAASkJ,EACTxI,eAAgByI,GAEhBN,EADGO,EAASH,YACZJ,EAAS,8BAEb,OAAOQ,aAAOL,EAAWI,IAClBxB,GAAgBkB,EAAaI,IAC7BtB,GAAgBmB,EAAoBI,IC5YlCG,GAAqB3d,IAC9B,IACI,OAAOA,EAAK4d,WAAW,4BAA6B,MACtD,MAAO7F,GAEL,OADAuD,QAAQC,MAAMxD,GACP/X,IAGF6d,GAAuBlI,IAChC,IACI,OAAOA,EAAOiI,WAAW,4BAA6B,MACxD,MAAO7F,GAEL,OADAuD,QAAQC,MAAMxD,GACPpC,IAIFmI,GAAqBC,IAC9B,IACI,OAAOA,EAAKC,WAAW,sDACzB,MAAOjG,GAEL,OADAuD,QAAQC,MAAMxD,IACP,ICpBFkG,GAAeA,CAACje,EAAcke,EAAYhd,KACnD,MAAM6c,EAAOI,SAASC,cAAc,KAEpCL,EAAKM,SAAWre,EAChB+d,EAAKO,KAAOC,OAAOC,IAAIC,gBAAgBP,GACvCH,EAAKW,QAAQC,YAAc,CAACzd,EAAM6c,EAAKM,SAAUN,EAAKO,MAAMxO,KAAK,KAEjE,MAAM8O,EAAgB,IAAIC,WAAW,QAAS,CAC1CC,KAAMP,OACNQ,SAAS,EACTC,YAAY,IAGhBjB,EAAKkB,cAAcL,GACnBb,EAAKmB,UCHHC,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAACpd,GAAU,QAETqd,GAAqBrc,OAAOgM,QAAQ+P,IAAanX,QAA+B,CAACC,EAAKC,KACxF,MAAOwX,EAAaC,GAAYzX,EAGhC,OAFAD,EAAI0X,GAAYD,EAETzX,IACR,IAEG2X,GAAuC,CACzCC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,UAENC,GAAsBld,OAAOgM,QAAQwQ,IAAc5X,QAA+B,CAACC,EAAKC,KAC1F,MAAOwX,EAAaC,GAAYzX,EAGhC,OAFAD,EAAI0X,GAAYD,EAETzX,IACR,IAEGsY,GAAmC,CACrCjgB,OAAQ,SACRqV,OAAQ,SACR6K,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACL5C,KAAM,OACN6C,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,eAAgB,eAChBC,KAAM,QACN,cAAe,SAEbC,GAAkB5d,OAAOgM,QAAQmR,IAAUvY,QAA+B,CAACC,EAAKC,KAClF,MAAOwX,EAAaC,GAAYzX,EAGhC,OAFAD,EAAI0X,GAAYD,EAETzX,IACR,IAEGgZ,GAA0G,CAC5G,OAAU,CACNnd,IAAK,IAET,KAAQ,CACJA,IAAK,SACL/D,KAAM,QAEV,OAAU,CACN+D,IAAK,wBACL/D,KAAM,iBACN0T,UAAW,SAEf,MAAS,CACL3P,IAAK,eACL/D,KAAM,QACN0T,UAAW,SAEf,QAAW,CACP3P,IAAK,uBACL/D,KAAM,WACN0T,UAAW,QACXD,OAAQ,CAAC,WAGX0N,GAAY9d,OAAOgM,QAAQ6R,IAAkBjZ,QAA+B,CAACC,EAAKC,KACpF,MAAOiZ,EAAWzB,GAAexX,EAGjC,OAFAD,EAAIyX,EAAY5b,KAAOqd,EAEhBlZ,IACR,IAWUmZ,GAA2BA,CACpC7J,EACA8J,KAEA,MAAM,KACFrhB,EAAI,KACJgU,EAAI,YACJsB,EAAW,UACXxB,EAAS,OACT6B,EAAM,IACNE,EAAG,IACHC,EAAG,IACHtN,EAAG,QACH0L,EAAO,UACPE,EAAS,SACT2B,EAAQ,QACRO,EAAO,UACPzC,EAAS,MACT+B,EAAK,eACLT,EAAc,kBACdE,EAAiB,iBACjBD,EAAgB,WAChB3T,EAAU,QACVuT,EAAO,MACPlW,EAAK,aACL+X,EAAY,UACZlD,EAAS,cACTD,EAAa,UACbD,EAAS,OACTD,GACA+D,EACE+J,EAAiB3D,GAAkB3d,GACnCuhB,EAAmB1D,GAAoBlI,GACvC6L,EAA2B3D,GAAoB1I,GAC/CsM,EAAiBtC,GAAYrL,GAC7B4N,EAAsB9B,GAAa/L,GACnC8N,EAAkBpB,GAASzhB,GAC3B8iB,EAAqC,eAAlBlO,EACnBwN,GACE,CACIvN,EAAU3P,OACVyP,EACAD,EAAO1D,KAAK,MACdA,KAAK,MAET,SACN+R,EAAkD,OAAZhL,QAAY,IAAZA,IAAgB,IAAhD,SAAE/W,EAAQ,OAAEgiB,GAAiBD,EAANE,EAAIzE,YAAAuE,EAAA,uBAsDjC,MAAO,CACHlG,UArDY3b,IAASshB,GAClB3L,IAAW4L,GACXpM,IAAmBqM,QACAhJ,IAAnBiJ,QACwBjJ,IAAxBkJ,QACoBlJ,IAApBmJ,QACqBnJ,IAArBoJ,EAgDH/f,OA/CQD,YAAA,CACR0R,QAAS,QACTtT,KAAMshB,EACNU,MAAM,GAAD/e,OAAK+Q,GACV9S,KAAMoU,EAAYxF,KAAK,KACvBjN,KAAoB,OAAd4e,QAAc,IAAdA,IAAkB,GACxB9L,OAAQ4L,EACR1L,MACAC,MACAmM,OAAQlM,EACRmM,UAAW5L,EACXzC,UAA8B,OAAnB6N,QAAmB,IAAnBA,IAAuB,OAClC3K,GAAInB,EACJ9V,SAAQ8B,YAAA,CACJugB,QAAS1gB,EACTkU,OAAQ6L,EACRY,KAAM/M,EACNgN,IAAKjN,EACLkN,QAAS,SACTC,gBAAgB,GACbziB,GAEP0iB,QAAS,SACTzE,KAAM,CACF0E,UAASzN,EAAQ6C,SAAS,KAC1B6K,YAAW1N,EAAQ6C,SAAS,KAC5B8K,WAAU3N,EAAQ6C,SAAS,KAC3B+K,aAAY5N,EAAQ6C,SAAS,KAC7BgL,cAAa7N,EAAQ6C,SAAS,KAC9BiL,aAAY9N,EAAQ6C,SAAS,KAC7BkL,eAAc/N,EAAQ6C,SAAS,KAC/BmL,cAAahO,EAAQ6C,SAAS,MAElCoL,OAAuB,OAAftB,QAAe,IAAfA,IAAmB,SAC3BW,QAAS,SACTR,OAAwB,OAAhBF,QAAgB,IAAhBA,IAAoBE,EAE5B/d,MAAOsd,EACDA,EAAO6B,UAAU,cACH,YAAd9O,EACIF,EACA1L,GACPuZ,KCxLL5C,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAACpd,GAAU,QAETqd,GAAqBrc,OAAOgM,QAAQ+P,IAAanX,QAA+B,CAACC,EAAKC,KACxF,MAAOwX,EAAaC,GAAYzX,EAGhC,OAFAD,EAAI0X,GAAYD,EAETzX,IACR,IAaGqY,GAAsBld,OAAOgM,QAXU,CACzCyQ,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,WAE6CrY,QAA+B,CAACC,EAAKC,KAC1F,MAAOwX,EAAaC,GAAYzX,EAGhC,OAFAD,EAAI0X,GAAYD,EAETzX,IACR,IAqBG+Y,GAAkB5d,OAAOgM,QAnBU,CACrC9O,OAAQ,SACRqV,OAAQ,SACR6K,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACL5C,KAAM,OACN6C,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,cAAe,QACfqC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,aAAc,iBAE+Bxb,QAA+B,CAACC,EAAKC,KAClF,MAAOwX,EAAaC,GAAYzX,EAGhC,OAFAD,EAAI0X,GAAYD,EAETzX,IACR,IAEGwb,GAAyC,CAC3C,WAAY,IACZ,IAAO,IACP,YAAa,IACb,KAAQ,IACR,MAAS,IACT,cAAe,IACf,OAAU,IACV,eAAgB,KAgDPC,GAA6BnM,IAAgE,IAADsK,EAAA8B,EAAAC,EACrG,MAAM,IACF/N,EAAG,UACHhC,EAAS,YACTgQ,EAAW,UACXC,EAAS,IACThO,EAAG,KACHiO,EAAI,UACJC,EAAS,GACTjN,EAAE,MACFiL,EAAK,aACLiC,EAAY,KACZjkB,EAAI,UACJkkB,EAAS,KACTC,EAAI,MACJC,EAAK,SACLC,EAAQ,QACRC,EAAO,YACPC,GACAhN,EACEkK,EAAiBhC,GAAmB0E,GACpCzC,EAAsBpB,GAAoBzM,IACzC8N,EAAiB6C,GAAYxD,GAAgBgD,GAAW7L,MAAM,KAG/DsM,EAA6F,QAAtE5C,EAAIoC,EAAeA,EAAarG,WAAW,WAAY,SAAMpF,SAAS,IAAAqJ,IAC3FkC,EAAOA,EAAKnG,WAAW,WAAY,IAAM,GAE3C8G,EAAwBD,EAAwBtM,MAAM,MACtDwM,ENpJ4BpN,IAC3B,CACH,SACA,UACA,MACA,OACA,eACA,QACFM,SAASN,EAAKzY,OM4IgB8lB,CAAsB,CAClD9lB,MAAsB,OAAf6iB,QAAe,IAAfA,IAAmB,YACxB+C,EAAsBxM,OAAS,EAC/B,CAAC,IAADjV,OACMyhB,EAAsB,GAAG9G,WAAW,KAAM,IAAG,QAC9C8G,EAAsBG,MAAM,IACjC/U,KAAK,MACL2U,EACAjD,EAA2B0C,EAC3BA,EAAUtG,WAAW,WAAY,IACjC,GACAkH,EAAYjB,EAAY,GAAGkB,kBAE3B/J,EAAW/D,KAqCjB,MAAO,CACH0E,WAAW,EACX9Z,OAtCcD,wBAAA,GACXoZ,GAAQ,IACXhb,OACA6V,IAAMA,EAAM,GAAY,MAAPA,EAAe,IAAG,GAAA5S,OAAM4S,GACzCC,IAAKA,EACEA,EAAM,GAAY,MAAPA,EAAe,IAAG,GAAA7S,OAAM6S,GACpC,IACNjC,UAA8B,OAAnB6N,QAAmB,IAAnBA,IAAuB5f,EAClC6T,OAAQgP,EACR7Q,UAAyB,OAAd2N,QAAc,IAAdA,IAAkBrf,EAC7BwT,MAAgD,QAA3C+N,EAAiC,QAAjCC,EAAEE,EAAUA,EAAU5L,OAAS,UAAE,IAAA0L,OAAA,EAA/BA,EAAiCoB,gBAAQ,IAAArB,IAAI,GACpD7kB,MAAsB,OAAf6iB,QAAe,IAAfA,IAAmB,SAC1B3N,KAAoB,SAAdgQ,GAAwBM,EAAUA,EAAUtC,EAClD1M,YAAa+O,IAEO,UAAdL,EACI,CAAC,cACa,SAAdA,EACI,CAAC,aACD,IACdxb,IAAKsc,EACL1Q,UAAW,SACXC,QAAOzS,wBAAA,GACAoZ,EAAS3G,SAAO,IACnBE,EAAG,IAEPU,OAA4B,SAApB0M,GAA8BlI,MAAMC,QAAQ6K,GACpDvP,SAAqB,OAAXuP,QAAW,IAAXA,IAAe,IAAIhT,KAAI0T,GAAUxB,GAAewB,KAC1DxjB,WAAyB,aAAb+iB,EACZnP,kBAA4B,MAAT+O,EAAgB,IAAG,GAAAnhB,OAAMmhB,GAC5ChP,iBAA2B,MAATgP,EAAgB,IAAG,GAAAnhB,OAAMmhB,GAC3CjP,eAAgBqM,EAChBzL,SAAU,GAAA9S,OAAG8T,GAAKmO,SAAS,EAAG,KAC9B5O,QAASrH,GAAa/H,IAAI,OCvN5Bie,GAA0B,IA4BnBC,GAAkB,WAA+D,IAA9DC,EAAY9M,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAG+M,EAAY/M,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG4M,GACzDI,EAAMF,EACNG,EAAMF,EACNG,EAASD,EACTE,EAAgBD,EAChBE,EAAe,GACfC,EAAY,IACZC,EAA0B,GAE9B,MAAMC,EAAgBA,KACA,IAAdF,EAAiBpS,KAEjBiS,GAAUG,EACVA,GAAaC,EACbJ,GAAUG,GAGP7J,KAAKwJ,IAAIE,EAAQD,IAGtBO,EAAaA,KACfN,GAAUG,EACVD,GAAgB,EAETF,GAGLO,EAAQ,WAA6C,IAA5CX,EAAY9M,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAGgN,EAAKD,EAAY/M,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAGiN,EAC9CD,EAAMF,EACNG,EAAMF,EACNG,EAASH,EACTK,EAAe,GACfC,EAAY,IACZF,EAAgBJ,GAGdW,EAAYA,IAAMR,EAClBS,EAAaC,GAAsBV,EAASU,EAE5CC,EAAmB,eAACC,EAAW9N,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAGkN,EAAM,OAAKC,EAAgBW,GAC7DC,EAAmBA,IAAMZ,EACzBa,EAAqBA,KACvBd,EAASC,EACTC,GAAgB,EACTF,GAGLe,EAAkBA,IAAMb,EACxBnS,EAASA,IAAMmS,GAAgB,EAErC,MAAO,CACHK,QACAD,aACAD,gBACAtS,SACAyS,YACAC,YACAE,mBACAE,mBACAC,qBACAC,oBAIKC,GAAW,SACpBC,GAEE,IADFrB,EAAY9M,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAEXoO,EAAkBxB,GACtB,MAAMyB,EAAYxB,KAClB,KAAOwB,EAAUJ,mBAAqB,GAAG,CACrC,GAAII,EAAUJ,mBAAqB,EAAG,CAIlCG,EAFoBC,EAAUX,YAG9B,MAIA,IAFgBS,EAAOE,EAAUX,cAEjBW,EAAUX,YAAc,EAEpCW,EAAUb,iBACP,CAEH,GAAIa,EAAUX,cAAgBd,GAAyB,MAClDwB,EAAkBC,EAAUd,iBAQ7C,MAAMe,EAAe9K,KAAKyJ,IAAIH,EAActJ,KAAKwJ,IAAIoB,EAAiBxB,KAEtE,OADI0B,IAAiBF,GAAiBD,EAAOG,GACtCA,GC1HEC,GAAoBC,IAM7B,MAAM,cACFC,EAAgB,GAAE,aAClBC,EAAe,GAAE,YACjBC,EAAc,OAAM,cACpBC,EAAgB,SACX,OAALJ,QAAK,IAALA,IAAS,GACb,IAAI1Y,EAAS2Y,EACTI,EAAQH,EACRI,EAA6C,kBAAhBH,EAAwB,GAAAjkB,OAAMikB,EAAW,MAAOA,EAC7EI,EAAsC,kBAAhBJ,EAA2BA,EAAcK,WAAWL,EAAYtJ,WAAW,KAAM,KACvG4J,EAASL,EAEb,MAAO,CACHM,QAASA,IAAA,GAAAxkB,OAAS,CAACmkB,EAAO/Y,EAAQgZ,EAAMG,GAAQE,QAAOC,GAAiB,KAATA,IAAa7X,KAAK,KAAI,WACrF8X,YAAaA,KAAA,CAASR,QAAOC,OAAMG,SAAQF,eAAcjZ,WACzDwZ,UAAUC,GAEN,OADAzZ,EAASyZ,EACFC,MAEXC,SAASC,GAEL,OADAb,EAAQa,EACDF,MAEXG,QAAQC,GACJ,MAAMC,EAAqC,oBAAbD,EACxBA,EAASb,GACTa,EAON,OANAd,EAAiC,kBAAnBe,EAA2B,GAAAnlB,OAChCmlB,EAAc,MACjBA,EACNd,EAAyC,kBAAnBc,EAChBA,EACAb,WAAWa,EAAexK,WAAW,KAAM,KAC1CmK,MAEXM,UAAUC,GAEN,OADAd,EAASc,EACFP,QC1CNQ,GAA4BA,IAAoBC,GtBc1C,2CsBZNC,GAAoBC,IAAmC,OAAPA,QAAO,IAAPA,IAAW,IACnEnX,KAAIsQ,IAAA,IAAC,MAAE5f,EAAK,OAAE0mB,GAAQ9G,EAAA,SAAA5e,OAAQ0lB,EAAM,KAAA1lB,OAAIhB,MAAS6N,KAAK,KAC9C0Y,GAAgBI,GAA8CA,EACrEA,EAAmBzQ,MAAM,KACtB5G,KAAI,CAACC,EAAOqX,KACT,MAAOF,EAAQ1mB,GAASuP,EAAM2G,MAAM,KAEpC,MAAO,CAAElW,QAAO0mB,SAAQ5R,GAAI8R,EAAQ,MAE1CL,GtBGa,2CuBjBNM,GAAgBC,UACzB,MAAMC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,gBAAgB,aAADjmB,OAAeC,oBAE/C,MAAMimB,EAAW,IAAIC,SAKrB,OAJAD,EAASD,OAAO,QAASG,GACzBF,EAASD,OAAO,OAAQ,OACxBC,EAASD,OAAO,QAASG,EAAQ3Q,QAAQ,sDAAuD,IAAIA,QAAQ,OAAQ,WAEvG4Q,MAAM,gCAAiC,CAChDC,OAAQ,OACRC,QAASR,EACTnpB,KAAMspB,EACNM,SAAU,YCbLC,GAAqB7H,IAgB3B,IAhB4B,MAC/B8H,EAAK,aACLC,EAAY,gBACZC,GAAkB,EAAK,SACvBC,EAAQ,UACRC,EAAS,SACTC,EAAQ,WACRC,GASHpI,EACG,MAAO,CACHqI,SAAU,EACVC,QAASA,KACDR,GAAOrO,QAAQ8O,KAAK,mBAAoBT,GAC5CG,EAAS,IAEbO,OAAQA,KACAV,GAAOrO,QAAQ8O,KAAK,kBAAmBT,GAC3CG,GAAU,IAEdQ,UAAYvS,IACJ8R,GAAiB9R,EAAE8R,kBACnBF,GAAOrO,QAAQ8O,KAAK,qBAAsBT,EAAO5R,EAAEjU,MAC/B,KAAV,OAAVmmB,QAAU,IAAVA,OAAU,EAAVA,EAAalS,MACH,eAAVA,EAAEjU,KAAkC,cAAViU,EAAEjU,KAC5BiU,EAAEwS,iBACFT,GAAS5hB,GAAO6T,KAAKyJ,IAAI,EAAGoE,EAAe1hB,EAAM,GAAK0hB,KAEvC,cAAV7R,EAAEjU,KAAiC,YAAViU,EAAEjU,KAChCiU,EAAEwS,iBACFT,GAAS5hB,GAAO6T,KAAKyJ,IAAI,EAAGoE,EAAe1hB,EAAM,GAAK0hB,KAEvC,UAAV7R,EAAEjU,KAA6B,MAAViU,EAAEjU,IAC5BimB,IAEe,WAAVhS,EAAEjU,MACC,OAARkmB,QAAQ,IAARA,YC3CHQ,GAAkB,WAAyD,IAAxDC,EAAOlS,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,6BAA8BL,EAAMK,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACzE1W,EAAS,GACb,MAAM6oB,EAAmBD,EAAQvS,OACjC,IAAK,IAAItM,EAAI,EAAGA,EAAIsM,EAAQtM,IACxB/J,GAAU4oB,EAAQE,OAAO5O,KAAK6O,MAAM7O,KAAK8O,SAAWH,IAExD,OAAO7oB,GAkCJ,MAAMipB,GAAe,WAA4C,IAADC,EAAA,IAA1CC,EAAQzS,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,2BACS,QAA7CwS,EAAA5M,SAAS8M,cAA2BD,UAAS,IAAAD,GAA7CA,EAA+CG,SAGtCC,GAAgB,qCAChBC,GAAY,SAACC,GAAmC,IAAtBC,IAAS/S,UAAAL,OAAA,QAAAM,IAAAD,UAAA,KAAAA,UAAA,GAC5C,IACI,MAAMgT,EAAUF,EAAI3S,QAAQ,IAAK,IACjC,IAAI8S,EAAW,CAAC,EAAG,EAAG,EAAG,GAE0B,IAADC,EAAAC,EAQAC,EARlD,GAAuB,IAAnBJ,EAAQrT,QAAmC,IAAnBqT,EAAQrT,OAChCsT,EAAW,CACPI,SAAS,GAAD3oB,OAAIsoB,EAAQ,IAAEtoB,OAAGsoB,EAAQ,IAAM,IACvCK,SAAS,GAAD3oB,OAAIsoB,EAAQ,IAAEtoB,OAAGsoB,EAAQ,IAAM,IACvCK,SAAS,GAAD3oB,OAAIsoB,EAAQ,IAAEtoB,OAAGsoB,EAAQ,IAAM,IACvCK,SAAS,GAAD3oB,OAAc,QAAdwoB,EAAIF,EAAQ,UAAE,IAAAE,IAAI,KAAGxoB,OAAa,QAAbyoB,EAAGH,EAAQ,UAAE,IAAAG,IAAI,KAAO,KAG7D,GAAuB,IAAnBH,EAAQrT,QAAmC,IAAnBqT,EAAQrT,OAChCsT,EAAW,CACPI,SAASL,EAAQ1G,MAAM,EAAG,GAAI,IAC9B+G,SAASL,EAAQ1G,MAAM,EAAG,GAAI,IAC9B+G,SAASL,EAAQ1G,MAAM,EAAG,GAAI,IAC9B+G,SAA4B,QAApBD,EAACJ,EAAQ1G,MAAM,EAAG,UAAE,IAAA8G,IAAI,KAAM,KAI9C,OAAOH,EAASja,KAAIC,GAASqa,MAAMra,GAAS,IAAMA,IAAOqT,MAAM,EAAGyG,EAAY,EAAI,GACpF,MAAOvT,GACL,MAAO,CAAC,EAAG,EAAG,EAAG,GAAG8M,MAAM,EAAGyG,EAAY,EAAI,KAKxCQ,GAAiBA,KAC1B,IAAIC,GAAQ,EACZ,IAAUC,EAIV,OAJUA,EACNC,UAAUC,WACPD,UAAUE,QACT5N,OAAe6N,OAHP,2TAA2TC,KAAKL,IAAI,4hDAA4hDK,KAAKL,EAAEM,OAAO,EAAE,OAAKP,GAAQ,GAIt4DA,GAGJ,SAASQ,KAA8D,IAAD,IAAAC,EAAAjU,UAAAL,OAA/CuU,EAAI,IAAAhT,MAAA+S,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAnU,UAAAmU,GAC9B,OAAOD,EAAK/E,OAAOiF,SAAS7c,KAAK,K,yiBClF9B,MAAM8c,GAAyBC,KAAOC,OAAMC,M,kCCA5C,MAAMC,GAAmBA,CAACzV,EAAoB0V,KAAwC,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACxF,MAAM,QACFhX,EAAO,OACPX,EAAM,OACN1C,EAAM,eACNgD,EAAc,KACdjW,EAAI,SACJ+V,EAAQ,eACRZ,EAAc,MACdS,EAAK,YACLN,GACAiC,EAEJ,GAAItE,IAAWga,EAAc,OAAO1V,EAEpC,MAAMgW,EAA2B,QAAjBN,EAAyB9d,GAAkBD,GACrDse,EAA6B,QAAjBP,GAA0B,MAAMZ,KAAKzW,GACjDA,EAAM8C,QAAQ,MAAO,OACJ,QAAjBuU,GAA0B,MAAMZ,KAAKzW,GACjCA,EAAM8C,QAAQ,MAAO,OACrB9C,EAEV,OAAAhU,wBAAA,GACO2V,GAAI,IACPvX,KAAmB,QAAfktB,EAAEK,EAAQvtB,UAAK,IAAAktB,IAAIltB,EACvBiT,OAAQga,EACRtX,OAAuB,QAAjBwX,EAAEI,EAAQ5X,UAAO,IAAAwX,IAAIxX,EAC3BR,eAAuC,QAAzBiY,EAAEG,EAAQpY,UAAe,IAAAiY,IAAIjY,EAC3CG,YAAaA,EAAY/D,KAAIC,IAAK,IAAAic,EAAA,OAAkB,QAAlBA,EAAIF,EAAQ/b,UAAM,IAAAic,IAAIjc,KACxD8E,QAAyB,QAAlB+W,EAAEE,EAAQjX,UAAQ,IAAA+W,IAAI/W,EAC7BP,SAA2B,QAAnBuX,EAAEC,EAAQxX,UAAS,IAAAuX,IAAIvX,EAC/BH,MAAO4X,EACPvX,eAAiC,QAAjBgX,GAAiChX,K,wDCvBlD,MAcMyX,GAAkB,SAACC,GAA0F,IAAxDC,EAA6CrV,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC9G,MAAMsV,EAAuBjsB,wBAAA,GACtBgsB,GACAD,EAAgBG,eAEjBC,EAAsBvc,IAAmB,IAADwc,EAC1C,OAAqC,QAArCA,EAAOH,EAAwBrc,UAAM,IAAAwc,IAAI,IAEvCC,EAAoBA,CAACC,EAAkBC,KACzC,MAAMC,EAAa,IAAI9d,OAAO,OAADrN,OAAQG,OAAOiW,KAAK8U,GAASre,KAAK,KAAI,SAE7Due,EAAiBH,EAAS/V,MAAMiW,GAEtC,OAAO9rB,cAACgsB,IAAMC,SAAQ,CAAAC,SACjBH,EAAe9c,KAAI,CAACC,EAAOqX,IACpBA,EAAQ,IAAM,EAAUvmB,cAACgsB,IAAMC,SAAQ,CAAAC,SAA4Bhd,GAAK,GAAAvO,OAAxBuO,EAAK,KAAAvO,OAAI4lB,IACtDsF,EAAQ3c,MAHK0c,IAO1BO,EAAwB,CAC1B,sBAAwBC,GACbX,EAAmB,uBAAuBnQ,WAAW,eAAgB8Q,GAEhF,sBAAwBA,GACbX,EAAmB,uBAAuBnQ,WAAW,eAAgB8Q,GAEhF,6BAA+BC,GACpBZ,EAAmB,8BAA8BnQ,WAAW,aAAa,GAAD3a,OAAK0rB,IAExF,gCAAkCC,GACvBX,EACHF,EAAmB,iCACnB,CAAEa,aAGV,gCAAiCC,CAACC,EAA0BC,IACjDd,EACHF,EAAmB,iCACnB,CAAEe,UAASC,YAGnB,6BAA8BC,CAC1BC,EACAC,EACAC,EACAC,IAEOnB,EACHF,EAAmB,8BACnB,CAAEkB,UAASC,UAASC,UAASC,YAGrC,iCACIC,GAEOpB,EACHF,EAAmB,kCACnB,CAAEsB,cAGV,4BAA8BC,GACnBrB,EACHF,EAAmB,6BACnB,CAAEuB,gBAGV,iCAAkCC,CAC9BC,EACAC,EACAC,EACAC,IAEO1B,EACHF,EAAmB,kCACnB,CAAEyB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCC,CAC9BJ,EACAC,EACAC,EACAC,IAEO1B,EACHF,EAAmB,kCACnB,CAAEyB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCE,CAC9BC,EACAJ,EACAC,IAEO1B,EACHF,EAAmB,kCACnB,CAAE+B,YAAWJ,SAAQC,sBAG7B,iCAAkCI,CAC9BD,EACAJ,EACAC,IAEO1B,EACHF,EAAmB,kCACnB,CAAE+B,YAAWJ,SAAQC,sBAG7B,iCAAkCK,CAC9BR,EACAC,EACAC,EACAC,IAEO1B,EACHF,EAAmB,kCACnB,CAAEyB,UAASC,WAAUC,SAAQC,sBAGrC,oBACIM,GAEOhC,EACHF,EAAmB,qBACnB,CAAEkC,eAKd,OAAAruB,wBAAA,GACO+rB,GAAe,IAClBG,cAAeD,EACfpvB,WAAUmD,wBAAA,GACHisB,GACAY,MC1IFyB,GAAUC,mBAAkB,CAACC,EAAKC,KAC3C,MAAMC,EAAsB,MAExB,MAAMC,EAAM,IAAI/R,IAAID,OAAOiS,SAASlS,MAC9BmS,EAAeF,EAAIG,aACnBC,EAAyBF,EAAaJ,IAAI,YAIhD,GAFAI,EAAaG,OAAO,YACpBrS,OAAOsS,QAAQC,aAAavS,OAAOsS,QAAQE,MAAO,GAAIR,EAAIjS,MACtDqS,EAAwB,OAAOA,EAEnC,IACI,MAAMK,EAAiBC,aAAaC,QAAQ,YAE5C,OAAIF,GACG,MACT,MAAOjZ,GAEL,OADAuD,QAAQC,MAAM,iDAAkDxD,GACzD,QAjBa,GAoBtBoZ,EAAqD,GACrDC,EAAkB1D,GAAe9rB,wBAAC,GDjCF,CACtC5B,KAAM,UACNqxB,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,IC4B2B,IAC/B3D,cAAe,MAsCb4D,EAAe3I,UACjB,GAAIoI,EAAYQ,GAAe,OAAO,KACtC,IAAK,IAADC,EACA,MAAMC,QAAiBvI,MAAM,GAADrmB,OACrBC,aAAsB,gBAAAD,OAAe0uB,EAAY,SACpD,CACInI,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBsI,QAAsCD,EAASE,OAErD,IAAKD,EAAahE,cAAe,MAAO,IAAIkE,MAAM,uBAClD,MAAMC,EAAoBvE,GAAgBoE,EAA6B,QAAjBF,EAAET,EAAYe,WAAG,IAAAN,OAAA,EAAfA,EAAiB9D,eAGzE,OAFAqD,EAAYQ,GAAgBM,EAErBA,EACT,MAAOla,GAEL,OADAuD,QAAQC,MAAM,gEAAiExD,GACxE,OAGToa,EAAiBpJ,UACnB,MAAMqJ,EAAW/B,IAAMgC,oBAAoBV,GAC3C,IAAKS,EAAU,OAIf,MAAMN,EAAgBX,EAAYQ,GAE5BR,EAAYQ,SADND,EAAaC,GAGrBG,GACA1B,EAAI,CACAkC,aAAcjC,IAAMgC,oBAAoBV,GACxCY,SAAUT,EAAarzB,aAE3BwyB,aAAauB,QAAQ,WAAYb,GACjCvB,EAAI,CACAqC,WAAW,EACXH,aAAcF,KAGlBhC,EAAI,CACAqC,WAAW,EACXH,aAAcjC,IAAMgC,oBAAoBH,IACxCK,SAAUnB,EAAgB3yB,cAKtC,MAAO,CACH4zB,oBAAqB,GACrBC,aDhIkC,CACtCtyB,KAAM,UACNqxB,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,GC2HJc,SAAUnB,EAAgB3yB,WAC1B8c,MAAO,KACPmX,cAAc,EACdD,WAAW,EACXE,iBAAiB,EACjBC,SAAU7J,UAjGeA,WACzB,IACI,MAAM8I,QAAiBvI,MAAM,GAADrmB,OACrBC,aAAsB,6BACzB,CACIsmB,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhB6I,QAA8DR,EAASE,OAE7E,IAAKM,EAAqB,MAAO,IAAIL,MAAM,qBAE3C5B,EAAI,CACAiC,sBACAM,iBAAiB,IAEvB,MAAO5a,GACLuD,QAAQC,MAAM,6EAA8ExD,GAC5FqY,EAAI,CACAiC,oBAAqB,CACjBH,IAAK,CACDlyB,KAAM,UACNqxB,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBkB,iBAAiB,MAkErBE,IAEJC,oBAAqB/J,gBAEX2I,EAAa,aACbS,EAAe7B,GACrBF,EAAI,CACAsC,cAAc,KAGtBhB,eACAS,qBAIKY,GAAcA,IACN7C,IAAQrO,IAAA,IAAC,SAAE0Q,GAAU1Q,EAAA,OAAK0Q,KAIlCS,GAAcA,IAAM9C,GAAQ+C,WAAWV,S,cChJpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,oCACA,qCACA,qCACA,uCACA,iCACA,0BACA,2BACA,2BACA,6BACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAc1V,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzG2V,GAAc,IAAIC,IAAIL,GAAa5hB,IAAI6hB,KAEvCK,GAAsBP,GAAqBlrB,QAAO,CAACC,EAAKorB,EAAOxK,KACjE,MAAM6K,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuBzrB,EAAIorB,GAAqBxK,GAE7D5gB,IACR,IAEG2rB,GAAoBC,GACV,MAARA,GACS,KAATA,EADqB,GAEnB,IAAN5wB,OAAW4wB,EAAKnb,QAAQ,KAAM,MAAK,KAkNjCob,GAAmBA,CAACp1B,EAAYq1B,KAClC,GAAqB,mBAAVr1B,EAAqB,OAAOA,EACvC,GAAqB,kBAAVA,EAAoB,CAC3B,MAAMs1B,EAAkBt1B,EAAM40B,cAC9B,MAA2B,SAApBU,GAEmB,UAApBA,GAEID,EAEd,OAAOA,GAELE,GAAeA,CAACv1B,EAAYq1B,IACT,kBAAVr1B,EAA2Bw1B,SAASx1B,GAASA,EAAQq1B,EAC3C,kBAAVr1B,GAA2Bw1B,SAAStI,SAASltB,IAAUktB,SAASltB,GACpEq1B,EAELI,GAAiBA,CAACz1B,EAAYq1B,IACX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","file":"static/js/main.cb970fda.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n    frame: string,\n}) => [\n    {\n        value: 'fit' as const,\n        label: dictionary?.fit,\n    },\n    {\n        value: 'full' as const,\n        label: dictionary?.full,\n    },\n    {\n        value: 'frame' as const,\n        label: dictionary?.frame,\n    },\n];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxCanvasRef: React.RefObject<HTMLCanvasElement>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    topToPendulumStructure: 210,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    leftToPendulumStructure: 52,\n    cardBorder: 28,\n    topToEffectBox: 885,\n    leftToEffectBox: 54,\n    effectBoxWidth: 705,\n    effectBoxHeight: 231,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        backgroundRatio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        backgroundRatio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.057,\n        backgroundRatio: 1.057,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    const artSource = normalizedBoundless || body < 100\n        ? isPendulum\n            ? 'fullPendulum'\n            : 'fullCard'\n        : isPendulum\n            ? text < 100\n                ? 'extendedPendulum'\n                : pendulum < 100\n                    ? 'truePendulum'\n                    : 'pendulum'\n            : text < 100\n                ? 'extendedCard'\n                : 'normal';\n\n    const result = CardArtCanvasCoordinateMap[artSource];\n    return {\n        ...result,\n        backgroundRatio: backgroundType === 'frame'\n            ? 0.686\n            : result.backgroundRatio,\n    };\n};\n","import { CloseCircleOutlined } from '@ant-design/icons';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n    },\n];\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport const IconTypeMap: Record<string, {\n    value: string,\n    labelKey: string,\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n}> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.label',\n        icon: null,\n        isOption: false,\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\n        />,\n        isOption: true,\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const getDefaultNameStyle = () => ({\n    font: 'Default',\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type OtherMakerCard = ReturnType<typeof getDefaultOtherMakerCard>;\nexport const getDefaultOtherMakerCard = () => ({\n    version: '1.0.0',\n    name: 'Card Name',\n    level: '4',\n    type: 'Warrior/Effect',\n    icon: 'Quick-play',\n    effect: 'Card Effect',\n    atk: '0',\n    def: '0',\n    serial: '1234567890',\n    copyright: '©',\n    attribute: 'Light',\n    id: 'ABCD-XY000',\n    pendulum: {\n        enabled: false,\n        effect: '',\n        blue: '0',\n        red: '0',\n        boxSize: 'Normal',\n        boxSizeEnabled: true,\n    },\n    variant: 'Normal',\n    link: {\n        topLeft: false,\n        topCenter: false,\n        topRight: false,\n        middleLeft: false,\n        middleRight: false,\n        bottomLeft: false,\n        bottomCenter: false,\n        bottomRight: false\n    },\n    layout: 'Effect',\n    boxSize: 'Normal',\n    rarity: 'secret',\n    image: '',\n});\n\nexport type YgoproDeckCardImage = ReturnType<typeof getDefaultYgoproDeckCardImage>;\nexport const getDefaultYgoproDeckCardImage = () => ({\n    id: 46986414,\n    image_url: 'https://images.ygoprodeck.com/images/cards/46986414.jpg',\n    image_url_small: 'https://images.ygoprodeck.com/images/cards_small/46986414.jpg',\n    image_url_cropped: 'https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg'\n});\n\nexport type YgoproDeckCardSet = ReturnType<typeof getDefaultYgoproDeckCardSet>;\nexport const getDefaultYgoproDeckCardSet = () => ({\n    set_name: '1990 Mega-Tins',\n    set_code: 'XX00-EN000',\n    set_rarity: 'Ultra Rare',\n    set_rarity_code: '(UR)',\n    set_price: '0.01',\n});\n\nexport type YgoproDeckCardMisc = ReturnType<typeof getDefaultYgoproDeckCardMisc>;\nexport const getDefaultYgoproDeckCardMisc = () => [\n    {\n        staple: 'No',\n        views: 0,\n        viewsweek: 0,\n        upvotes: 0,\n        downvotes: 0,\n        formats: [] as string[],\n        treated_as: '',\n        tcg_date: '',\n        ocg_date: '',\n        konami_id: 0,\n        has_effect: 1,\n        md_rarity: ''\n    }\n];\n\nexport type YgoproDeckCard = ReturnType<typeof getDefaultYgoproDeckCard>;\nexport const getDefaultYgoproDeckCard = () => ({\n    id: 10000000,\n    name: 'Card Name',\n    typeline: [\n        'Warrior',\n        'Effect',\n    ] as string[] | undefined,\n    type: 'Effect Monster',\n    humanReadableCardType: 'Effect Monster',\n    frameType: 'effect',\n    desc: '\\'\\'The ultimate wizard in terms of attack and defense.\\'\\'',\n    pend_desc: '',\n    monster_desc: 'You can Ritual Summon this card with \"Odd-Eyes Advent\".',\n    race: 'Warrior',\n    atk: 0,\n    def: 0 as number | undefined,\n    level: 4,\n    scale: 4 as number | undefined,\n    linkval: 3 as number | undefined,\n    linkmarkers: [] as string[] | undefined,\n    attribute: 'DARK',\n    archetype: 'Dark Magician',\n    ygoprodeck_url: 'https://ygoprodeck.com/card/dark-magician-4003',\n    card_sets: [] as YgoproDeckCardSet[],\n    card_images: [] as YgoproDeckCardImage[],\n    card_prices: [\n        {\n            cardmarket_price: '0.02',\n            tcgplayer_price: '0.23',\n            ebay_price: '0.99',\n            amazon_price: '14.45',\n            coolstuffinc_price: '0.39'\n        }\n    ],\n    misc_info: getDefaultYgoproDeckCardMisc() as YgoproDeckCardMisc,\n});","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 919.8, trueEdge: 64.5 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\n    ],\n};\n\nexport const PendulumEffectCoordinate: CoordinateData[] = [\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n];\n\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\n    tcg: {\n        small: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        medium: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n    },\n    ocg: {\n        small: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        medium: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 255,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n    },\n};\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilNameMap = {\n    normal: 'normal' as const,\n    gold: 'gold' as const,\n    platinum: 'platinum' as const,\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        name: FoilNameMap['normal' as const],\n        label: dictionary?.normal,\n        color: '#747b95',\n        isOption: false,\n    },\n    {\n        name: FoilNameMap['gold' as const],\n        label: dictionary?.gold,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    {\n        name: FoilNameMap['platinum' as const],\n        label: dictionary?.platinum,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    bulletSymbolOffset?: number,\n    bulletSymbolWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    bulletSymbolOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport const DefaultFontDeviation: Required<FontDeviation> = {\n    yOffset: 0,\n    yRatio: 1,\n};\nexport type FontDeviation = {\n    yRatio?: number,\n    yOffset?: number,\n};\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    letterDeviationMap?: Record<string, FontDeviation>,\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    headTextGapRatio: 0,\n};\nconst DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"LucidaFax-Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nconst DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact',\n    fontList: [],\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.5, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n};\n\nexport const TCGVanillaTypeStatFontList: FontSizeData[] = [\n    { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3 },\n    { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n    { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n    { bulletSymbolWidth: 23, fontSize: 21.8, lineHeight: 24.9, lineCount: 6 },\n    { bulletSymbolWidth: 23, fontSize: 17.28, lineHeight: 21.5, lineCount: 7, wordLetterSpacing: -0.06 },\n    { bulletSymbolWidth: 23, fontSize: 16.28, lineHeight: 18.8, lineCount: 8 },\n    { bulletSymbolWidth: 19, fontSize: 14.46, lineHeight: 16.7, lineCount: 9 },\n    { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10 },\n];\n\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    tcg: {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n        ],\n    },\n    ocg: {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            {\n                bulletSymbolWidth: 41,\n                bulletSymbolOffset: 3,\n                fontSize: 45.55,\n                lineHeight: 57.6,\n                headTextFontRatio: 0.2,\n                lineCount: 2,\n            },\n            {\n                bulletSymbolWidth: 31,\n                bulletSymbolOffset: 2,\n                fontSize: 35.55,\n                lineHeight: 40.6,\n                headTextFontRatio: 0.3,\n                lineCount: 3,\n            },\n            {\n                bulletSymbolWidth: 23,\n                bulletSymbolOffset: 1,\n                fontSize: 25.05,\n                lineHeight: 30.6,\n                headTextFontRatio: 0.35,\n                lineCount: 4,\n            },\n            {\n                bulletSymbolWidth: 16,\n                fontSize: 22.05,\n                lineHeight: 25.2,\n                headTextFontRatio: 0.4,\n                lineCount: 5,\n            },\n        ],\n    },\n};\n\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps',\n            font: 'MatrixRegularSmallCaps',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.55,\n            fontList: [{\n                bulletSymbolWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterDeviationMap: {\n                i: { yOffset: 1, yRatio: 1.03 },\n                ì: { yOffset: 1, yRatio: 1.03 },\n                í: { yOffset: 1, yRatio: 1.03 },\n                î: { yOffset: 1, yRatio: 1.03 },\n                ï: { yOffset: 1, yRatio: 1.03 },\n                ĩ: { yOffset: 1, yRatio: 1.03 },\n                ī: { yOffset: 1, yRatio: 1.03 },\n                ĭ: { yOffset: 1, yRatio: 1.03 },\n                į: { yOffset: 1, yRatio: 1.03 },\n                ǐ: { yOffset: 1, yRatio: 1.03 },\n                ȉ: { yOffset: 1, yRatio: 1.03 },\n                ȋ: { yOffset: 1, yRatio: 1.03 },\n                ɨ: { yOffset: 1, yRatio: 1.03 },\n                ɩ: { yOffset: 1, yRatio: 1.03 },\n                ᵹ: { yOffset: 1, yRatio: 1.03 },\n                ᵼ: { yOffset: 1, yRatio: 1.03 },\n                ᶖ: { yOffset: 1, yRatio: 1.03 },\n                ḭ: { yOffset: 1, yRatio: 1.03 },\n                ḯ: { yOffset: 1, yRatio: 1.03 },\n                ỉ: { yOffset: 1, yRatio: 1.03 },\n                ị: { yOffset: 1, yRatio: 1.03 },\n                I: { yOffset: 1, yRatio: 1.022 },\n                Ì: { yOffset: 1, yRatio: 1.022 },\n                Í: { yOffset: 1, yRatio: 1.022 },\n                Î: { yOffset: 1, yRatio: 1.022 },\n                Ï: { yOffset: 1, yRatio: 1.022 },\n                Ĩ: { yOffset: 1, yRatio: 1.022 },\n                Ī: { yOffset: 1, yRatio: 1.022 },\n                Ĭ: { yOffset: 1, yRatio: 1.022 },\n                Į: { yOffset: 1, yRatio: 1.022 },\n                İ: { yOffset: 1, yRatio: 1.022 },\n                Ɩ: { yOffset: 1, yRatio: 1.022 },\n                Ɨ: { yOffset: 1, yRatio: 1.022 },\n                Ǐ: { yOffset: 1, yRatio: 1.022 },\n                Ȉ: { yOffset: 1, yRatio: 1.022 },\n                Ȋ: { yOffset: 1, yRatio: 1.022 },\n                Ḭ: { yOffset: 1, yRatio: 1.022 },\n                Ḯ: { yOffset: 1, yRatio: 1.022 },\n                Ỉ: { yOffset: 1, yRatio: 1.022 },\n                Ị: { yOffset: 1, yRatio: 1.022 },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.825,\n            weight: 'bold',\n            fontList: [{\n                bulletSymbolWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            headTextBold: true,\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            fontStyle: 'ocg',\n            fontList: [{\n                bulletSymbolWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletSymbolWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    fontList: [{\n        bulletSymbolWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 21,\n            lineHeight: 21,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletSymbolWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletSymbolWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletSymbolWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletSymbolWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 48%',\n            'rgba(239,239,239,1) 52%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionList = [\n    { top: 175, left: 55, width: 100, height: 100 },\n    { top: 165, left: 323, width: 170, height: 80 },\n    { top: 175, left: 655, width: 100, height: 100 },\n    { top: 442, left: 45, width: 70, height: 170 },\n    { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n    { top: 442, left: 700, width: 70, height: 170 },\n    { top: 775, left: 55, width: 100, height: 100 },\n    { top: 810, left: 323, width: 170, height: 80 },\n    { top: 775, left: 655, width: 100, height: 100 },\n];\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -27, -38, -27, 0, -27, -38, -27, -38];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⦉';\nexport const NB_WORD_CLOSE = '⦊';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\nexport const TCG_SYMBOL_JOINLIST = '#★@∞';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil } from './foil-finish';\nimport { CondenseType } from './font-data-effect';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 0,\n    format: 'tcg',\n    frame: 'fusion',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    isLink: false,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        upSize: 0,\n    },\n    pendulumStyle: {\n        upSize: 0,\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 0,\n    format: 'tcg',\n    frame: 'effect',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    isLink: false,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        upSize: 0,\n    },\n    pendulumStyle: {\n        upSize: 0,\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: null,\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './foil-finish';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './regex';","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\n    return [\n        'fusion',\n        'synchro',\n        'xyz',\n        'link',\n        'dark-synchro',\n        'zarc',\n    ].includes(card.frame);\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return nameStyle;\n    }\n\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    const lightHeader = checkLightHeader(frame);\n\n    let contextualFont = 'Default';\n    if (format === 'ocg') contextualFont = 'OCG';\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    frame: 'fr',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        /** legacy */\n        artFrame: 'opaf',\n        artBorder: 'opab',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n    },\n    finish: 'fn',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        upSize: 'eus',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        upSize: 'pus',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        font: 'nsft',\n        fillStyle: 'nsfs',\n        headTextFillStyle: 'nshfs',\n        shadowColor: 'nssc',\n        shadowOffsetY: 'nssoy',\n        shadowOffsetX: 'nssox',\n        shadowBlur: 'nssb',\n        hasShadow: 'nshs',\n        lineColor: 'nslc',\n        lineWidth: 'nslw',\n        lineOffsetY: 'nsloy',\n        lineOffsetX: 'nslox',\n        hasOutline: 'nshl',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasGradient: 'nshg',\n        preset: 'nspr',\n        pattern: 'nspt',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const decompressedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                decompressedCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return decompressedCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const unshortenedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return unshortenedCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let rebuiltCard: Record<string, any>;\n    if (isCondensed) {\n        rebuiltCard = legacyReverseCardDataShortener(card);\n    } else {\n        rebuiltCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(rebuiltCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n    migratedCard.backgroundCrop = {\n        ...getDefaultCrop(),\n        ...migratedCard.backgroundCrop,\n    };\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || card.backgroundSource === 'offline') {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n\n    link.download = name;\n    link.href = window.URL.createObjectURL(blob);\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: 'Normal',\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter<string>(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\nimport { checkExtraDeckMonster } from './categorize';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\n    /** Try to being clever */\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\n    const formattedMonsterEffect = (checkExtraDeckMonster({\n        frame: normalizedFrame ?? 'normal'\n    }) && splittedMonsterEffect.length > 1)\n        ? [\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\n            ...splittedMonsterEffect.slice(1),\n        ].join('\\n')\n        : normalizedMonsterEffect;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: formattedMonsterEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontGetter } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","export const uploadToImgur = async (imgLink: string) => {\n    const myHeaders = new Headers();\n    myHeaders.append('Authorization', `Client-ID ${process.env.REACT_APP_IMGUR_CLIENT_ID}`);\n\n    const formdata = new FormData();\n    formdata.append('image', imgLink);\n    formdata.append('type', 'url');\n    formdata.append('title', imgLink.replace('https://images.ygoprodeck.com/images/cards_cropped/', '').replace('.jpg', ''));\n\n    return await fetch('https://api.imgur.com/3/image', {\n        method: 'POST',\n        headers: myHeaders,\n        body: formdata,\n        redirect: 'follow',\n    });\n};","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    border-left: var(--bw) solid var(--sub-level-3);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-primary);\n    }\n    input {\n        display: none;\n    }  \n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n    };\n};","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardOpacity,\n    CondenseType,\n    Foil,\n    FoilNameMap,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    /** Creative customize stuff */\n    'Star Type',\n    'Star Alignment',\n    'Card Icon Type',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            // artData,\n            artFinish,\n            artFit,\n            // artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            // backgroundData,\n            backgroundFit,\n            // backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            foil,\n            format,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            linkMap,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumStyle,\n            pendulumTextStyle,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            typeAbility,\n            typeTextStyle,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n\n        write('Format', format);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return [\n        CsvStandardFieldList.join(','),\n        valueList.join('\\n'),\n    ].join('\\n');\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = reader('Star Type') === 'text'\n                    ? rawStar\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\n                        ? parseInt(rawStar)\n                        : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? emptyCard.pendulumScaleRed;\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? emptyCard.pendulumScaleBlue;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter<string>(entry => typeof entry === 'string')\n                        .filter(entry => entry !== '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink);\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    effectStyle: { condenseTolerant, upSize: effectUpSize },\n                    effect,\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    linkMap,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumStyle: { upSize: pendulumEffectUpSize },\n                    pendulumTextStyle,\n                    setId,\n                    star,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n    if (frameResult !== 0) return frameResult;\n\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n    return bottomFrameResult;\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n    allowHotkey: boolean,\n    reduceMotionColor: boolean,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        resolution,\n        allowHotkey,\n        reduceMotionColor,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const resolution = useSetting(state => state.setting.resolution);\n    const {\n        opacity,\n        name,\n        isPendulum,\n    } = currentCard;\n    const pendingSave = useRef(false);\n\n    const download = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && clonedCanvas && clonedCanvasContext\n            && !isTainted\n        ) {\n            try {\n                if (size) {\n                    clonedCanvas.width = size[0];\n                    clonedCanvas.height = size[1];\n                }\n                /** Resize here */\n                clonedCanvasContext.drawImage(\n                    drawCanvas,\n                    0, 0, drawCanvas.width, drawCanvas.height,\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\n                );\n\n                const normalizedName = normalizeCardName(name);\n                var link = document.createElement('a');\n                link.download = normalizedName\n                    ? `${normalizedName}.png`\n                    : 'card.png';\n                link.href = clonedCanvas.toDataURL('image/png');\n                link.click();\n            } catch (e) {\n                onDownloadError();\n            }\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const normalizedName = normalizeCardName(name);\n\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [name]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth,\n    height = CanvasHeight,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType);\n                    }\n                } else {\n                    await caller(finishType);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x = DEFAULT_SHADOW_OFFSET_X,\n    y = DEFAULT_SHADOW_OFFSET_Y,\n    blur = DEFAULT_SHADOW_BLUR,\n    color = DEFAULT_TEXT_COLOR,\n    shadowColor = DEFAULT_SHADOW_COLOR,\n}: {\n    ctx: CanvasRenderingContext2D,\n} & CanvasTextStyle) => {\n    ctx.shadowOffsetX = x;\n    ctx.shadowOffsetY = y;\n    ctx.shadowBlur = blur;\n    ctx.shadowColor = shadowColor;\n    ctx.fillStyle = color;\n\n    return () => {\n        ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        ctx.fillStyle = DEFAULT_TEXT_COLOR;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number) = 0,\n    sy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\n\n            ctx.drawImage(image, normalizedX, normalizedY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\n\n                ctx.drawImage(image, normalizedX, normalizedY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number) = 0,\n    sy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        sx, sy,\n    );\n};\n\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number),\n    sy: number | ((image: HTMLImageElement) => number),\n    dw: number | ((image: HTMLImageElement) => number),\n    dh: number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\n\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\n                const normalizedW = typeof dw === 'number' ? dw : dw(image);\n                const normalizedH = typeof dh === 'number' ? dh : dh(image);\n    \n                ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    sx, sy,\n    dw, dh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        sx, sy,\n        dw, dh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    DefaultFontDeviation,\n    FontDeviation,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n            ? 0.046875\n            : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation = {},\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviation,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        yOffset: deviationYOffset = DefaultFontDeviation.yOffset,\n        yRatio = DefaultFontDeviation.yRatio,\n    } = xRatio < 1 ? {} : deviation;\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    ctx.scale(1, yRatio);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + deviationYOffset) / yRatio,\n    });\n    ctx.scale(1, 1 / yRatio);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: FontData,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n) => {\n    const {\n        fontSize,\n        ordinalFontRatio = DefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = DefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = () => {\n        symbolFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyNumberFont, stopApplyNumberFont,\n        applyLargerText, stopApplyLargerText,\n        applySymbolFont, stopApplySymbolFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applyFuriganaFont, stopApplyFuriganaFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius - 1, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n            + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    FontData,\n    BULLET_LETTER,\n    TCGSymbolLetterRegex,\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    FragmentSplitRegex,\n    WholeWordRegex,\n    DefaultFontSizeData,\n    ST_ICON_SYMBOL,\n    TextData,\n    NoSpaceRegex,\n    LETTER_GAP_RATIO,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    SquareBracketLetterRegex,\n    CapitalLetterRegex,\n    NumberRegex,\n    OCGNoOverheadGapRegex,\n    GAP_PER_WIDTH_RATIO,\n    RUBY_REGEX,\n    DefaultFontData,\n    RUBY_BONUS_RATIO,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NonCompressableRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter } from 'src/util';\nimport { getLetterWidth } from './letter';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing = DefaultFontSizeData.letterSpacing,\n    format,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    format: string,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletSymbolWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletSymbolWidth,\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont();\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * xRatio : 0)\n        );\n\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    format,\n    textData,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN` and `NB_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    textDrawer,\n    debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    debug?: boolean,\n}) => {\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        headTextFillStyle,\n        headTextBold = DefaultFontData.headTextBold,\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        metricMethod,\n        fontStyle,\n        letterDeviationMap = {},\n    } = fontData;\n    const {\n        bulletSymbolOffset = DefaultFontSizeData.bulletSymbolOffset,\n        bulletSymbolWidth,\n        capitalLetterRatio = DefaultFontSizeData.capitalLetterRatio,\n        fontSize,\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\n        iconSymbolWidth = bulletSymbolWidth,\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\n        letterSpacing = DefaultFontSizeData.letterSpacing,\n        ordinalFontOffsetY = DefaultFontSizeData.ordinalFontOffsetY,\n        squareBracketRatio = DefaultFontSizeData.squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont);\n    const {\n        stopApplyFuriganaFont, applyFuriganaFont,\n        stopApplyLargerText, applyLargerText,\n        stopApplyNumberFont, applyNumberFont,\n        stopApplyOrdinalFont, applyOrdinalFont,\n        applyScale, reverseScale,\n        applySymbolFont, stopApplySymbolFont,\n        applyAsymmetricScale, resetScale,\n    } = textWorker;\n\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    const baseline = trueBaseline / yRatio;\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(ctx, fragmentEdge, trueBaseline + bulletSymbolOffset, bulletSymbolWidth, getBulletSpacing(format));\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg' ? 1 : 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= -2 && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[currentLetter],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applySymbolFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const letter = fragment;\n                applySymbolFont();\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\n                fragmentEdge += letterWidth;\n\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap[letter],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    OCG_RUBY_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    ocgKeywordDataMap,\n    WHOLE_WORD_SOURCE,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    OCG_BULLET_SOURCE,\n    tcgToOCGLetterMap,\n    ocgToTCGLetterMap,\n    UNCOMPRESSED_SOURCE,\n    ocgNumberCircleMap,\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    FLAVOR_CONDITION_SOURCE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END\n} from 'src/model';\n\nexport const splitEffect = (effect: string, isNormal = false) => {\n    let effectText = effect;\n\n    let fullLineList = [];\n    const wholeLineRegex = new RegExp(`^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`);\n    let materialReplacement;\n    let material;\n    do {\n        materialReplacement = wholeLineRegex.exec(effectText)?.[1];\n        material = wholeLineRegex.exec(effectText)?.[2];\n\n        if (material && materialReplacement) {\n            fullLineList.push(material);\n            effectText = effectText.replace(materialReplacement, '');\n        }\n    } while (materialReplacement && material);\n\n    let effectFlavorCondition = '';\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n\n    return {\n        fullLineList,\n        effectText,\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is need or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CanvasConst,\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    TCGVanillaTypeStatFontList,\n    DefaultTCGNormalFontData,\n} from '../../model';\nimport { condense, createFontGetter } from '../../util';\nimport { setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    isNormal,\n    statInEffect,\n    typeInEffect,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    isNormal: boolean,\n}) => {\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\n        .filter(entry => entry !== '').join('-');\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\n        .filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (statInEffect && typeInEffect && isNormal && format === 'tcg') {\n        fontData = DefaultTCGNormalFontData;\n        fontData.fontList = TCGVanillaTypeStatFontList;\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nconst {\n    width: CanvasWidth,\n} = CanvasConst;\nexport const drawEffect = ({\n    ctx,\n    content,\n    isNormal = false,\n    fontData = EffectFontData.tcg,\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    fontData?: FontData,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n    } = option ?? {};\n    let effectSizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return effectSizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        effectText,\n        effectFlavorCondition,\n        fullLineList,\n    } = splitEffect(normalizedContent, isNormal);\n\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\n    const paragraphList = effectText ? effectText.split('\\n') : [];\n\n    const { font, fontList } = fontData;\n    const yRatio = 1;\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\n    while (effectSizeLevel < fontList.length && effectSizeLevel >= 0) {\n        const tolerancePerSentence: Record<string, number> = format === 'tcg'\n            ? forceRelaxCondenseLimit && effectSizeLevel < forceRelaxCondenseLimit\n                ? CondenseTolerantMap['relaxed']\n                : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n            : {\n                '1': 800,\n                '2': 800,\n                '3': 800,\n            };\n        const fontSizeData = fontList[effectSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n        } = sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1];\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 : trueWidthStart;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setStyle(isNormal && format === 'tcg' ? '' : '')\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(font)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData,\n            fontLevel: effectSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = condense(\n            median => {\n                const { currentLineList, currentLineCount } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList,\n                    additionalLineCount,\n                    format, textData,\n                    width,\n                });\n                lineListWithRatio = currentLineList;\n\n                if (currentLineCount > lineCount) return false;\n                return true;\n            },\n            200,\n        );\n\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle });\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            (effectiveMedian < tolerantValue)\n            && (effectSizeLevel < fontList.length - 1)\n        ) {\n            effectSizeLevel += 1;\n        } else {\n            ctx.clearRect(0, 0, CanvasWidth, 1111);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            /** Naturally, non-brekable lines have their own condense ratio. */\n            const fullLineListWithRatio = fullLineList.map(line => {\n                return {\n                    line,\n                    isLast: true,\n                    effectiveMedian: condense(\n                        median => {\n                            const { currentLineCount } = createLineList({\n                                ctx,\n                                median,\n                                paragraphList: [line],\n                                format, textData,\n                                width,\n                            });\n    \n                            if (currentLineCount > 1) return false;\n                            return true;\n                        },\n                    )\n                };\n            });\n\n            /** Draw each line based on their token list and corresponding ratio. */\n            [\n                ...fullLineListWithRatio,\n                ...lineListWithRatio,\n            ].forEach(({\n                line,\n                isLast,\n                effectiveMedian,\n            }) => {\n                const xRatio = effectiveMedian / 1000;\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width });\n\n                ctx.scale(xRatio, yRatio);\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    spaceWidth,\n                    textData,\n                    format,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            });\n\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\n            if (effectFlavorCondition.length > 0) {\n                const flavorFontData = EffectFontData.tcg;\n                const flavorFontSizeData = flavorFontData.fontList[effectSizeLevel];\n                const {\n                    fontSize,\n                    lineHeight,\n                } = flavorFontSizeData;\n                const flavorTextCurrentFont = createFontGetter();\n                ctx.font = flavorTextCurrentFont\n                    .setSize(fontSize)\n                    .setFamily(flavorFontData.font)\n                    .getFont();\n                const flavorTextData = {\n                    fontData: flavorFontData,\n                    fontLevel: effectSizeLevel,\n                    currentFont: flavorTextCurrentFont,\n                };\n                const internalEffectiveMedian = condense(\n                    median => {\n                        const { currentLineCount } = createLineList({\n                            ctx,\n                            median,\n                            paragraphList: [effectFlavorCondition],\n                            format, textData: flavorTextData,\n                            width,\n                        });\n\n                        if (currentLineCount > 1) return false;\n                        return true;\n                    },\n                );\n                const xRatio = internalEffectiveMedian / 1000;\n\n                ctx.scale(xRatio, yRatio);\n                const tokenList = tokenizeText(effectFlavorCondition);\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n                 * \n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n                 * \n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n                 * */\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    textData: flavorTextData,\n                    format,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            break;\n        }\n        resetStyle();\n    }\n\n    return effectSizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nconst {\n    width: CanvasWidth,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    cardIcon,\n    text,\n    star,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n}) => {\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = typeof star === 'string'\n        ? star === '' ? 0 : 1\n        : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    return await Promise.all([...Array(normalizedStarCount)]\n        .map(async () => {\n            offset += (starWidth + startSpacing);\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    return drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...coordinate,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...coordinate,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1122, 240 - widthOffset, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...coordinate,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    linkMap: string[],\n    style: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || !Array.isArray(linkMap)) return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        600, 1080,\n        120, 30,\n        style,\n    );\n    const resetStyle = setTextStyle({ ctx, ...style });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = 'bold 26.55px RoGSanSrfStd-Bd';\n    ctx.fillText(`${linkMap.length}`, 622.75, 1105);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import {\n    ArrowPositionList,\n    BackgroundType,\n    CanvasConst,\n    CardArtCanvasCoordinateMap,\n    CardOpacity,\n    Foil,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { getCardIconFromFrame } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n    topToPendulumStructure,\n    pendulumStructureHeight,\n    leftToPendulumStructure,\n    effectBoxHeight,\n    effectBoxWidth,\n    leftToEffectBox,\n    topToEffectBox,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    format,\n    hasBackground,\n    frame, bottomFrame,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    format: string,\n    frame: string, bottomFrame: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    foil: Foil,\n    pendulumSize: string,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFinishX,\n        artFinishY,\n        artWidth,\n    } = getArtCanvasCoordinate(isPendulum, opacity);\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderType = frameBorderType;\n    const applyArtFinish = !boundless && artBorder;\n\n    const resultAPI = {\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\n         * \n         *  * Trying to draw only a portion of the image.\n         *  * The source image has totally different size compare to the destination boundary.\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\n         */\n        calculateCardArtRedrawCoordination(\n            imageCanvas: HTMLCanvasElement,\n            customOpacity?: CardOpacity,\n            extraHeightRatio = 1,\n            customBackgroundType?: BackgroundType,\n        ) {\n            const normalizedOpacity = customOpacity ?? opacity;\n            const {\n                body: bodyOpacity\n            } = normalizedOpacity;\n            const {\n                artX,\n                artY,\n                artWidth,\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\n            const imageScaledRatio = artWidth / imageWidth;\n            const sourceOffsetX = bodyOpacity < 100\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\n                : 0;\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\n            const sourceOffsetY = bodyOpacity < 100\n                ? (topToPendulumStructure - artY) / imageScaledRatio\n                : 0;\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\n            const offsetHeight = bodyOpacity < 100\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\n                : 0;\n\n            const destinationX = artX + destinationOffsetX;\n            const destinationY = artY + destinationOffsetY;\n            const destinationWidth = artWidth - destinationOffsetX * 2;\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\n\n            return {\n                imageScaledRatio,\n                sourceOffsetX,\n                sourceOffsetY,\n                destinationOffsetX,\n                destinationOffsetY,\n                offsetHeight,\n                destinationX,\n                destinationY,\n                destinationWidth,\n                destinationHeight,\n            };\n        },\n\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            ctx.globalAlpha = opacityBody / 100;\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\n\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\n                if (clonedCanvas && clonedCanvasContext) {\n                    /** Clone background to create a new frame */\n                    clonedCanvas.width = cardWidth;\n                    clonedCanvas.height = cardHeight;\n                    clonedCanvasContext.drawImage(\n                        backgroundCanvas,\n                        0, 0, backgroundWidth, backgroundHeight,\n                        0, 0, cardWidth, cardHeight,\n                    );\n                    /** Clear slot for card art */\n                    clonedCanvasContext.clearRect(\n                        CardArtCanvasCoordinateMap.normal.artX,\n                        CardArtCanvasCoordinateMap.normal.artY,\n                        CardArtCanvasCoordinateMap.normal.artWidth,\n                        CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\n                    );\n                    /** Clear slot for effect box */\n                    clonedCanvasContext.clearRect(\n                        leftToEffectBox,\n                        topToEffectBox,\n                        effectBoxWidth,\n                        effectBoxHeight,\n                    );\n                    ctx.drawImage(\n                        clonedCanvas,\n                        0, 0,\n                        cardWidth, cardHeight,\n                        0, 0,\n                        cardWidth, cardHeight,\n                    );\n                }\n            }\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: () => {\n            if (!artworkCanvas || !ctx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            ctx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                artX, artY,\n                artWidth, artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: (\n            boundary?: 'pendulum',\n        ) => {\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\n\n                if (backgroundType === 'full') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        { ...opacity, body: 0 },\n                        undefined,\n                        'full',\n                    );\n                } else if (backgroundType === 'fit') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        opacity,\n                        undefined,\n                        'fit',\n                    );\n                }\n\n                const {\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\n                    offsetHeight: backgroundOffsetHeight,\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\n                } = redrawCoordination;\n                ctx.drawImage(\n                    backgroundCanvas,\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\n                    backgroundDestinationX, backgroundDestinationY,\n                    backgroundDestinationWidth, backgroundDestinationHeight,\n                );\n                return;\n            }\n\n            const {\n                artX,\n                artY,\n                artWidth,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                { ...opacity, boundless: true },\n                backgroundType,\n            );\n            ctx.drawImage(\n                backgroundCanvas,\n                0, 0,\n                backgroundWidth, backgroundHeight,\n                artX, artY,\n                artWidth, artWidth / (backgroundWidth / backgroundHeight)\n            );\n        },\n        drawAttribute: async () => {\n            await drawAsset(ctx, `attribute/attr-${format}-${attribute.toLowerCase()}.png`, 678, 55);\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starAlignment,\n                style,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n            });\n        },\n        drawPendulumScaleIcon: async () => {\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\n        },\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\n        drawLinkArrowMap: async (linkMap: string[]) => {\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n                .map(async entry => {\n                    const { left, top, height, width } = ArrowPositionList[entry - 1];\n                    const isActive = linkMap.includes(`${entry}`);\n                    const baseLink = `link/link-inactive-${entry}`;\n                    const activeLink = `link/link-active-${entry}`;\n                    const coordinate = [left, top, width, height] as const;\n\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n                    if (isActive) {\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n                    } else return;\n                })\n            );\n        },\n        drawStatBorder: async (color: string) => {\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                { color },\n            );\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.globalAlpha = opacityName / 100;\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\n            ctx.globalAlpha = 1;\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.globalAlpha = opacityText / 100;\n            await drawAsset(\n                ctx,\n                `background/background-text-${bottomFrame}.png`,\n                backgroundEffectBoxX, backgroundEffectBoxY,\n            );\n            if (withPendulum) {\n                ctx.globalAlpha = opacityPendulum / 100;\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\n            }\n            ctx.globalAlpha = 1;\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            return drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n        },\n        drawNameBorder: async () => {\n            return nameBorder\n                ? drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0)\n                : Promise.resolve();\n        },\n        drawArtBorder: async () => {\n            if (artBorder) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\n            await drawAsset(\n                ctx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${foilType}`\n                + (artBorder ? '' : '-artless')\n                + '.png',\n                30, 185,\n            );\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!hasFoil && bottomFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n        },\n        drawCardBorder: async () => {\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n        },\n        drawEffectBorderFoil: async () => {\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n        },\n        drawLinkMapFoil: async (withBorder = artBorder) => {\n            await drawAsset(ctx, `link/link-overlay-arrow-${foil}${withBorder ? '' : '-artless'}.png`, 0, 175);\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if (artBorder || nameBorder) await loopFinish(\n                ctx,\n                'name',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                },\n            );\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE) {\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n            }\n        },\n        drawArtFinish: async () => {\n            if (applyArtFinish) await loopArtFinish(\n                ctx,\n                'art',\n                async finishType => await drawAsset(\n                    ctx,\n                    `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\n                    artFinishX, artFinishY,\n                ),\n            );\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async () => {\n            await loopFinish(\n                ctx,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        ctx,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder) {\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\n            );\n        },\n        drawBorderPendulumFinish: async () => {\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\n            );\n        },\n        drawFrameFinish: async () => {\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n        },\n        drawFrameBackgroundFinish: async () => {\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n        },\n        drawCardBorderFinish: async () => {\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    trueBaseline: number,\n    width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        cloneNode: HTMLCanvasElement | null | undefined,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n    },\n) => {\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper } = option;\n    const cloneCtx = cloneNode?.getContext('2d');\n    if (ctx && cloneCtx && value) {\n        const {\n            font,\n            fillStyle,\n            headTextFillStyle,\n            shadowBlur,\n            hasShadow,\n            shadowColor,\n            shadowOffsetX,\n            shadowOffsetY,\n            hasOutline: hasDefaultOutline,\n            lineColor,\n            lineWidth,\n            lineOffsetX,\n            lineOffsetY,\n            hasGradient,\n            gradientAngle,\n            gradientColor,\n            pattern,\n        } = { ...getDefaultNameStyle(), ...style };\n        const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n        const hasOutline = hasDefaultOutline;\n\n        ctx.textAlign = 'left';\n        if (hasShadow) {\n            ctx.shadowColor = shadowColor;\n            ctx.shadowOffsetY = shadowOffsetY;\n            ctx.shadowOffsetX = shadowOffsetX;\n            ctx.shadowBlur = shadowBlur;\n        }\n        if (hasDefaultOutline) {\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = lineColor;\n        }\n        const fontData = {\n            ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n            headTextFillStyle,\n        };\n        const fontGetter = createFontGetter({\n            defaultFamily: fontData.font,\n            defaultSize: fontData.fontList[0].fontSize,\n            defaultWeight: fontData.weight,\n        });\n        const textData = {\n            fontLevel: 0,\n            fontData,\n            currentFont: fontGetter,\n        };\n        const quoteConvertedValue = normalizeCardText(\n            value,\n            format,\n            { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n        );\n\n        /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n        const crudeTokenList = format === 'ocg'\n            ? [quoteConvertedValue]\n            : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n        const fontGetterForWidthCalculating = createFontGetter({\n            defaultFamily: fontData.font,\n            defaultSize: fontData.fontList[0].fontSize,\n            defaultWeight: fontData.weight,\n        });\n        const normalStyle = fontGetterForWidthCalculating.getFont();\n        const symbolStyle = fontGetterForWidthCalculating\n            .setSize(cur => cur * fontData.symbolFontRatio)\n            .setStyle('small-caps')\n            .setFamily(fontData.symbolFont)\n            .getFont();\n        let maxAscent = 0;\n        let maxDescent = 0;\n        crudeTokenList.forEach((cur, index) => {\n            ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n            const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n            maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n            maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n        }, 0);\n\n        ctx.font = normalStyle;\n        /** Calculate fitting ratio like normal */\n        let actualLineWidth = 0;\n        const internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [quoteConvertedValue],\n                    format, textData,\n                    width,\n                });\n\n                if (currentLineCount > 1) return false;\n                actualLineWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n        const xRatio = internalEffectiveMedian / 1000;\n        const yRatio = 1;\n\n        ctx.scale(xRatio, yRatio);\n\n        /** Calculate gradient and offset based on card's frame. */\n        const offsetY = fontData.fontList[0].offsetY ?? DefaultFontSizeData.offsetY;\n        const tokenList = tokenizeText(quoteConvertedValue);\n        const gradient = actualLineWidth > 0 && hasGradient\n            ? getNameGradient(\n                ctx,\n                gradientAngle,\n                parsePalette(gradientColor),\n                edge,\n                actualLineWidth,\n                trueBaseline,\n                maxAscent, maxDescent,\n            )\n            : undefined;\n\n\n        /** First iteration: Draw the card name with color, shadow and gradient */\n        ctx.fillStyle = gradient ?? fillStyle;\n        drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            format,\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            },\n        });\n\n        /** Second iteration, draw pattern, we follow these steps:\n         *  * We create a second, temporary canvas node.\n         *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n         *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essential \"coating\" the pattern on top of the text, without damaging it's surrounding.\n         */\n        if (patternImage && cloneNode) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n            await drawAsset(cloneCtx, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(cloneCtx, `background/background-name-${frame}.png`, 0, 0);\n            cloneCtx.globalCompositeOperation = patternBlendMode;\n            await drawAssetWithSize(\n                cloneCtx, `finish-name/${patternImage}.png`,\n                edge, trueBaseline - maxAscent,\n                width,\n                maxAscent + maxDescent,\n            );\n            ctx.globalCompositeOperation = 'source-in';\n            ctx.drawImage(cloneNode, 0, 0);\n            ctx.scale(xRatio, yRatio);\n            ctx.globalCompositeOperation = 'source-over';\n\n            /** Again, foot text is not affected by pattern, so we draw the whole name again but without the foot text part.\n             * \n             * Because head text is not affected by shadow and outline, and their color is always solid. When placed on top of the head text with pattern, they will cover the pattern perfectly.\n             */\n            drawLine({\n                ctx,\n                tokenList,\n                xRatio, yRatio,\n                trueEdge: edge, trueBaseline,\n                textData,\n                format,\n                textDrawer: () => {},\n            });\n        }\n\n        /** Third iteration, we apply \"outline\" to card name. We use stroke method to simulate outline behavior. This is not ideal (like at all), but current canvas has no way to do it properly. */\n        if (hasOutline) {\n            ctx.globalCompositeOperation = 'destination-over';\n            drawLine({\n                ctx,\n                tokenList,\n                xRatio, yRatio,\n                trueEdge: edge, trueBaseline,\n                textData,\n                format,\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                    ctx.lineJoin = 'round';\n                    ctx.strokeText(\n                        letter,\n                        scaledEdge + lineOffsetX,\n                        scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                    );\n                },\n            });\n        }\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n        const defaultTextStyle = getDefaultNameStyle();\n        ctx.fillStyle = defaultTextStyle.fillStyle;\n        ctx.shadowColor = defaultTextStyle.shadowColor;\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\n        ctx.lineWidth = defaultTextStyle.lineWidth;\n        ctx.strokeStyle = defaultTextStyle.lineColor;\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n    }\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<string, number> = {\n    small: 0,\n    medium: 1,\n    large: 2,\n};\nexport const drawTypeAbilityText = ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: 'small' | 'medium' | 'large',\n    furiganaHelper: boolean,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'];\n    const fontData = getTypeAbilityFontData()[format];\n    if (metricMethod) fontData.metricMethod = metricMethod;\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        textData,\n        format,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nexport const drawTypeAbility = async ({\n    ctx,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: 'small' | 'medium' | 'large',\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle });\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -4 : 0;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        await drawAssetWithSize(\n            ctx,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            image => edge + image.naturalWidth * 0.175 * xRatio + offsetX,\n            image => baseline - image.naturalWidth * 0.8 + offsetY,\n            image => image.naturalWidth,\n            image => image.naturalWidth,\n        );\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx && value) {\n        const fontSize = 60.5;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const digitScaleRatio = 0.65;\n        const digitList = `${value}`.split('');\n        let totalWidth = 0;\n\n        digitList.forEach(digit => {\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\n        });\n        let accLeft = edge - totalWidth / 2;\n\n        digitList.forEach(digit => {\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline + fontSize);\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\n        });\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    edge = 99,\n    baseline = 1150.93,\n    baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n    } = {\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const { stroke = false, textStyle } = option ?? {};\n    const resetStyle = setTextStyle({\n        ctx,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4;\n    ctx.font = 'bold 23.7px palatino-linotype-bold';\n\n    let left = edge;\n    ctx.fillText('1', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText('1', left, baseline);\n    left += ctx.measureText('1').width - 2;\n\n    ctx.font = 'bold 17.78px palatino-linotype-bold';\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = 'bold 22.22px palatino-linotype-bold';\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    baseline: number,\n) => {\n    if (!ctx) return;\n\n    ctx.scale(1, 0.98);\n    ctx.font = 'bold 35.73px Matrix-Bold';\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = 'bold 34.74px Matrix-Bold';\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    edge: number,\n    baseline: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const statWidth = 73.97;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = 'bold 37px matrix';\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.font = 'bold 34px matrix';\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = '37px MatrixBoldSmallCaps';\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = '37px matrix';\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = '37px MatrixBoldSmallCaps';\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = 'bold 37px matrix';\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} 22px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, 66.65 + xOffset, 1105.01 + offsetY);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, 666.56 + xOffset, 872.94 + offsetY);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, 728.78 + xOffset, 871.50 + offsetY);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinate,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    CardArtCanvasCoordinateMap,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n} from 'src/model';\nimport {\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    pendulumSize?: 'medium',\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxCanvasRef,\n    } = canvasMap;\n    const {\n        format,\n        hasBackground, backgroundType,\n        frame, foil, finish, artFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle,\n        atk, def, linkMap,\n        attribute,\n        cardIcon, subFamily, star, starAlignment,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        typeAbility: {\n            name: 'typeAbility',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n        ? !!(atk || def || (isLink && linkMap.length))\n        : isMonster;\n    const typeInEffect = cardIcon === 'auto'\n        ? isMonster || isSpeedSkill\n        : cardIcon !== 'st' || isLink;\n\n    const {\n        isInitializing,\n        imageChangeCount,\n        pendulumSize = 'medium',\n        language,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (x: number, y: number, w: number, h: number) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground ? baseFill : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            /** Base colored background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(0, 0, CanvasWidth, CanvasHeight);\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawLinkArrowMap,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n                drawLinkMapFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n\n                calculateCardArtRedrawCoordination,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                format,\n                frame, bottomFrame,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            if (backgroundCanvas && ctx) drawBackground();\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\n            if (isPendulum && !isLink && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\n                    const {\n                        sourceOffsetX, sourceOffsetY,\n                        offsetHeight,\n                        destinationX, destinationY,\n                        destinationWidth, destinationHeight,\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\n\n                    /** To avoid stacking transprency, we clear the area before redrawing */\n                    await fillBaseColor(\n                        destinationX, destinationY,\n                        destinationWidth, destinationHeight,\n                    );\n\n                    drawBackground('pendulum');\n                    ctx.drawImage(\n                        artworkCanvas,\n                        sourceOffsetX, sourceOffsetY,\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\n                        destinationX, destinationY,\n                        destinationWidth, destinationHeight,\n                    );\n                }\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n            }\n\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\n            await drawArtFinish();\n            await drawArtOverlayFinish();\n\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n            if (isPendulum && !isLink && !boundless) {\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                if (isLink) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                        const {\n                            destinationX, destinationY,\n                            destinationWidth, destinationHeight,\n                        } = calculateCardArtRedrawCoordination(\n                            artworkCanvas,\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\n                            extraHeightRatio,\n                        );\n    \n                        await fillBaseColor(\n                            destinationX, destinationY,\n                            destinationWidth, destinationHeight,\n                        );\n                        drawBackground('pendulum');\n                    }\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (artworkCanvas && ctx) drawCardArt();\n                await drawArtOverlayFinish();\n\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum && !isLink) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil);\n                    await drawBorderPendulumFinish();\n                } else {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder(resolvedStatTextStyle.color ?? '#000000');\n\n            /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\n            if (!isPendulum && isLink) {\n                await drawLinkArrowMap(linkMap);\n                await drawLinkMapFoil(false);\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\n                if (statInEffect) await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle);\n                resetStyle();\n            }\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            if (!isLink && !isSpeedSkill) await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        frame,\n        format,\n        hasBackground,\n        backgroundType,\n        attribute,\n        bottomFrame,\n        foil,\n        star,\n        starAlignment,\n        cardIcon,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        lightFooter,\n        linkMap,\n        resolvedStatTextStyle,\n        resolvedOtherEffectTextStyle,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        pendulumSize,\n        statInEffect,\n        levelStyle,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            drawScale(ctx, pendulumScaleBlue ?? 0, 84.4, 790);\n            drawScale(ctx, pendulumScaleRed ?? 0, 728.0, 790);\n        }\n    }, [readyToDraw, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\n\n            if (!clearCanvas(ctx) || !cloneNode) return;\n\n            await drawName(\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper },\n            );\n        };\n    }, [\n        readyToDraw,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\n        drawStatText(ctx, 'ATK', 432.10, 1106.494);\n        drawStat(ctx, atk, 508.824, 1106.494);\n        if (!isLink) {\n            drawStatText(ctx, 'DEF', 600.85, 1106.494);\n            drawStat(ctx, def, 673.865, 1106.494);\n        }\n        resetStyle();\n    }, [readyToDraw, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                isLink, isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        format,\n        isLink,\n        isPendulum,\n        lightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n        if (!clearCanvas(ctx)) return;\n\n        const endOfPassword = drawPasswordText({\n            ctx,\n            value: password,\n            lightFooter,\n            alignment: 'left',\n            format,\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\n            textStyle: resolvedOtherEffectTextStyle,\n        });\n        if (isFirstEdition) {\n            const left = isLegacyCard && !isPendulum\n                ? isLink ? 151 : 89\n                : Math.max(endOfPassword + 14.813, 142.2) - (format === 'ocg' ? 10 : 0);\n            const bottom = isLegacyCard && !isPendulum\n                ? 871\n                : 1150.93;\n            const bottomOffset = isLegacyCard && !isPendulum\n                ? 0\n                : isSpeedSkill ? -2 : -1;\n\n            draw1stEdition(\n                ctx,\n                left,\n                bottom,\n                bottomOffset,\n                {\n                    textStyle: {\n                        color: lightFooter ? '#ffffff' : '#000000',\n                        ...resolvedOtherEffectTextStyle,\n                    }\n                },\n            );\n        }\n    }, [\n        readyToDraw,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            const compactThreshold = format === 'tcg' ? 390 : 350;\n            const compactOffset = format === 'tcg' ? 30 : 40;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            return await drawSticker({\n                ctx: stickerCanvasRef.current?.getContext('2d'),\n                sticker,\n            });\n        };\n    }, [readyToDraw, sticker, stickerCanvasRef]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.typeAbility.rerun += 1;\n        drawingPipeline.current.typeAbility.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize } = effectStyle ?? {};\n            const normalizedUpSize = effectTextStyle[0] ? upSize : 0;\n            const effectIndexSize = drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    isNormal,\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                },\n            });\n            await drawTypeAbility({\n                ctx: typeCtx,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'medium' : 'small',\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n            });\n        };\n    }, [\n        readyToDraw,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        format,\n        frame,\n        furiganaHelper,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { upSize } = pendulumStyle ?? {};\n            const normalizedUpSize = pendulumTextStyle[0] ? upSize : 0;\n            drawEffect({\n                ctx,\n                content: pendulumEffect,\n                isNormal: false,\n                fontData: PendulumEffectFontData[format],\n                textStyle: resolvedPendulumEffectTextStyle,\n                sizeList: PendulumEffectCoordinate,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                }\n            });\n        }\n    }, [\n        readyToDraw,\n        condenseTolerant,\n        format,\n        isPendulum,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n        };\n    }, [readyToDraw, finishCanvasRef, loopFinish, name]);\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        // isRelevant: () => boolean,\n    }) => {\n        const {\n            // isRelevant,\n            isPendulum = false,\n            opacity,\n        } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n        /** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\n        const generateLayer = (\n            canvasLayer: React.RefObject<HTMLCanvasElement>,\n            exportCtx: CanvasRenderingContext2D | null | undefined,\n            delayQueue: number = 0,\n        ) => {\n            return new Promise<boolean>(resolve => {\n                setTimeout(() => {\n                    if (!canvasLayer.current || !exportCtx) resolve(false);\n                    else {\n                        try {\n                            canvasLayer.current.toBlob(blob => {\n                                if (!blob) resolve(false);\n                                else {\n                                    const url = URL.createObjectURL(blob);\n                                    if (!url) resolve(false);\n                                    else {\n                                        const layer = new Image();\n                                        layer.src = url;\n                                        layer.onload = () => {\n                                            exportCtx.drawImage(layer, 0, 0);\n                                            URL.revokeObjectURL(url);\n                                            resolve(true);\n                                        };\n                                        layer.onerror = () => {\n                                            URL.revokeObjectURL(url);\n                                            resolve(false);\n                                        };\n                                    }\n                                }\n                            });\n                        } catch (e) {\n                            console.error(e);\n                            resolve(false);\n                        }\n                    }\n                }, delayQueue * 25);\n            });\n        };\n\n        if (exportCanvas && exportCtx) {\n            exportCtx.clearRect(0, 0, CanvasConst.width, CanvasConst.height);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            // await generateLayer(frameCanvas, exportCtx);\n            const artworkCanvas = artworkCanvasRef.current;\n            if (artworkCanvas && exportCtx) {\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n                if (imageHeight > 0) {\n                    exportCtx.drawImage(\n                        artworkCanvas,\n                        0, 0,\n                        imageWidth, imageHeight,\n                        artX, artY,\n                        artWidth, artWidth / (imageWidth / imageHeight),\n                    );\n                }\n            }\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(exportCanvas, 0, 0);\n        }\n    }, [\n        language,\n        artworkCanvasRef, \n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxCanvasRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    if (!clearCanvas(ctx)) return 0;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'];\n    const isNumberPassword = /^[0-9]*$/.test(value);\n    const fontData = PasswordFontData[format];\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: !isNumberPassword ? 1 : 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return result.tokenEdge;\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'];\n    const fontData = CreatorFontData[format];\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import { Button, Dropdown, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { MenuOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-resolution {\n        background-color: var(--main-active);\n    }\n`;\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n    .button-option {\n        position: absolute;\n        right: 0;\n        top: 0;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        padding: var(--spacing);\n        border-left: var(--bw) solid var(--sub-secondary);\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        .anticon {\n            font-size: var(--fs-2xl);\n            margin-left: 0;\n        }\n        &:hover {\n            background: #399af9;\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                    <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n                        {language['button.download.resolution.label']}\n                    </StyledDownloadDropdownLabel>\n                    {[\n                        { width: 549, height: 800 },\n                        { width: 561, height: 818 },\n                        { width: 813, height: 1185 },\n                    ].map(({ width, height }) => {\n                        return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                            className={resolution[0] === width && resolution[1] === height ? 'active-resolution' : ''}\n                            onClick={() => {\n                                updateSetting({\n                                    resolution: [width, height],\n                                });\n                                forceRefocus();\n                            }}\n                        >\n                            {width} × {height}\n                        </StyledDownloadDropdownOption>;\n                    })}\n                </Menu>}\n            >\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\n                    <MenuOutlined />\n                </div>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport './explanation.scss';\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <ExclamationCircleOutlined className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    width: 24px;\n    height: 24px;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    Icon: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n        >\n            <>\n                <Icon {...iconProps} />{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        allowHotkey,\n        reduceMotionColor,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import { GithubFilled, BugOutlined, DatabaseFilled } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage } from 'src/service';\nimport { Radio } from 'antd';\nimport './app-header.scss';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <span className=\"version\">v{process.env.REACT_APP_VERSION ?? 'unknown'}</span>\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <span className=\"bug-report\">\n                    <div id=\"sentry-bug-report\">\n                        {language['contributor.bug-report.tooltip']} <BugOutlined />\n                    </div>\n                </span>\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<div className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </div>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    const language = useLanguage();\n\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<div className=\"disclaimer\">\n            <h2>{language['alert.explaination.tainted.first-question']}</h2>\n            <p>{language['alert.explaination.tainted.first-answer']}</p>\n            <h2>{language['alert.explaination.tainted.second-question']}</h2>\n            <p>{language['alert.explaination.tainted.second-answer']}</p>\n            <h2>{language['alert.explaination.tainted.third-question']}</h2>\n            <p>{language['alert.explaination.tainted.third-answer']}</p>\n        </div>}\n    />;\n};","import styled from 'styled-components';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;","import { Button, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { StyledCode } from '../atom';\nimport './formatting-guide.scss';\n\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['guide.format.close']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / 375;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: () => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        // setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const targetFile = e.target.files[0];\n            const maxFileSize = 4;\n\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\n                setLoading(true);\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    if (typeof reader.result === 'string') {\n                        setInternalSource(reader.result);\n                        setSourceType('offline');\n                        setInputMode('offline');\n                        onSourceChange('offline', reader.result);\n                        setLoading(false);\n                    }\n                });\n                reader.readAsDataURL(targetFile);\n            } else {\n                onMaxSizeExceeded(maxFileSize);\n            }\n        } else alert(language['image-cropper.not-found-warning']);\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded();\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={`card-image-cropper ${className}`}>\n            <div className=\"card-image-source-input\">\n                {children}\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                {language['image-cropper.source.online.tooltip']}\n                            </Radio.Button>\n                            <Tooltip title={<div className=\"image-warning\">\n                                {language['image-cropper.offline-warning']}\n                            </div>}>\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                        {<div className=\"online-image-tip\">\n                            {language['image-cropper.online-tip']}\n                        </div>}\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={applyOfflineSource}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                        <hr />\n                        {language['image-cropper.offline-warning']}\n                    </div>\n                </div>\n            </div>\n            {beforeCropper}\n            <div className=\"card-cropper\" onKeyDown={() => {\n                /** Nudge selection also count as user interaction */\n                setInteracted(true);\n            }}>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <div\n                        className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                        onClick={() => {\n                            setInteracted(true);\n                            onForceFitChange(!forceFit);\n                        }}\n                    >\n                        <FullscreenOutlined />\n                    </div>\n                    {!forceFit && <div className=\"image-option alignment-center-option\" onClick={() => {\n                        setInteracted(true);\n                        setCrop(cur => {\n                            const { width, x } = cur.completed ?? {};\n\n                            if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                            const newCrop: ReactCrop.Crop = {\n                                ...cur.completed,\n                                x: (100 - width) / 2,\n                            };\n\n                            return {\n                                current: newCrop,\n                                completed: newCrop,\n                            };\n                        });\n                    }}>\n                        <VerticalAlignMiddleOutlined />\n                    </div>}\n                    {!forceFit && <div className=\"image-option alignment-middle-option\" onClick={() => {\n                        setInteracted(true);\n                        setCrop(cur => {\n                            const { height, y } = cur.completed ?? {};\n\n                            if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                            const newCrop: ReactCrop.Crop = {\n                                ...cur.completed,\n                                y: (100 - height) / 2,\n                            };\n\n                            return {\n                                current: newCrop,\n                                completed: newCrop,\n                            };\n                        });\n                    }}>\n                        <VerticalAlignMiddleOutlined />\n                    </div>}\n                </div>}\n                {(!hasImage || error) && <Empty description={language['image-cropper.not-found-warning']} image={null} />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        pendingCrop.current = {\n                            source: '',\n                            crop: null,\n                        };\n                        setError('Image error');\n                        setLoading(false);\n                        if (!receivingCanvas) onTainted();\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded();\n                        } else {\n                            onTainted();\n                        }\n                        // setCrossOrigin(undefined);\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});\n","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: 13px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-sm);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    .title {\n        line-height: 0;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkChooser = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkChooser = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkChooser) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './app-header';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './icon-button';\nexport * from './input-train';\nexport * from './setting';\nexport type { ImageCropperRef } from './image-cropper';\nexport { ImageCropper } from './image-cropper';\nexport { LinkMarkChooser } from './link-marker';\nexport { Loading } from './loading';","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { RadioTrain } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport copy from 'copy-to-clipboard';\nimport { downloadBlob, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        border-left: var(--bw) solid var(--main-primary);\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        grid-template-columns: 115px auto;\n        gap: var(--spacing-lg);\n        align-items: center;\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .inline-alert {\n        grid-row: span 2;\n        line-height: 1.25;\n    }\n    .export-input-raw {\n        grid-row: span 3;\n        height: 100%;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n}: CardDataCopyButton) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledCardDataCopyButton\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\n        {children}\n    </StyledCardDataCopyButton>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    allowHotkey: boolean,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    allowHotkey,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n                        notification.error({\n                            message: language['error.export.message'],\n                            description: language['error.export.description'],\n                        });\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className=\"export-container-result\">\n                    <StyledActionIconButton\n                        onClick={() => {\n                            const blob = new Blob([data], { type: 'application/json' });\n                            downloadBlob(\n                                normalizeCardName(name),\n                                blob,\n                                'application/json',\n                            );\n                        }}\n                    >\n                        {language['button.export-modal.download-button.label']}\n                    </StyledActionIconButton>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                    />}\n                    {(mode === 'ygocarder' && !isPartial) && <CardDataCopyButton\n                        data={internalCardData.ygocarder.data}\n                    >\n                        {language['button.export-modal.copy-button.label']}\n                    </CardDataCopyButton>}\n                    {((mode === 'other')\n                    || (mode === 'ygocarder' && isPartial)) && <div className=\"inline-alert\">\n                        {language['prompt.export.offline-warning.message']}\n                    </div>}\n                    <StyledActionIconButton onClick={onRequireDownload}>\n                        {language['button.export-modal.save-button.label']}\n                    </StyledActionIconButton>\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['button.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown \n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport { isYgoprodeckImage, uploadToImgur } from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    try {\n                        const imgurResponse = await uploadToImgur(decodedCard.art);\n                        if (imgurResponse.status !== 200) {\n                            surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                            throw new Error('Imgur response status: ' + imgurResponse.status);\n                        }\n                        const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                        surveyedDecodedCard.art = imgurResponseData.data.link;\n                    } catch (e) {\n                        /** Failing the upload process does not terminate the import process */\n                        console.error('Upload error:', e);\n                        notification.error({\n                            message: language['prompt.import.imgur.message'],\n                            description: language['prompt.import.imgur.description'],\n                        });\n                    }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['button.import.label']}\n            className=\"global-overlay\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl-E / ⌘-E</div>\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['button.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\n    label,\n    value,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n    label: dictionary[labelKey],\n    value,\n}));\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n                />\n                </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { AnglePicker, ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n}\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className=\"controls-wrapper gradient-picker-container\">\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <div className=\"angle-picker-container\">\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n                <AnglePicker angle={angle} size={120} setAngle={setAngle} />\n            </div>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import { StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\n\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={5} xmin={-5}\n                ymax={5} ymin={-5}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {widthLabel}: <GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { Checkbox, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPatternOption,\n    StyledPickerButton,\n} from './style-picker.styled';\nimport { useLanguage, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [customStyleSignal, sendCustomStyleSignal] = useRefresh();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        customStyleSignal();\n    }, [customStyleSignal]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={fillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: color.hex }));\n                                            customStyleSignal();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            customStyleSignal();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown color-picker-dropdown\">\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        customStyleSignal();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        customStyleSignal();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        customStyleSignal();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        customStyleSignal();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        customStyleSignal();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            customStyleSignal();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </StyledPickerButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            customStyleSignal();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\n                            {language['input.name-style.font.label']}\n                        </StyledPickerButton>\n                    </Popover>\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { useCallback, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n};\nexport const FrameTrain = ({\n    onSTFrameChange,\n}: FrameTrain) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                isPendulum,\n                attribute,\n                format,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const isST = nextFrame === 'spell' || nextFrame === 'trap';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const newTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            if (isST) onSTFrameChange(newTypeAbility);\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isPendulum: nextFrame === 'link' ? false : isPendulum,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: isST\n                    ? `${nextFrame}`.toUpperCase()\n                    : attribute,\n                typeAbility: newTypeAbility,\n            };\n        });\n    }, [setCard, onSTFrameChange]);\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n};","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n\n                return <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column-reverse;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: 375px;\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).backgroundRatio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        display: inline-flex;\n        column-gap: var(--spacing-xs);\n        border-right: none;\n        padding: var(--spacing-xxs) var(--spacing-xs);\n        border-radius: var(--br) 0 0 var(--br);\n        box-shadow: var(--bs-input);\n        .ant-checkbox-wrapper {\n            transform: translateY(-1px); // Alignment\n        }\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .card-opacity-slider {\n        flex: 0 1 auto;\n        display: grid;\n        grid-template-columns: max-content 60px 45px 12px;\n        &.inactive {\n            .slider-label,\n            .ant-slider,\n            .slider-padding {\n                background-color: var(--main-level-3);\n            }\n        }\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        cursor: pointer;\n        text-align: center;\n        user-select: none;\n        &:hover {\n            box-shadow: 0 0 2px 0 #222222;\n        }\n        .background-preview-callback-passer {\n            width: 100%;\n            height: 100%;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .background-type-picker {\n            .radio-train-input-group {\n                display: grid;\n            }\n            .ant-radio-button-wrapper {\n                border-left: var(--bw) solid var(--sub-level-1);\n            }\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background,\n            backgroundData,\n            backgroundSource,\n            backgroundType,\n            hasBackground,\n            isPendulum,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <Checkbox\n                className=\"art-frame\"\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                checked={opacity.boundless}\n            >\n                {language['input.opacity.boundless.label']}\n            </Checkbox>\n        </Tooltip>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <div key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <div className=\"slider-label\">\n                    {type === 'body' && <Popover\n                        visible={backgroundInputVisible}\n                        destroyTooltipOnHide={false}\n                        trigger={['click']}\n                        onVisibleChange={setBackgroundInputVisible}\n                        overlayClassName={[\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                            backgroundInputVisible ? 'picker-visible' : '',\n                            backgroundInputHidden ? 'picker-hidden' : '',\n                        ].join(' ')}\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledBaseFillPickerContainer\n                                className={[\n                                    'custom-style-picker',\n                                    noBackground ? 'overlay-no-background-image' : ''\n                                ].join(' ')}\n                            >\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                                    <Checkbox\n                                        checked={hasBackground}\n                                        onChange={e => {\n                                            changeHasBackground(e);\n                                        }}\n                                    >{language['input.background.toggle-label']}</Checkbox>\n                                    <br />\n                                    <i>{language['input.background.description']}</i>\n                                </h3>\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                                    <BackgroundInputGroup\n                                        ref={backgroundInputRef}\n                                        receivingCanvas={receivingCanvas}\n                                        onSourceLoaded={onSourceLoaded}\n                                        onTainted={onTainted}\n                                        onCropChange={onCropChange}\n                                        backgroundColor={opacity.baseFill}\n                                    >\n                                        <div className=\"layout-picker-panel\">\n                                            <div className=\"layout-picker-subpanel color-section\">\n                                                <h2>{language['input.background-color.label']}</h2>\n                                                <CompactPicker\n                                                    colors={DefaultColorList}\n                                                    color={opacity.baseFill}\n                                                    onChangeComplete={color => {\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                                    }}\n                                                />\n                                            </div>\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                                <h2>{language['input.background-type.label']}</h2>\n                                                <RadioTrain\n                                                    className=\"background-type-picker\"\n                                                    onChange={changeBackgroundType}\n                                                    optionList={getBackgroundTypeList({\n                                                        fit: language['input.background-type.fit.label'],\n                                                        full: language['input.background-type.full.label'],\n                                                        frame: language['input.background-type.frame.label'],\n                                                    })}\n                                                    value={backgroundType}\n                                                />\n                                            </div>}\n                                        </div>\n                                    </BackgroundInputGroup>\n                                </div>\n                            </StyledBaseFillPickerContainer>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <div\n                            className=\"background-preview\"\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                        >\n                            <Tooltip overlay={language['input.background.toolip']}>\n                                <div className=\"background-preview-callback-passer\">\n                                    {hasBackground\n                                        ? background\n                                            ? <img\n                                                className=\"background-image-preview\"\n                                                src={backgroundSource === 'online'\n                                                    ? background\n                                                    : backgroundData}\n                                                alt=\"Background\"\n                                            />\n                                            : null\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\n                                </div>\n                            </Tooltip>\n                        </div>\n                    </Popover>}\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </div>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </div>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { Input, Popover } from 'antd';\nimport { RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { checkDarkSynchro, checkXyz } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeList, IconTypeMap } from 'src/model';\n\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 6.5rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    isLink: boolean,\n    isMonster: boolean,\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    isLink,\n    isMonster,\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    })));\n    const isDarkSynchro = checkDarkSynchro({ frame });\n    const isXyz = checkXyz({ frame });\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const iconTypeData = cardIcon === 'auto'\n        ? IconTypeMap[isMonster\n            ? isXyz ? 'rank' : isDarkSynchro ? 'negative-level' : 'level'\n            : 'st'\n        ]\n        : IconTypeMap[cardIcon];\n    const iconDropdownText = language[iconTypeData.labelKey];\n    const IconDropdownLabel = showCreativeOption\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledIconDropdown>\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\n                    return <StyledDropdown.Option key={value}\n                        className={value === cardIcon ? 'menu-active' : ''}\n                        onClick={() => changeCardIcon(value)}\n                    >\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                    </StyledDropdown.Option>;\n                })}\n            </StyledIconDropdown>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return !isLink\n        ? iconTypeData.value === 'st'\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                {DropdownChildren}\n            </RadioTrain>\n            : <StyledCheckboxStarTrain\n                className=\"checkbox-star-train\"\n                value={star}\n                onChange={changeStar}\n                optionList={StarButtonList}\n                strict={true}\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                    <Input\n                        className=\"custom-star-input\"\n                        value={typeof star === 'number' ? '' : star}\n                        allowClear\n                        onChange={changeStar}\n                        placeholder={language['input.icon-type.custom.placeholder']}\n                    />\n                    <RadioTrain\n                        value={starAlignment}\n                        onChange={changeStarAlignment}\n                        optionList={[\n                            {\n                                value: 'auto',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                                label: <CloseCircleOutlined />,\n                            },\n                            {\n                                value: 'left',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                                label: <AlignLeftOutlined />,\n                            },\n                            {\n                                value: 'center',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                                label: <AlignCenterOutlined />,\n                            },\n                            {\n                                value: 'right',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                                label: <AlignRightOutlined />,\n                            },\n                        ]}\n                    />\n                </div>}\n            >\n                {DropdownChildren}\n            </StyledCheckboxStarTrain>\n        : null;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n            cursorOffset = keepInline ? 2 : 3;\n            break;\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        rows={9}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 550px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .frame-auto-checkbox {\n        margin-bottom: var(--spacing-xs);\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Dropdown, Menu } from 'antd';\nimport { copyrightMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format },\n        getUpdater,\n    }) => ({\n        sticker,\n        format,\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />\n            <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                    <IconButton\n                    onClick={() => {}}\n                        Icon={UnorderedListOutlined}\n                    />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList } from '../const';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    .ant-input-group-addon {\n        flex: 0;\n    }\n    .radio-train-input-group .ant-radio-button-wrapper {\n        min-width: unset;\n    }\n`;\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish,\n        linkMap,\n        isPendulum,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish,\n            linkMap,\n            isPendulum,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish,\n        linkMap,\n        isPendulum,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n            isPendulum: willBecomeLink ? false : currentCard.isPendulum,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <StyledImageRadioTrain\n                className=\"art-finish-checkbox fill-input-train\"\n                value={artFinish}\n                onChange={changeArtFinish}\n                optionList={ArtFinishButtonList}\n            >\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\n            </StyledImageRadioTrain>\n            : null\n        }\n    >\n        <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\n            active={isLink}\n            defaultValue={linkMap}\n            onChange={changeLinkMap}\n            onStatusChange={changeLinkStatus}\n        />\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { FrameInfoMap } from 'src/model';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { getNavigationProps } from 'src/util';\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\ntype BottomFrameOptionGrid = {\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onChange: (value: string | number) => void,\n    onCancel: () => void,\n};\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\n    frameList,\n    pendulumFrame,\n    onChange,\n    onCancel,\n}, ref) => {\n    const language = useLanguage();\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => inputRef.current?.focus(),\n    }));\n\n    return <StyledPendulumFrameContainer\n        className=\"pendulum-frame-picker\"\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: frameList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onChange(frameList[focus].value);\n            },\n            onCancel,\n        })}\n    >\n        <Checkbox ref={inputRef}\n            className=\"frame-auto-checkbox\"\n            checked={pendulumFrame === 'auto'}\n            onChange={e => {\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\n            }}\n        >{language['input.frame.auto']}</Checkbox>\n        <RadioTrain\n            className=\"frame-radio\"\n            value={pendulumFrame}\n            onChange={onChange}\n            optionList={frameList}\n        />\n    </StyledPendulumFrameContainer>;\n});\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        background-color: var(--main-level-4);\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .joined-row {\n        position: 'relative';\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing-lg);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setCard,\n        getUpdater,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [isMirrorScale, setMirrorScale] = useState(true);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n            isLink: willBecomePendulum ? false : currentCard.isLink,\n        };\n    });\n    const changeBottomFrame = (value: string | number) => {\n        const normalizedValue = `${value}`;\n\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\n        setCard(currentCard => {\n            return { ...currentCard, pendulumFrame: normalizedValue };\n        });\n    };\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            {showCreativeOption && <Popover\n                visible={frameDropdownVisible}\n                onVisibleChange={setFrameDropdownVisibleVisible}\n                trigger={['hover', 'click']}\n                placement=\"bottom\"\n                overlayClassName=\"pendulum-frame-picker-overlay\"\n                content={<div className=\"overlay-event-absorber\">\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\n                        frameList={frameList}\n                        pendulumFrame={pendulumFrame}\n                        onCancel={() => {\n                            setFrameDropdownVisibleVisible(false);\n                            containerRef.current?.focus();\n                        }}\n                        onChange={changeBottomFrame}\n                    />\n                </div>}\n            >\n                <StyledPendulumFrameInputContainer ref={containerRef}\n                    className=\"pendulum-frame-input\"\n                    tabIndex={0}\n                    onKeyDown={e => {\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                            setFrameDropdownVisibleVisible(true);\n                            /** Popover takes time to mount / become visible */\n                            setTimeout(() => {\n                                bottomFrameOptionGridRef.current?.focus();\n                            }, 200);\n\n                            return false;\n                        }\n                    }}\n                >\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\n                    {currentPendulumFrame\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\n                </StyledPendulumFrameInputContainer>\n            </Popover>}\n            {(isPendulum && showCreativeOption)\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\n                    {language['input.mirror-scale.label']}\n                </Checkbox>}\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (isMirrorScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    onChange={e => {\n                        if (isMirrorScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    rows={5}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst StyledPostPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr max-content;\n    grid-template-areas:\n        \"type-input input-helper\"\n        \"condense-input help-button\";\n    gap: var(--spacing-sm);\n    align-items: center;\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .input-kanji-helper {\n        grid-area: input-helper;\n    }\n    .type-ability-input {\n        grid-area: type-input;\n    }\n    .condense-input {\n        grid-area: condense-input;\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n    &.variant-tcg {\n        .type-ability-input {\n            grid-column: span 2;\n        }\n    }\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: { typeAbility?: string[] }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ typeAbility }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon].value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\n        <CardTextInput ref={typeAbilityInputRef}\n            addonBefore={language[typeLabel]}\n            id=\"type-ability\"\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n            onChange={changeTypeAbility}\n            onTakePicker={onTakePicker}\n        />\n        {isOCG && <Tooltip\n            overlay={language['input.furigana-helper.tooltip']}\n            overlayClassName=\"long-tooltip-overlay\"\n        >\n            <Checkbox\n                className=\"input-kanji-helper\"\n                onChange={toggleFuriganaHelper}\n                checked={furiganaHelper}\n            >\n                {language['input.furigana-helper.label']}\n            </Checkbox>\n        </Tooltip>}\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\n            optionList={CondenseThresholdButtonList}\n        >\n            <span>\n                {language['input.condense.label']} <Explanation\n                    content={language['input.condense.tooltip']}\n                />\n            </span>\n        </RadioTrain>\n        <FormattingHelpDrawer />\n    </StyledPostPendulumInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRGBA } from 'src/util';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { RadioTrain } from 'src/component';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-block {\n        height: 17px;\n        width: 17px;\n        cursor: pointer;\n        position: relative;\n        outline: none;\n        border: var(--bw) solid var(--sub-level-4);\n        &.static-block {\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        }\n    }\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        gap: 3px;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        padding-left: 3px;\n        input {\n            width: 58px;\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\ntype InlineColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nconst InlineColorPicker = ({\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRGBA(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        });\n    }, [value]);\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                /** Contrast formula from google \\ :v / */\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\n                    ? '#000000'\n                    : '#FFFFFF';\n\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\n                    {internalValue.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </div>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\n            <Input\n                size=\"small\"\n                value={currentText}\n                onChange={e => {\n                    setCurrentText(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        background-color: #eaeaea;\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none'\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    RadioTrain,\n    StandaloneLabel,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getAttributeList,\n    FinishButtonList,\n    FormatButtonList,\n} from './const';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isPendulum,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    })));\n    const { setting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={FinishButtonList}\n            >\n                <span>{language['input.finish.label']}</span>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={language['input.layout.tooltip']}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })} />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                isLink={isLink}\n                isMonster={isMonster}\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <RadioTrain\n                    className=\"fill-input-train attribute-input\"\n                    value={attribute}\n                    onChange={changeAttribute}\n                    optionList={attributeList}\n                >\n                    <span>{language['input.attribute.label']}</span>\n                </RadioTrain>\n\n                {(isPendulum || showCreativeOption)\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\n                        showCreativeOption={showCreativeOption}\n                        showExtraDecorativeOption={showExtraDecorativeOption}\n                        onTakePicker={setPickerTarget}\n                    />}\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkMonster, checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\nimport { CopyOutlined, CloseOutlined, DownloadOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 100%;\n            height: 50%;\n            position: absolute;\n            left: 0;\n            &.top-frame {\n                top: 0;\n            }\n            &.bottom-frame {\n                top: 50%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            top: 19px;\n            left: 20px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #222222;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    language,\n    onDuplicate,\n    onSelect,\n    onDelete,\n    onDownload,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundFit,\n        cardIcon,\n        def,\n        format,\n        frame,\n        backgroundType,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        pendulumFrame,\n        opacity,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n    } = card;\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedBottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n    const normalizedCardArt = (artSource === 'offline' || !art)\n        ? 'https://i.imgur.com/jjtCuG5.png'\n        : art;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n        ? !!(atk || def || (isLink && linkMap.length))\n        : isMonster;\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onSelect(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={background ?? 'https://imgur.com/pdSVzUZ.png'}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '')}\n                    style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(${LinkIndentList[index]}px)` }}\n                />;\n            })}\n            {isPendulum && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {isPendulum && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\n                </Tooltip>\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\n        }px) translateY(${\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\n        }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\n\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n}\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        language,\n        list,\n        onDelete,\n        onDownload,\n        onDuplicate,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        language={language}\n        onDuplicate={onDuplicate}\n        onSelect={onSelect}\n        onDownload={onDownload}\n        onDelete={onDelete}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    })));\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onSelect(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onSelect, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            onDuplicate: duplicateCard,\n                            onSelect: onSelect,\n                            onDownload: onDownload,\n                            onDelete: deleteAndReselect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { CheckOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledCode } from 'src/component/atom';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    CondenseTolerantMap,\n    FinishMap,\n    frameList,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PresetNameStyleMap,\n    StickerList,\n} from 'src/model';\nimport copy from 'copy-to-clipboard';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\n        padding: 0;\n        padding-left: 24px;\n        .ant-collapse-arrow {\n            top: 5px;\n            left: 0;\n        }\n    }\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n        padding: var(--spacing-sm) 0 0 0;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\ntype CopiableCode = {\n    data: string,\n    children?: React.ReactNode,\n}\nconst CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledMono\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\n        {children}\n    </StyledMono>;\n};\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tr>\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\n                            </tr>\n                            {[\n                                {\n                                    field: 'Format',\n                                    value: <div>\n                                        {[\n                                            'tcg',\n                                            'ocg',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Frame',\n                                    altField: 'Bottom Frame',\n                                    value: <div>\n                                        {frameList\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Attribute',\n                                    value: <div>\n                                        {AttributeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Spell/Trap Icon',\n                                    value: <div>\n                                        {IconList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Sticker',\n                                    value: <div>\n                                        {StickerList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Foil',\n                                    value: <div>\n                                        {getFoilList()\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Finish',\n                                    value: <div>\n                                        {Object.values(FinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        <div>{language['manager.template.description.joinable']}</div>\n                                    </div>\n                                },\n                                {\n                                    field: 'Art Finish',\n                                    value: <div>\n                                        {Object.values(ArtFinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Type',\n                                    value: <div>\n                                        {[\n                                            'number',\n                                            'text',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Alignment',\n                                    value: <div>\n                                        {[\n                                            'left',\n                                            'center',\n                                            'right',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Icon Type',\n                                    value: <div>\n                                        {IconTypeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Background Type',\n                                    value: <div>\n                                        {getBackgroundTypeList()\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Condense Rate',\n                                    value: <div>\n                                        {Object.keys(CondenseTolerantMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style Type',\n                                    value: <div>\n                                        {[\n                                            'predefined',\n                                            'custom',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Font',\n                                    value: <div>\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                    </div>,\n                                },\n                                {\n                                    field: 'Name Style - Preset',\n                                    value: <div>\n                                        {Object.keys(PresetNameStyleMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Pattern',\n                                    value: <div>\n                                        {PatternList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                    </div>\n                                },\n                            ].map(({\n                                field,\n                                altField,\n                                value,\n                            }) => {\n                                return <tr key={field}>\n                                    <td>\n                                        <StyledMono>{field}</StyledMono>\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                    </td>\n                                    <td>{value}</td>\n                                </tr>;\n                            })}\n                        </table>\n                    </Panel>\n                </Collapse>\n                \n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    const csvdata = cardListToCsv(useCardList.getState().cardList);\n    \n                                    downloadBlob(\n                                        useCardList.getState().listName,\n                                        new Blob([csvdata], { type: 'text/csv' }),\n                                        'text/csv',\n                                    );\n                                    changeEditStatus('download');\n                                }\n                            }}\n                        >\n                            <DownloadOutlined />\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n\n                                            /** Assume data from only the very first sheet */\n                                            const workbook = XLSX.read(file);\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={() => null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onSelect={activeCard}\n                onDownload={onDownload}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        }\n    }\n`;\n\nexport const StyledCardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(var(--translate-ratio)) translateY(var(--translate-ratio)) scale(var(--resize-ratio))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled.div`\n    --overlay-size: 51px;\n    position: absolute;\n    z-index: 101;\n    background: var(--main-primary);\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing);\n    line-height: 1;\n    font-size: var(--fs-3xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    cursor: pointer;\n    box-shadow: var(--bs-1);\n    display: none;\n    &:hover {\n        background: var(--sub-primary);\n    }\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    InternalCard,\n    CanvasConst,\n    Card,\n    getDefaultCard,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCardList,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { Modal, notification, Tooltip } from 'antd';\nimport { TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\nimport {\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    StyledCardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+b', 'command+b'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const [isInitializing, setInitializing] = useState(true);\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const [canvasKey, setCanvasKey] = useState(0);\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [managerVisible, setManagerVisible] = useState(false);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'LucidaFax-Italic',\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        setLightboxVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const exportCardInList = useCallback((card: InternalCard) => {\n        const { id, ...exportableCard } = card;\n\n        exportData(undefined, false, exportableCard);\n    }, [exportData]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback(() => {\n        setCanvasKey(cnt => cnt + 1);\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(false);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${\n                        process.env.PUBLIC_URL\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasConst.height}px`,\n                        '--card-width': `${CanvasConst.width}px`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                            <div className=\"imexport\">\n                                <ExportPanel ref={exportPanelRef}\n                                    artworkCanvas={artworkCanvasRef.current}\n                                    allowHotkey={allowHotkey}\n                                    onRequireExportData={exportData}\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\n                                    onClose={forceRefocus}\n                                />\n                                <div />\n                                <ImportPanel ref={importPanelRef}\n                                    onImport={treatNewCard}\n                                    onClose={forceRefocus}\n                                    allowHotkey={allowHotkey}\n                                    language={language}\n                                />\n                            </div>\n                            <BatchConverter language={language} />\n                            <DownloadButton ref={downloadButtonRef}\n                                canvasMap={canvasMap}\n                                imageChangeCount={imageChangeCount}\n                                isTainted={isTainted}\n                                isInitializing={isInitializing}\n                                onDownloadError={alertDownloadError}\n                            />\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\n                                <span>\n                                    {language['alert.download.tainted-first-line']}<br />\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\n                            </div>}\n                        </StyledDataButtonPanelContainer>\n                        <div className=\"card-canvas-container\">\n                            <StyledCardCanvasGroupContainer className=\"card-canvas-group\">\n                                <Tooltip title={language['button.reset.tooltip']}>\n                                    <ResetButton\n                                        className=\"reset-button\"\n                                        onClick={() => {\n                                            const consent = window.confirm(language['prompt.reset.message']);\n\n                                            if (consent) {\n                                                const { setCard, card } = useCard.getState();\n                                                const defaultCard = { id: card.id, ...getDefaultCard() };\n                                                const contextualDefaultCardData = card.format === 'tcg'\n                                                    ? defaultCard\n                                                    : changeCardFormat(defaultCard, 'ocg');\n\n                                                setCard(contextualDefaultCardData, true);\n                                                setImageChangeCount(cnt => cnt + 1);\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                            }\n                                        }}\n                                    >\n                                        <ClearOutlined />\n                                    </ResetButton>\n                                </Tooltip>\n                                <Tooltip title={<div className=\"center\">\n                                    {language['button.full-size.label']}\n                                    {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\n                                </div>}>\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                        <ZoomInOutlined />\n                                    </LightboxButton>\n                                </Tooltip>\n                                <canvas\n                                    key={canvasKey + 0.1}\n                                    id=\"export-canvas\"\n                                    ref={exportCanvasRef}\n                                    width={CanvasWidth}\n                                    height={CanvasHeight}\n                                />\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                </div>\n                                <canvas id=\"frameCanvas\"\n                                    key={canvasKey}\n                                    ref={frameCanvasRef}\n                                    width={CanvasWidth}\n                                    height={CanvasHeight}\n                                />\n                                <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={CanvasWidth} height={148} />\n                                <canvas id=\"cardIconCanvas\" ref={cardIconCanvasRef} width={CanvasWidth} height={222} />\n                                <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={CanvasWidth} height={889} />\n                                <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={CanvasWidth} height={889} />\n                                <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={CanvasWidth} height={1037} />\n                                <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={CanvasWidth} height={1111} />\n                                <canvas id=\"statCanvas\" ref={statCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"setIdCanvas\" ref={setIdCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"passwordCanvas\" ref={passwordCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"creatorCanvas\" ref={creatorCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"stickerCanvas\" ref={stickerCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"finishCanvas\" ref={finishCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas className=\"crop-canvas\" ref={artworkCanvasRef} />\n                                <canvas className=\"crop-canvas\" ref={backgroundCanvasRef} />\n                            </StyledCardCanvasGroupContainer>\n                        </div>\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onDownload={exportCardInList}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Modal\n                    width={`${CanvasConst.width + 15 * 2}px`}\n                    wrapClassName=\"card-lightbox-overlay\"\n                    visible={lightboxVisible}\n                    forceRender={true}\n                    onCancel={() => setLightboxVisible(false)}\n                    footer={null}\n                >\n                    <canvas key={canvasKey + 0.1}\n                        id=\"lightbox-canvas\"\n                        ref={lightboxCanvasRef}\n                        width={CanvasWidth}\n                        height={CanvasHeight}\n                    />\n                </Modal>\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}