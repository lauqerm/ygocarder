{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/compatible-card.tsx","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/distance-transform.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/imgur.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom.tsx","component/setting/index.tsx","component/app-header/version-log.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/lightbox/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToArtFrame","pendulumStructureHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","_objectSpread","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","concat","process","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","hasEmboss","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","FoilNameMap","getFoilList","DefaultFontSizeData","allRightSymbolOffset","bulletSymbolWidth","fontSize","lineHeight","lineCount","bulletSymbolOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","PendulumNormalFontData","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","embossThickness","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","distanceTransform","array","exponent","index","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","length","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","canvas","gaussianShaderX","gaussianShaderY","this","init","apply","arguments","undefined","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","ctx","getContext","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","document","createElement","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","drawImage","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","kanjiHelper","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","download","href","window","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","zarc","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","frameType","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","useState","cnt","setCnt","useCallback","uploadToImgur","async","myHeaders","Headers","append","formdata","FormData","imgLink","fetch","method","headers","redirect","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","randomCharacter","charSet","charactersLength","charAt","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","nextNameStyle","_termMap$entry","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","create","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","languageName","_languageMap$eng","response","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader$split$filter","_reader11","_reader12","_reader13","_reader14","_ref4","_reader15","_reader16","_reader17","_ref5","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_emptyCard$isLink","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader36","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","reduceMotionColor","resolution","globalScale","showCreativeOption","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","click","classList","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","instructionList","globalCompositeOperation","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","strokeStyle","imageCacheMap","drawFrom","source","sx","sy","_imageCacheMap$source","_imageCacheMap$source2","ready","normalizedX","normalizedY","imageCached","cache","once","drawAsset","drawAssetWithSize","dw","dh","_imageCacheMap$source3","_imageCacheMap$source4","normalizedW","normalizedH","drawFromWithSize","drawWithStyle","dx","dy","sw","sh","clonedCtx","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","keepControlCharacter","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","headTextFragmentEdge","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","_fullLineList$length","content","isNormal","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","effectSizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","fullLineListOption","_flavorConditionRegex","lineRegexSource","fullLineRegexSource","wholeLineRegex","lineReplacement","lineContent","fullLineReplacement","fullLineContent","willContinue","exec","flavorConditionRegex","potentialFlavorConditionText","splitEffect","_CondenseTolerantMap$","_sizeList$effectSizeL","_tolerancePerSentence","tolerancePerSentence","trueWidthStart","trueBaselineStart","lineListWithRatio","resetStyle","flavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","pendulumSize","isSpeedSkill","isXyz","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","fillWidth","fillHeight","drawFrame","resetTransform","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","drawStar","normalizedCardIcon","onStarDraw","normalizedStarCount","leftEdge","resetShadow","all","starWidth","drawStarContent","drawPendulumScaleIcon","drawLinkArrowMap","positionType","isActive","baseLink","activeLink","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","withBorder","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","cloneCtx","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","digitScaleRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","statInEffect","typeInEffect","imageChangeCount","readyToDraw","_frameCanvasRef$curre","fillBaseColor","w","customFill","hasArtBorder","artHeight","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","rightEdge","isNumberPassword","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","bottom","bottomOffset","_baselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","drawSticker","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","useItalic","effectIndexSize","coordinateKey","fontDataKey","getEffectFontAndCoordinate","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","naturalWidth","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","memory","updateNotification","newNotificationMemory","updateNotificationMemory","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","StyledCode","StyledMarkdown","StyledPopMarkdown","_templateObject3","InternalPopover","CardActionButton","_templateObject4","CombinedSliderContainer","_templateObject5","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","$softMode","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","LogSentence","li","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","VersionLogButtonLabel","$animating","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","targetMemory","useShallow","useNotification","currentSemver","memoizedSemver","compareSemver","b","majorA","minorA","patchA","String","Number","majorB","minorB","patchB","onMouseOver","Affiliation","rel","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","Button","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","footer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","imgurResponse","imgurResponseData","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","nextColor","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","_templateObject6","OverlayButton","_templateObject7","LightboxButton","_templateObject8","ResetButton","_templateObject9","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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aAAc,OACdC,SAAU,IACVF,UAAW,KAEfK,IAAK,CACDJ,aAAc,OACdC,SAAU,IACVF,UAAW,MAINY,EAAwD,CACjEF,IAAK,CACDT,aAAc,SACdC,SAAU,OACVF,UAAW,KAEfK,IAAK,CACDJ,aAAc,SACdC,SAAU,OACVF,UAAW,MCxFZ,IAAMa,EAAqB,CAC9B,CACIC,UAAW,2BACXC,SAAU,8FAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,gCAGLG,EAAoBL,EAAmBM,QAAO,SAACC,EAAKC,GAE7D,OADAD,EAAIC,EAAIP,WAAaO,EACdD,IACR,ICpiCH,MAAME,EAA8C,CAAC,CAAEnC,UAAW,UAAW3E,QAAS,IAChF+G,EAA8C,CAChD,CAAEpC,UAAW,UAAW3E,QAAS,KACjC,CAAE2E,UAAW,WAAY3E,QAAS,MAUzBgH,EAA+C,CACxDpC,MAAO,CACH7H,MAAO,QACPC,MAAO,IACPiK,mBAAoB,IAExBpC,MAAO,CACH9H,MAAO,QACPC,MAAO,IACPiK,mBAAoB,IAExBnC,MAAO,CACH/H,MAAO,QACPC,MAAO,IACPiK,mBAAoB,CAChB,cAAeH,EACf,aAAcA,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,UAAaA,EACb,MAASA,IAGjB/B,MAAO,CACHhI,MAAO,QACPC,MAAO,IACPiK,mBAAoB,IAExBjC,MAAO,CACHjI,MAAO,QACPC,MAAO,IACPiK,mBAAoB,IAExB/B,MAAO,CACHnI,MAAO,QACPC,MAAO,IACPiK,mBAAoB,IAExB9B,MAAO,CACHpI,MAAO,QACPC,MAAO,IACPiK,mBAAoB,CAChB,gBAAiB,CAAC,CAAEtC,UAAW,SAAU3E,QAAS,MAAS,CAAE2E,UAAW,cAAe3E,QAAS,SAGxGoF,MAAO,CACHrI,MAAO,QACPC,MAAO,IACPiK,mBAAoB,CAChB,aAAcF,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,MAASA,EACT,mBAAoBA,EACpB,KAAQA,EACR,KAAQA,IAGhB1B,MAAO,CACHtI,MAAO,QACPC,MAAO,IACPiK,mBAAoB,CAChB,gBAAiB,CAAC,CAAEtC,UAAW,SAAU3E,QAAS,SAKjDkH,EAAkD,CAC3DtC,MAAO,CACH7H,MAAO,QACPC,MAAO,IACPiK,mBAAoB,CAChBE,IAAK,CAAC,MAGdtC,MAAO,CACH9H,MAAO,QACPC,MAAO,IACPiK,mBAAoB,CAChBE,IAAK,CACD,CAAEnH,QAAS,IAAM2E,UAAW,UAC5B,CAAE3E,QAAS,IAAM2E,UAAW,eAC5B,CAAE3E,QAAS,IAAM2E,UAAW,eAIxCG,MAAO,CACH/H,MAAO,QACPC,MAAO,IACPiK,mBAAoB,CAChBE,IAAK,CAAC,CAAEnH,QAAS,IAAM2E,UAAW,eAAiB,CAAE3E,QAAS,IAAM2E,UAAW,eAGvFI,MAAO,CACHhI,MAAO,QACPC,MAAO,IACPiK,mBAAoB,CAChBE,IAAK,CAAC,CAAEnH,QAAS,IAAM2E,UAAW,eAAiB,CAAE3E,QAAS,GAAK2E,UAAW,eAGtFK,MAAO,CACHjI,MAAO,QACPC,MAAO,IACPiK,mBAAoB,CAChBE,IAAK,CAAC,CAAEnH,QAAS,IAAM2E,UAAW,eAAiB,CAAE3E,QAAS,GAAK2E,UAAW,eAGtFO,MAAO,CACHnI,MAAO,QACPC,MAAO,IACPiK,mBAAoB,CAChBE,IAAK,CAAC,CAAEnH,QAAS,IAAM2E,UAAW,eAAiB,CAAE3E,QAAS,GAAK2E,UAAW,eAGtFQ,MAAO,CACHpI,MAAO,QACPC,MAAO,IACPiK,mBAAoB,CAChBE,IAAK,CAAC,OAULC,EAAc,CACvBxI,OAAQ,SACRiF,KAAM,OACNL,SAAU,YAED6D,EAAevK,GAAgC,CACxD,CACIwB,KAAM8I,EAAoB,OAC1BpK,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAY8B,OACnB2B,MAAO,UACPE,UAAU,GAEd,CACInC,KAAM8I,EAAkB,KACxBpK,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAY+G,KACnBtD,MAAO,UACPE,UAAU,GAEd,CACInC,KAAM8I,EAAsB,SAC5BpK,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAY0G,SACnBjD,MAAO,UACPE,UAAU,IClIL6G,EAAsB,CAC/BC,qBAAsB,EACtBC,kBAAmB,GACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACXC,mBAAoB,EACpBC,mBAAoB,EACpBC,kBAAmB,KACnBC,gBAAiB,IACjBC,iBAAkB,KAClBC,cAAe,EACfC,QAAS,EACTC,oBAAqB,EACrBC,iBAAkB,EAAI,IACtBC,mBAAoB,GAqCXC,EAAkB,CAC3BC,oBAAqB,GACrBC,iBAAkB,SAClBC,cAAc,EACdC,iBAAkB,QAQhBC,EAAwB,CAC1BC,aAAc,0BACdC,aAAc,2BACdf,kBAAmB,GACnBS,oBAAqB,KACrBO,YAAa,sBACbC,WAAY,SACZC,gBAAiB,EACjBN,iBAAkB,GAEhBO,EAAkC/I,wBAAA,GACjCyI,GAAqB,IACxB7F,KAAM,aACNyF,oBAAqB,IACrBW,UAAW,MACXC,SAAU,KAEDC,EAAkClJ,wBAAA,GACxCyI,GAAqB,IACxB7F,KAAM,sBACNyF,oBAAqB,IACrBW,UAAW,MACXC,SAAU,KAERE,EAAkCnJ,wBAAA,GACjCyI,GAAqB,IACxB7F,KAAM,0BACNoG,UAAW,MACXI,aAAc,UACdH,SAAU,KAGDI,EAA2C,CACpD,IAAKrJ,wBAAA,GACEkJ,GAAwB,IAC3BD,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,MAAOC,UAAW,GAAIC,mBAAoB,GAChG,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,GAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,MAGtG,WAAU1H,wBAAA,GACHkJ,GAAwB,IAC3BD,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,MAAOC,UAAW,EAAGC,mBAAoB,GAC/F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,MAGtG,gBAAe1H,wBAAA,GACRkJ,GAAwB,IAC3BD,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,GAAMC,UAAW,GAAIC,mBAAoB,MAGvG,WAAU1H,wBAAA,GACHkJ,GAAwB,IAC3BD,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,OAO7F4B,EAA2C,CACpD,IAAKtJ,wBAAA,GACE+I,GAAwB,IAC3BE,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,MAAOC,UAAW,GAAIC,mBAAoB,GAChG,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,GAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,MAGtG,WAAU1H,wBAAA,GACH+I,GAAwB,IAC3BE,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,MAAOC,UAAW,EAAGC,mBAAoB,GAC/F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,MAGtG,gBAAe1H,wBAAA,GACR+I,GAAwB,IAC3BE,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,GAAMC,WAAY,GAAMC,UAAW,GAAIC,mBAAoB,MAGtG,WAAU1H,wBAAA,GACH+I,GAAwB,IAC3BE,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,GAC7F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GAAIC,mBAAoB,MAGtG,IAAK1H,wBAAA,GACEmJ,GAAwB,IAC3BF,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAEN,kBAAmB,GAAIC,SAAU,GAAIC,WAAY,GAAIC,UAAW,GAClE,CAAEH,kBAAmB,GAAIC,SAAU,GAAIC,WAAY,GAAIC,UAAW,MAG1E,WAAUzH,wBAAA,GACHmJ,GAAwB,IAC3BF,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAEN,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,MAG/E,gBAAezH,wBAAA,GACRmJ,GAAwB,IAC3BF,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAEN,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,MAG/E,WAAUzH,wBAAA,GACHmJ,GAAwB,IAC3BF,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAEN,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAEN,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,OAMtE8B,EAAmD,CAC5D5D,IAAG3F,wBAAA,GACIkJ,GAAwB,IAC3BD,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,EAAGC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,EAAGC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,GAAMC,WAAY,KAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,OAItE+B,EAAmD,CAC5D7D,IAAG3F,wBAAA,GACI+I,GAAwB,IAC3BE,SAAU,CACN,CAAE3B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,EAAGC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,EAAGC,mBAAoB,GAC9F,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,GAAMC,WAAY,KAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,MAG/EzB,IAAGhG,wBAAA,GACImJ,GAAwB,IAC3BF,SAAU,CACN,CACI3B,kBAAmB,GACnBI,mBAAoB,EACpBH,SAAU,MACVC,WAAY,KACZI,kBAAmB,GACnBH,UAAW,GAEf,CACIH,kBAAmB,GACnBI,mBAAoB,EACpBH,SAAU,MACVC,WAAY,KACZI,kBAAmB,GACnBH,UAAW,GAEf,CACIH,kBAAmB,GACnBI,mBAAoB,EACpBH,SAAU,MACVC,WAAY,KACZI,kBAAmB,IACnBH,UAAW,GAEf,CACIH,kBAAmB,GACnBC,SAAU,MACVC,WAAY,KACZI,kBAAmB,GACnBH,UAAW,OASdgC,GAAoE,CAC7EC,WAAY,CACR,EAAK,IACL,EAAK,IACL,EAAK,KAETC,OAAQ,CACJ,EAAK,IACL,EAAK,IACL,EAAK,KAETC,MAAO,CACH,EAAK,IACL,EAAK,IACL,EAAK,KAETC,UAAW,CACP,EAAK,IACL,EAAK,IACL,EAAK,KAETC,QAAS,CACL,EAAK,IACL,EAAK,IACL,EAAK,MC7WAC,GAAqE,CAC9EC,QAAS,CACLnN,MAAO,UACPkE,SAAU,qCACVkJ,SAAU,CACNvB,aAAc,yBACd9F,KAAM,yBACN+F,aAAc,2BACdC,YAAa,sBACbI,UAAW,MACXH,WAAY,SACZC,gBAAiB,KACjBT,oBAAqB,IACrBY,SAAU,CAAC,CACP3B,kBAAmB,GACnBC,SAAU,KACVK,kBAAmB,IACnBG,cAAe,KACfN,UAAW,EACXD,WAAY,KACZQ,QAAS,IAEbkC,mBAAoB,CAChB,EAAK,CACDC,UAAW,IACXC,UAAW,CACPC,EAAG,CAAEC,kBAAmB,GACxBC,EAAG,CAAED,kBAAmB,GACxBE,OAAG,CAAEF,kBAAmB,GACxBG,OAAG,CAAEH,kBAAmB,GACxBI,OAAG,CAAEJ,kBAAmB,GACxBK,OAAG,CAAEL,kBAAmB,GACxBM,OAAG,CAAEN,kBAAmB,GACxBO,OAAG,CAAEP,kBAAmB,GACxBQ,OAAG,CAAER,kBAAmB,GACxBS,OAAG,CAAET,kBAAmB,GACxBU,SAAG,CAAEV,kBAAmB,GACxBW,SAAG,CAAEX,kBAAmB,GACxBY,SAAG,CAAEZ,kBAAmB,GACxBa,SAAG,CAAEb,kBAAmB,GACxBc,SAAG,CAAEd,kBAAmB,GACxBe,SAAG,CAAEf,kBAAmB,GACxBgB,SAAG,CAAEhB,kBAAmB,IACxBiB,SAAG,CAAEjB,kBAAmB,IAExBkB,EAAG,CAAElB,kBAAmB,GACxBmB,OAAG,CAAEnB,kBAAmB,GACxBoB,OAAG,CAAEpB,kBAAmB,GACxBqB,OAAG,CAAErB,kBAAmB,GACxBsB,aAAI,CAAEtB,kBAAmB,GACzBuB,aAAI,CAAEvB,kBAAmB,GACzBwB,OAAG,CAAExB,kBAAmB,GACxByB,OAAG,CAAEzB,kBAAmB,GACxB0B,OAAG,CAAE1B,kBAAmB,GACxB2B,OAAG,CAAE3B,kBAAmB,GACxB4B,aAAI,CAAE5B,kBAAmB,GACzB6B,aAAI,CAAE7B,kBAAmB,GACzB8B,OAAG,CAAE9B,kBAAmB,GACxB+B,SAAG,CAAE/B,kBAAmB,GACxBgC,SAAG,CAAEhC,kBAAmB,GACxBiC,SAAG,CAAEjC,kBAAmB,GACxBkC,SAAG,CAAElC,kBAAmB,GACxBmC,SAAG,CAAEnC,kBAAmB,GACxBoC,SAAG,CAAEpC,kBAAmB,GACxBqC,SAAG,CAAErC,kBAAmB,GACxBsC,SAAG,CAAEtC,kBAAmB,GACxBuC,SAAG,CAAEvC,kBAAmB,GACxBwC,SAAG,CAAExC,kBAAmB,GACxByC,SAAG,CAAEzC,kBAAmB,GACxB0C,SAAG,CAAE1C,kBAAmB,GACxB2C,SAAG,CAAE3C,kBAAmB,GACxB4C,SAAG,CAAE5C,kBAAmB,GACxB6C,UAAI,CAAE7C,kBAAmB,IACzB8C,UAAI,CAAE9C,kBAAmB,IACzB+C,aAAI,CAAE/C,kBAAmB,IACzBgD,aAAI,CAAEhD,kBAAmB,IACzBiD,aAAI,CAAEjD,kBAAmB,IACzBkD,SAAG,CAAElD,kBAAmB,IACxBmD,SAAG,CAAEnD,kBAAmB,IACxBoD,SAAG,CAAEpD,kBAAmB,IACxBqD,SAAG,CAAErD,kBAAmB,MAGhC,EAAK,CACDH,UAAW,EACXC,UAAW,CACPC,EAAG,CAAEC,kBAAmB,GACxBC,EAAG,CAAED,kBAAmB,GACxBE,OAAG,CAAEF,kBAAmB,GACxBG,OAAG,CAAEH,kBAAmB,GACxBI,OAAG,CAAEJ,kBAAmB,GACxBK,OAAG,CAAEL,kBAAmB,GACxBM,OAAG,CAAEN,kBAAmB,GACxBO,OAAG,CAAEP,kBAAmB,GACxBQ,OAAG,CAAER,kBAAmB,GACxBS,OAAG,CAAET,kBAAmB,GACxBU,SAAG,CAAEV,kBAAmB,GACxBW,SAAG,CAAEX,kBAAmB,GACxBY,SAAG,CAAEZ,kBAAmB,GACxBa,SAAG,CAAEb,kBAAmB,GACxBc,SAAG,CAAEd,kBAAmB,GACxBe,SAAG,CAAEf,kBAAmB,GACxBgB,SAAG,CAAEhB,kBAAmB,IACxBiB,SAAG,CAAEjB,kBAAmB,IAExBkB,EAAG,CAAElB,kBAAmB,GACxBmB,OAAG,CAAEnB,kBAAmB,GACxBoB,OAAG,CAAEpB,kBAAmB,GACxBqB,OAAG,CAAErB,kBAAmB,GACxBsB,aAAI,CAAEtB,kBAAmB,GACzBuB,aAAI,CAAEvB,kBAAmB,GACzBwB,OAAG,CAAExB,kBAAmB,GACxByB,OAAG,CAAEzB,kBAAmB,GACxB0B,OAAG,CAAE1B,kBAAmB,GACxB2B,OAAG,CAAE3B,kBAAmB,GACxB4B,aAAI,CAAE5B,kBAAmB,GACzB6B,aAAI,CAAE7B,kBAAmB,GACzB8B,OAAG,CAAE9B,kBAAmB,GACxB+B,SAAG,CAAE/B,kBAAmB,GACxBgC,SAAG,CAAEhC,kBAAmB,GACxBiC,SAAG,CAAEjC,kBAAmB,GACxBkC,SAAG,CAAElC,kBAAmB,GACxBmC,SAAG,CAAEnC,kBAAmB,GACxBoC,SAAG,CAAEpC,kBAAmB,GACxBqC,SAAG,CAAErC,kBAAmB,GACxBsC,SAAG,CAAEtC,kBAAmB,GACxBuC,SAAG,CAAEvC,kBAAmB,GACxBwC,SAAG,CAAExC,kBAAmB,GACxByC,SAAG,CAAEzC,kBAAmB,GACxB0C,SAAG,CAAE1C,kBAAmB,GACxB2C,SAAG,CAAE3C,kBAAmB,GACxB4C,SAAG,CAAE5C,kBAAmB,GACxB6C,UAAI,CAAE7C,kBAAmB,IACzB8C,UAAI,CAAE9C,kBAAmB,IACzB+C,aAAI,CAAE/C,kBAAmB,IACzBgD,aAAI,CAAEhD,kBAAmB,IACzBiD,aAAI,CAAEjD,kBAAmB,IACzBkD,SAAG,CAAElD,kBAAmB,IACxBmD,SAAG,CAAEnD,kBAAmB,IACxBoD,SAAG,CAAEpD,kBAAmB,IACxBqD,SAAG,CAAErD,kBAAmB,SAM5CsD,MAAO,CACH/Q,MAAO,QACPkE,SAAU,mCACVkJ,SAAU,CACNvB,aAAc,QACd9F,KAAM,QACN+F,aAAc,2BACdC,YAAa,sBACbI,UAAW,MACXH,WAAY,SACZC,gBAAiB,KACjBT,oBAAqB,KACrBwF,OAAQ,OACR5E,SAAU,CAAC,CACP3B,kBAAmB,MACnBC,SAAU,GACVK,kBAAmB,IACnBG,eAAgB,IAChBN,UAAW,EACXD,WAAY,GACZQ,QAAS,MAIrB8F,IAAK,CACDjR,MAAO,MACPkE,SAAU,iCACVkJ,SAAU,CACNvB,aAAc,0BACd9F,KAAM,0BACN+F,aAAc,2BACdN,oBAAqB,KACrBC,iBAAkB,WAClBC,cAAc,EACda,aAAc,OACd2E,WAAY,oBACZC,gBAAiB,EACjBpF,YAAa,sBACbC,WAAY,SACZC,gBAAiB,KACjBE,UAAW,MACXC,SAAU,CAAC,CACP3B,kBAAmB,MACnBC,SAAU,GACVK,kBAAmB,KACnBC,gBAAiB,EACjBE,eAAgB,IAChBN,UAAW,EACXD,WAAY,GACZQ,QAAS,OCvJZiG,GAA4C,CACrDtI,IAlDwC,CACxC/C,KAAM,sBACN8F,aAAc,sBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACIjB,SAAU,EACVV,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACXM,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIR,kBAAmB,MACnBC,SAAU,GACVC,WAAY,GACZC,UAAW,EACXM,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,QAyB1B9B,IArBwC,CACxCpD,KAAM,oBACN8F,aAAc,oBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdS,aAAc,UACdJ,UAAW,MACXC,SAAU,CAAC,CACP3B,kBAAmB,GACnBC,SAAU,GACVQ,cAAe,IACfP,WAAY,KACZC,UAAW,EACXG,kBAAmB,EACnBsG,kBAAmB,QAsEdC,GAA6C,CACtDxI,IA/DyC,CACzC/C,KAAM,sBACN8F,aAAc,sBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACI3B,kBAAmB,MACnBC,SAAU,OACVC,WAAY,OACZC,UAAW,EACXM,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIR,kBAAmB,MACnBC,SAAU,OACVC,WAAY,OACZC,UAAW,EACXM,cAAe,EACfH,kBAAmB,GACnBE,iBAAkB,KAClBE,QAAS,KAsCjBhC,IAlCyC,CACzCpD,KAAM,oBACN8F,aAAc,oBACdqF,WAAY,sBACZlF,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXI,aAAc,WACdH,SAAU,CACN,CACI3B,kBAAmB,MACnBC,SAAU,OACVC,WAAY,OACZC,UAAW,EACXM,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIR,kBAAmB,MACnBC,SAAU,GACVK,kBAAmB,EACnBE,iBAAkB,KAClBL,UAAW,EACXD,WAAY,KACZS,mBAAoB,EACpBC,iBAAkB,SASjBkG,GAAmC,CAC5CxL,KAAM,yBACN8F,aAAc,yBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,yBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACI3B,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX4G,gBAAiB,GACjB1G,mBAAoB,IACpBI,cAAe,IACfH,kBAAmB,IAEvB,CACIN,kBAAmB,KACnBC,SAAU,MACVC,WAAY,MACZC,UAAW,EACX4G,gBAAiB,GACjB1G,mBAAoB,IACpBI,eAAgB,IAChBH,kBAAmB,IAEvB,CACIN,kBAAmB,KACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX4G,gBAAiB,GAEjB1G,mBAAoB,OACpBQ,mBAAoB,OACpBJ,eAAgB,IAChBH,kBAAmB,MAIlB0G,GAAmC,CAC5C1L,KAAM,0BACN8F,aAAc,0BACdG,WAAY,SACZC,gBAAiB,GACjBT,oBAAqB,KACrBO,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACI3B,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX4G,gBAAiB,GACjBzG,kBAAmB,IAEvB,CACIN,kBAAmB,KACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX4G,gBAAiB,GACjBzG,kBAAmB,IAEvB,CACIN,kBAAmB,KACnBC,SAAU,GACVC,WAAY,GACZC,UAAW,EACX4G,gBAAiB,GACjBzG,kBAAmB,IACnBC,gBAAiB,EACjBE,eAAgB,IAChBI,mBAAoB,WCxMnBoG,GAA4C,CACrrtD,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,UAICC,GAAe,CACxB1I,IAAK,CACD,+HACA,wGACA,wDAEJL,IAAK,CACD,kDACA,4BACA,oCAIKgJ,GAA8C,CACvD3I,IAAK,mGACLL,IAAK,kCAIIiJ,GAA0C,CAEnD,eAAM,OACN,eAAM,QACN,2BAAQ,gBACR,2BAAQ,cACR,uCAAU,UACV,qBAAO,WACP,2BAAQ,eACR,iCAAS,SACT,qBAAO,QACP,qBAAO,QACP,eAAM,OACN,6CAAW,SACX,2BAAQ,WACR,qBAAO,SACP,qBAAO,UACP,qBAAO,QACP,uCAAU,UACV,eAAM,OACN,2BAAQ,UACR,qBAAO,OACP,qBAAO,cACP,iCAAS,cACT,eAAM,UACN,qBAAO,UACP,qBAAO,eACP,qBAAO,OACP,uCAAU,SACV,uCAAU,SACV,iCAAS,oBACT,6CAAW,cACX,iCAAS,iBACT,yDAAa,gBAEb,iCAAS,UACT,iCAAS,aACT,2BAAQ,YACR,iCAAS,SAET,eAAM,SACN,eAAM,SACN,eAAM,SACN,uCAAU,SACV,eAAM,SACN,2BAAQ,UACR,iCAAS,MACT,uCAAU,WACV,qBAAO,OACP,iCAAS,UACT,2BAAQ,QACR,2BAAQ,iBACR,2EAAgB,eAEhB,iCAAS,QACT,2BAAQ,SACR,2BAAQ,OACR,2BAAQ,OACR,iCAAS,SACT,2BAAQ,QAER,CAACF,GAAa1I,IAAI,IAAK0I,GAAa/I,IAAI,GACxC,CAAC+I,GAAa1I,IAAI,IAAK0I,GAAa/I,IAAI,GACxC,CAAC+I,GAAa1I,IAAI,IAAK0I,GAAa/I,IAAI,GAExC,6CAAgB,QAChB,o5CAGA,+GAAsB,sCAEtB,gQAA+C,+EAC/C,CAACgJ,GAAoB3I,KAAM2I,GAAoBhJ,KAEtCkJ,GAAkBrN,OAAOsN,QAAQF,IAAiBnI,QAAO,CAACC,EAAKC,KACxE,MAAOoI,EAASC,GAAWrI,EAG3B,OAFAD,EAAIsI,GAAWD,EAERrI,IACR,CAEC,oFAAgF,kQC7UvEuI,GAA0C,CACnD,OAAU,CACN7Q,KAAM,SACNgC,QAAS,qBACT8O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,KAEhB,OAAU,CACNjR,KAAM,SACNgC,QAAS,qBACT8O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACNjR,KAAM,SACNgC,QAAS,qBACT8O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,QAAW,CACPjR,KAAM,UACNgC,QAAS,sBACT8O,WAAY,OACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,IAAO,CACHjR,KAAM,MACNgC,QAAS,kBACT8O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,KAAQ,CACJjR,KAAM,OACNgC,QAAS,mBACT8O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACNjR,KAAM,SACNgC,QAAS,qBACT8O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,MAAS,CACLjR,KAAM,QACNgC,QAAS,oBACT8O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,KAAQ,CACJjR,KAAM,OACNgC,QAAS,mBACT8O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,MAAS,CACLjR,KAAM,QACNgC,QAAS,oBACT8O,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,GAEhB,eAAgB,CACZjR,KAAM,eACNgC,QAAS,2BACT8O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,IAEhB,QAAW,CACPjR,KAAM,UACNgC,QAAS,sBACT8O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACNjR,KAAM,SACNgC,QAAS,qBACT8O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,GAAM,CACFjR,KAAM,KACNgC,QAAS,iBACT8O,WAAY,OACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,OAAU,CACNjR,KAAM,SACNgC,QAAS,qBACT8O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,KAAQ,CACJjR,KAAM,OACNgC,QAAS,mBACT8O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,MAAS,CACLjR,KAAM,QACNgC,QAAS,oBACT8O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,YAAa,CACTjR,KAAM,YACNgC,QAAS,wBACT8O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,cAAe,CACXjR,KAAM,cACNgC,QAAS,0BACT8O,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,KAAQ,CACJjR,KAAM,OACNgC,QAAS,mBACT8O,WAAY,OACZC,QAAS,YACTG,yBAA0B,CACtB,qBACA,qBACA,sBACA,iBAEJC,qBAAqB,0BAADlO,OAA4B,CAC5C,yBACA,yBACA,yBACA,0BACA,0BACA,qBACFmO,KAAK,MAAK,KACZH,WAAY,IAGPI,GAAYjO,OAAOC,OAAOwN,ICzL1BS,GAAmB,CAC5BhR,OAAQ,CACJ,CAAEiR,IAAK,IAAKC,KAAM,GAAIzS,MAAO,IAAKC,OAAQ,KAC1C,CAAEuS,IAAK,IAAKC,KAAM,IAAKzS,MAAO,IAAKC,OAAQ,IAC3C,CAAEuS,IAAK,IAAKC,KAAM,IAAKzS,MAAO,IAAKC,OAAQ,KAC3C,CAAEuS,IAAK,IAAKC,KAAM,GAAIzS,MAAO,GAAIC,OAAQ,KACzC,CAAEuS,IAAK,EAAGC,KAAM,EAAGzS,MAAO,EAAGC,OAAQ,GACrC,CAAEuS,IAAK,IAAKC,KAAM,IAAKzS,MAAO,GAAIC,OAAQ,KAC1C,CAAEuS,IAAK,IAAKC,KAAM,GAAIzS,MAAO,IAAKC,OAAQ,KAC1C,CAAEuS,IAAK,IAAKC,KAAM,IAAKzS,MAAO,IAAKC,OAAQ,IAC3C,CAAEuS,IAAK,IAAKC,KAAM,IAAKzS,MAAO,IAAKC,OAAQ,MAE/Cc,SAAU,CACN,CAAEyR,IAAK,IAAKC,KAAM,GAAIzS,MAAO,IAAKC,OAAQ,KAC1C,CAAEuS,IAAK,IAAKC,KAAM,IAAKzS,MAAO,IAAKC,OAAQ,IAC3C,CAAEuS,IAAK,IAAKC,KAAM,IAAKzS,MAAO,IAAKC,OAAQ,KAC3C,CAAEuS,IAAK,IAAKC,KAAM,EAAGzS,MAAO,GAAIC,OAAQ,KACxC,CAAEuS,IAAK,EAAGC,KAAM,EAAGzS,MAAO,EAAGC,OAAQ,GACrC,CAAEuS,IAAK,IAAKC,KAAM,IAAKzS,MAAO,GAAIC,OAAQ,KAC1C,CAAEuS,IAAK,KAAMC,KAAM,GAAIzS,MAAO,IAAKC,OAAQ,KAC3C,CAAEuS,IAAK,KAAMC,KAAM,IAAKzS,MAAO,IAAKC,OAAQ,IAC5C,CAAEuS,IAAK,KAAMC,KAAM,IAAKzS,MAAO,IAAKC,OAAQ,OAGvCyS,GAAiB,EAAE,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,KACrDC,GAAiB,EAAE,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,ICpBzDC,GAAqB,IAAIC,OADD,sBAIxBC,GAA2B,IAAID,OADP,wBAGxBE,GAAoB,8IACpBC,GAAiB,IAAIH,OAAOE,IAE5BE,GAAqB,IAAIJ,OAAO,cAAD3O,OAAe6O,GAAiB,QAK/DG,GAAe,SACfC,GAAgB,SAChBC,GAAe,SACfC,GAAgB,SAChBC,GAAoB,SACpBC,GAAqB,SACrBC,GAAwB,SACxBC,GAAsB,SAEtBC,GAAqB,IAAIb,OAAO,IAAD3O,OAAK,CAC7CqP,GACAD,GACAD,GACAD,GACAK,GACAD,GACAL,GACAD,IACFb,KAAK,IAAG,iBAAiB,KAEdsB,GAA8B,yBAAAzP,OAA4BgP,IAAYhP,OAAGkP,IAAYlP,OAAGoP,IAAiBpP,OAAGsP,GAAqB,UACjII,GAA6B,IAAIf,OAAOc,GAAgC,KAExEE,GAA2B,GAAA3P,OAAMgP,GAAY,KAAAhP,OAAIiP,IACjDW,GAA0B,IAAIjB,OAAOgB,IAGrCE,GAAuB,kGAAA7P,OAAqGgP,GAAY,uBAAAhP,OAAsBiP,GAAa,WAK3Ka,GAAuB,IAAInB,OAAO,IAAD3O,OADX,uBACmC,MAEzD+P,GAAyBjL,EAAmBkL,KAAIC,IAAK,IAAAC,EAAA,OAAmB,QAAnBA,EAAID,EAAMhL,iBAAS,IAAAiL,IAAID,EAAMlL,aAAWoJ,KAAK,KAClGgC,GAAkB,IAAAnQ,OAAO+P,GAAsB,eAE/CK,GAAwB,iRACxBC,GAAe,IAAI1B,OAAO,IAAD3O,OAAKoQ,GAAqB,MAGnDE,GAAwB,KAAAtQ,OAAQoQ,GAAqB,8LAMrDG,GAAuB,IAAI5B,OADD,yBAI1B6B,GAAmB,IAAI7B,OADD,gCAGtB8B,GAAiB,IAAI9B,OAAO,mBAC5B+B,GAAc,IAAI/B,OAAO,SAEzBgC,GAAgB,icAEhBC,GAAgB,ydAEhBC,GAAc,IAAIlC,OAAO,YACzBmC,GAAe,IAAInC,OAAO,YAC1BoC,GAAe,IAAIpC,OAAO,YAG1BqC,GAA+B,IAAIrC,OAAO,IAAD3O,OADT,SACkD,MAGlFiR,GAAyB,IAAItC,OAAO,IAAD3O,OADX,eAC4C,MAGpEkR,GAAwB,IAAIvC,OAAO,IAAD3O,OADV,SAC2C,MAEnEmR,GAAuC,CAChD,UAAM,GACN,UAAM,GACN,SAAK,EACL,SAAK,EACL,SAAK,EACL,IAAK,IACL,KAAM,KAEGC,GAAiD,CAC1D,UAAM,GACN,UAAM,KAEGC,GAAgD,CACzD,IAAK,KACL,IAAK,MAEIC,GAAuC,GAIvCC,GAAiD,GAEjDC,GAAgD,GAQhDC,GAAoBC,GAA8B,QAAXA,EAAmB,EAAI,EAK9DC,GAAa,YAIbC,GAAmB,UAGnBC,IAAuB,KCpHvBC,GAAiBA,KAAA,CAC1BC,QAAS,EACTL,OAAQ,MACR9V,MAAO,SACPoW,KAAM,SACNvT,QAAS9B,IACTsV,OAAQ,GACRC,UAAW,SACXnV,KAAM,QACNoV,cAAe,OACfC,UZzB+B,CAC/B7Q,KAAM,UACNN,UAAW,UACXoR,kBAAmB,UACnBnQ,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ5B,WAAW,EACXY,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbhB,YAAY,EACZmB,cAAe,EACfC,cAAe,0CACfrB,aAAa,EACbsC,YAAa,GACbC,UAAW,GACXwP,gBAAiB,EACjB5R,WAAW,EACXM,OAAQ,UACRL,QAAS,QYIT4R,UAAW,QACXC,UAAWrT,EACXsT,SAAU,OACVC,KAAM,EACNC,cAAe,OACf/M,IAAK,kCACLgN,QAAS,GACTC,QAAQ,EACRC,UAAW,SACXC,QA9B0B,CAC1BC,EAAG,EACHC,EAAG,EACHnX,MAAO,IACPC,OAAQ,KACRmX,KAAM,IACNC,OAAQ,GAyBRC,eAAe,EACfC,WAAY,GACZC,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClB9U,eAAgB,MAChB+U,eArC0B,CAC1BT,EAAG,EACHC,EAAG,EACHnX,MAAO,IACPC,OAAQ,KACRmX,KAAM,IACNC,OAAQ,GAgCRO,QAAS,CACL,IACA,IACA,IACA,KAEJC,QAAQ,EACRnV,YAAY,EACZoV,cAAe,OACfC,eAAgB,+EAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,YAAa,CACT,QACA,SACA,UAEJC,YAAa,CACTC,iBAAkB,SAClBvM,UAAW,OACXwM,OAAQ,GAEZC,cAAe,CACXzM,UAAW,OACXwM,OAAQ,GAEZE,OAAO,oTAEPC,MAAO,aACPC,IAAK,OACLC,IAAK,OACLC,SAAU,WACVC,QAAS,QACTC,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EACdC,QAAS,kDACTC,gBAAgB,EAChBC,cZnDgD,EAChD,EACA,WACA,EACA,WYgDAC,cZpDgD,EAChD,EACA,WACA,EACA,WYiDAC,gBZrDgD,EAChD,EACA,WACA,EACA,WYkDAC,kBZtDgD,EAChD,EACA,WACA,EACA,WYmDAC,eZvDgD,EAChD,EACA,WACA,EACA,WYqDAC,aAAc,KAILC,GAAyBA,IAAA7W,YAAC,CACnC8W,GAAIC,eACD5D,MAGM6D,GAAeA,KAAA,CACxB5D,QAAS,EACTL,OAAQ,MACR9V,MAAO,SACPoW,KAAM,SACNvT,QAAS9B,IACTsV,OAAQ,GACRC,UAAW,SACXnV,KAAM,GACNoV,cAAe,OACfC,UZ5G+B,CAC/B7Q,KAAM,UACNN,UAAW,UACXoR,kBAAmB,UACnBnQ,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ5B,WAAW,EACXY,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbhB,YAAY,EACZmB,cAAe,EACfC,cAAe,0CACfrB,aAAa,EACbsC,YAAa,GACbC,UAAW,GACXwP,gBAAiB,EACjB5R,WAAW,EACXM,OAAQ,UACRL,QAAS,QYuFT4R,UAAW1T,EACX2T,UAAWrT,EACXsT,SAAU,OACVC,KAAM,EACNC,cAAe,OACf/M,IAAK,kCACLgN,QAAS,GACTE,UAAW,SACXD,QAAQ,EACRE,QAAS,CACLC,EAAG,EACHC,EAAG,EACHnX,MAAO,IACPC,OAAQ,KACRmX,KAAM,IACNC,OAAQ,GAEZC,eAAe,EACfC,WAAY,GACZC,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClB9U,eAAgB,MAChB+U,eAAgB,CACZT,EAAG,EACHC,EAAG,EACHnX,MAAO,IACPC,OAAQ,KACRmX,KAAM,IACNC,OAAQ,GAEZO,QAAS,GACTC,OAAQ,KACRnV,YAAY,EACZoV,cAAe,OACfC,eAAgB,GAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,YAAa,GACbC,YAAa,CACTC,iBAAkB,SAClBvM,UAAW,OACXwM,OAAQ,GAEZC,cAAe,CACXzM,UAAW,OACXwM,OAAQ,GAEZE,OAAQ,GACRC,MAAO,GACPC,IAAK,IACLC,IAAK,IACLC,SAAU,GACVC,QAASnV,EACToV,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EAEdC,QAAS,GACTC,gBAAgB,EAChBC,cZ3IgD,EAChD,EACA,WACA,EACA,WYwIAC,cZ5IgD,EAChD,EACA,WACA,EACA,WYyIAC,gBZ7IgD,EAChD,EACA,WACA,EACA,WY0IAC,kBZ9IgD,EAChD,EACA,WACA,EACA,WY2IAC,eZ/IgD,EAChD,EACA,WACA,EACA,WY4IAC,aAAc,KAGLK,GAAc,CACvB,CACI3X,KAAM,OACN4X,QAAS,YACTpa,MAAO,OACPiE,SAAU,2BACVoW,WAAY,oCAEhB,CACI7X,KAAM,OACN4X,QAAS,aACTpa,MAAO,OACPiE,SAAU,2BACVoW,WAAY,qCAEhB,CACI7X,KAAM,WACNxC,MAAO,WACPiE,SAAU,+BACVoW,WAAY,MAEhB,CACI7X,KAAM,OACNxC,MAAO,SACPiE,SAAU,6BACVoW,WAAY,OAIPC,GAAmB,CAC5B,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,WAG9CC,GAAgB,CACzB,UAAW,CACPva,MAAO,eACPK,MAAO,IACPC,OAAQ,IACRka,MAAO,EACPC,aAAc,CAAC,IAAK,MAExB,UAAW,CACPza,MAAO,eACPK,MAAO,IACPC,OAAQ,IACRka,MAAO,EACPC,aAAc,CAAC,IAAK,MAExB,WAAY,CACRza,MAAO,gBACPK,MAAO,IACPC,OAAQ,KACRka,MAAO,EACPC,aAAc,CAAC,IAAK,OAExB,YAAa,CACTza,MAAO4D,cAAA,OAAK8W,MAAO,CAAEnX,MAAO,uBAAwBoX,SAAC,mBACrDta,MAAO,KACPC,OAAQ,KACRka,MAAO,EACPC,aAAc,CAAC,KAAM,OAEzB,YAAa,CACTza,MAAO4D,cAAA,OAAK8W,MAAO,CAAEnX,MAAO,uBAAwBoX,SAAC,mBACrDta,MAAO,KACPC,OAAQ,KACRka,MAAO,EACPC,aAAc,CAAC,KAAM,OAEzB,YAAa,CACTza,MAAO4D,cAAA,OAAK8W,MAAO,CAAEnX,MAAO,uBAAwBoX,SAAC,mBACrDta,MAAO,KACPC,OAAQ,KACRka,MAAO,EACPC,aAAc,CAAC,KAAM,QAGhBG,GAAiB,CAC1BL,GAAc,WACdA,GAAc,WACdA,GAAc,YACdA,GAAc,aACdA,GAAc,aACdA,GAAc,cAILM,GAAmB,CAC5B,CACI9a,MAAO,MACPC,MAAO,QAEX,CACID,MAAO,OACPC,MAAO,U,uJClQR,SAAS8a,GAAkBC,EAAgBC,GAC9C,IAMIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAXAC,EAAiBR,EAAMS,MAAMC,OAC7BD,EAAQT,EAAMS,MAAME,MAAM,GAC1BC,EAAS,IAAIC,MAAML,GACnBM,EAAO,EACPC,EAAY,EACZC,EAAiB,EAQrB,IADAf,EAAWA,GAAY,EAClBC,EAAQM,EAAiB,EAAGN,GAAS,IAAKA,EAC3CU,EAAOV,GAASY,EAChBA,GAAQL,EAAMP,GACdc,GAAkBP,EAAMP,GACxBa,EAAYE,KAAKC,IAAIH,EAAWN,EAAMP,IAI1C,IAAIiB,EAAyBC,KAAKC,aAAaP,GAC3CQ,EAAoBC,KAAQJ,EAAwBV,EAAME,MAAM,GAAIC,EAAOD,MAAM,GAAI,GACrFa,EAAMJ,KAAKK,aAAaV,GACxBW,EAAMN,KAAKK,aAAaV,GAMxBY,EAAyBP,KAAKC,aAAaP,GAC3Cc,EAAoBL,KAAQI,EAAwBlB,EAAME,MAAM,GAAIC,EAAOD,MAAM,GAAI,GACzF,IAAK,IAAIkB,EAAW,EAAGA,EAAW7B,EAAMS,MAAM,GAAIoB,IAC9C,IAAK,IAAIC,EAAc,EAAGA,EAAc9B,EAAMS,MAAM,GAAIqB,IACpDF,EAAkBG,IAAIF,EAAUC,EAAa9B,EAAMgC,IAAIH,EAAUC,GAAe,EAAId,GAO5F,IA1DJ,SAAgBhB,EAAsCiC,EAAkBC,GACpE,IAAIxP,EAAWyN,EAAoBgC,EAATC,EAAM,EAAsBC,EAAMpB,KAAKoB,IACjE,IAAK3P,EAAI,EAAGA,EAAIuP,IAAYvP,EAAG,CAE3B,IADAyP,EAAYnC,EAAMoC,KACbjC,EAAI,EAAGA,EAAI+B,IAAY/B,EACxBgC,EAAYE,EAAIrC,EAAMoC,GAAMD,EAAY,GACxCnC,EAAMoC,KAASD,EAEnB,IAAKhC,EAAI,EAAGA,EAAI+B,IAAY/B,EACxBgC,EAAYE,EAAIrC,IAAQoC,GAAMD,EAAY,GAC1CnC,EAAMoC,GAAOD,EAEjBC,GAAOF,GA2CXI,CAAOV,EAAkBW,KAAOzB,EAAOL,EAAMD,EAAiB,GAAM,EAA+B,EAA5BC,EAAMD,EAAiB,IAGzFN,EAAQM,EAAiB,EAAGN,EAAQ,IAAKA,EAAO,CAGjD,IAFAG,EAAaiB,EAAkBV,OAC/BR,EAAI,EACCD,EAAID,EAAQ,EAAGC,EAAIK,IAAkBL,EACtCE,EAAWF,GAAKC,EAChBA,GAAKK,EAAMN,GAEf,IAAKA,EAAID,EAAQ,EAAGC,GAAK,IAAKA,EAC1BE,EAAWF,GAAKC,EAChBA,GAAKK,EAAMN,GAMf,GAJAqC,KAAIC,OAAOnB,EAAmBM,GAG9BrB,EAAuBE,EAAMP,EAAQ,GAChCwC,SAASzC,GAEP,GAAiB,IAAbA,EACP0C,KAASrB,EAAkBiB,KAAOzB,EAAOP,EAAwB,EAA0B,EAAvBA,EAA0BiB,EAAKE,QAChG,GAAiB,IAAbzB,EACP2C,KAAStB,EAAkBiB,KAAOzB,EAAOP,EAAwB,EAA0B,EAAvBA,EAA0BiB,EAAKE,OAChG,IAAIzB,EAAW,EAClB,MAAM,IAAI4C,MAAM,4CAEhBC,KAASxB,EAAkBiB,KAAOzB,EAAOP,EAAwB,EAA0B,EAAvBA,EAA0BiB,EAAKE,EAAKzB,QARxG8C,KAAWzB,EAAkBiB,KAAOzB,EAAOP,EAAwB,EAA0B,EAAvBA,EAA0BiB,EAAKE,GAYzGpB,EAAMsB,EACNA,EAAoBN,EACpBA,EAAoBhB,EAUxB,OANAkC,KAAIC,OAAOzC,EAAO4B,GAElBR,KAAK4B,WAAWrB,GAChBP,KAAK4B,WAAW7B,GAChBC,KAAK6B,WAAWzB,GAChBJ,KAAK6B,WAAWvB,GACT1B,E,2CCrGX,MAAMkD,GAAuB,CACzBC,SAAU,CACN,SAAY,CAAE1b,KAAM,IAAKzC,MAAO,MAChC,EAAK,CAAEyC,KAAM,IAAKzC,MAAO,EAAM,MAEnCoe,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFzL,KAAK,MACP0L,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAGA,KACF1L,KAAK,OAEL2L,GAAqB,CACvBH,SAAU,CACNI,SAAU,CAAE9b,KAAM,IAAKzC,MAAO,MAC9Bwe,EAAG,CAAE/b,KAAM,IAAKzC,MAAO,EAAM,MAEjCoe,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFzL,KAAK,MACP0L,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACF1L,KAAK,OAEL8L,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAE1b,KAAM,KAAMzC,MAAO,GAC7B,QAAW,CAAEyC,KAAM,KAAMzC,MAAO,GAChC,QAAW,CAAEyC,KAAM,KAAMzC,MAAO,GAChC,QAAW,CAAEyC,KAAM,KAAMzC,MAAO,GAChC,GAAM,CAAEyC,KAAM,KAAMzC,MAAO,GAC3B,WAAc,CAAEyC,KAAM,KAAMzC,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAEyC,KAAM,IAAKzC,MAAO,OAEtCoe,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACFzL,KAAK,MACP0L,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,+BACA,oBACA,8CACA,8CACA,OACA,WACA,gEACA,gEACA,OACA,2IACA,2DAKA,KACF1L,KAAK,OAGE+L,GACF,QAGEC,GAAoCA,KAAA,CAC7CC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,UAAW,EACXC,SAAU,EACVC,MAAO,IACPxc,KAAMic,KAIH,MAAMQ,GAUTC,YAAYC,EAAiCC,GAAkC,KAT/EC,cAAQ,OACRC,oBAAc,OACdC,sBAAgB,OAChBC,cAAQ,OACRL,YAAM,OACNM,YAAM,OACNC,qBAAe,OACfC,qBAAe,EAGXC,KAAKH,OAASL,EACdQ,KAAKT,OAAMjc,wBAAA,GAAQwb,MAAwCS,GAC3DS,KAAKC,OAGTC,MAAMxa,GAAiE,IAAvC6Z,EAA+BY,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC9D,MAAM,MAAE1f,EAAK,OAAEC,GAAWgF,EACpB2a,EAAUL,KAAKM,WAAW5a,GAChCsa,KAAKL,iBAAiBY,WAAWpgB,MAAQkgB,EACzCL,KAAKL,iBAAiBa,WAAWrgB,MAAQ,CAACM,EAAOC,EAAQ,GACzDsf,KAAKP,SAASgB,QAAQhgB,EAAOC,GAC7Bsf,KAAKN,eAAee,QAAQhgB,EAAOC,GACnCsf,KAAKN,eAAegB,MAAMV,KAAKW,gBAAgBlgB,EAAOC,IAEtD,MAAM,YAAEqe,EAAW,cAAEC,EAAa,eAAEC,EAAc,UAAEC,EAAS,SAAEC,EAAQ,MAAEC,EAAK,KAAExc,GAAMU,wBAAA,GAC/E0c,KAAKT,QACLA,GAGPS,KAAKY,UAAU7B,GACfiB,KAAKa,YAAY7B,GACjBgB,KAAKc,aAAa7B,GAClBe,KAAKe,aAAa7B,EAAWze,EAAOC,GACpCsf,KAAKgB,oBAAoB7B,EAAUC,GACnCY,KAAKiB,QAAQre,GAEbod,KAAKN,eAAewB,OAAO,EAAI,IAGnCjB,OACI,MAAMkB,EAAS,IAAIC,MAAyB,GAAQ,GAAO,IAAO,GAAQ,EAAG,GACvEC,EAAQ,IAAID,KACZE,EAAoB,IAAIC,KAAWF,EAAOF,GAEhDnB,KAAKP,SAAW,IAAI2B,KAAoB,CAAEI,OAAO,EAAMC,WAAW,EAAM5B,OAAQG,KAAKH,SACrFG,KAAKP,SAASiC,cAAc,EAAU,GAEtC1B,KAAKL,iBAAmByB,KAAoBO,MAAM/C,GAAgBN,UAElE0B,KAAKJ,SAAW,IAAIwB,KAAqB,CACrC5C,eAAgBI,GAAgBJ,eAChCD,aAAcK,GAAgBL,aAC9BD,SAAU0B,KAAKL,mBAEnBK,KAAKJ,SAASgC,aAAc,EAE5B,MAAMC,EAAe,IAAIT,KAAoB,EAAG,EAAG,EAAG,GAChDU,EAAa,IAAIV,KAAWS,EAAc7B,KAAKJ,UACrDyB,EAAMU,IAAID,GAEV9B,KAAKD,gBAAkB,IAAIiC,KAAWvD,IACtCuB,KAAKF,gBAAkB,IAAIkC,KAAW3D,IACtC2B,KAAKF,gBAAgBmC,gBAAiB,EAEtCjC,KAAKN,eAAiB,IAAIwC,KAAelC,KAAKP,SAAUO,KAAKW,mBAC7DX,KAAKN,eAAeyC,QAAQb,GAC5BtB,KAAKN,eAAeyC,QAAQnC,KAAKD,iBACjCC,KAAKN,eAAeyC,QAAQnC,KAAKF,iBAErCa,gBAAgBlgB,EAAgBC,GAC5B,OAAO,IAAI0gB,KAAwB3gB,EAAOC,EAAQ,CAC9C0hB,UAAWhB,KACXiB,UAAWjB,KACX/K,OAAQ+K,KACRkB,eAAe,IAGvBhC,WAAW5a,GACP,MAAM2a,EAAU,IAAIe,KAAc1b,GAKlC,OAJA2a,EAAQkC,MAAQlC,EAAQmC,MAAQpB,KAChCf,EAAQ+B,UAAY/B,EAAQgC,UAAYjB,KACxCf,EAAQoC,WAAa,EACrBpC,EAAQqC,aAAc,EACfrC,EAGXO,UAAU+B,GAEF3C,KAAKL,iBAAiBiD,QAAQziB,MAD9BwiB,GACuC,EAED,EAI9C9B,YAAY8B,GAEJ3C,KAAKL,iBAAiBkD,QAAQ1iB,MAD9BwiB,GACuC,EAED,EAI9C7B,aAAa6B,GAEL3C,KAAKL,iBAAiBmD,QAAQ3iB,MAD9BwiB,GACuC,EAED,EAI9C5B,aAAa5gB,EAAeM,EAAeC,GACvCsf,KAAKD,gBAAgBzB,SAASK,EAAExe,MAAQA,EAAQM,EAAQ,EACxDuf,KAAKF,gBAAgBxB,SAASyE,EAAE5iB,MAAQA,EAAQO,EAAS,EAG7DsgB,oBAAoB7B,EAAkBC,GAClCY,KAAKL,iBAAiBqD,GAAG7iB,MAAQ,EAAMgf,GAAY,EAAM/C,KAAK6G,IAAI,EAAK7D,IAG3E6B,QAAQre,GACJod,KAAKL,iBAAiB/c,KAAKzC,MAAiB,UAATyC,EAAmB,EAAI,GCrX3D,MAAMsgB,GAAgBA,CAACC,EAAkBC,KAC5C,MAAMC,GAAeF,EAAW,IAAM/G,KAAKkH,GAAK,IAC1CC,GAAuBH,EAAa,IAAMhH,KAAKkH,GAAK,IACpD3L,EAAIyE,KAAKoH,IAAIH,GAAejH,KAAKoH,IAAID,GACrC3L,EAAIwE,KAAKqH,IAAIJ,GAAejH,KAAKoH,IAAID,GACrCG,EAAItH,KAAKqH,IAAIF,GAEnB,MAAO,CAACnH,KAAKuH,MAAU,IAAJhM,GAAW,IAAKyE,KAAKuH,MAAU,IAAJ/L,GAAW,IAAKwE,KAAKuH,MAAU,IAAJD,GAAW,MAE3EE,GAAcC,IAuBpB,IAvBqB,YACxBC,EAAW,eACXC,EAAc,cACdC,EAAa,UACbC,EAAY,EAAC,cACbC,EAAgB,CAAC,IAAK,IAAK,KAAI,cAE/BC,EAAa,WACbf,EAAU,SACVD,EAAQ,aACRiB,GAAe,EAAE,aACjBC,EAAe,GAYlBR,EACG,MAAMS,EAAMR,EAAYS,WAAW,MAEnC,IAAKD,EAAK,OAGV,MAAM5jB,EAAuB,OAAdqjB,QAAc,IAAdA,IAAkBD,EAAYpjB,OACvCD,EAAqB,OAAbujB,QAAa,IAAbA,IAAiBF,EAAYrjB,MAGrCid,EADY4G,EAAIE,aAAa,EAAG,EAAG/jB,EAAOC,EAAQ,CAAE+jB,oBAAoB,IACvD/G,KAEjBgH,EAAkDP,IAE3B,kBAAff,GAA+C,kBAAbD,EACtCD,GAAcE,EAAYD,GAC1B,CAAC,EAAG,EAAG,IACXwB,EAAoBvI,KAAKwI,KAAKF,EAAsB,IAAM,EAAIA,EAAsB,IAAM,EAAIA,EAAsB,IAAM,GAC1HG,EAA0B,CAC5BH,EAAsB,GAAKC,EAC3BD,EAAsB,GAAKC,EAC3BD,EAAsB,GAAKC,GAG/B,GAAKjH,EAEL,IAKI,MAAMoH,EAAiB,IAAIC,kBAAkBtkB,EAAQC,GACrD,IAAK,IAAImN,EAAI,EAAGA,EAAI6P,EAAK7B,OAAQhO,GAAK,EAC7B6P,EAAK7P,IAAM6P,EAAK7P,EAAI,IAAM6P,EAAK7P,EAAI,IAAM6P,EAAK7P,EAAI,GACnDiX,EAAejX,EAAI,GAAK,EAExBiX,EAAejX,EAAI,GAAK,EAGhC,MAAMmX,EAAc9J,GAAkBwB,KAAQoI,EAAgB,CAACpkB,EAAQD,KACjEwkB,EAAMD,EAAYpJ,MAAM,GAAIsJ,EAASF,EAAYpJ,MAAM,GACvDuJ,EAAe,IAAIJ,kBAAkBtkB,EAAQC,EAAS,GAGtD0kB,EAAuBhJ,KAAKiJ,MAAM,IAAMpB,GAC9C,IAAK,IAAIjH,EAAW,EAAGA,EAAWiI,EAAKjI,IACnC,IAAK,IAAIsI,EAAW,EAAGA,EAAWJ,EAAQI,IAAY,CAClD,MAAMC,EAA+C,GAA/BvI,EAAWvc,EAAQ6kB,GACnCE,EAAcR,EAAY7H,IAAIH,EAAUsI,GAE9CH,EAAaI,GAAgBC,EAAcJ,EAC3CD,EAAaI,EAAe,GAAKC,EAAcJ,EAC/CD,EAAaI,EAAe,GAAKC,EAAcJ,EAC/CD,EAAaI,EAAe,GAAqB,IAAhBC,EAAoB,EAAI,IAKjE,MAAMC,EAAkBC,SAASC,cAAc,UAC/CF,EAAgBhlB,MAAQA,EACxBglB,EAAgB/kB,OAASA,EACzB+kB,EAAgBlB,WAAW,MAAMqB,aAC7B,IAAIC,UAAUV,EAAc1kB,EAAOC,GACnC,EACA,GAMJ,MAAMolB,EAAkBJ,SAASC,cAAc,UAC/CG,EAAgBrlB,MAAQA,EACxBqlB,EAAgBplB,OAASA,EACU,IAAI2e,GAAkBP,KAAqCgH,GACnE5F,MAAMuF,EAAiB,CAC9CvG,UAAW,EACXE,MAAO,EACPD,SAAU,IACVJ,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBrc,KAAMic,KAMV,MAAMkH,EAAwBL,SAASC,cAAc,UACrDI,EAAsBtlB,MAAQA,EAC9BslB,EAAsBrlB,OAASA,EAE/B,MAAMslB,EAAyBD,EAAsBxB,WAAW,MAChEyB,EAAuBC,UACnBH,EACA,EACA,EACArlB,EACAC,GAEJ,MAAMwlB,ECzIiBC,EAC3BC,EACA3lB,EACAC,EACA2lB,EACAC,EACAC,KAEA,MAAMC,EAAS,IAAIzB,kBAAkBtkB,EAAQC,EAAS,GAChD+lB,EAAQrK,KAAKiJ,MAAMgB,EAAW,GAGpC,SAASK,EAAc/O,EAAWC,EAAW+O,EAAYC,GACrD,OAAOxK,KAAKyK,OAAOlP,EAAIgP,IAAO,GAAK/O,EAAIgP,IAAO,IAAM,EAAIL,GAAc,IAI1E,SAASO,EAAYC,EAAYC,GAC7B,OAAO5K,KAAKyK,OAAOE,EAAKC,IAAO,IAAM,EAAIV,GAAc,IAI3D,IAAK,IAAI1O,EAAI,EAAGA,EAAIlX,EAAQkX,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAIlX,EAAOkX,IAAK,CAC5B,IAAIsP,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAGzC,IAAK,IAAIC,GAAMZ,EAAOY,GAAMZ,EAAOY,IAC/B,IAAK,IAAIC,GAAMb,EAAOa,GAAMb,EAAOa,IAAM,CACrC,MAAMC,EAAK5P,EAAI2P,EACTE,EAAK5P,EAAIyP,EAGf,GAAIE,GAAM,GAAKC,GAAM,GAAKD,EAAK9mB,GAAS+mB,EAAK9mB,EAAQ,CACjD,MAAM+mB,EAAgC,GAAjB7P,EAAInX,EAAQkX,GAC3B+P,EAAoC,GAAnBF,EAAK/mB,EAAQ8mB,GAG9BI,EAAUvB,EAAUqB,GACpBG,EAAUxB,EAAUqB,EAAc,GAClCI,EAAUzB,EAAUqB,EAAc,GAClCK,EAAY1B,EAAUsB,GACtBK,EAAY3B,EAAUsB,EAAgB,GACtCM,EAAY5B,EAAUsB,EAAgB,GAQtCvW,EALUuV,EAAca,EAAIC,EAAI7P,EAAGC,GAC1BkP,EAAYa,EAASG,GACrBhB,EAAYc,EAASG,GACrBjB,EAAYe,EAASG,GAKpCf,GAAQa,EAAY3W,EACpB+V,GAAQa,EAAY5W,EACpBgW,GAAQa,EAAY7W,EACpBiW,GAAQjW,GAMpB,MAAM8W,EAAgC,GAAjBrQ,EAAInX,EAAQkX,GACjC6O,EAAOyB,GAAehB,EAAOG,EAC7BZ,EAAOyB,EAAc,GAAKf,EAAOE,EACjCZ,EAAOyB,EAAc,GAAKd,EAAOC,EACjCZ,EAAOyB,EAAc,GAAK7B,EAAU6B,EAAc,GAI1D,OAAOzB,GDkEkBL,CACjBH,EAAuBxB,aAAa,EAAG,EAAG/jB,EAAOC,GAAQgd,KACzDjd,EACAC,EACA,EACA,GACA,IAQEwnB,EAAa,IAAInD,kBAAkBtkB,EAAQC,EAAS,GAC1D,IAAK,IAAIynB,EAAW,EAAGA,EAAWzK,EAAK7B,OAAQsM,GAAY,EAAG,CAC1D,IAAIZ,EAAMrB,EAAaiC,GAAY,MAAS,EACxCX,EAAMtB,EAAaiC,EAAW,GAAK,MAAS,EAC5CC,EAAMlC,EAAaiC,EAAW,GAAK,MAAS,EAChD,MAGME,GAHgBd,EAAK1C,EAAwB,GAC7C2C,EAAK3C,EAAwB,GAC7BuD,EAAKvD,EAAwB,IACO,GAAKzI,KAAKkM,IAAIlE,GAAgBhI,KAAKkM,IAAIjE,IAC3EkE,EAAYnM,KAAKC,IAAI+H,EAAchI,KAAKoB,IAAI6K,EAAmBhE,IAGrE6D,EAAWC,GAAY/L,KAAKuH,MAAMjG,EAAKyK,GAAYjE,EAAc,GAAKqE,GACtEL,EAAWC,EAAW,GAAK/L,KAAKuH,MAAMjG,EAAKyK,EAAW,GAAKjE,EAAc,GAAKqE,GAC9EL,EAAWC,EAAW,GAAK/L,KAAKuH,MAAMjG,EAAKyK,EAAW,GAAKjE,EAAc,GAAKqE,GAC9EL,EAAWC,EAAW,GAAKzK,EAAKyK,EAAW,GAG/C,OAAO,IAAItC,UAAUqC,EAAYznB,EAAOC,GAC1C,MAAO8nB,GAEL,OADAC,QAAQC,MAAM,gCAAiCF,GACxC,OE3KFG,GAAgB,SACzBC,EACAC,GAEE,IADFC,EAAkB3I,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAErB,OAAO,IAAI4I,SAAiBC,IACxBC,YAAW,KACP,GAAKL,EAAYM,SAAYL,EAEzB,IACID,EAAYM,QAAQC,QAAOC,IACvB,GAAKA,EACA,CACD,MAAMC,EAAMC,IAAIC,gBAAgBH,GAChC,GAAKC,EACA,CACD,MAAMG,EAAQ,IAAIC,MAClBD,EAAM9kB,IAAM2kB,EACZG,EAAME,OAAS,KACXb,EAAU5C,UAAUuD,EAAO,EAAG,GAC9BF,IAAIK,gBAAgBN,GACpBL,GAAQ,IAEZQ,EAAMI,QAAU,KACZN,IAAIK,gBAAgBN,GACpBL,GAAQ,SAXNA,GAAQ,QAHXA,GAAQ,MAmBzB,MAAOR,GAELK,EAAU5C,UAAU2C,EAAYM,QAAS,EAAG,GAC5CT,QAAQC,MAAMF,GACdQ,GAAQ,QA3BwBA,GAAQ,KA8BpC,GAAbF,OCxBEe,GAAmBC,GACN,gBAAfA,EAAKvpB,QAA4BwpB,GAAaD,GAE5CC,GAAgBD,GACH,UAAfA,EAAKvpB,OAAoC,SAAfupB,EAAKvpB,OAAmC,gBAAfupB,EAAKvpB,MAgBtDypB,GAAwBzpB,GACnB,UAAVA,GAA+B,SAAVA,EAAyB,KACpC,QAAVA,EAAwB,OACd,iBAAVA,EAAiC,iBACvB,gBAAVA,GAAqC,SAAVA,GAA8B,cAAVA,EAA8B,OAC1E,QAGE0pB,GAAoB1pB,IACrBwpB,GAAa,CAAExpB,WAAY2pB,GAAgB3pB,GAG1C2pB,GAAmB3pB,GACrB,CAAC,OAAQ,MAAO,eAAgB,cAAe,QAAS,OAAQ,UAAU4pB,SAAS5pB,G,kCC3C6hC6pB,GAAY,SAAA5B,GAAI,IAAIjN,GAAGiN,EAAEA,EAAE6B,UAAU,EAAE7B,EAAE3M,OAAO,IAAIyO,MAAM,QAAK,GAAG9B,EAAEjN,EAAE,GAAG,EAAEA,EAAEM,OAAO,CAACN,EAAEA,EAAE,GAAL,qBAAqBA,GAArB,IAAQ,IAAI,EAAJ,0BAAQgP,EAAR,QAAe/B,GAAGA,EAAEA,EAAE8B,MAAMC,IAAIzX,KAAK0V,EAAEgC,QAA/C,+BAAsD,OAAOC,GAAcjC,EAAE,IAAIiC,GAAc,SAACjC,GAAS,IAAPjN,EAAM,uDAAJ,EAAWgP,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,OAAOG,EAAE,SAAClC,EAAEjN,GAAH,OAAOiN,EAAEmC,QAAQ,IAAIrX,OAAJ,WAAeiI,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,GAA/B,aAAsCA,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,IAAK,MAAK,SAAAiN,GAAC,OAAEA,IAAIjN,EAAE,GAAGA,EAAE,GAAGA,EAAE,OAAI,GAAGA,EAAE,IAAIA,EAAE,EAAEA,EAAEgP,EAAE1O,SAASN,EAAEiN,EAAEkC,EAAElC,EAAE+B,EAAEhP,SAAS,IAAIA,EAAEgP,EAAE1O,OAAON,KAAKiN,EAAEkC,EAAElC,EAAE+B,EAAEhP,IAAI,OAAOiN,GCExkD,MAoIMoC,GAAmBtnB,wBAAA,GApI+D,CACpFoT,QAAS,KACTL,OAAQ,KACR9V,MAAO,KACPoW,KAAM,KACNvT,QAAS,CACLynB,QAAS,KACTtpB,KAAM,OACNC,SAAU,OACVE,KAAM,OACND,KAAM,OACNK,UAAW,OAEXgpB,SAAU,OACVlpB,UAAW,OACXC,WAAY,OACZF,SAAU,QAEdiV,OAAQ,KACRrM,IAAK,KACLgN,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXZ,UAAW,MACXa,QAAS,CACLmT,QAAS,MACTlT,EAAG,MACHC,EAAG,MACHnX,MAAO,MACPC,OAAQ,MACRmX,KAAM,MACNC,OAAQ,OAEZC,cAAe,MACfC,WAAY,KACZE,cAAe,KACfD,eAAgB,MAChBE,iBAAkB,MAClB9U,eAAgB,MAChB+U,eAAgB,CACZyS,QAAS,MACTlT,EAAG,MACHC,EAAG,MACHnX,MAAO,MACPC,OAAQ,MACRmX,KAAM,MACNC,OAAQ,OAEZpW,KAAM,KACNoV,cAAe,MACf8B,YAAa,CACTiS,QAAS,KACThS,iBAAkB,OAClBvM,UAAW,MACXwM,OAAQ,OAEZC,cAAe,CACX8R,QAAS,KACTve,UAAW,MACXwM,OAAQ,OAEZ/B,UAAW,CACP8T,QAAS,KACTrjB,YAAa,OACbyP,gBAAiB,OACjBxP,UAAW,OACX7B,UAAW,OACXM,KAAM,OACNI,cAAe,OACfC,cAAe,OACflB,UAAW,OACXH,YAAa,OACbC,WAAY,OACZC,UAAW,OACX4R,kBAAmB,QACnBhR,UAAW,OACXG,YAAa,QACbgB,YAAa,QACbpB,UAAW,OACXT,QAAS,OACTK,OAAQ,OACRqB,WAAY,OACZH,YAAa,OACbE,cAAe,QACfD,cAAe,SAEnBoQ,UAAW,KACXC,UAAW,KACXE,KAAM,KACNC,cAAe,KACfF,SAAU,KACViB,QAAS,KACTC,OAAQ,KACRnV,WAAY,KACZoV,cAAe,KACfC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBC,YAAa,KACbK,OAAQ,KACRC,MAAO,KACPC,IAAK,MACLC,IAAK,MACLC,SAAU,KACVC,QAAS,MACTC,eAAgB,MAChBC,YAAa,MACbE,mBAAoB,MACpBD,iBAAkB,MAClBE,aAAc,MACdC,QAAS,KACTC,eAAgB,KAChBG,gBAAiB,MACjBC,kBAAmB,MACnBH,cAAe,MACfC,cAAe,MACfG,eAAgB,MAChBC,aAAc,OAEgB,CAC9B6Q,SAAU,KACVC,QAAS,KACTC,YAAa,CACTJ,QAAS,MACTlT,EAAG,MACHC,EAAG,MACHnX,MAAO,MACPC,OAAQ,MACRmX,KAAM,MACNC,OAAQ,SAQHoT,GAAmB,SAC5BpB,GAEE,IADFqB,EAA+BhL,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAGyK,GAElC,MAAMQ,EAAqC,GACrCC,EAAc/nB,YAAA,GAAQwmB,GAkB5B,OAhBAhlB,OAAOwmB,KAAKD,GAAgBE,SAAQC,IAChC,MAAMC,EAAaJ,EAAeG,GAElC,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBzP,MAAM0P,QAAQD,GAMrE,CACH,MAAME,EAAcR,EAAWK,GAEJ,kBAAhBG,IAA0BP,EAAcO,GAAeF,OATmB,CAAC,IAADG,EACrF,MAAMC,EAA6B,QAAvBD,EAAGT,EAAWK,UAAS,IAAAI,OAAA,EAApBA,EAAsBf,QAEjCgB,IACAT,EAAcS,GAAUX,GAAiBO,EAAYN,EAAWK,SASrEJ,GAGEU,GAAqB,SAC9BV,GAEE,IADFD,EAA+BhL,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAGyK,GAElC,MAAMmB,EAAwC,GAgB9C,OAfAjnB,OAAOwmB,KAAKH,GAAYI,SAAQS,IAC5B,MAAMC,EAAad,EAAWa,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBjQ,MAAM0P,QAAQO,GAOvC,MAA7Bb,EAAca,KACdF,EAAiBC,GAAWZ,EAAca,QARuC,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYpB,QAE5BqB,GAAed,EAAcc,KAC7BH,EAAiBC,GAAWF,GAAmBV,EAAcc,GAAcf,EAAWa,SAQ3FD,GAEEI,GAAiC,SAC1Cf,GAEE,IADFD,EAA+BhL,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAGyK,GAElC,MAAMwB,EAAmD,kBAAlBhB,EACjCiB,KAAKC,MAAMlC,GAAYmC,mBAAmBnB,KAC1CA,EAEAoB,EAAuC,GAgB7C,OAfA1nB,OAAOwmB,KAAKH,GAAYI,SAAQS,IAC5B,MAAMC,EAAad,EAAWa,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBjQ,MAAM0P,QAAQO,GAO7B,MAAvCG,EAAwBH,KACxBO,EAAgBR,GAAWI,EAAwBH,QAR8B,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYpB,QAE5BqB,GAAeE,EAAwBF,KACvCM,EAAgBR,GAAWG,GAA+BC,EAAwBF,GAAcf,EAAWa,SAQhHQ,GAoBEC,GAAkB,SAAC3C,GAAwE,IAAD4C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA5CC,EAAQ7M,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG7F,YAE3D0S,EAAStW,QAChB,MAAMuW,EAAY3pB,wBAAA,CACd8W,GAAIC,eACD2S,GACArL,aAAMmI,IA+Eb,GA5EAmD,EAAarU,YAAWtV,wBAAA,GACjBgX,KAAe1B,aACfqU,EAAarU,aAGc,MAA9BqU,EAAalU,cACbkU,EAAalU,cAAazV,YAAA,GACnBgX,KAAevB,eAGtBkU,EAAalU,cAAazV,wBAAA,GACnBgX,KAAevB,eACfkU,EAAalU,eAII,MAAxBkU,EAAavW,UAAiBuW,EAAavW,QAAU,GAC9B,MAAvBuW,EAAa5W,SAAgB4W,EAAa5W,OAAS,OACrB,MAA9B4W,EAAa1U,gBAAuB0U,EAAa1U,cAAgB,QAC1C,MAAvB0U,EAAarW,SAAgBqW,EAAarW,OAAS,IAEzB,MAA1BqW,EAAapW,YAAmBoW,EAAapW,UAAY,UACxDoW,EAAqBjC,UAAYlB,EAAKvf,MAAK0iB,EAAa1iB,IAAO0iB,EAAqBjC,gBACjFiC,EAAqBjC,QAExBiC,EAAqBhC,cAAgBnB,EAAKpS,UAASuV,EAAavV,QAAWuV,EAAqBhC,oBAC7FgC,EAAqBhC,YAII,MAAZ,QAAjByB,EAACO,EAAa1iB,WAAG,IAAAmiB,IAAI,MAAYO,EAAa1iB,IAAM,IACnB,MAAZ,QAArBoiB,EAACM,EAAa1V,eAAO,IAAAoV,IAAI,MAAYM,EAAa1V,QAAU,IACzB,MAAZ,QAAvBqV,EAACK,EAAaxV,iBAAS,IAAAmV,IAAI,MAAYK,EAAaxV,UAAY,UACzC,MAAvBwV,EAAazV,SAAgByV,EAAazV,QAAS,GAED,mBAA1CyV,EAAa7pB,QAAgB0nB,UAA4D,MAAlCmC,EAAa7pB,QAAQtB,YACpFmrB,EAAa7pB,QAAQtB,WAAcmrB,EAAa7pB,QAAgB0nB,gBACxDmC,EAAa7pB,QAAgB0nB,UAEzCmC,EAAa7pB,QAAOE,wBAAA,GAAQhC,KAA4B2rB,EAAa7pB,gBAC7D6pB,EAAa7pB,QAAgB0nB,SAEG,MAAZ,QAAxB+B,EAACI,EAAajV,kBAAU,IAAA6U,IAAI,MAAYI,EAAajV,WAAa,IAC1B,MAAZ,QAA5B8U,EAACG,EAAahV,sBAAc,IAAA6U,IAAI,MAAYG,EAAahV,eAAiB,IAChC,MAAZ,QAA9B8U,EAACE,EAAa9U,wBAAgB,IAAA4U,IAAI,MAAYE,EAAa9U,iBAAmB,UAChD,MAA9B8U,EAAa/U,gBAAuB+U,EAAa/U,eAAgB,GACnC,MAA9B+U,EAAalV,gBACTkV,EAAajV,YAAciV,EAAahV,gBAAkBgV,EAAa7pB,QAAQzB,YAEnFsrB,EAAalV,eAAgB,GAEjCkV,EAAa7U,eAAc9U,wBAAA,GRhSD,CAC1BqU,EAAG,EACHC,EAAG,EACHnX,MAAO,IACPC,OAAQ,KACRmX,KAAM,IACNC,OAAQ,IQ4RDmV,EAAa7U,gBAGO,MAAvB6U,EAAa3U,QAAyC,SAAvB2U,EAAa1sB,QAC5C0sB,EAAa3U,QAAS,GAGrB2U,EAAqBC,cAAgBpD,EAAKlQ,iBAAgBqT,EAAarT,eAAkBqT,EAAqBC,oBAC3GD,EAAqBC,iBACO9M,IAAhC6M,EAAarT,iBAA8BqT,EAAarT,gBAAiB,GAExEqT,EAAqBlC,WAAajB,EAAK1Q,WAAU6T,EAAa7T,SAAY6T,EAAqBlC,iBAC5FkC,EAAqBlC,SAExBkC,EAAalT,kBAAiBkT,EAAalT,gBpBrRA,EAChD,EACA,WACA,EACA,YoBkRKkT,EAAajT,oBAAmBiT,EAAajT,kBpBtRF,EAChD,EACA,WACA,EACA,YoBmRKiT,EAAanT,gBAAemT,EAAanT,cpBvRE,EAChD,EACA,WACA,EACA,YoBoRKmT,EAAapT,gBAAeoT,EAAapT,cpBxRE,EAChD,EACA,WACA,EACA,YoBqRKoT,EAAahT,iBAAgBgT,EAAahT,epBzRC,EAChD,EACA,WACA,EACA,YoBsR6C,qBAAlCgT,EAAazT,mBAAkCyT,EAAazT,kBAAmB,GACjD,qBAA9ByT,EAAavT,eAA8BuT,EAAavT,cAAe,GAC7EuT,EAAa3V,gBAAe2V,EAAa3V,cAAgB,QAEjC,IAAzB2V,EAAavW,SAA0C,IAAzBuW,EAAavW,QAAe,CAC1DuW,EAAavW,QAAU,EAEvB,MAAM,cAAE6B,EAAa,WAAEpV,EAAU,IAAE+V,EAAG,IAAEC,EAAG,OAAEb,EAAM,QAAED,EAAO,MAAE9X,GAAU0sB,EAMlEE,EAAYpD,GAAa,CAAExpB,WACO,SAAlBgY,GAA4BpV,KACzC+V,GAAOC,GAAQb,GAAUD,EAAQwD,QACpCsR,KAGFF,EAAa/T,IAAM,GACnB+T,EAAa9T,IAAM,IAI3B,OAAO8T,GAGEG,GAAsBC,IAC/B,IAEI,MAAO,mBAAoBA,GACpB,gBAAiBA,GACjB,UAAWA,EACpB,MAAO7E,GAEL,OADAC,QAAQC,MAAMF,IACP,IAGF8E,GAA6BD,IACtC,IACI,MAAO,QAASA,GACT,OAAQA,GACR,OAAQA,EACjB,MAAO7E,GAEL,OADAC,QAAQC,MAAMF,IACP,IAIF+E,GAA4BA,CACrCzD,EACA0D,KAEA,GAAuB,YAAnB1D,EAAKrS,WAA4BqS,EAAK/R,eAA2C,YAA1B+R,EAAK3R,iBAC5D,MAAO,CACHsV,WAAW,EACXlqB,OAAQ2nB,GAAiBpB,IAIjC,MAAMuB,EAAc/nB,wBAAA,GAAQwmB,GAAI,IAAEvS,QAAS,GAAIU,eAAgB,KAE/D,MAAO,CACHwV,WAAW,EACXlqB,OAAQ2nB,GAAiBG,KAK3BqC,GAAuBA,CAACC,EAAiBC,WAChCD,WAAsBC,IACP,kBAAfD,GAAkD,kBAAhBC,EAAiCxR,KAAKkM,IAAIqF,EAAaC,IAH7E,GAIhBD,IAAeC,GAEpBC,GAAkBA,CAACC,EAAmCC,KACxD,MACIjW,OAAQkW,EACRttB,OAAQutB,EACRxtB,MAAOytB,EACPvW,EAAGwW,EACHvW,EAAGwW,EACHvW,KAAMwW,GACE,OAARP,QAAQ,IAARA,IAAY,IAEZhW,OAAQwW,EACR5tB,OAAQ6tB,EACR9tB,MAAO+tB,EACP7W,EAAG8W,EACH7W,EAAG8W,EACH7W,KAAM8W,GACG,OAATZ,QAAS,IAATA,IAAa,GAEjB,OAAOL,GAAqBM,EAAYM,IACjCZ,GAAqBO,EAAYM,IACjCb,GAAqBQ,EAAWM,IAChCd,GAAqBS,EAAOM,IAC5Bf,GAAqBU,EAAOM,IAC5BL,IAAaM,GAGXC,GAAkBA,CAACC,EAAwBC,KACpD,MACIpX,QAASqX,EACT3W,eAAgB4W,GAEhBH,EADGI,EAASC,YACZL,EAAQ,+BAERnX,QAASyX,EACT/W,eAAgBgX,GAEhBN,EADGO,EAASH,YACZJ,EAAS,8BAEb,OAAOQ,aAAOL,EAAWI,IAClBxB,GAAgBkB,EAAaI,IAC7BtB,GAAgBmB,EAAoBI,IC9alCG,GAAqB7tB,IAC9B,IACI,OAAOA,EAAK8tB,WAAW,4BAA6B,MACtD,MAAOhH,GAEL,OADAC,QAAQC,MAAMF,GACP9mB,IAGF+tB,GAAuBzW,IAChC,IACI,OAAOA,EAAOwW,WAAW,4BAA6B,MACxD,MAAOhH,GAEL,OADAC,QAAQC,MAAMF,GACPxP,IAIF0W,GAAqBC,IAC9B,IACI,OAAOA,EAAKC,WAAW,sDACzB,MAAOpH,GAEL,OADAC,QAAQC,MAAMF,IACP,ICpBFqH,GAAeA,CAACnuB,EAAc0nB,EAAYxmB,KACnD,MAAM+sB,EAAOjK,SAASC,cAAc,KAEpCgK,EAAKG,SAAWpuB,EAChBiuB,EAAKI,KAAOC,OAAO1G,IAAIC,gBAAgBH,GACvCuG,EAAKM,QAAQC,YAAc,CAACttB,EAAM+sB,EAAKG,SAAUH,EAAKI,MAAMjd,KAAK,KAEjE,MAAMqd,EAAgB,IAAIC,WAAW,QAAS,CAC1CC,KAAML,OACNM,SAAS,EACTC,YAAY,IAGhBZ,EAAKa,cAAcL,GACnBR,EAAKc,UCHHC,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAACjtB,GAAU,QAETktB,GAAqBlsB,OAAOsN,QAAQse,IAAa3mB,QAA+B,CAACC,EAAKC,KACxF,MAAOgnB,EAAaC,GAAYjnB,EAGhC,OAFAD,EAAIknB,GAAYD,EAETjnB,IACR,IAEGmnB,GAAuC,CACzCC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,UAENC,GAAsB/sB,OAAOsN,QAAQ+e,IAAcpnB,QAA+B,CAACC,EAAKC,KAC1F,MAAOgnB,EAAaC,GAAYjnB,EAGhC,OAFAD,EAAIknB,GAAYD,EAETjnB,IACR,IAEG8nB,GAAmC,CACrC9vB,OAAQ,SACRgX,OAAQ,SACR+Y,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACLvC,KAAM,OACNwC,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,eAAgB,eAChBC,KAAM,QACN,cAAe,SAEbC,GAAkBztB,OAAOsN,QAAQ0f,IAAU/nB,QAA+B,CAACC,EAAKC,KAClF,MAAOgnB,EAAaC,GAAYjnB,EAGhC,OAFAD,EAAIknB,GAAYD,EAETjnB,IACR,IAEGwoB,GAA0G,CAC5G,OAAU,CACN/sB,IAAK,IAET,KAAQ,CACJA,IAAK,SACLhE,KAAM,QAEV,OAAU,CACNgE,IAAK,wBACLhE,KAAM,iBACNoV,UAAW,SAEf,MAAS,CACLpR,IAAK,eACLhE,KAAM,QACNoV,UAAW,SAEf,QAAW,CACPpR,IAAK,uBACLhE,KAAM,WACNoV,UAAW,QACXD,OAAQ,CAAC,WAGX6b,GAAY3tB,OAAOsN,QAAQogB,IAAkBzoB,QAA+B,CAACC,EAAKC,KACpF,MAAOyoB,EAAWzB,GAAehnB,EAGjC,OAFAD,EAAIinB,EAAYxrB,KAAOitB,EAEhB1oB,IACR,IAWU2oB,GAA2BA,CACpC7I,EACA8I,KAEA,MAAM,KACFlxB,EAAI,KACJ2V,EAAI,YACJsB,EAAW,UACXxB,EAAS,OACT6B,EAAM,IACNE,EAAG,IACHC,EAAG,IACH5O,EAAG,QACHgN,EAAO,UACPE,EAAS,SACT2B,EAAQ,QACRO,EAAO,UACPzC,EAAS,MACT+B,EAAK,eACLT,EAAc,kBACdE,EAAiB,iBACjBD,EAAgB,WAChBtV,EAAU,QACVkV,EAAO,MACP9X,EAAK,aACL2Z,EAAY,UACZnD,EAAS,cACTD,EAAa,UACbD,EAAS,OACTD,GACAkT,EACE+I,EAAiBtD,GAAkB7tB,GACnCoxB,EAAmBrD,GAAoBzW,GACvC+Z,EAA2BtD,GAAoBjX,GAC/Cwa,EAAiBtC,GAAYvZ,GAC7B8b,EAAsB9B,GAAaja,GACnCgc,EAAkBpB,GAASvxB,GAC3B4yB,EAAqC,eAAlBrc,EACnB2b,GACE,CACI1b,EAAUpR,OACVkR,EACAD,EAAO9D,KAAK,MACdA,KAAK,MAET,SACN+Q,EAAkD,OAAZ3J,QAAY,IAAZA,IAAgB,IAAhD,SAAE1Y,EAAQ,OAAE4xB,GAAiBvP,EAANwP,EAAInE,YAAArL,EAAA,uBAsDjC,MAAO,CACH4J,UArDY/rB,IAASmxB,GAClB7Z,IAAW8Z,GACXta,IAAmBua,QACA3S,IAAnB4S,QACwB5S,IAAxB6S,QACoB7S,IAApB8S,QACqB9S,IAArB+S,EAgDH5vB,OA/CQD,YAAA,CACRoT,QAAS,QACThV,KAAMmxB,EACNzT,MAAM,GAADza,OAAK0S,GACVzU,KAAM+V,EAAY7F,KAAK,KACvBvO,KAAoB,OAAdyuB,QAAc,IAAdA,IAAkB,GACxBha,OAAQ8Z,EACR5Z,MACAC,MACAma,OAAQla,EACRma,UAAW5Z,EACXzC,UAA8B,OAAnB+b,QAAmB,IAAnBA,IAAuB,OAClC7Y,GAAInB,EACJzX,SAAQ8B,YAAA,CACJkwB,QAASrwB,EACT6V,OAAQ+Z,EACRU,KAAM/a,EACNgb,IAAKjb,EACLkb,QAAS,SACTC,gBAAgB,GACbpyB,GAEPqyB,QAAS,SACTlE,KAAM,CACFmE,UAASzb,EAAQ8R,SAAS,KAC1B4J,YAAW1b,EAAQ8R,SAAS,KAC5B6J,WAAU3b,EAAQ8R,SAAS,KAC3B8J,aAAY5b,EAAQ8R,SAAS,KAC7B+J,cAAa7b,EAAQ8R,SAAS,KAC9BgK,aAAY9b,EAAQ8R,SAAS,KAC7BiK,eAAc/b,EAAQ8R,SAAS,KAC/BkK,cAAahc,EAAQ8R,SAAS,MAElCmK,OAAuB,OAAfpB,QAAe,IAAfA,IAAmB,SAC3BS,QAAS,SACTP,OAAwB,OAAhBD,QAAgB,IAAhBA,IAAoBC,EAE5B1tB,MAAOktB,EACDA,EAAO2B,UAAU,cACH,YAAd9c,EACIF,EACAhN,GACP8oB,KCxLL3C,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAACjtB,GAAU,QAETktB,GAAqBlsB,OAAOsN,QAAQse,IAAa3mB,QAA+B,CAACC,EAAKC,KACxF,MAAOgnB,EAAaC,GAAYjnB,EAGhC,OAFAD,EAAIknB,GAAYD,EAETjnB,IACR,IAaG6nB,GAAsB/sB,OAAOsN,QAXU,CACzCgf,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,WAE6C7nB,QAA+B,CAACC,EAAKC,KAC1F,MAAOgnB,EAAaC,GAAYjnB,EAGhC,OAFAD,EAAIknB,GAAYD,EAETjnB,IACR,IAqBGuoB,GAAkBztB,OAAOsN,QAnBU,CACrCpQ,OAAQ,SACRgX,OAAQ,SACR+Y,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACLvC,KAAM,OACNwC,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,cAAe,QACfmC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,aAAc,iBAE+B9qB,QAA+B,CAACC,EAAKC,KAClF,MAAOgnB,EAAaC,GAAYjnB,EAGhC,OAFAD,EAAIknB,GAAYD,EAETjnB,IACR,IAEG8qB,GAAyC,CAC3C,WAAY,IACZ,IAAO,IACP,YAAa,IACb,KAAQ,IACR,MAAS,IACT,cAAe,IACf,OAAU,IACV,eAAgB,KAgDPC,GAA6BjL,IAAgE,IAADjG,EAAAmR,EAAAC,EACrG,MAAM,IACF/b,EAAG,UACHhC,EAAS,YACTge,EAAW,UACXC,EAAS,IACThc,EAAG,KACHic,EAAI,UACJC,EAAS,GACTjb,EAAE,MACFgF,EAAK,aACLkW,EAAY,KACZ5zB,EAAI,UACJ6zB,EAAS,KACTC,EAAI,MACJ5a,EAAK,SACL6a,EAAQ,QACRC,EAAO,YACPC,GACA7L,EACEkJ,EAAiBhC,GAAmBwE,GACpCvC,EAAsBpB,GAAoB3a,IACzCgc,EAAiB0C,GAAYrD,GAAgB8C,GAAW/K,MAAM,KAG/DuL,EAA6F,QAAtEhS,EAAIyR,EAAeA,EAAa9F,WAAW,WAAY,SAAMpP,SAAS,IAAAyD,IAC3FuR,EAAOA,EAAK5F,WAAW,WAAY,IAAM,GAE3CsG,EAAwBD,EAAwBvL,MAAM,MACtDyL,ENpJ4BjM,IAC3B,CACH,SACA,UACA,MACA,OACA,eACA,QACFK,SAASL,EAAKvpB,OM4IgBy1B,CAAsB,CAClDz1B,MAAsB,OAAf2yB,QAAe,IAAfA,IAAmB,YACxB4C,EAAsBja,OAAS,EAC/B,CAAC,IAADlX,OACMmxB,EAAsB,GAAGtG,WAAW,KAAM,IAAG,QAC9CsG,EAAsBha,MAAM,IACjChJ,KAAK,MACL+iB,EACA9C,EAA2BwC,EAC3BA,EAAU/F,WAAW,WAAY,IACjC,GACAyG,EAAYf,EAAY,GAAGgB,kBAE3BlJ,EAAW1S,KAqCjB,MAAO,CACHmT,WAAW,EACXlqB,OAtCcD,wBAAA,GACX0pB,GAAQ,IACXtrB,OACAwX,IAAMA,EAAM,GAAY,MAAPA,EAAe,IAAG,GAAAvU,OAAMuU,GACzCC,IAAKA,EACEA,EAAM,GAAY,MAAPA,EAAe,IAAG,GAAAxU,OAAMwU,GACpC,IACNjC,UAA8B,OAAnB+b,QAAmB,IAAnBA,IAAuBzvB,EAClCwV,OAAQ+c,EACR5e,UAAyB,OAAd6b,QAAc,IAAdA,IAAkBlvB,EAC7BmV,MAAgD,QAA3C+b,EAAiC,QAAjCC,EAAEE,EAAUA,EAAUtZ,OAAS,UAAE,IAAAoZ,OAAA,EAA/BA,EAAiCkB,gBAAQ,IAAAnB,IAAI,GACpDz0B,MAAsB,OAAf2yB,QAAe,IAAfA,IAAmB,SAC1B7b,KAAoB,SAAdge,GAAwBK,EAAUA,EAAUtW,EAClDzG,YAAa8c,IAEO,UAAdJ,EACI,CAAC,cACa,SAAdA,EACI,CAAC,aACD,IACd9qB,IAAK0rB,EACLxe,UAAW,SACXC,QAAOpU,wBAAA,GACA0pB,EAAStV,SAAO,IACnBE,EAAG,IAEPU,OAA4B,SAApB4a,GAA8BlX,MAAM0P,QAAQiK,GACpDtd,SAAqB,OAAXsd,QAAW,IAAXA,IAAe,IAAIhhB,KAAIyhB,GAAUtB,GAAesB,KAC1DjzB,WAAyB,aAAbyyB,EACZld,kBAA4B,MAATkC,EAAgB,IAAG,GAAAjW,OAAMiW,GAC5CnC,iBAA2B,MAATmC,EAAgB,IAAG,GAAAjW,OAAMiW,GAC3CpC,eAAgBua,EAChB3Z,SAAU,GAAAzU,OAAGyV,GAAKic,SAAS,EAAG,KAC9B1c,QAAS3H,GAAa/I,IAAI,OCvNlC,IAAMqtB,GAA0B,IA4BnBC,GAAkB,WAA+D,IAA9DC,EAA6D,uDAA9C,EAAGC,EAA2C,uDAA5BH,GACzD9Y,EAAMgZ,EACNna,EAAMoa,EACNC,EAASra,EACTsa,EAAgBD,EAChBE,EAAe,GACfC,EAAY,IACZC,EAA0B,GAExBC,EAAgB,WAQlB,OAPkB,IAAdF,EAAiBjgB,KAEjB8f,GAAUG,EAEVH,GADAG,GAAaC,GAIV1a,KAAKoB,IAAIkZ,EAAQra,IAGtB2a,EAAa,WAIf,OAFAJ,GAAgB,EADhBF,GAAUG,GAMRnW,EAAQ,WAA6C,IAA5C8V,EAA2C,uDAA5BhZ,EAAKiZ,EAAuB,uDAARpa,EAC9CmB,EAAMgZ,EACNna,EAAMoa,EACNC,EAASD,EACTG,EAAe,GACfC,EAAY,IACZF,EAAgBF,GAGdQ,EAAY,kBAAMP,GAClBQ,EAAY,SAACC,GAAD,OAAuBT,EAASS,GAE5CC,EAAmB,eAACC,EAAD,uDAAeX,EAAf,OAA0BC,EAAgBU,GAC7DC,EAAmB,kBAAMX,GACzBY,EAAqB,WAGvB,OADAX,GAAgB,EADhBF,EAASC,GAKPa,EAAkB,kBAAMZ,GACxBhgB,EAAS,kBAAMggB,GAAgB,GAErC,MAAO,CACHlW,QACAsW,aACAD,gBACAngB,SACAqgB,YACAC,YACAE,mBACAE,mBACAC,qBACAC,oBAIKC,GAAW,SACpBC,GAKA,IAHE,IADFlB,EACC,uDADc,IAEXmB,EAAkBrB,GAChBsB,EAAYrB,KACXqB,EAAUJ,mBAAqB,GAAG,CACrC,GAAII,EAAUJ,mBAAqB,EAAG,CAElC,IAAMK,EAAcD,EAAUX,YAE9BU,EAAkBE,EAClB,MAEA,IAAMC,EAAUJ,EAAOE,EAAUX,aAEjC,IAAKa,GAAWF,EAAUX,YAAc,EAEpCW,EAAUZ,iBACP,CAEH,GAAIY,EAAUX,cAAgBX,GAAyB,MAClDqB,EAAkBC,EAAUb,iBAQ7C,IAAMgB,EAAe3b,KAAKC,IAAIma,EAAcpa,KAAKoB,IAAIma,EAAiBrB,KAEtE,OADIyB,IAAiBJ,GAAiBD,EAAOK,GACtCA,GC1HJ,MAAMC,GAAoBC,IAM7B,MAAM,cACFC,EAAgB,GAAE,aAClBC,EAAe,GAAE,YACjBC,EAAc,OAAM,cACpBC,EAAgB,SACX,OAALJ,QAAK,IAALA,IAAS,GACb,IAAI9mB,EAAS+mB,EACTpd,EAAQqd,EACRlc,EAA6C,kBAAhBmc,EAAwB,GAAAzzB,OAAMyzB,EAAW,MAAOA,EAC7EE,EAAsC,kBAAhBF,EAA2BA,EAAcG,WAAWH,EAAY5I,WAAW,KAAM,KACvGgJ,EAASH,EAEb,MAAO,CACHI,QAASA,IAAA,GAAA9zB,OAAS,CAACmW,EAAO3J,EAAQ8K,EAAMuc,GAAQE,QAAOC,GAAiB,KAATA,IAAa7lB,KAAK,KAAI,WACrF8lB,YAAaA,KAAA,CAAS9d,QAAOmB,OAAMuc,SAAQF,eAAcnnB,WACzD0nB,UAAUC,GAEN,OADA3nB,EAAS2nB,EACF9Y,MAEX+Y,SAASC,GAEL,OADAle,EAAQke,EACDhZ,MAEXS,QAAQwY,GACJ,MAAMC,EAAqC,oBAAbD,EACxBA,EAASX,GACTW,EAON,OANAhd,EAAiC,kBAAnBid,EAA2B,GAAAv0B,OAChCu0B,EAAc,MACjBA,EACNZ,EAAyC,kBAAnBY,EAChBA,EACAX,WAAWW,EAAe1J,WAAW,KAAM,KAC1CxP,MAEXmZ,UAAUC,GAEN,OADAZ,EAASY,EACFpZ,Q,cC1CNqZ,GAA4B,kBAAoBC,G3Bc1C,4C2BZNC,GAAmB,SAACC,GAAD,OAA4B,OAACA,QAAD,IAACA,IAAW,IACnE7kB,KAAI,gBAAGhR,EAAH,EAAGA,MAAO81B,EAAV,EAAUA,OAAV,gBAA0BA,EAA1B,YAAoC91B,MAASmP,KAAK,MAC9CwmB,GAAe,SAAfA,EAAgBI,GAAD,OAA+CA,EACrEA,EAAmBpP,MAAM,KACtB3V,KAAI,SAACC,EAAOyG,GAAW,IAAD,EACKzG,EAAM0V,MAAM,KADjB,oBACZmP,EADY,KAGnB,MAAO,CAAE91B,MAHU,KAGH81B,SAAQrf,GAAIiB,EAAQ,MAE1Cie,E3BGa,4C4BfNK,GAAa,WAA6B,IAAD,EAC5BC,mBAAS,GADmB,oBAC3CC,EAD2C,KACtCC,EADsC,KAMlD,MAAO,CAJSC,uBAAY,WACxBD,GAAO,SAAA7vB,GAAG,OAAIA,EAAM,OACrB,IAEc4vB,ICRd,MAAMG,GAAgBC,UACzB,MAAMC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,gBAAgB,aAADz1B,OAAeC,oBAE/C,MAAMy1B,EAAW,IAAIC,SAKrB,OAJAD,EAASD,OAAO,QAASG,GACzBF,EAASD,OAAO,OAAQ,OACxBC,EAASD,OAAO,QAASG,EAAQ5P,QAAQ,sDAAuD,IAAIA,QAAQ,OAAQ,WAEvG6P,MAAM,gCAAiC,CAChDC,OAAQ,OACRC,QAASR,EACT34B,KAAM84B,EACNM,SAAU,YCbX,IAAMC,GAAqB,SAAC,GAgB5B,IAfHC,EAeE,EAfFA,MACAC,EAcE,EAdFA,aAcE,IAbFC,uBAaE,SAZFC,EAYE,EAZFA,SACAC,EAWE,EAXFA,UACAC,EAUE,EAVFA,SACAC,EASE,EATFA,WAUA,MAAO,CACHC,SAAU,EACVC,QAAS,WACDR,GAAOpS,QAAQ6S,KAAK,mBAAoBT,GAC5CG,EAAS,IAEbO,OAAQ,WACAV,GAAOpS,QAAQ6S,KAAK,kBAAmBT,GAC3CG,GAAU,IAEdQ,UAAW,SAAChT,GACJuS,GAAiBvS,EAAEuS,kBACnBF,GAAOpS,QAAQ6S,KAAK,qBAAsBT,EAAOrS,EAAE/iB,MAC/B,KAAV,OAAV01B,QAAU,IAAVA,OAAA,EAAAA,EAAa3S,MACH,eAAVA,EAAE/iB,KAAkC,cAAV+iB,EAAE/iB,KAC5B+iB,EAAEiT,iBACFT,GAAS,SAAA/wB,GAAG,OAAImS,KAAKC,IAAI,EAAGye,EAAe7wB,EAAM,GAAK6wB,MAEvC,cAAVtS,EAAE/iB,KAAiC,YAAV+iB,EAAE/iB,KAChC+iB,EAAEiT,iBACFT,GAAS,SAAA/wB,GAAG,OAAImS,KAAKC,IAAI,EAAGye,EAAe7wB,EAAM,GAAK6wB,MAEvC,UAAVtS,EAAE/iB,KAA6B,MAAV+iB,EAAE/iB,IAC5Bw1B,IAEe,WAAVzS,EAAE/iB,MACC,OAARy1B,QAAQ,IAARA,YC3CT,MCEMQ,GAAsBA,CAACC,EAAgC/gB,IAChEtX,wBAAA,GACOq4B,GAAc,IACjB9yB,aAAc8yB,EAAe9yB,aAAe+R,EAC5C9R,SAAU6yB,EAAe7yB,SAAW8R,EACpChS,UAAW+yB,EAAe/yB,UAAYgS,IAIjCghB,GAAsBA,CAACC,EAA8CjhB,IACvEihB,EAAWlnB,KAAIxU,GAASA,EAAQya,IAG9BkhB,GAAoBA,CAC7BC,EACAnhB,KAEA,MAAM,qBACFjQ,EAAoB,mBACpBK,EAAkB,kBAClBJ,EAAiB,SACjBC,EAAQ,gBACRM,EAAe,gBACfwG,EAAe,WACf7G,EAAU,QACVQ,EAAO,mBACPC,EAAkB,kBAClBiG,GACAuqB,EAEJ,OAAAz4B,wBAAA,GACOy4B,GAAY,IACfpxB,qBAAsD,kBAAzBA,EAAoCA,EAAuBiQ,OAAQwF,EAChGpV,mBAAkD,kBAAvBA,EAAkCA,EAAqB4P,OAAQwF,EAC1FxV,kBAAmBA,EAAoBgQ,EACvC/P,SAAUA,EAAW+P,EACrBzP,gBAA4C,kBAApBA,EAA+BA,EAAkByP,OAAQwF,EACjFzO,gBAA4C,kBAApBA,EAA+BA,EAAkBiJ,OAAQwF,EACjFtV,WAAYA,EAAa8P,EACzBtP,QAA4B,kBAAZA,EAAuBA,EAAUsP,OAAQwF,EACzD7U,mBAAkD,kBAAvBA,EAAkCA,EAAqBqP,OAAQwF,EAC1F5O,kBAAgD,kBAAtBA,EAAiCA,EAAoBoJ,OAAQwF,KAIlF4b,GAAgBA,CAACzuB,EAAoBqN,IAC9CtX,wBAAA,GACOiK,GAAQ,IACXhB,SAAUgB,EAAShB,SAASoI,KAAIC,GACrBknB,GAAkBlnB,EAAOgG,OCnD/BqhB,GAAkB,WAAyD,IAAxDC,EAAO/b,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG,6BAA8BtE,EAAMsE,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACzE5c,EAAS,GACb,MAAM44B,EAAmBD,EAAQrgB,OACjC,IAAK,IAAIhO,EAAI,EAAGA,EAAIgO,EAAQhO,IACxBtK,GAAU24B,EAAQE,OAAOhgB,KAAKiJ,MAAMjJ,KAAKigB,SAAWF,IAExD,OAAO54B,GAkCJ,MAAM+4B,GAAe,WAA4C,IAADC,EAAA,IAA1CC,EAAQrc,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG,2BACS,QAA7Coc,EAAA7W,SAAS+W,cAA2BD,UAAS,IAAAD,GAA7CA,EAA+CG,SAGtCC,GAAgB,qCAChBC,GAAY,SAACC,GAAmC,IAAtBC,IAAS3c,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,KAAAA,UAAA,GAC5C,IACI,MAAM4c,EAAUF,EAAIlS,QAAQ,IAAK,IACjC,IAAIqS,EAAW,CAAC,EAAG,EAAG,EAAG,GAE0B,IAADC,EAAAC,EAQAC,EARlD,GAAuB,IAAnBJ,EAAQlhB,QAAmC,IAAnBkhB,EAAQlhB,OAChCmhB,EAAW,CACPI,SAAS,GAADz4B,OAAIo4B,EAAQ,IAAEp4B,OAAGo4B,EAAQ,IAAM,IACvCK,SAAS,GAADz4B,OAAIo4B,EAAQ,IAAEp4B,OAAGo4B,EAAQ,IAAM,IACvCK,SAAS,GAADz4B,OAAIo4B,EAAQ,IAAEp4B,OAAGo4B,EAAQ,IAAM,IACvCK,SAAS,GAADz4B,OAAc,QAAds4B,EAAIF,EAAQ,UAAE,IAAAE,IAAI,KAAGt4B,OAAa,QAAbu4B,EAAGH,EAAQ,UAAE,IAAAG,IAAI,KAAO,KAG7D,GAAuB,IAAnBH,EAAQlhB,QAAmC,IAAnBkhB,EAAQlhB,OAChCmhB,EAAW,CACPI,SAASL,EAAQjhB,MAAM,EAAG,GAAI,IAC9BshB,SAASL,EAAQjhB,MAAM,EAAG,GAAI,IAC9BshB,SAASL,EAAQjhB,MAAM,EAAG,GAAI,IAC9BshB,SAA4B,QAApBD,EAACJ,EAAQjhB,MAAM,EAAG,UAAE,IAAAqhB,IAAI,KAAM,KAI9C,OAAOH,EAASroB,KAAIC,GAASyoB,MAAMzoB,GAAS,IAAMA,IAAOkH,MAAM,EAAGghB,EAAY,EAAI,GACpF,MAAOtU,GACL,MAAO,CAAC,EAAG,EAAG,EAAG,GAAG1M,MAAM,EAAGghB,EAAY,EAAI,KAKxCQ,GAAiBA,KAC1B,IAAIC,GAAQ,EACZ,IAAUC,EAIV,OAJUA,EACNC,UAAUC,WACPD,UAAUE,QACT3N,OAAe4N,OAHP,2TAA2TC,KAAKL,IAAI,4hDAA4hDK,KAAKL,EAAEM,OAAO,EAAE,OAAKP,GAAQ,GAIt4DA,GAGJ,SAASQ,KAA8D,IAAD,IAAAC,EAAA7d,UAAAtE,OAA/CoiB,EAAI,IAAAjiB,MAAAgiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA/d,UAAA+d,GAC9B,OAAOD,EAAKvF,OAAOyF,SAASrrB,KAAK,K,iwBClF9B,MAAMsrB,GAAyBC,KAAOC,OAAMC,M,kCCA5C,MAAMC,GAAmBA,CAAC1U,EAAoB2U,KAAwC,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACxF,MAAM,QACFnlB,EAAO,OACPX,EAAM,OACN3C,EAAM,eACNiD,EAAc,KACd5X,EAAI,SACJ0X,EAAQ,eACRZ,EAAc,MACdS,EAAK,YACLN,EAAW,UACX5B,GACA+S,EAEJ,GAAIzT,IAAWooB,EAAc,OAAO3U,EAEpC,MAAMiV,EAA2B,QAAjBN,EAAyBtsB,GAAkBD,GACrD8sB,EAA6B,QAAjBP,GAA0B,MAAMZ,KAAK5kB,GACjDA,EAAM0R,QAAQ,MAAO,OACJ,QAAjB8T,GAA0B,MAAMZ,KAAK5kB,GACjCA,EAAM0R,QAAQ,MAAO,OACrB1R,EACJgmB,EAA+B37B,wBAAA,GAC9ByT,GAAS,IACZ7Q,KAAuB,QAAjBu4B,GAA6C,YAAnB1nB,EAAU7Q,KACpC,MACiB,QAAjBu4B,GAA6C,QAAnB1nB,EAAU7Q,KAChC,UACA6Q,EAAU7Q,OAGxB,OAAA5C,wBAAA,GACOwmB,GAAI,IACPpoB,KAAmB,QAAfg9B,EAAEK,EAAQr9B,UAAK,IAAAg9B,IAAIh9B,EACvB2U,OAAQooB,EACRzlB,OAAuB,QAAjB2lB,EAAEI,EAAQ/lB,UAAO,IAAA2lB,IAAI3lB,EAC3BR,eAAuC,QAAzBomB,EAAEG,EAAQvmB,UAAe,IAAAomB,IAAIpmB,EAC3CG,YAAaA,EAAYhE,KAAIC,IAAK,IAAAsqB,EAAA,OAAkB,QAAlBA,EAAIH,EAAQnqB,UAAM,IAAAsqB,IAAItqB,KACxD+E,QAAyB,QAAlBklB,EAAEE,EAAQplB,UAAQ,IAAAklB,IAAIllB,EAC7BP,SAA2B,QAAnB0lB,EAAEC,EAAQ3lB,UAAS,IAAA0lB,IAAI1lB,EAC/BH,MAAO+lB,EACP1lB,eAAiC,QAAjBmlB,GAAiCnlB,EACjDvC,UAAWkoB,K,uDCjCZ,MAcME,GAAkB,SAACC,GAA0F,IAAxDC,EAA6Clf,UAAAtE,OAAA,QAAAuE,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC9G,MAAMmf,EAAuBh8B,wBAAA,GACtB+7B,GACAD,EAAgBG,eAEjBC,EAAsB5qB,IAAmB,IAAD6qB,EAC1C,OAAqC,QAArCA,EAAOH,EAAwB1qB,UAAM,IAAA6qB,IAAI,IAEvCC,EAAoBA,CAACC,EAAkBC,KACzC,MAAMC,EAAa,IAAIvsB,OAAO,OAAD3O,OAAQG,OAAOwmB,KAAKsU,GAAS9sB,KAAK,KAAI,SAE7DgtB,EAAiBH,EAASrV,MAAMuV,GAEtC,OAAO77B,cAAC+7B,IAAMC,SAAQ,CAAAjlB,SACjB+kB,EAAenrB,KAAI,CAACC,EAAOyG,IACpBA,EAAQ,IAAM,EAAUrX,cAAC+7B,IAAMC,SAAQ,CAAAjlB,SAA4BnG,GAAK,GAAAjQ,OAAxBiQ,EAAK,KAAAjQ,OAAI0W,IACtDukB,EAAQhrB,MAHK+qB,IAO1BM,EAAwB,CAC1B,sBAAwBC,GACbV,EAAmB,uBAAuBhQ,WAAW,eAAgB0Q,GAEhF,sBAAwBA,GACbV,EAAmB,uBAAuBhQ,WAAW,eAAgB0Q,GAEhF,6BAA+BC,GACpBX,EAAmB,8BAA8BhQ,WAAW,aAAa,GAAD7qB,OAAKw7B,IAExF,gCAAkCC,GACvBV,EACHF,EAAmB,iCACnB,CAAEY,aAGV,gCAAiCC,CAACC,EAA0BC,IACjDb,EACHF,EAAmB,iCACnB,CAAEc,UAASC,YAGnB,6BAA8BC,CAC1BC,EACAC,EACAC,EACAC,IAEOlB,EACHF,EAAmB,8BACnB,CAAEiB,UAASC,UAASC,UAASC,YAGrC,iCACIC,GAEOnB,EACHF,EAAmB,kCACnB,CAAEqB,cAGV,4BAA8BC,GACnBpB,EACHF,EAAmB,6BACnB,CAAEsB,gBAGV,iCAAkCC,CAC9BC,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCC,CAC9BJ,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCE,CAC9BC,EACAJ,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAE8B,YAAWJ,SAAQC,sBAG7B,iCAAkCI,CAC9BD,EACAJ,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAE8B,YAAWJ,SAAQC,sBAG7B,iCAAkCK,CAC9BR,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCM,CAC9BT,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,sCACIO,GAEOhC,EACHF,EAAmB,uCACnB,CAAEkC,aAGV,oBACIC,GAEOjC,EACHF,EAAmB,qBACnB,CAAEmC,eAKd,OAAAr+B,wBAAA,GACO87B,GAAe,IAClBG,cAAeD,EACfp/B,WAAUoD,wBAAA,GACHg8B,GACAW,MC7JF2B,GAAUC,mBAAkB,CAAC3kB,EAAKC,KAC3C,MAAM2kB,EAAsB,MAExB,MAAMzY,EAAM,IAAIC,IAAI0G,OAAO+R,SAAShS,MAC9BiS,EAAe3Y,EAAI4Y,aACnBC,EAAyBF,EAAa7kB,IAAI,YAIhD,GAFA6kB,EAAaG,OAAO,YACpBnS,OAAOoS,QAAQC,aAAarS,OAAOoS,QAAQE,MAAO,GAAIjZ,EAAI0G,MACtDmS,EAAwB,OAAOA,EAEnC,IACI,MAAMK,EAAiBC,aAAaC,QAAQ,YAE5C,OAAIF,GACG,MACT,MAAO/Z,GAEL,OADAC,QAAQC,MAAM,iDAAkDF,GACzD,QAjBa,GAoBtBka,EAAqD,GACrDC,EAAkBxD,GAAe77B,wBAAC,GDjCF,CACtC5B,KAAM,UACNkhC,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,IC4B2B,IAC/BzD,cAAe,MAsCb0D,EAAehJ,UACjB,GAAIyI,EAAYQ,GAAe,OAAO,KACtC,IAAK,IAADC,EACA,MAAMC,QAAiB5I,MAAM,GAAD71B,OACrBC,aAAsB,gBAAAD,OAAeu+B,EAAY,SACpD,CACIxI,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhB2I,QAAsCD,EAASE,OAErD,IAAKD,EAAa9D,cAAe,MAAO,IAAIvhB,MAAM,uBAClD,MAAMulB,EAAoBpE,GAAgBkE,EAA6B,QAAjBF,EAAET,EAAYc,WAAG,IAAAL,OAAA,EAAfA,EAAiB5D,eAGzE,OAFAmD,EAAYQ,GAAgBK,EAErBA,EACT,MAAO/a,GAEL,OADAC,QAAQC,MAAM,gEAAiEF,GACxE,OAGTib,EAAiBxJ,UACnB,MAAMyJ,EAAWvmB,IAAMwmB,oBAAoBT,GAC3C,IAAKQ,EAAU,OAIf,MAAML,EAAgBX,EAAYQ,GAE5BR,EAAYQ,SADND,EAAaC,GAGrBG,GACAnmB,EAAI,CACA0mB,aAAczmB,IAAMwmB,oBAAoBT,GACxCW,SAAUR,EAAanjC,aAE3BsiC,aAAasB,QAAQ,WAAYZ,GACjChmB,EAAI,CACA6mB,WAAW,EACXH,aAAcF,KAGlBxmB,EAAI,CACA6mB,WAAW,EACXH,aAAczmB,IAAMwmB,oBAAoBH,IACxCK,SAAUlB,EAAgBziC,cAKtC,MAAO,CACHyjC,oBAAqB,GACrBC,aDhIkC,CACtCliC,KAAM,UACNkhC,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,GC2HJa,SAAUlB,EAAgBziC,WAC1BwoB,MAAO,KACPsb,cAAc,EACdD,WAAW,EACXE,iBAAiB,EACjBC,SAAUjK,UAjGeA,WACzB,IACI,MAAMmJ,QAAiB5I,MAAM,GAAD71B,OACrBC,aAAsB,6BACzB,CACI81B,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBiJ,QAA8DP,EAASE,OAE7E,IAAKK,EAAqB,MAAO,IAAI3lB,MAAM,qBAE3Cd,EAAI,CACAymB,sBACAM,iBAAiB,IAEvB,MAAOzb,GACLC,QAAQC,MAAM,6EAA8EF,GAC5FtL,EAAI,CACAymB,oBAAqB,CACjBH,IAAK,CACD9hC,KAAM,UACNkhC,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBiB,iBAAiB,MAkErBE,IAEJC,oBAAqBnK,gBAEXgJ,EAAa,aACbQ,EAAe3B,GACrB5kB,EAAI,CACA8mB,cAAc,KAGtBf,eACAQ,qBAIKY,GAAcA,IACNzC,IAAQ/d,IAAA,IAAC,SAAEggB,GAAUhgB,EAAA,OAAKggB,KAIlCS,GAAcA,IAAM1C,GAAQ2C,WAAWV,S,cChJpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,0BACA,2BACA,2BACA,6BACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAcpV,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzGqV,GAAc,IAAIC,IAAIL,GAAa9vB,IAAI+vB,KAEvCK,GAAsBP,GAAqBz6B,QAAO,CAACC,EAAK26B,EAAOtpB,KACjE,MAAM2pB,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuBh7B,EAAI26B,GAAqBtpB,GAE7DrR,IACR,IAEGk7B,GAAoBxnB,GACV,MAARA,GACS,KAATA,EADqB,GAEnB,IAAN/Y,OAAW+Y,EAAKiN,QAAQ,KAAM,MAAK,KA+NjCwa,GAAmBA,CAAChlC,EAAYilC,KAClC,GAAqB,mBAAVjlC,EAAqB,OAAOA,EACvC,GAAqB,kBAAVA,EAAoB,CAC3B,MAA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","file":"static/js/main.b230cde6.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n    frame: string,\r\n}) => [\r\n    {\r\n        value: 'fit' as const,\r\n        label: dictionary?.fit,\r\n    },\r\n    {\r\n        value: 'full' as const,\r\n        label: dictionary?.full,\r\n    },\r\n    {\r\n        value: 'frame' as const,\r\n        label: dictionary?.frame,\r\n    },\r\n];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxRef: React.RefObject<{\r\n        draw: (exportCanvas: HTMLCanvasElement) => void,\r\n    }>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    maximumScale: 2,\r\n    topToPendulumStructure: 210,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    leftToPendulumStructure: 52,\r\n    cardBorder: 28,\r\n    topToEffectBox: 885,\r\n    leftToEffectBox: 54,\r\n    effectBoxWidth: 705,\r\n    effectBoxHeight: 231,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        backgroundRatio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.057,\r\n        backgroundRatio: 1.057,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    const artSource = normalizedBoundless || body < 100\r\n        ? isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard'\r\n        : isPendulum\r\n            ? text < 100\r\n                ? 'extendedPendulum'\r\n                : pendulum < 100\r\n                    ? 'truePendulum'\r\n                    : 'pendulum'\r\n            : text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n\r\n    const result = CardArtCanvasCoordinateMap[artSource];\r\n    return {\r\n        ...result,\r\n        backgroundRatio: backgroundType === 'frame'\r\n            ? 0.686\r\n            : result.backgroundRatio,\r\n    };\r\n};\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const IconTypeMap: Record<string, {\r\n    value: string,\r\n    labelKey: string,\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n}> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    embossPitch: 90,\r\n    embossYaw: 90,\r\n    embossThickness: 0,\r\n    hasEmboss: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    hasEmboss: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo'\r\n| 'embossGold' | 'embossPlatinum';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n    embossGold: {\r\n        key: 'embossGold',\r\n        label: 'Embossed Gold',\r\n        image: 'asset/image/other/name-emboss-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossGold',\r\n            fillStyle: '#d09b0e',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#333333',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n    embossPlatinum: {\r\n        key: 'embossPlatinum',\r\n        label: 'Embossed Platinum',\r\n        image: 'asset/image/other/name-emboss-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossPlatinum',\r\n            fillStyle: '#c0c0c0',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#4d4d4d',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type OtherMakerCard = ReturnType<typeof getDefaultOtherMakerCard>;\r\nexport const getDefaultOtherMakerCard = () => ({\r\n    version: '1.0.0',\r\n    name: 'Card Name',\r\n    level: '4',\r\n    type: 'Warrior/Effect',\r\n    icon: 'Quick-play',\r\n    effect: 'Card Effect',\r\n    atk: '0',\r\n    def: '0',\r\n    serial: '1234567890',\r\n    copyright: '©',\r\n    attribute: 'Light',\r\n    id: 'ABCD-XY000',\r\n    pendulum: {\r\n        enabled: false,\r\n        effect: '',\r\n        blue: '0',\r\n        red: '0',\r\n        boxSize: 'Normal',\r\n        boxSizeEnabled: true,\r\n    },\r\n    variant: 'Normal',\r\n    link: {\r\n        topLeft: false,\r\n        topCenter: false,\r\n        topRight: false,\r\n        middleLeft: false,\r\n        middleRight: false,\r\n        bottomLeft: false,\r\n        bottomCenter: false,\r\n        bottomRight: false\r\n    },\r\n    layout: 'Effect',\r\n    boxSize: 'Normal',\r\n    rarity: 'secret',\r\n    image: '',\r\n});\r\n\r\nexport type YgoproDeckCardImage = ReturnType<typeof getDefaultYgoproDeckCardImage>;\r\nexport const getDefaultYgoproDeckCardImage = () => ({\r\n    id: 46986414,\r\n    image_url: 'https://images.ygoprodeck.com/images/cards/46986414.jpg',\r\n    image_url_small: 'https://images.ygoprodeck.com/images/cards_small/46986414.jpg',\r\n    image_url_cropped: 'https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg'\r\n});\r\n\r\nexport type YgoproDeckCardSet = ReturnType<typeof getDefaultYgoproDeckCardSet>;\r\nexport const getDefaultYgoproDeckCardSet = () => ({\r\n    set_name: '1990 Mega-Tins',\r\n    set_code: 'XX00-EN000',\r\n    set_rarity: 'Ultra Rare',\r\n    set_rarity_code: '(UR)',\r\n    set_price: '0.01',\r\n});\r\n\r\nexport type YgoproDeckCardMisc = ReturnType<typeof getDefaultYgoproDeckCardMisc>;\r\nexport const getDefaultYgoproDeckCardMisc = () => [\r\n    {\r\n        staple: 'No',\r\n        views: 0,\r\n        viewsweek: 0,\r\n        upvotes: 0,\r\n        downvotes: 0,\r\n        formats: [] as string[],\r\n        treated_as: '',\r\n        tcg_date: '',\r\n        ocg_date: '',\r\n        konami_id: 0,\r\n        has_effect: 1,\r\n        md_rarity: ''\r\n    }\r\n];\r\n\r\nexport type YgoproDeckCard = ReturnType<typeof getDefaultYgoproDeckCard>;\r\nexport const getDefaultYgoproDeckCard = () => ({\r\n    id: 10000000,\r\n    name: 'Card Name',\r\n    typeline: [\r\n        'Warrior',\r\n        'Effect',\r\n    ] as string[] | undefined,\r\n    type: 'Effect Monster',\r\n    humanReadableCardType: 'Effect Monster',\r\n    frameType: 'effect',\r\n    desc: '\\'\\'The ultimate wizard in terms of attack and defense.\\'\\'',\r\n    pend_desc: '',\r\n    monster_desc: 'You can Ritual Summon this card with \"Odd-Eyes Advent\".',\r\n    race: 'Warrior',\r\n    atk: 0,\r\n    def: 0 as number | undefined,\r\n    level: 4,\r\n    scale: 4 as number | undefined,\r\n    linkval: 3 as number | undefined,\r\n    linkmarkers: [] as string[] | undefined,\r\n    attribute: 'DARK',\r\n    archetype: 'Dark Magician',\r\n    ygoprodeck_url: 'https://ygoprodeck.com/card/dark-magician-4003',\r\n    card_sets: [] as YgoproDeckCardSet[],\r\n    card_images: [] as YgoproDeckCardImage[],\r\n    card_prices: [\r\n        {\r\n            cardmarket_price: '0.02',\r\n            tcgplayer_price: '0.23',\r\n            ebay_price: '0.99',\r\n            amazon_price: '14.45',\r\n            coolstuffinc_price: '0.39'\r\n        }\r\n    ],\r\n    misc_info: getDefaultYgoproDeckCardMisc() as YgoproDeckCardMisc,\r\n});","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n};\r\n\r\nexport const PendulumEffectCoordinate: CoordinateData[] = [\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n];\r\n\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\r\n    tcg: {\r\n        small: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        small: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 258,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n};\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilNameMap = {\r\n    normal: 'normal' as const,\r\n    gold: 'gold' as const,\r\n    platinum: 'platinum' as const,\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        name: FoilNameMap['normal' as const],\r\n        label: dictionary?.normal,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: FoilNameMap['gold' as const],\r\n        label: dictionary?.gold,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: FoilNameMap['platinum' as const],\r\n        label: dictionary?.platinum,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    allRightSymbolOffset?: number,\r\n    bulletSymbolOffset?: number,\r\n    bulletSymbolWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    allRightSymbolOffset: 1,\r\n    bulletSymbolWidth: 23,\r\n    fontSize: 24.5,\r\n    lineHeight: 24.7,\r\n    lineCount: 6,\r\n    bulletSymbolOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport type FontDeviation = {\r\n    uniformBoxDescent?: number,\r\n};\r\nexport type FontDeviationMap = {\r\n    threshold: number,\r\n    letterMap: Record<string, FontDeviation>,\r\n}\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    letterDeviationMap?: Record<string, FontDeviationMap>,\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    headTextGapRatio: 0,\r\n};\r\nconst DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"StoneSerif-Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nconst DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\nexport const NormalFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletSymbolOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletSymbolWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletSymbolOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletSymbolWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletSymbolOffset: 1 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletSymbolOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletSymbolWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletSymbolOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\r\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletSymbolWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletSymbolOffset: 1 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n};\r\n\r\n\r\nexport const PendulumNormalFontData: Record<string, FontData> = {\r\n    tcg: {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletSymbolWidth: 18, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletSymbolWidth: 17, fontSize: 17.0, lineHeight: 17.40, lineCount: 7 },\r\n            { bulletSymbolWidth: 14, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n};\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    tcg: {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletSymbolWidth: 18, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletSymbolWidth: 17, fontSize: 17.0, lineHeight: 17.40, lineCount: 7 },\r\n            { bulletSymbolWidth: 14, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    ocg: {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            {\r\n                bulletSymbolWidth: 41,\r\n                bulletSymbolOffset: 3,\r\n                fontSize: 45.55,\r\n                lineHeight: 57.6,\r\n                headTextFontRatio: 0.2,\r\n                lineCount: 2,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 31,\r\n                bulletSymbolOffset: 2,\r\n                fontSize: 35.55,\r\n                lineHeight: 40.6,\r\n                headTextFontRatio: 0.3,\r\n                lineCount: 3,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 23,\r\n                bulletSymbolOffset: 1,\r\n                fontSize: 25.05,\r\n                lineHeight: 30.6,\r\n                headTextFontRatio: 0.35,\r\n                lineCount: 4,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 16,\r\n                fontSize: 22.05,\r\n                lineHeight: 25.2,\r\n                headTextFontRatio: 0.4,\r\n                lineCount: 5,\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type FontStyle = '' | 'italic' | 'small-caps';\r\n\r\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps',\r\n            font: 'MatrixRegularSmallCaps',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.55,\r\n            fontList: [{\r\n                bulletSymbolWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                '1': {\r\n                    threshold: 0.94,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 11 },\r\n                        ị: { uniformBoxDescent: 11 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 11 },\r\n                        e̩: { uniformBoxDescent: 11 },\r\n                        È̩: { uniformBoxDescent: 11 },\r\n                        É̩: { uniformBoxDescent: 11 },\r\n                        è̩: { uniformBoxDescent: 11 },\r\n                        Ẹ: { uniformBoxDescent: 11 },\r\n                        ẹ: { uniformBoxDescent: 11 },\r\n                        Ệ: { uniformBoxDescent: 11 },\r\n                        ệ: { uniformBoxDescent: 11 },\r\n                    },\r\n                },\r\n                '2': {\r\n                    threshold: 0,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 20 },\r\n                        ị: { uniformBoxDescent: 20 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 20 },\r\n                        e̩: { uniformBoxDescent: 20 },\r\n                        È̩: { uniformBoxDescent: 20 },\r\n                        É̩: { uniformBoxDescent: 20 },\r\n                        è̩: { uniformBoxDescent: 20 },\r\n                        Ẹ: { uniformBoxDescent: 20 },\r\n                        ẹ: { uniformBoxDescent: 20 },\r\n                        Ệ: { uniformBoxDescent: 20 },\r\n                        ệ: { uniformBoxDescent: 20 },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.825,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletSymbolWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            headTextBold: true,\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            fontStyle: 'ocg',\r\n            fontList: [{\r\n                bulletSymbolWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletSymbolWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\nexport const passwordSentenceMap: Record<string, string> = {\r\n    ocg: '※デッキ構築には使用できません。',\r\n    tcg: 'This card cannot be in a Deck.',\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 48%',\r\n            'rgba(239,239,239,1) 52%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionMap = {\r\n    normal: [\r\n        { top: 175, left: 55, width: 100, height: 100 },\r\n        { top: 165, left: 323, width: 170, height: 80 },\r\n        { top: 175, left: 655, width: 100, height: 100 },\r\n        { top: 442, left: 45, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 442, left: 700, width: 70, height: 170 },\r\n        { top: 775, left: 55, width: 100, height: 100 },\r\n        { top: 810, left: 323, width: 170, height: 80 },\r\n        { top: 775, left: 655, width: 100, height: 100 },\r\n    ],\r\n    pendulum: [\r\n        { top: 169, left: 11, width: 100, height: 100 },\r\n        { top: 159, left: 323, width: 170, height: 80 },\r\n        { top: 169, left: 699, width: 100, height: 100 },\r\n        { top: 572, left: 1, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 572, left: 744, width: 70, height: 170 },\r\n        { top: 1054, left: 11, width: 100, height: 100 },\r\n        { top: 1093, left: 323, width: 170, height: 80 },\r\n        { top: 1054, left: 699, width: 100, height: 100 },\r\n    ],\r\n};\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -27, -38, -27, 0, -27, -38, -27, -38];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_FULL_LINE_OPEN = '᚛';\r\nexport const NB_FULL_LINE_CLOSE = '᚜';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\r\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil } from './foil-finish';\r\nimport { CondenseType } from './font-data-effect';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    frame: 'fusion',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    isLink: false as boolean | null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    frame: 'effect',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    isLink: null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport const ResolutionMap = {\r\n    '549x800': {\r\n        label: '549 × 800',\r\n        width: 549,\r\n        height: 800,\r\n        scale: 1,\r\n        settingValue: [549, 800] as [number, number],\r\n    },\r\n    '561x818': {\r\n        label: '561 × 818',\r\n        width: 561,\r\n        height: 818,\r\n        scale: 1,\r\n        settingValue: [561, 818] as [number, number],\r\n    },\r\n    '813x1185': {\r\n        label: '813 × 1185',\r\n        width: 813,\r\n        height: 1185,\r\n        scale: 1,\r\n        settingValue: [813, 1185] as [number, number],\r\n    },\r\n    '1122x1636': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\r\n        width: 1122,\r\n        height: 1636,\r\n        scale: 2,\r\n        settingValue: [1122, 1636] as [number, number],\r\n    },\r\n    '1388x2026': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\r\n        width: 1388,\r\n        height: 2026,\r\n        scale: 2,\r\n        settingValue: [1388, 2026] as [number, number],\r\n    },\r\n    '1626x2370': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\r\n        width: 1626,\r\n        height: 2370,\r\n        scale: 2,\r\n        settingValue: [1626, 2370] as [number, number],\r\n    },\r\n};\r\nexport const ResolutionList = [\r\n    ResolutionMap['549x800'],\r\n    ResolutionMap['561x818'],\r\n    ResolutionMap['813x1185'],\r\n    ResolutionMap['1122x1636'],\r\n    ResolutionMap['1388x2026'],\r\n    ResolutionMap['1626x2370'],\r\n];\r\n\r\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\r\nexport const ExportFormatList = [\r\n    {\r\n        value: 'csv' as const,\r\n        label: '.csv',\r\n    },\r\n    {\r\n        value: 'xlsx' as const,\r\n        label: '.xlsx',\r\n    },\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './foil-finish';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './regex';","import ndarray, { NdArray } from 'ndarray';\r\nimport ops from 'ndarray-ops';\r\nimport pool from 'typedarray-pool';\r\nimport phase2_1 from 'distance-transform/lib/p1';\r\nimport phase2_2 from 'distance-transform/lib/p2';\r\nimport phase2_inf from 'distance-transform/lib/pinf';\r\nimport phase2_p from 'distance-transform/lib/pp';\r\n\r\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\r\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\r\n    for (i = 0; i < rowCount; ++i) {\r\n        nextPoint = array[ptr++];\r\n        for (j = 1; j < colCount; ++j) {\r\n            nextPoint = min(array[ptr], nextPoint + 1);\r\n            array[ptr++] = nextPoint;\r\n        }\r\n        for (j = 0; j < colCount; ++j) {\r\n            nextPoint = min(array[--ptr], nextPoint + 1);\r\n            array[ptr] = nextPoint;\r\n        }\r\n        ptr += colCount;\r\n    }\r\n}\r\n\r\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\r\n    var dimensionCount = array.shape.length,\r\n        shape = array.shape.slice(0),\r\n        stride = new Array(dimensionCount),\r\n        size = 1,\r\n        stackSize = 0,\r\n        infinityHeight = 0,\r\n        index: number,\r\n        j: number,\r\n        n: number,\r\n        strideList: number[],\r\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\r\n        currentDimensionSize: number;\r\n    exponent = exponent || 2;\r\n    for (index = dimensionCount - 1; index >= 0; --index) {\r\n        stride[index] = size;\r\n        size *= shape[index];\r\n        infinityHeight += shape[index];\r\n        stackSize = Math.max(stackSize, shape[index]);\r\n    }\r\n\r\n    // Allocate scratch buffers\r\n    var phase2ResultAllocation = pool.mallocDouble(size),\r\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\r\n        s_q = pool.mallocUint32(stackSize),\r\n        t_q = pool.mallocUint32(stackSize);\r\n\r\n    /**\r\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\r\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\r\n     * */\r\n    var phase1ResultAllocation = pool.mallocDouble(size),\r\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\r\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\r\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\r\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\r\n        }\r\n    }\r\n    //Perform first phase of distance transform\r\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\r\n\r\n    //Second passes\r\n    for (index = dimensionCount - 1; index > 0; --index) {\r\n        strideList = phase2ResultArray.stride;\r\n        n = 1;\r\n        for (j = index - 1; j < dimensionCount; ++j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        for (j = index - 2; j >= 0; --j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        ops.assign(phase2ResultArray, phase1ResultArray);\r\n\r\n        //Execute phase 2\r\n        currentDimensionSize = shape[index - 1];\r\n        if (!isFinite(exponent)) {\r\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 1) {\r\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 2) {\r\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent < 1) {\r\n            throw new Error('Values of exponent < 1 are not supported');\r\n        } else {\r\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\r\n        }\r\n\r\n        //Swap buffers\r\n        tmp = phase1ResultArray;\r\n        phase1ResultArray = phase2ResultArray;\r\n        phase2ResultArray = tmp;\r\n    }\r\n\r\n    //Copy phase1ResultArray to result\r\n    ops.assign(array, phase1ResultArray);\r\n\r\n    pool.freeDouble(phase1ResultAllocation);\r\n    pool.freeDouble(phase2ResultAllocation);\r\n    pool.freeUint32(s_q);\r\n    pool.freeUint32(t_q);\r\n    return array;\r\n}","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\n\r\nconst HorizontalBlurShader = {\r\n    uniforms: {\r\n        'tDiffuse': { type: 't', value: null },\r\n        'h': { type: 'f', value: 3.0 / 512.0 }\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float h;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float lef4 = vUv.x - 4.0 * h;',\r\n        'float lef3 = vUv.x - 3.0 * h;',\r\n        'float lef2 = vUv.x - 2.0 * h;',\r\n        'float lef1 = vUv.x - 1.0 * h;',\r\n        'float rig1 = vUv.x + 1.0 * h;',\r\n        'float rig2 = vUv.x + 2.0 * h;',\r\n        'float rig3 = vUv.x + 3.0 * h;',\r\n        'float rig4 = vUv.x + 4.0 * h;',\r\n\r\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\r\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\r\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\r\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\r\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\r\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\r\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\r\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\r\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\r\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\r\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\r\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\r\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\r\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\r\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\r\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\r\n        'if (h > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n        //\"gl_FragColor = vec4(1,0,0,1);\",\r\n\r\n        '}'\r\n    ].join('\\n')\r\n};\r\nconst VerticalBlurShader = {\r\n    uniforms: {\r\n        tDiffuse: { type: 't', value: null },\r\n        v: { type: 'f', value: 3.0 / 512.0 },\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float v;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float top4 = vUv.y - 4.0 * v;',\r\n        'float top3 = vUv.y - 3.0 * v;',\r\n        'float top2 = vUv.y - 2.0 * v;',\r\n        'float top1 = vUv.y - 1.0 * v;',\r\n        'float bot1 = vUv.y + 1.0 * v;',\r\n        'float bot2 = vUv.y + 2.0 * v;',\r\n        'float bot3 = vUv.y + 3.0 * v;',\r\n        'float bot4 = vUv.y + 4.0 * v;',\r\n\r\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\r\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\r\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\r\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\r\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\r\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\r\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\r\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\r\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\r\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\r\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\r\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\r\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\r\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\r\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\r\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\r\n        'if (v > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n};\r\nconst NormalMapShader = {\r\n    uniforms: {\r\n        'type': { type: '1i', value: 0 },\r\n        'invertR': { type: '1f', value: 1 },\r\n        'invertG': { type: '1f', value: 1 },\r\n        'invertH': { type: '1f', value: 1 },\r\n        'dz': { type: '1f', value: 0 },\r\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\r\n        'tHeightMap': { type: 't', value: null }\r\n    },\r\n    vertexShader: [\r\n        'precision mediump float;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform vec3 dimensions;',\r\n        'void main() {',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\r\n        'vUv = uv;',\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'precision mediump float;',\r\n        'uniform vec3 dimensions;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform float dz;',\r\n        'uniform float invertR;',\r\n        'uniform float invertG;',\r\n        'uniform float invertH;',\r\n        'uniform int type;',\r\n        'uniform sampler2D tHeightMap;',\r\n\r\n        'void main(void) {',\r\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\r\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\r\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\r\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\r\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\r\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\r\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\r\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\r\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\r\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\r\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\r\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\r\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\r\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\r\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\r\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\r\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\r\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\r\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\r\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\r\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\r\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\r\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\r\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\r\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\r\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\r\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\r\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\r\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\r\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\r\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\r\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\r\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\r\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\r\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\r\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\r\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\r\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\r\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\r\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\r\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\r\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\r\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\r\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\r\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\r\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\r\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\r\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\r\n        '   float dx = 0.0, dy = 0.0;',\r\n        '   if(type == 0){',\t// Sobel\r\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\r\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\r\n        '   }',\r\n        '   else{',\t\t\t\t// Scharr\r\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\r\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\r\n        '   }',\r\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\r\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\r\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\r\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\r\n        '}'\r\n    ].join('\\n')\r\n};\r\n\r\nexport const SHADER_FILTER_TYPE = {\r\n    SOBEL: 'sobel' as const,\r\n    SCHARR: 'scharr' as const,\r\n};\r\nexport const getDefaultHeightToNormalMapOption = () => ({\r\n    invertedRed: false,\r\n    invertedGreen: false,\r\n    invertedSource: false,\r\n    blurSharp: 0,\r\n    strength: 1,\r\n    level: 8.5,\r\n    type: SHADER_FILTER_TYPE.SOBEL,\r\n});\r\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\r\n\r\nexport class HeightToNormalMap {\r\n    renderer: THREE.WebGLRenderer;\r\n    effectComposer: EffectComposer;\r\n    normalMapUniform: typeof NormalMapShader['uniforms'];\r\n    material: THREE.ShaderMaterial;\r\n    option: Required<HeightToNormalMapOption>;\r\n    canvas!: HTMLCanvasElement;\r\n    gaussianShaderX!: ShaderPass;\r\n    gaussianShaderY!: ShaderPass;\r\n\r\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\r\n        this.canvas = resultCanvas;\r\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\r\n        this.init();\r\n    }\r\n\r\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\r\n        const { width, height } = image;\r\n        const texture = this.getTexture(image);\r\n        this.normalMapUniform.tHeightMap.value = texture;\r\n        this.normalMapUniform.dimensions.value = [width, height, 0];\r\n        this.renderer.setSize(width, height);\r\n        this.effectComposer.setSize(width, height);\r\n        this.effectComposer.reset(this.getRenderTarget(width, height));\r\n\r\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\r\n            ...this.option,\r\n            ...option,\r\n        };\r\n\r\n        this.invertRed(invertedRed);\r\n        this.invertGreen(invertedGreen);\r\n        this.invertSource(invertedSource);\r\n        this.setBlurSharp(blurSharp, width, height);\r\n        this.setStrengthAndLevel(strength, level);\r\n        this.setType(type);\r\n\r\n        this.effectComposer.render(1 / 60);\r\n    }\r\n\r\n    init() {\r\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\r\n        const scene = new THREE.Scene();\r\n        const normalRenderScene = new RenderPass(scene, camera);\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\r\n        this.renderer.setClearColor(0x000000, 0); // the default\r\n\r\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\r\n\r\n        this.material = new THREE.ShaderMaterial({\r\n            fragmentShader: NormalMapShader.fragmentShader,\r\n            vertexShader: NormalMapShader.vertexShader,\r\n            uniforms: this.normalMapUniform,\r\n        });\r\n        this.material.transparent = true;\r\n\r\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\r\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\r\n        scene.add(renderMesh);\r\n\r\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\r\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\r\n        this.gaussianShaderX.renderToScreen = true;\r\n\r\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\r\n        this.effectComposer.addPass(normalRenderScene);\r\n        this.effectComposer.addPass(this.gaussianShaderY);\r\n        this.effectComposer.addPass(this.gaussianShaderX);\r\n    }\r\n    getRenderTarget(width?: number, height?: number) {\r\n        return new THREE.WebGLRenderTarget(width, height, {\r\n            minFilter: THREE.NearestFilter,\r\n            magFilter: THREE.NearestFilter,\r\n            format: THREE.RGBAFormat,\r\n            stencilBuffer: false,\r\n        });\r\n    }\r\n    getTexture(image: TexImageSource) {\r\n        const texture = new THREE.Texture(image);\r\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\r\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\r\n        texture.anisotropy = 2;\r\n        texture.needsUpdate = true;\r\n        return texture;\r\n    }\r\n\r\n    invertRed(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertR.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertR.value = 1;\r\n        }\r\n    }\r\n\r\n    invertGreen(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertG.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertG.value = 1;\r\n        }\r\n    }\r\n\r\n    invertSource(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertH.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertH.value = 1;\r\n        }\r\n    }\r\n\r\n    setBlurSharp(value: number, width: number, height: number) {\r\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\r\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\r\n    }\r\n\r\n    setStrengthAndLevel(strength: number, level: number) {\r\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\r\n    }\r\n\r\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\r\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\r\n    }\r\n}","// import distanceTransform from 'distance-transform';\r\nimport ndarray from 'ndarray';\r\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\r\nimport { bilateralFilter } from './bilateral-filter';\r\nimport { distanceTransform } from './distance-transform';\r\n\r\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\r\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\r\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\r\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const z = Math.sin(verticalAngleRadian);\r\n\r\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\r\n};\r\nexport const applyEmboss = ({\r\n    inputCanvas,\r\n    affectedHeight,\r\n    affectedWidth,\r\n    maxHeight = 8,\r\n    lightColorVec = [255, 255, 255],\r\n    /** Shine parallel with the surface, from rightside. */\r\n    lightAngleVec,\r\n    lightPitch,\r\n    lightYaw,\r\n    minIntensity = -1,\r\n    maxIntensity = 1,\r\n}: {\r\n    inputCanvas: HTMLCanvasElement,\r\n    affectedWidth?: number,\r\n    affectedHeight?: number,\r\n    maxHeight?: number,\r\n    lightColorVec?: [number, number, number],\r\n    lightAngleVec?: [number, number, number],\r\n    lightPitch?: number,\r\n    lightYaw?: number,\r\n    minIntensity?: number,\r\n    maxIntensity?: number,\r\n}) => {\r\n    const ctx = inputCanvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    /** Support partial transform to increase transform speed and reduce stuttering */\r\n    const height = affectedHeight ?? inputCanvas.height;\r\n    const width = affectedWidth ?? inputCanvas.width;\r\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\r\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\r\n    const data = imageData.data;\r\n\r\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\r\n        ? lightAngleVec\r\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\r\n            ? angleToVector(lightPitch, lightYaw)\r\n            : [1, 0, 0];\r\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\r\n    const normalizedLightAngleVec = [\r\n        computedLightAngleVec[0] / angleVecMagnitude,\r\n        computedLightAngleVec[1] / angleVecMagnitude,\r\n        computedLightAngleVec[2] / angleVecMagnitude\r\n    ];\r\n\r\n    if (!data) return;\r\n\r\n    try {\r\n        /**\r\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\r\n         */\r\n        /** Any pixel that is not transparent will be the foreground. */\r\n        const validPixelList = new Uint8ClampedArray(width * height);\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\r\n                validPixelList[i / 4] = 0;\r\n            } else {\r\n                validPixelList[i / 4] = 1;\r\n            }\r\n        }\r\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\r\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\r\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\r\n\r\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\r\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\r\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\r\n            for (let colIndex = 0; colIndex < column; colIndex++) {\r\n                const currentIndex = (rowIndex * width + colIndex) * 4;\r\n                const heightValue = dtImageData.get(rowIndex, colIndex);\r\n\r\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\r\n            }\r\n        }\r\n\r\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\r\n        const heightmapCanvas = document.createElement('canvas');\r\n        heightmapCanvas.width = width;\r\n        heightmapCanvas.height = height;\r\n        heightmapCanvas.getContext('2d').putImageData(\r\n            new ImageData(nextDtBitmap, width, height),\r\n            0,\r\n            0,\r\n        );\r\n\r\n        /**\r\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\r\n         */\r\n        const normalMapCanvas = document.createElement('canvas');\r\n        normalMapCanvas.width = width;\r\n        normalMapCanvas.height = height;\r\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\r\n        heightToNormalMapConverter.apply(heightmapCanvas, {\r\n            blurSharp: 0,\r\n            level: 9,\r\n            strength: 2.5,\r\n            invertedRed: false,\r\n            invertedGreen: false,\r\n            invertedSource: true,\r\n            type: SHADER_FILTER_TYPE.SOBEL,\r\n        });\r\n\r\n        /**\r\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\r\n         */\r\n        const softenNormalMapCanvas = document.createElement('canvas');\r\n        softenNormalMapCanvas.width = width;\r\n        softenNormalMapCanvas.height = height;\r\n\r\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\r\n        softenNormalMapContext.drawImage(\r\n            normalMapCanvas,\r\n            0,\r\n            0,\r\n            width,\r\n            height,\r\n        );\r\n        const filteredData = bilateralFilter(\r\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\r\n            width,\r\n            height,\r\n            9,\r\n            70,\r\n            20,\r\n        );\r\n\r\n        /**\r\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\r\n         * \r\n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\r\n         */\r\n        const resultData = new Uint8ClampedArray(width * height * 4);\r\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\r\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\r\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\r\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\r\n            const baseIntensity = nx * normalizedLightAngleVec[0]\r\n                + ny * normalizedLightAngleVec[1]\r\n                + nz * normalizedLightAngleVec[2];\r\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\r\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\r\n\r\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\r\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\r\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\r\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\r\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\r\n        }\r\n\r\n        return new ImageData(resultData, width, height);\r\n    } catch (e) {\r\n        console.error('Could not apply emboss effect', e);\r\n        return null;\r\n    }\r\n};","export const bilateralFilter = (\r\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n    diameter: number,\r\n    sigmaColor: number,\r\n    sigmaSpace: number,\r\n) => {\r\n    const output = new Uint8ClampedArray(width * height * 4);\r\n    const halfD = Math.floor(diameter / 2);\r\n\r\n    // Helper function to calculate the Gaussian weight for spatial distance\r\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\r\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\r\n    }\r\n\r\n    // Helper function to calculate the Gaussian weight for color distance\r\n    function colorWeight(c1: number, c2: number) {\r\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\r\n    }\r\n\r\n    // Loop through each pixel in the image\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\r\n\r\n            // Apply the filter to a local neighborhood around the current pixel\r\n            for (let ky = -halfD; ky <= halfD; ky++) {\r\n                for (let kx = -halfD; kx <= halfD; kx++) {\r\n                    const nx = x + kx;\r\n                    const ny = y + ky;\r\n\r\n                    // Check if the neighbor is within the image bounds\r\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\r\n                        const centerPixel = (y * width + x) * 4;\r\n                        const neighborPixel = (ny * width + nx) * 4;\r\n\r\n                        // Get the color values for the center pixel and the neighbor pixel\r\n                        const rCenter = imageData[centerPixel];\r\n                        const gCenter = imageData[centerPixel + 1];\r\n                        const bCenter = imageData[centerPixel + 2];\r\n                        const rNeighbor = imageData[neighborPixel];\r\n                        const gNeighbor = imageData[neighborPixel + 1];\r\n                        const bNeighbor = imageData[neighborPixel + 2];\r\n\r\n                        // Compute spatial and color weights\r\n                        const spatial = spatialWeight(nx, ny, x, y);\r\n                        const colorR = colorWeight(rCenter, rNeighbor);\r\n                        const colorG = colorWeight(gCenter, gNeighbor);\r\n                        const colorB = colorWeight(bCenter, bNeighbor);\r\n\r\n                        const weight = spatial * colorR * colorG * colorB;\r\n\r\n                        // Accumulate weighted sum of colors\r\n                        rSum += rNeighbor * weight;\r\n                        gSum += gNeighbor * weight;\r\n                        bSum += bNeighbor * weight;\r\n                        wSum += weight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize the result and assign it to the output image\r\n            const outputPixel = (y * width + x) * 4;\r\n            output[outputPixel] = rSum / wSum;\r\n            output[outputPixel + 1] = gSum / wSum;\r\n            output[outputPixel + 2] = bSum / wSum;\r\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\r\n        }\r\n    }\r\n\r\n    return output;\r\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\nexport const generateLayer = (\r\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n    exportCtx: CanvasRenderingContext2D | null | undefined,\r\n    delayQueue: number = 0,\r\n) => {\r\n    return new Promise<boolean>(resolve => {\r\n        setTimeout(() => {\r\n            if (!canvasLayer.current || !exportCtx) resolve(false);\r\n            else {\r\n                try {\r\n                    canvasLayer.current.toBlob(blob => {\r\n                        if (!blob) resolve(false);\r\n                        else {\r\n                            const url = URL.createObjectURL(blob);\r\n                            if (!url) resolve(false);\r\n                            else {\r\n                                const layer = new Image();\r\n                                layer.src = url;\r\n                                layer.onload = () => {\r\n                                    exportCtx.drawImage(layer, 0, 0);\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(true);\r\n                                };\r\n                                layer.onerror = () => {\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(false);\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n                } catch (e) {\r\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\r\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\r\n                    console.error(e);\r\n                    resolve(false);\r\n                }\r\n            }\r\n        }, delayQueue * 25);\r\n    });\r\n};","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink === true;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\r\n    return [\r\n        'fusion',\r\n        'synchro',\r\n        'xyz',\r\n        'link',\r\n        'dark-synchro',\r\n        'zarc',\r\n    ].includes(card.frame);\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkMonster } from './categorize';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    frame: 'fr',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        fontStyle: 'efs',\r\n        upSize: 'eus',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        fontStyle: 'pfs',\r\n        upSize: 'pus',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        embossPitch: 'nsep',\r\n        embossThickness: 'nset',\r\n        embossYaw: 'nsey',\r\n        fillStyle: 'nsfs',\r\n        font: 'nsft',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasEmboss: 'nshe',\r\n        hasGradient: 'nshg',\r\n        hasOutline: 'nshl',\r\n        hasShadow: 'nshs',\r\n        headTextFillStyle: 'nshfs',\r\n        lineColor: 'nslc',\r\n        lineOffsetX: 'nslox',\r\n        lineOffsetY: 'nsloy',\r\n        lineWidth: 'nslw',\r\n        pattern: 'nspt',\r\n        preset: 'nspr',\r\n        shadowBlur: 'nssb',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetX: 'nssox',\r\n        shadowOffsetY: 'nssoy',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const decompressedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                decompressedCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return decompressedCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const unshortenedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return unshortenedCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let rebuiltCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        rebuiltCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        rebuiltCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(rebuiltCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    /** Ensure that we detech the actual version from incoming cards. */\r\n    delete baseCard.version;\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    } else {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n            ...migratedCard.pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n    migratedCard.backgroundCrop = {\r\n        ...getDefaultCrop(),\r\n        ...migratedCard.backgroundCrop,\r\n    };\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\r\n        migratedCard.version = 2;\r\n\r\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\r\n        /**\r\n         * For older card, we have a detailed check to decide whether to display stats or not.\r\n         * \r\n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\r\n         */\r\n        const isMonster = checkMonster({ frame });\r\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n            ? !!(atk || def || (isLink && linkMap.length))\r\n            : isMonster;\r\n\r\n        if (!statInEffect) {\r\n            migratedCard.atk = '';\r\n            migratedCard.def = '';\r\n        }\r\n    }\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n\r\n    link.download = name;\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: 'Normal',\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { checkExtraDeckMonster } from './categorize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\r\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\r\n    /** Try to being clever */\r\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\r\n    const formattedMonsterEffect = (checkExtraDeckMonster({\r\n        frame: normalizedFrame ?? 'normal'\r\n    }) && splittedMonsterEffect.length > 1)\r\n        ? [\r\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\r\n            ...splittedMonsterEffect.slice(1),\r\n        ].join('\\n')\r\n        : normalizedMonsterEffect;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: formattedMonsterEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\r\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontGetter } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","export const uploadToImgur = async (imgLink: string) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Authorization', `Client-ID ${process.env.REACT_APP_IMGUR_CLIENT_ID}`);\r\n\r\n    const formdata = new FormData();\r\n    formdata.append('image', imgLink);\r\n    formdata.append('type', 'url');\r\n    formdata.append('title', imgLink.replace('https://images.ygoprodeck.com/images/cards_cropped/', '').replace('.jpg', ''));\r\n\r\n    return await fetch('https://api.imgur.com/3/image', {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: formdata,\r\n        redirect: 'follow',\r\n    });\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\r\n\r\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\r\n    return {\r\n        ...coordinateData,\r\n        trueBaseline: coordinateData.trueBaseline * scale,\r\n        trueEdge: coordinateData.trueEdge * scale,\r\n        trueWidth: coordinateData.trueWidth * scale,\r\n    };\r\n};\r\n\r\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\r\n    return coordinate.map(value => value * scale) as [number, number, number, number];\r\n};\r\n\r\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\r\n    fontSizeData: FontData,\r\n    scale: number,\r\n): FontData => {\r\n    const {\r\n        allRightSymbolOffset,\r\n        bulletSymbolOffset,\r\n        bulletSymbolWidth,\r\n        fontSize,\r\n        headTextSpacing,\r\n        iconSymbolWidth,\r\n        lineHeight,\r\n        offsetY,\r\n        ordinalFontOffsetY,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n\r\n    return {\r\n        ...fontSizeData,\r\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\r\n        bulletSymbolOffset: typeof bulletSymbolOffset === 'number' ? bulletSymbolOffset * scale : undefined,\r\n        bulletSymbolWidth: bulletSymbolWidth * scale,\r\n        fontSize: fontSize * scale,\r\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\r\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\r\n        lineHeight: lineHeight * scale,\r\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\r\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\r\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\r\n    };\r\n};\r\n\r\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: fontData.fontList.map(entry => {\r\n            return scaleFontSizeData(entry, scale);\r\n        }),\r\n    };\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './canvas';\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';\r\nexport * from './scale';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    cursor: pointer;\r\n    &:not(:disabled):hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    &:disabled {\r\n        color: var(--color-dim);\r\n        cursor: not-allowed;\r\n        background-color: var(--color-contrast);\r\n        border: var(--bw) solid var(--color-contrast);\r\n        .anticon {\r\n            color: inherit;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n        nameStyle,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n    const nextNameStyle: typeof nameStyle = {\r\n        ...nameStyle,\r\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\r\n            ? 'OCG'\r\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\r\n                ? 'Default'\r\n                : nameStyle.font,\r\n    };\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n        nameStyle: nextNameStyle,\r\n    };\r\n};","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-6.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-6.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.name-style.emboss.color.alert': (\r\n            colorTab: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\r\n                { colorTab },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardOpacity,\r\n    CondenseType,\r\n    Foil,\r\n    FoilNameMap,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    /** Creative customize stuff */\r\n    'Star Type',\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Emboss Pitch',\r\n    'Name Style - Emboss Yaw',\r\n    'Name Style - Emboss Thickness',\r\n    'Name Style - Has Emboss',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Effect Style - Font Style',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Pendulum Effect Style - Font Style',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n    let error = '';\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            artFinish,\r\n            artFit,\r\n            artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            backgroundFit,\r\n            backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            foil,\r\n            format,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            linkMap,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            typeAbility,\r\n            typeTextStyle,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n\r\n        write('Format', format);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink ?? undefined);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\r\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\r\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\r\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Effect Style - Font Style', effectStyle.fontStyle);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n\r\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\r\n            error = 'offline-data';\r\n        }\r\n\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return {\r\n        value: [\r\n            CsvStandardFieldList.join(','),\r\n            valueList.join('\\n'),\r\n        ].join('\\n'),\r\n        error,\r\n    };\r\n};\r\n\r\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\r\n    try {\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = reader('Star Type') === 'text'\r\n                    ? rawStar\r\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\r\n                        ? parseInt(rawStar)\r\n                        : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? emptyCard.pendulumScaleRed;\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? emptyCard.pendulumScaleBlue;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter(entry => typeof entry === 'string' && entry !== '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\r\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\r\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\r\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    effectStyle: { condenseTolerant, upSize: effectUpSize, fontStyle: effectFontStyle },\r\n                    effect,\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    linkMap,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumStyle: { upSize: pendulumEffectUpSize, fontStyle: pendulumEffectFontStyle },\r\n                    pendulumTextStyle,\r\n                    setId,\r\n                    star,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n    if (frameResult !== 0) return frameResult;\r\n\r\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n    return bottomFrameResult;\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst, ExportFormat } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    globalScale: number,\r\n    exportFormat: ExportFormat,\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    allowHotkey: boolean,\r\n    reduceMotionColor: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        reduceMotionColor,\r\n        resolution,\r\n        globalScale,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\r\n                ? globalScale\r\n                : 1,\r\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n    } = currentCard;\r\n    const pendingSave = useRef(false);\r\n\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && clonedCanvas && clonedCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            try {\r\n                if (size) {\r\n                    clonedCanvas.width = size[0];\r\n                    clonedCanvas.height = size[1];\r\n                }\r\n                /** Resize here */\r\n                clonedCanvasContext.drawImage(\r\n                    drawCanvas,\r\n                    0, 0, drawCanvas.width, drawCanvas.height,\r\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\r\n                );\r\n\r\n                const normalizedName = normalizeCardName(name);\r\n                var link = document.createElement('a');\r\n                link.download = normalizedName\r\n                    ? `${normalizedName}.png`\r\n                    : 'card.png';\r\n                link.href = clonedCanvas.toDataURL('image/png');\r\n                link.click();\r\n            } catch (e) {\r\n                onDownloadError();\r\n            }\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const normalizedName = normalizeCardName(name);\r\n\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth * maximumScale,\r\n    height = CanvasHeight * maximumScale,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType);\r\n                    }\r\n                } else {\r\n                    await caller(finishType);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_LINE_COLOR = '#000000';\r\nconst DEFAULT_LINE_WIDTH = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x,\r\n    y,\r\n    blur,\r\n    color,\r\n    colorGradient,\r\n    shadowColor,\r\n    lineColor,\r\n    lineColorGradient,\r\n    lineWidth,\r\n    globalScale = 1,\r\n    useDefault = true,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    useDefault?: boolean,\r\n    colorGradient?: CanvasGradient,\r\n    lineColorGradient?: CanvasGradient,\r\n} & CanvasTextStyle) => {\r\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\r\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\r\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\r\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\r\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\r\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\r\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\r\n\r\n    return () => {\r\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\r\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n                ctx.drawImage(image, normalizedX, normalizedY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n                const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n                const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n    \r\n                ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    sx, sy,\r\n    dw, dh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n        dw, dh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    globalScale: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    FontDeviationMap,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n        ? 0.046875\r\n        : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2 * globalScale;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation,\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviationMap,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        letterMap = {},\r\n        threshold = 10,\r\n    } = deviation ?? {};\r\n    const {\r\n        uniformBoxDescent,\r\n    } = letterMap[letter] ?? {};\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    let uniformYScale = 1;\r\n    let boxDescentCompensate = 0;\r\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\r\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\r\n\r\n        /** Need to carefully survey if we over-compensate in edge case. */\r\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\r\n\r\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\r\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\r\n    }\r\n    ctx.scale(1, uniformYScale);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\r\n    });\r\n    ctx.scale(1, 1 / uniformYScale);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n    globalScale: number,\r\n) => {\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n                + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    FontData,\r\n    BULLET_LETTER,\r\n    TCGSymbolLetterRegex,\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    FragmentSplitRegex,\r\n    WholeWordRegex,\r\n    DefaultFontSizeData,\r\n    ST_ICON_SYMBOL,\r\n    TextData,\r\n    NoSpaceRegex,\r\n    LETTER_GAP_RATIO,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    SquareBracketLetterRegex,\r\n    CapitalLetterRegex,\r\n    NumberRegex,\r\n    OCGNoOverheadGapRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    RUBY_REGEX,\r\n    DefaultFontData,\r\n    RUBY_BONUS_RATIO,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NonCompressableRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing: _letterSpacing,\r\n    format,\r\n    globalScale,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    globalScale: number,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    globalScale,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    globalScale: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\nimport { scaleFontSizeData } from 'src/util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n    option,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    globalScale: number,\r\n    option?: {\r\n        drawHeadText?: boolean,\r\n    },\r\n    debug?: boolean,\r\n}) => {\r\n    const { drawHeadText = true } = option ?? {};\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        bulletSymbolOffset = scaledDefaultFontSizeData.bulletSymbolOffset,\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n            globalScale,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(\r\n                    ctx,\r\n                    fragmentEdge,\r\n                    trueBaseline + bulletSymbolOffset - 1 * globalScale,\r\n                    bulletSymbolWidth,\r\n                    getBulletSpacing(format) * globalScale,\r\n                );\r\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg'\r\n                        ? allRightSymbolOffset\r\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    globalScale,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                if (drawHeadText) fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                    globalScale,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[`${globalScale}`],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                    globalScale,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap?.[`${globalScale}`],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    OCG_RUBY_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    ocgKeywordDataMap,\r\n    WHOLE_WORD_SOURCE,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    tcgToOCGLetterMap,\r\n    ocgToTCGLetterMap,\r\n    UNCOMPRESSED_SOURCE,\r\n    ocgNumberCircleMap,\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    FLAVOR_CONDITION_SOURCE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    contextualDoubleQuoteRegex,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_FULL_LINE_CLOSE\r\n} from 'src/model';\r\n\r\nexport type LineOption = {\r\n    alignment: 'left' | 'justify',\r\n};\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectText = effect;\r\n\r\n    const fullLineList = [];\r\n    const fullLineListOption: LineOption[] = [];\r\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\r\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\r\n    let lineReplacement: string | undefined;\r\n    let lineContent: string | undefined;\r\n    let fullLineReplacement: string | undefined;\r\n    let fullLineContent: string | undefined;\r\n    let willContinue = false;\r\n    do {\r\n        const result = wholeLineRegex.exec(effectText);\r\n        lineReplacement = result?.[1];\r\n        lineContent = result?.[2];\r\n        fullLineReplacement = result?.[3];\r\n        fullLineContent = result?.[4];\r\n\r\n        willContinue = false;\r\n        if (lineContent && lineReplacement) {\r\n            fullLineList.push(lineContent);\r\n            effectText = effectText.replace(lineReplacement, '');\r\n            fullLineListOption.push({ alignment: 'left' });\r\n            willContinue = true;\r\n        } else if (fullLineContent && fullLineReplacement) {\r\n            fullLineList.push(fullLineContent);\r\n            effectText = effectText.replace(fullLineReplacement, '');\r\n            fullLineListOption.push({ alignment: 'justify' });\r\n            willContinue = true;\r\n        }\r\n    } while (willContinue);\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    return {\r\n        fullLineList,\r\n        fullLineListOption,\r\n        effectText,\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    NormalFontData,\r\n} from '../../model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData } from '../../util';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    useItalic,\r\n    statInEffect,\r\n    typeInEffect,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    useItalic: boolean,\r\n}) => {\r\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\r\n        fontData = NormalFontData[fontDataKey];\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    // useItalic = false,\r\n    fontData = EffectFontData.tcg,\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    useItalic?: boolean,\r\n    fontData?: FontData,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n        globalScale: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n        globalScale = 1,\r\n    } = option ?? {};\r\n    let effectSizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return effectSizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        effectText,\r\n        effectFlavorCondition,\r\n        fullLineList,\r\n        fullLineListOption,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n    const paragraphList = effectText ? effectText.split('\\n') : [];\r\n\r\n    const { font, fontList } = scaleFontData(fontData, globalScale);\r\n    const yRatio = 1;\r\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\r\n    while (effectSizeLevel < fontList.length && effectSizeLevel >= 0) {\r\n        const tolerancePerSentence: Record<string, number> = format === 'tcg'\r\n            ? forceRelaxCondenseLimit && effectSizeLevel < forceRelaxCondenseLimit\r\n                ? CondenseTolerantMap['relaxed']\r\n                : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n            : {\r\n                '1': 800,\r\n                '2': 800,\r\n                '3': 800,\r\n            };\r\n        const fontSizeData = fontList[effectSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n        } = scaleCoordinateData(sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(font)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData: scaleFontData(fontData, globalScale),\r\n            fontLevel: effectSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = condense(\r\n            median => {\r\n                const { currentLineList, currentLineCount } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList,\r\n                    additionalLineCount,\r\n                    format, textData,\r\n                    width,\r\n                    globalScale,\r\n                });\r\n                lineListWithRatio = currentLineList;\r\n\r\n                if (currentLineCount > lineCount) return false;\r\n                return true;\r\n            },\r\n            200,\r\n        );\r\n\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\r\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            (effectiveMedian < tolerantValue)\r\n            && (effectSizeLevel < fontList.length - 1)\r\n        ) {\r\n            effectSizeLevel += 1;\r\n        } else {\r\n            clearCanvas(ctx);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            /** Naturally, non-brekable lines have their own condense ratio. */\r\n            const fullLineListWithRatio = fullLineList.map((line, index) => {\r\n                return {\r\n                    line,\r\n                    isLast: fullLineListOption[index].alignment === 'justify' ? false : true,\r\n                    effectiveMedian: condense(\r\n                        median => {\r\n                            const { currentLineCount } = createLineList({\r\n                                ctx,\r\n                                median,\r\n                                paragraphList: [line],\r\n                                format, textData,\r\n                                width,\r\n                                globalScale,\r\n                            });\r\n    \r\n                            if (currentLineCount > 1) return false;\r\n                            return true;\r\n                        },\r\n                    )\r\n                };\r\n            });\r\n\r\n            /** Draw each line based on their token list and corresponding ratio. */\r\n            [\r\n                ...fullLineListWithRatio,\r\n                ...lineListWithRatio,\r\n            ].forEach(({\r\n                line,\r\n                isLast,\r\n                effectiveMedian,\r\n            }) => {\r\n                const xRatio = effectiveMedian / 1000;\r\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    spaceWidth,\r\n                    textData,\r\n                    format,\r\n                    globalScale,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            });\r\n\r\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\r\n            if (effectFlavorCondition.length > 0) {\r\n                const flavorFontData = scaleFontData(EffectFontData.tcg, globalScale);\r\n                const flavorFontSizeData = flavorFontData.fontList[effectSizeLevel];\r\n                const {\r\n                    fontSize,\r\n                    lineHeight,\r\n                } = flavorFontSizeData;\r\n                const flavorTextCurrentFont = createFontGetter();\r\n                ctx.font = flavorTextCurrentFont\r\n                    .setSize(fontSize)\r\n                    .setFamily(flavorFontData.font)\r\n                    .getFont();\r\n                const flavorTextData = {\r\n                    fontData: flavorFontData,\r\n                    fontLevel: effectSizeLevel,\r\n                    currentFont: flavorTextCurrentFont,\r\n                };\r\n                const internalEffectiveMedian = condense(\r\n                    median => {\r\n                        const { currentLineCount } = createLineList({\r\n                            ctx,\r\n                            median,\r\n                            paragraphList: [effectFlavorCondition],\r\n                            format, textData: flavorTextData,\r\n                            width,\r\n                            globalScale,\r\n                        });\r\n\r\n                        if (currentLineCount > 1) return false;\r\n                        return true;\r\n                    },\r\n                );\r\n                const xRatio = internalEffectiveMedian / 1000;\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                const tokenList = tokenizeText(effectFlavorCondition);\r\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n                 * \r\n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n                 * \r\n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n                 * */\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    textData: flavorTextData,\r\n                    format,\r\n                    globalScale,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return effectSizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { scaleDrawCoordinate } from 'src/util';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    globalScale,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    globalScale: number,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n}) => {\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = typeof star === 'string'\r\n        ? star === '' ? 0 : 1\r\n        : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    return await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async () => {\r\n            offset += (starWidth + startSpacing);\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    ctx.scale(globalScale, globalScale);\r\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\r\n    ctx.resetTransform();\r\n    return;\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    globalScale,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    globalScale,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...scaleDrawCoordinate(coordinate, globalScale),\r\n        globalScale,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    linkMap: string[],\r\n    style: CanvasTextStyle,\r\n    globalScale: number,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || !Array.isArray(linkMap)) return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\r\n        globalScale,\r\n        style,\r\n    );\r\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = `bold ${26.55 * globalScale}px RoGSanSrfStd-Bd`;\r\n    ctx.fillText(`${linkMap.length}`, 622.75 * globalScale, 1105 * globalScale);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import {\r\n    ArrowPositionMap,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardArtCanvasCoordinateMap,\r\n    CardOpacity,\r\n    Foil,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    topToPendulumStructure,\r\n    pendulumStructureHeight,\r\n    leftToPendulumStructure,\r\n    effectBoxHeight,\r\n    effectBoxWidth,\r\n    leftToEffectBox,\r\n    topToEffectBox,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    globalScale,\r\n    format,\r\n    hasBackground,\r\n    frame, bottomFrame,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    globalScale: number,\r\n    format: string,\r\n    frame: string, bottomFrame: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    foil: Foil,\r\n    pendulumSize: string,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderType = frameBorderType;\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resultAPI = {\r\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\r\n         * \r\n         *  * Trying to draw only a portion of the image.\r\n         *  * The source image has totally different size compare to the destination boundary.\r\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\r\n         */\r\n        calculateCardArtRedrawCoordination(\r\n            imageCanvas: HTMLCanvasElement,\r\n            customOpacity?: CardOpacity,\r\n            extraHeightRatio = 1,\r\n            customBackgroundType?: BackgroundType,\r\n        ) {\r\n            const normalizedOpacity = customOpacity ?? opacity;\r\n            const {\r\n                body: bodyOpacity\r\n            } = normalizedOpacity;\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n                ratio,\r\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\r\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\r\n            const imageScaledRatio = artWidth / imageWidth;\r\n            const sourceOffsetX = bodyOpacity < 100\r\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\r\n            const sourceOffsetY = bodyOpacity < 100\r\n                ? (topToPendulumStructure - artY) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\r\n            const offsetHeight = bodyOpacity < 100\r\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\r\n                : 0;\r\n\r\n            const destinationX = artX + destinationOffsetX;\r\n            const destinationY = artY + destinationOffsetY;\r\n            const destinationWidth = artWidth - destinationOffsetX * 2;\r\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\r\n\r\n            return {\r\n                imageScaledRatio,\r\n                sourceOffsetX,\r\n                sourceOffsetY,\r\n                destinationOffsetX,\r\n                destinationOffsetY,\r\n                offsetHeight,\r\n                destinationX,\r\n                destinationY,\r\n                destinationWidth,\r\n                destinationHeight,\r\n                /** Background fill is not depend on art size */\r\n                fillWidth: artWidth,\r\n                fillHeight: artWidth * ratio,\r\n            };\r\n        },\r\n\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\r\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\r\n\r\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n                if (clonedCanvas && clonedCanvasContext) {\r\n                    /** Clone background to create a new frame */\r\n                    clonedCanvas.width = cardWidth * globalScale;\r\n                    clonedCanvas.height = cardHeight * globalScale;\r\n                    clonedCanvasContext.drawImage(\r\n                        backgroundCanvas,\r\n                        0, 0, backgroundWidth, backgroundHeight,\r\n                        0, 0, cardWidth * globalScale, cardHeight * globalScale,\r\n                    );\r\n                    /** Clear slot for card art */\r\n                    clonedCanvasContext.clearRect(\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artX,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artY,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\r\n                    );\r\n                    /** Clear slot for effect box */\r\n                    clonedCanvasContext.clearRect(\r\n                        globalScale * leftToEffectBox,\r\n                        globalScale * topToEffectBox,\r\n                        globalScale * effectBoxWidth,\r\n                        globalScale * effectBoxHeight,\r\n                    );\r\n                    ctx.drawImage(\r\n                        clonedCanvas,\r\n                        0, 0,\r\n                        globalScale * cardWidth, globalScale * cardHeight,\r\n                        0, 0,\r\n                        globalScale * cardWidth, globalScale * cardHeight,\r\n                    );\r\n                }\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: () => {\r\n            if (!artworkCanvas || !ctx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            ctx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: (\r\n            boundary?: 'pendulum',\r\n        ) => {\r\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\r\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\r\n\r\n                if (backgroundType === 'full') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        { ...opacity, body: 0 },\r\n                        undefined,\r\n                        'full',\r\n                    );\r\n                } else if (backgroundType === 'fit') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        opacity,\r\n                        undefined,\r\n                        'fit',\r\n                    );\r\n                }\r\n\r\n                const {\r\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\r\n                    offsetHeight: backgroundOffsetHeight,\r\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\r\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\r\n                } = redrawCoordination;\r\n                ctx.drawImage(\r\n                    backgroundCanvas,\r\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\r\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\r\n                    globalScale * backgroundDestinationX, globalScale * backgroundDestinationY,\r\n                    globalScale * backgroundDestinationWidth, globalScale * backgroundDestinationHeight,\r\n                );\r\n                return;\r\n            }\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                { ...opacity, boundless: true },\r\n                backgroundType,\r\n            );\r\n            ctx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0,\r\n                backgroundWidth, backgroundHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (backgroundWidth / backgroundHeight)\r\n            );\r\n        },\r\n        drawAttribute: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(\r\n                ctx,\r\n                `attribute/attr-${format}-${attribute.toLowerCase()}.png`,\r\n                678, 55,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starAlignment,\r\n                style,\r\n                globalScale,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n            });\r\n            ctx.resetTransform();\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n        drawLinkArrowMap: async (linkMap: string[], positionType: keyof typeof ArrowPositionMap) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n                .map(async entry => {\r\n                    const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n                    const isActive = linkMap.includes(`${entry}`);\r\n                    const baseLink = `link/link-inactive-${entry}`;\r\n                    const activeLink = `link/link-active-${entry}`;\r\n                    const coordinate = [left, top, width, height] as const;\r\n\r\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n                    if (isActive) {\r\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n                    } else return;\r\n                })\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawStatBorder: async (style: CanvasTextStyle) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                globalScale,\r\n                style,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.globalAlpha = opacityName / 100;\r\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.globalAlpha = opacityText / 100;\r\n            await drawAsset(\r\n                ctx,\r\n                `background/background-text-${bottomFrame}.png`,\r\n                backgroundEffectBoxX, backgroundEffectBoxY,\r\n            );\r\n            if (withPendulum) {\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            return;\r\n        },\r\n        drawNameBorder: async () => {\r\n            if (nameBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0);\r\n                ctx.resetTransform();\r\n            } else {\r\n                Promise.resolve();\r\n            }\r\n            return;\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder && ctx) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                ctx.scale(globalScale, globalScale);\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(\r\n                ctx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                    + `-${foilType}`\r\n                    + (artBorder ? '' : '-artless')\r\n                    + '.png',\r\n                30, 185,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (!hasFoil && bottomFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n        drawLinkMapFoil: async (withBorder = artBorder, positionType: keyof typeof ArrowPositionMap) => {\r\n            if (!ctx) return;\r\n            if (foil === 'normal') return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            if (withBorder) {\r\n                await drawAsset(ctx, `link/link-overlay-arrow-${foil}.png`, 0, 175);\r\n            } else {\r\n                await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n                    .map(async entry => {\r\n                        const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n                        const coordinate = [left, top, width, height] as const;\r\n    \r\n                        await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${foil}.png`, ...coordinate);\r\n                    })\r\n                );\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if ((artBorder || nameBorder) && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'name',\r\n                    async type => {\r\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                    },\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawArtFinish: async () => {\r\n            if (applyArtFinish && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopArtFinish(\r\n                    ctx,\r\n                    'art',\r\n                    async finishType => await drawAsset(\r\n                        ctx,\r\n                        `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\r\n                        artFinishX, artFinishY,\r\n                    ),\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        ctx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { setTextStyle } from '../canvas-util';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    canvas: HTMLCanvasElement,\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _trueBaseline: number,\r\n    _width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n        globalScale: number,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\r\n    const edge = _edge * globalScale;\r\n    const trueBaseline = _trueBaseline * globalScale;\r\n    const width = _width * globalScale;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n\r\n    if (!(ctx && cloneCtx && value)) return;\r\n    const {\r\n        embossPitch,\r\n        embossYaw,\r\n        embossThickness,\r\n        fillStyle,\r\n        font,\r\n        gradientAngle,\r\n        gradientColor,\r\n        hasEmboss,\r\n        hasGradient,\r\n        hasOutline,\r\n        hasShadow,\r\n        headTextFillStyle,\r\n        lineColor,\r\n        lineOffsetX,\r\n        lineOffsetY,\r\n        lineWidth,\r\n        shadowBlur,\r\n        shadowColor,\r\n        shadowOffsetX,\r\n        shadowOffsetY,\r\n        pattern,\r\n    } = { ...getDefaultNameStyle(), ...style };\r\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n\r\n    ctx.textAlign = 'left';\r\n    const fontData = scaleFontData({\r\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n        headTextFillStyle,\r\n    }, globalScale);\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    const quoteConvertedValue = normalizeCardText(\r\n        value,\r\n        format,\r\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n    );\r\n\r\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n    const crudeTokenList = format === 'ocg'\r\n        ? [quoteConvertedValue]\r\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n    const fontGetterForWidthCalculating = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const normalStyle = fontGetterForWidthCalculating.getFont();\r\n    const symbolStyle = fontGetterForWidthCalculating\r\n        .setSize(cur => cur * fontData.symbolFontRatio)\r\n        .setStyle('small-caps')\r\n        .setFamily(fontData.symbolFont)\r\n        .getFont();\r\n    let maxAscent = 0;\r\n    let maxDescent = 0;\r\n    crudeTokenList.forEach((cur, index) => {\r\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n    }, 0);\r\n\r\n    ctx.font = normalStyle;\r\n    /** Calculate fitting ratio like normal */\r\n    let actualLineWidth = 0;\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [quoteConvertedValue],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n\r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n\r\n    ctx.scale(xRatio, yRatio);\r\n    /** Calculate gradient and offset based on card's frame. */\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\r\n    const tokenList = tokenizeText(quoteConvertedValue);\r\n    const gradient = actualLineWidth > 0 && hasGradient\r\n        ? getNameGradient(\r\n            ctx,\r\n            gradientAngle,\r\n            parsePalette(gradientColor),\r\n            edge,\r\n            actualLineWidth,\r\n            trueBaseline,\r\n            maxAscent, maxDescent,\r\n        )\r\n        : undefined;\r\n\r\n    /**\r\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\r\n     * \r\n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\r\n     */\r\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\r\n    let resetEmbossStroke = () => {};\r\n    if (thickenEmboss) {\r\n        resetEmbossStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: embossThickness,\r\n            lineColor: fillStyle,\r\n            lineColorGradient: gradient,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n    }\r\n    ctx.fillStyle = gradient ?? fillStyle;\r\n    const { tokenEdge } = drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        option: { drawHeadText: false },\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n        },\r\n    });\r\n    resetEmbossStroke();\r\n\r\n    /** \r\n     * Second iteration: Draw pattern, we follow these steps.\r\n     *  * We create a second, temporary canvas node.\r\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\r\n     */\r\n    if (patternImage) {\r\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const patternContext = patternCanvas.getContext('2d');\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n        patternContext.scale(globalScale, globalScale);\r\n        await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\r\n        await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\r\n        patternContext.globalCompositeOperation = patternBlendMode;\r\n        patternContext.resetTransform();\r\n        await drawAssetWithSize(\r\n            patternContext, `finish-name/${patternImage}.png`,\r\n            edge, trueBaseline - maxAscent,\r\n            width,\r\n            maxAscent + maxDescent,\r\n        );\r\n        ctx.globalCompositeOperation = 'source-in';\r\n        ctx.drawImage(patternCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.scale(xRatio, yRatio);\r\n    }\r\n\r\n    /** Third iteration: Apply emboss effect */\r\n    if (hasEmboss) {\r\n        const affectedWidthExtraPadding = 10;\r\n        const embossedImageData = applyEmboss({\r\n            inputCanvas: canvas,\r\n            lightPitch: embossPitch,\r\n            lightYaw: embossYaw,\r\n            minIntensity: -0.9,\r\n            maxIntensity: 0.9,\r\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\r\n        });\r\n        ctx.putImageData(embossedImageData, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\r\n     * \r\n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\r\n     * */\r\n    if (hasOutline) {\r\n        const resetStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: lineWidth + embossThickness,\r\n            lineColor,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            globalScale,\r\n            option: { drawHeadText: false },\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.lineJoin = 'round';\r\n                ctx.strokeText(\r\n                    letter,\r\n                    scaledEdge + lineOffsetX,\r\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                );\r\n            },\r\n        });\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetStroke();\r\n    }\r\n\r\n    /**\r\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\r\n     */\r\n    if (hasShadow) {\r\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const shadowContext = shadowCanvas.getContext('2d');\r\n        const resetShadow = setTextStyle({\r\n            ctx: shadowContext,\r\n            x: shadowOffsetX,\r\n            y: shadowOffsetY,\r\n            shadowColor: shadowColor,\r\n            blur: shadowBlur,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.scale(1 / xRatio, 1 / yRatio);\r\n        shadowContext.drawImage(canvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        ctx.drawImage(shadowCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetShadow();\r\n    }\r\n\r\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\r\n    drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: () => {},\r\n    });\r\n\r\n    const defaultTextStyle = getDefaultNameStyle();\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.fillStyle = defaultTextStyle.fillStyle;\r\n    ctx.lineJoin = 'miter';\r\n    ctx.globalCompositeOperation = 'source-over';\r\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<string, number> = {\r\n    small: 0,\r\n    medium: 1,\r\n    large: 2,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: 'small' | 'medium' | 'large',\r\n    furiganaHelper: boolean,\r\n    globalScale: number,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = scaleCoordinateData(\r\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\r\n        globalScale,\r\n    );\r\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\r\n    const fontData = {\r\n        ...scaledBaseFontData,\r\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\r\n    };\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    globalScale,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: 'small' | 'medium' | 'large',\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n        globalScale,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -4 : 0;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        await drawAssetWithSize(\r\n            ctx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            image => edge + (image.naturalWidth * 0.175 * xRatio + offsetX) * globalScale,\r\n            image => baseline - image.naturalWidth * 0.8 * globalScale + offsetY * globalScale,\r\n            image => globalScale * image.naturalWidth,\r\n            image => globalScale * image.naturalWidth,\r\n        );\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    if (ctx && value) {\r\n        const fontSize = 60.5 * globalScale;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const digitScaleRatio = 0.65;\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(\r\n                digit,\r\n                digit === '1' ? accLeft - 3 * globalScale : accLeft,\r\n                baseline + fontSize,\r\n            );\r\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    _edge = 99,\r\n    _baseline = 1150.93,\r\n    _baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n        globalScale: number,\r\n    } = {\r\n        globalScale: 1,\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { stroke = false, textStyle, globalScale } = option ?? {};\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const baselineOffset = _baselineOffset * globalScale;\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4 * globalScale;\r\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\r\n\r\n    let left = edge;\r\n    ctx.fillText('1', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, baseline);\r\n    left += ctx.measureText('1').width - 2 * globalScale;\r\n\r\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const statWidth = 73.97 * globalScale;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${37 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${34 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = `${37 * globalScale}px matrix`;\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = `bold ${37 * globalScale}px matrix`;\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        globalScale: number,\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinate,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    CardArtCanvasCoordinateMap,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n    PendulumNormalFontData,\r\n} from 'src/model';\r\nimport {\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    generateLayer,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    pendulumSize?: 'medium',\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n    globalScale: number,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format,\r\n        hasBackground, backgroundType,\r\n        frame, foil, finish, artFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const statInEffect = !!(atk || def) || !!(isPendulum && setId);\r\n    const typeInEffect = normalizedTypeAbility.length > 0\r\n        ? cardIcon === 'auto'\r\n            ? (isMonster || isSpeedSkill)\r\n            : cardIcon !== 'st'\r\n        : false;\r\n\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        pendulumSize = 'medium',\r\n        language,\r\n        globalScale,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (x: number, y: number, w: number, h: number, customFill?: string) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground\r\n                            ? (customFill ?? baseFill)\r\n                            : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            /** Base colored background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawLinkArrowMap,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n                drawLinkMapFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n\r\n                calculateCardArtRedrawCoordination,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                globalScale,\r\n                format,\r\n                frame, bottomFrame,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            if (backgroundCanvas && ctx) drawBackground();\r\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\r\n            if (isPendulum && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\r\n                    const {\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                        fillWidth, fillHeight,\r\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\r\n\r\n                    /** To avoid stacking transprency, we clear the area before redrawing */\r\n                    await fillBaseColor(\r\n                        globalScale * destinationX, globalScale * destinationY,\r\n                        globalScale * fillWidth, globalScale * fillHeight,\r\n                    );\r\n\r\n                    drawBackground('pendulum');\r\n                    ctx.drawImage(\r\n                        artworkCanvas,\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\r\n                        globalScale * destinationX, globalScale * destinationY,\r\n                        globalScale * destinationWidth, globalScale * destinationHeight,\r\n                    );\r\n                }\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n            }\r\n\r\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\r\n            await drawArtFinish();\r\n            await drawArtOverlayFinish();\r\n\r\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n            if (isPendulum && !boundless) {\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                if (isLink) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\r\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\r\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\r\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\r\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                        const {\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        } = calculateCardArtRedrawCoordination(\r\n                            artworkCanvas,\r\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\r\n                            extraHeightRatio,\r\n                        );\r\n    \r\n                        await fillBaseColor(\r\n                            globalScale * destinationX, globalScale * destinationY,\r\n                            globalScale * destinationWidth, globalScale * destinationHeight,\r\n                        );\r\n                        drawBackground('pendulum');\r\n                    }\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (artworkCanvas && ctx) drawCardArt();\r\n                await drawArtOverlayFinish();\r\n\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder({\r\n                color: '#000000',\r\n                ...resolvedStatTextStyle,\r\n            });\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            /** If we combine both link map and pendulum frame, link markers will be pushed outward and overlay on top of the card frame, that's why we leave link marker for last */\r\n            if (isLink) {\r\n                await drawLinkArrowMap(linkMap, isPendulum ? 'pendulum' : 'normal');\r\n                await drawLinkMapFoil(false, isPendulum ? 'pendulum' : 'normal');\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                if (statInEffect) {\r\n                    await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\r\n                }\r\n                resetStyle();\r\n            }\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                globalScale,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        frame,\r\n        format,\r\n        hasBackground,\r\n        backgroundType,\r\n        attribute,\r\n        bottomFrame,\r\n        foil,\r\n        star,\r\n        starAlignment,\r\n        cardIcon,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        lightFooter,\r\n        linkMap,\r\n        resolvedStatTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        pendulumSize,\r\n        statInEffect,\r\n        levelStyle,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            drawScale(ctx, pendulumScaleBlue ?? '0', 84.4, 790, globalScale);\r\n            drawScale(ctx, pendulumScaleRed ?? '0', 728.0, 790, globalScale);\r\n        }\r\n    }, [readyToDraw, globalScale, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                nameCanvasRef.current,\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n        drawStatText(ctx, 'ATK', 432.10, 1106.494, globalScale);\r\n        drawStat(ctx, atk.trim(), 508.824, 1106.494, globalScale);\r\n        if (!isLink) {\r\n            drawStatText(ctx, 'DEF', 600.85, 1106.494, globalScale);\r\n            drawStat(ctx, def.trim(), 673.865, 1106.494, globalScale);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, globalScale, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                globalScale,\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const {\r\n            rightEdge,\r\n            isNumberPassword,\r\n        } = drawPasswordText({\r\n            ctx,\r\n            globalScale,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n            textStyle: resolvedOtherEffectTextStyle,\r\n        });\r\n        if (isFirstEdition) {\r\n            const willDraw = isPendulum\r\n                ? isNumberPassword ? true : false\r\n                : true;\r\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\r\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            if (willDraw) draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n                {\r\n                    globalScale,\r\n                    textStyle: {\r\n                        color: lightFooter ? '#ffffff' : '#000000',\r\n                        ...resolvedOtherEffectTextStyle,\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n                globalScale,\r\n            });\r\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\r\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    globalScale,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            return await drawSticker({\r\n                ctx: stickerCanvasRef.current?.getContext('2d'),\r\n                sticker,\r\n                globalScale,\r\n            });\r\n        };\r\n    }, [readyToDraw, globalScale, sticker, stickerCanvasRef]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\r\n            const customizeEffectStyle = effectTextStyle[0];\r\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\r\n            const useItalic = customizeEffectStyle\r\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\r\n                : isNormal;\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                useItalic,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    useItalic,\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                },\r\n            });\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                globalScale,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'medium' : 'small',\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { upSize, fontStyle } = pendulumStyle ?? {};\r\n            const customPendulumStyle = pendulumTextStyle[0];\r\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\r\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                useItalic: useItalic,\r\n                fontData: (useItalic\r\n                    ? PendulumNormalFontData\r\n                    : PendulumEffectFontData)[format],\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: PendulumEffectCoordinate,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                }\r\n            });\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n            ctx.resetTransform();\r\n        };\r\n    }, [readyToDraw, globalScale, finishCanvasRef, loopFinish, name]);\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        const {\r\n            // isRelevant,\r\n            isPendulum = false,\r\n            opacity,\r\n        } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            clearCanvas(exportCtx);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            // await generateLayer(frameCanvas, exportCtx);\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            if (artworkCanvas && exportCtx) {\r\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\r\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n                if (imageHeight > 0) {\r\n                    exportCtx.drawImage(\r\n                        artworkCanvas,\r\n                        0, 0,\r\n                        imageWidth, imageHeight,\r\n                        artX, artY,\r\n                        artWidth, artWidth / (imageWidth / imageHeight),\r\n                    );\r\n                }\r\n            }\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxRef.current?.draw(exportCanvas);\r\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\r\n                exportCanvas,\r\n                0,\r\n                0,\r\n                exportCanvas.width,\r\n                exportCanvas.height,\r\n                0,\r\n                0,\r\n                CanvasWidth,\r\n                CanvasHeight,\r\n            );\r\n        }\r\n    }, [\r\n        language,\r\n        artworkCanvasRef, \r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n        previewCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n    lineWidth?: number,\r\n    lineColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    globalScale,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const isNumberPassword = /^[0-9]*$/.test(value);\r\n    if (!clearCanvas(ctx)) return {\r\n        rightEdge: 0,\r\n        isNumberPassword,\r\n    };\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: !isNumberPassword ? 1 : 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                    globalScale,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        rightEdge: result.tokenEdge,\r\n        isNumberPassword,\r\n    };\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    globalScale,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    globalScale,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst notificationLocalStorageKey = 'ygocarder-notification';\r\nexport type NotificationMemory = {\r\n    condenseReminder: boolean,\r\n    versionReminder: string,\r\n};\r\nexport type NotificationStore = {\r\n    memory: NotificationMemory,\r\n    updateNotification: <Key extends keyof NotificationMemory>(\r\n        key: Key,\r\n        value: NotificationMemory[Key],\r\n    ) => void,\r\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\r\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\r\n};\r\nexport const useNotificationMemory = create<NotificationStore>((set) => {\r\n    const {\r\n        condenseReminder,\r\n        versionReminder,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useNotificationMemory: Error when getting cached notification', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        memory: {\r\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\r\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\r\n        },\r\n        updateNotification: (key, value) => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        },\r\n        updateNotificationMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateNotification,\r\n    } = useNotificationMemory(useShallow(({\r\n        memory,\r\n        updateNotification,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateNotification,\r\n    })));\r\n\r\n    const updateTargetNotification = useCallback(\r\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\r\n        [key, updateNotification],\r\n    );\r\n\r\n    return [targetMemory, updateTargetNotification] as const;\r\n};","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\r\nimport styled from 'styled-components';\r\n\r\n/** The container must contain this class to spread inner styling to angle picker component */\r\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\r\nconst AnglePickerContainer = styled.div`\r\n    .ap {\r\n        background-color: var(--color-heavy);\r\n        .apc {\r\n            width: 8px;\r\n        }\r\n        .aph {\r\n            width: 8px;\r\n            height: 8px;\r\n        }\r\n    }\r\n    .ai {\r\n        margin: 0;\r\n        margin-top: var(--spacing-sm);\r\n        background: var(--main-slider);\r\n        justify-content: space-between;\r\n        line-height: 1.4;\r\n        span {\r\n            background: var(--main-secondary);\r\n            padding-left: var(--spacing);\r\n            padding-right: var(--spacing);\r\n            &:hover {\r\n                background: var(--sub-secondary);\r\n            }\r\n        }\r\n        span,\r\n        input {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type CircularAnglePicker = AnglePicker & {\r\n    children?: React.ReactChild,\r\n};\r\nexport const CircularAnglePicker = ({\r\n    children,\r\n    ...rest\r\n}: CircularAnglePicker) => {\r\n    return <AnglePickerContainer className=\"angle-picker-container\">\r\n        {children}\r\n        <AnglePicker {...rest} />\r\n    </AnglePickerContainer>;\r\n};","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n`;\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    width: 24px;\r\n    height: 24px;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    Icon: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n        >\r\n            <>\r\n                <Icon {...iconProps} />{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Popover } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\n\r\nexport const StyledMarkdown = styled.div`\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-3);\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    text-shadow: var(--ts);\r\n    p {\r\n        white-space: pre-line;\r\n    }\r\n    ul {\r\n        padding-inline-start: var(--spacing-2xl);\r\n        margin-block-end: 0;\r\n        li {\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    :last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\r\n    max-width: 550px;\r\n    border-radius: var(--br-lg);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n`;\r\n\r\nexport const InternalPopover = ({\r\n    content,\r\n    children,\r\n    ...rest\r\n}: React.ComponentProps<typeof Popover>) => {\r\n    if (content) {\r\n        return <Popover content={content} {...rest}>{children}</Popover>;\r\n    }\r\n    return <>{children}</>;\r\n};\r\n\r\nexport const CardActionButton = styled.button`\r\n    --overlay-size: 36px;\r\n    background: var(--main-primary);\r\n    border-width: 0;\r\n    border-style: solid;\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing-sm);\r\n    line-height: 1;\r\n    font-size: var(--fs-xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-1);\r\n    /* display: none; */\r\n    &:not(:disabled) {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        filter: opacity(0.5);\r\n    }\r\n`;\r\n\r\nexport const CombinedSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 60px 45px 12px;\r\n    &.inactive {\r\n        .slider-label,\r\n        .ant-slider,\r\n        .slider-padding {\r\n            background-color: var(--main-level-3);\r\n        }\r\n    }\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        display: inline-flex;\r\n        column-gap: var(--spacing-xs);\r\n        border-right: none;\r\n        padding: var(--spacing-xxs) var(--spacing-xs);\r\n        border-radius: var(--br) 0 0 var(--br);\r\n        box-shadow: var(--bs-input);\r\n        .ant-checkbox-wrapper {\r\n            transform: translateY(-1px); // Alignment\r\n        }\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n`;","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { RadioTrain } from '../input-train';\r\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\r\nimport { StyledPopMarkdown } from '../atom';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n    .list-option {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .resolution-list {\r\n        &.radio-train {\r\n            .ant-radio-button-wrapper:first-child {\r\n                border-radius: var(--br) var(--br) 0 0;\r\n            }\r\n            .ant-radio-button-wrapper:last-child {\r\n                border-radius: 0 0 var(--br) var(--br);\r\n            }\r\n        }\r\n        .radio-train-input-group {\r\n            display: inline-grid;\r\n            flex: 0 1 auto;\r\n            .ant-radio-button-wrapper {\r\n                border-left-width: 1.02px;\r\n                &:before {\r\n                    content: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        exportFormat,\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\r\n                    <RadioTrain\r\n                        className=\"resolution-list\"\r\n                        value={`${resolution[0]}x${resolution[1]}`}\r\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\r\n                            value: `${width}x${height}`,\r\n                            label: scale > 1\r\n                                ? <Popover\r\n                                    overlayClassName=\"explanation-overlay\"\r\n                                    placement=\"left\"\r\n                                    content={<StyledPopMarkdown>\r\n                                        {language['setting.option.resolution.warning']}\r\n                                    </StyledPopMarkdown>}\r\n                                >\r\n                                    {label}\r\n                                </Popover>\r\n                                : label,\r\n                        }))}\r\n                        onChange={value => {\r\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\r\n\r\n                            if (resolutionValue) {\r\n                                updateSetting({\r\n                                    resolution: resolutionValue.settingValue,\r\n                                    globalScale: resolutionValue.scale,\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\r\n                    <RadioTrain\r\n                        value={exportFormat}\r\n                        optionList={ExportFormatList}\r\n                        onChange={value => {\r\n                            updateSetting({ exportFormat: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import { Popover } from 'antd';\r\nimport { memo, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { useNotification } from 'src/service';\r\n\r\nconst titlShaking = keyframes`\r\n    0% { transform: rotate(0deg); }\r\n    3% { transform: rotate(5deg); }\r\n    6% { transform: rotate(0eg); }\r\n    9% { transform: rotate(-5deg); }\r\n    12% { transform: rotate(0deg); }\r\n    100% { transform: rotate(0deg); }\r\n`;\r\nconst LogSentence = styled.li`\r\n    img {\r\n        display: block;\r\n        max-width: 400px;\r\n        max-height: 200px;\r\n        margin: auto;\r\n        box-shadow: var(--bs-1);\r\n        margin-top: var(--spacing-xs);\r\n    }\r\n`;\r\n\r\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\r\nconst VersionLogStore = (() => {\r\n    let isReady = false;\r\n    let versionLog: VersionLog = [];\r\n\r\n    return {\r\n        getLog: async () => {\r\n            if (isReady) return versionLog;\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/log/version.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            try {\r\n                const responseLog = await response.json();\r\n                versionLog = responseLog;\r\n                isReady = true;\r\n\r\n                return versionLog;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return [];\r\n        }\r\n    };\r\n})();\r\nexport const VersionLog = () => {\r\n    const [log, setLog] = useState<VersionLog>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const log = await VersionLogStore.getLog();\r\n\r\n            setLoading(false);\r\n            setLog(log);\r\n        })();\r\n    }, []);\r\n\r\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\r\n    if (loading) return <div>Loading changelog...</div>;\r\n    return <div>\r\n        {log.map(({ logList, version }, index) => {\r\n            return <div key={`${version}-${index}`} className=\"log-section\">\r\n                <b>{version}</b><br />\r\n                <ul>\r\n                    {/* Using index as key here is safe as the component is stateless */}\r\n                    {logList.map(({ content, image }, index) => {\r\n                        return <LogSentence key={index}>\r\n                            {content}\r\n                            {image && <img src={image} alt={`version-${version}-illust`} />}\r\n                        </LogSentence>;\r\n                    })}\r\n                </ul>\r\n            </div>;\r\n        })}\r\n    </div>;\r\n};\r\n\r\nconst compareSemver = (a: string, b: string): boolean => {\r\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\r\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\r\n    \r\n    if (majorA !== majorB) {\r\n      return majorA > majorB;\r\n    }\r\n    \r\n    if (minorA !== minorB) {\r\n      return minorA > minorB;\r\n    }\r\n    \r\n    return patchA > patchB;\r\n};\r\n\r\nconst VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\r\n    text-align: center;\r\n    border: var(--bw) solid var(--main-level-3);\r\n    background-color: var(--main-level-1);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    cursor: pointer;\r\n    box-shadow: 0 0 2px 1px #222222 inset;\r\n    transition: background-color 250ms linear;\r\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            background: var(--main-warning);\r\n            color: var(--color-contrast);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledVersionLog = styled(StyledPopMarkdown)`\r\n    overflow: auto;\r\n    width: 550px;\r\n    max-height: 300px;\r\n    width: 550px;\r\n    .log-section + .log-section {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nexport const VersionLogButton = memo(() => {\r\n    const [animating, setAnimating] = useState(false);\r\n    const [\r\n        version,\r\n        setMemoizedVersion,\r\n    ] = useNotification('versionReminder');\r\n\r\n    useEffect(() => {\r\n        if (version) {\r\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\r\n            const memoizedSemver = version;\r\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\r\n\r\n            if (compareSemver(currentSemver, memoizedSemver)) {\r\n                setAnimating(true);\r\n                setTimeout(() => {\r\n                    setAnimating(false);\r\n                }, 8000);\r\n            }\r\n        }\r\n    }, [setMemoizedVersion, version]);\r\n\r\n    return <Popover\r\n        placement=\"bottom\"\r\n        content={<StyledVersionLog>\r\n            <VersionLog />\r\n        </StyledVersionLog>}\r\n    >\r\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\r\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\r\n        </VersionLogButtonLabel>\r\n    </Popover>;\r\n});","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage } from 'src/service';\r\nimport { Radio } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\nimport { VersionLogButton } from './version-log';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <span className=\"bug-report\">\r\n                    <div id=\"sentry-bug-report\">\r\n                        {language['contributor.bug-report.tooltip']}\r\n                    </div>\r\n                </span>\r\n                <VersionLogButton />\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<StyledPopMarkdown className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasPanel = () => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledPopMarkdown className=\"disclaimer\">\r\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n    </StyledPopMarkdown>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<TaintedCanvasPanel />}\r\n    />;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { StyledCode } from '../atom';\r\nimport './formatting-guide.scss';\r\n\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n    h2 {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-6.label']}</h2>\r\n                {language['guide.format.section-6.content'](\r\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'justified non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'justified non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { Modal } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { CanvasConst } from 'src/model';\r\nimport {\r\n    TransformWrapper,\r\n    TransformComponent,\r\n    ReactZoomPanPinchContentRef,\r\n} from 'react-zoom-pan-pinch';\r\nimport styled from 'styled-components';\r\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\r\nimport { CardActionButton } from '../atom';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nconst StyledLightboxContainer = styled.div`\r\n    width: ${CanvasWidth}px;\r\n    height: ${CanvasHeight}px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    line-height: 0;\r\n    .card-lightbox-control {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: var(--spacing);\r\n        right: var(--spacing);\r\n        user-select: none;\r\n        text-align: right;\r\n        .action-list {\r\n            display: inline-flex;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .control-info {\r\n            background-color: var(--main-level-1);\r\n            padding: var(--spacing-xs);\r\n            margin-top: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            line-height: 1;\r\n            box-shadow: var(--bs-1);\r\n        }\r\n    }\r\n    .card-lightbox-content {\r\n        cursor: grab;\r\n    }\r\n`;\r\n\r\nconst MAX_ZOOM = 4;\r\nconst Controls = ({\r\n    zoomIn,\r\n    zoomOut,\r\n    resetTransform,\r\n    setTransform,\r\n    scale,\r\n    globalScale,\r\n    width,\r\n    height,\r\n}: ReactZoomPanPinchContentRef & {\r\n    scale: number,\r\n    globalScale: number,\r\n    width: number,\r\n    height: number,\r\n}) => {\r\n    return <div className=\"control-container\">\r\n        <div className=\"action-list\">\r\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\r\n                zoomIn();\r\n            }}>\r\n                <ZoomInOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\r\n                zoomOut();\r\n            }}>\r\n                <ZoomOutOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                resetTransform();\r\n            }}>\r\n                <FullscreenExitOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                setTransform(\r\n                    -Math.max(0, width - CanvasWidth) / 2,\r\n                    -Math.max(0, height - CanvasHeight) / 2,\r\n                    1,\r\n                );\r\n            }}>\r\n                <FullscreenOutlined />\r\n            </CardActionButton>\r\n        </div>\r\n        <div className=\"control-info\">\r\n            {scale && <>×{\r\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\r\n            }</>}&nbsp;({width} × {height})\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport type Lightbox = {\r\n    globalScale: number,\r\n};\r\nexport type LightboxRef = {\r\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\r\n    draw: (targetCanvas: HTMLCanvasElement) => void,\r\n    refresh: () => void,\r\n    getCanvasKey: () => number,\r\n};\r\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\r\n    globalScale,\r\n}, ref) => {\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\r\n    const [scale, setScale] = useState(() => 1 / globalScale);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setVisible: setLightboxVisible,\r\n        draw: targetCanvas => {\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\r\n                targetCanvas,\r\n                0,\r\n                0,\r\n            );\r\n        },\r\n        refresh: () => setCanvasKey(cnt => cnt + 1),\r\n        getCanvasKey: () => canvasKey,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        lightboxRef.current?.resetTransform();\r\n    }, [globalScale]);\r\n\r\n    return <Modal\r\n        width={`${CanvasWidth + 15 * 2}px`}\r\n        wrapClassName=\"card-lightbox-overlay\"\r\n        visible={lightboxVisible}\r\n        forceRender={true}\r\n        onCancel={() => setLightboxVisible(false)}\r\n        footer={null}\r\n    >\r\n        <StyledLightboxContainer\r\n            className=\"card-lightbox-container\"\r\n        >\r\n            <TransformWrapper ref={lightboxRef}\r\n                initialScale={1 / globalScale}\r\n                initialPositionX={0}\r\n                initialPositionY={0}\r\n                minScale={1 / globalScale}\r\n                maxScale={MAX_ZOOM}\r\n                onTransformed={ref => {\r\n                    setScale(ref.state.scale);\r\n                }}\r\n            >\r\n                {({ ...utils }) => {\r\n                    return <>\r\n                        <div\r\n                            className=\"card-lightbox-control\"\r\n                        >\r\n                            <Controls\r\n                                {...utils}\r\n                                scale={scale}\r\n                                globalScale={globalScale}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </div>\r\n                        <TransformComponent\r\n                            wrapperClass=\"card-lightbox-content\"\r\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\r\n                        >\r\n                            <canvas key={canvasKey + 0.1}\r\n                                id=\"lightbox-canvas\"\r\n                                ref={lightboxCanvasRef}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </TransformComponent>\r\n                    </>;\r\n                }}\r\n            </TransformWrapper>\r\n        </StyledLightboxContainer>\r\n    </Modal>;\r\n});","import { Menu, Popover } from 'antd';\r\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StyledPopMarkdown } from '../atom';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-setting {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nexport type ResolutionPicker = {\r\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ResolutionPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ResolutionPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.resolution.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ResolutionList.map(({ width, height, label, scale }) => {\r\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        resolution: [width, height],\r\n                        globalScale: scale,\r\n                    });\r\n                    onChange?.([width, height], scale);\r\n                }}\r\n            >\r\n                {scale > 1\r\n                    ? <Popover\r\n                        overlayClassName=\"explanation-overlay\"\r\n                        placement=\"left\"\r\n                        content={<StyledPopMarkdown>\r\n                            {language['setting.option.resolution.warning']}\r\n                        </StyledPopMarkdown>}\r\n                    >\r\n                        {label}\r\n                    </Popover>\r\n                    : label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};\r\n\r\nexport type ExportFormatPicker = {\r\n    onChange?: (nextFormat: ExportFormat) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ExportFormatPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ExportFormatPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        exportFormat,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, exportFormat },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        exportFormat,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.export-format.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ExportFormatList.map(({ value, label }) => {\r\n            return <StyledDownloadDropdownOption key={label}\r\n                className={value === exportFormat ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        exportFormat: value,\r\n                    });\r\n                    onChange?.(value);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / 375;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: (crossorigin?: string) => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const targetFile = e.target.files[0];\r\n            const maxFileSize = 4;\r\n\r\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n                setLoading(true);\r\n                const reader = new FileReader();\r\n                reader.addEventListener('load', () => {\r\n                    if (typeof reader.result === 'string') {\r\n                        setCrossOrigin('anonymous');\r\n                        setInternalSource(reader.result);\r\n                        setSourceType('offline');\r\n                        setInputMode('offline');\r\n                        onSourceChange('offline', reader.result);\r\n                        setLoading(false);\r\n                    }\r\n                });\r\n                reader.readAsDataURL(targetFile);\r\n            } else {\r\n                onMaxSizeExceeded(maxFileSize);\r\n            }\r\n        } else alert(language['image-cropper.not-found-warning']);\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded(crossorigin);\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [crossorigin, onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setCrossOrigin('anonymous');\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setCrossOrigin('anonymous');\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={`card-image-cropper ${className}`}>\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        setCrossOrigin('anonymous');\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                    setLoading(true);\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                {language['image-cropper.source.online.tooltip']}\r\n                            </Radio.Button>\r\n                            <Tooltip\r\n                                placement=\"topLeft\"\r\n                                title={<div className=\"image-warning\">\r\n                                    {language['image-cropper.offline-warning']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                        {<div className=\"online-image-tip\">\r\n                            {language['image-cropper.online-tip']}\r\n                        </div>}\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={applyOfflineSource}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                        <hr />\r\n                        {language['image-cropper.offline-warning']}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {beforeCropper}\r\n            <div className=\"card-cropper\" onKeyDown={() => {\r\n                /** Nudge selection also count as user interaction */\r\n                setInteracted(true);\r\n            }}>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <Tooltip\r\n                        placement=\"left\"\r\n                        overlay={forceFit\r\n                            ? language['image-cropper.button.use-crop.tooltip']\r\n                            : language['image-cropper.button.force-fit.tooltip']}\r\n                    >\r\n                        <div\r\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                            onClick={() => {\r\n                                setInteracted(true);\r\n                                onForceFitChange(!forceFit);\r\n                            }}\r\n                        >\r\n                            <FullscreenOutlined />\r\n                        </div>\r\n                    </Tooltip>\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\r\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { width, x } = cur.completed ?? {};\r\n\r\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    x: (100 - width) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\r\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { height, y } = cur.completed ?? {};\r\n\r\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    y: (100 - height) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                </div>}\r\n                {(!hasImage || (error && crossorigin === undefined)) && <Empty\r\n                    description={language['image-cropper.not-found-warning']}\r\n                    image={null}\r\n                />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        pendingCrop.current = {\r\n                            source: '',\r\n                            crop: null,\r\n                        };\r\n                        if (!receivingCanvas) {\r\n                            setLoading(false);\r\n                            setError('No receiving canvas');\r\n                            onTainted();\r\n                        }\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded(crossorigin);\r\n                            setLoading(false);\r\n                            setError('Image not found');\r\n                        } else {\r\n                            setCrossOrigin(undefined);\r\n                            onTainted();\r\n                        }\r\n                        if (crossorigin === undefined) {\r\n                            setLoading(false);\r\n                            setError('Tainted canvas');\r\n                        }\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: 13px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-sm);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    display: inline-block;\r\n    .title {\r\n        line-height: 0;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkChooser = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './angle-picker';\r\nexport * from './app-header';\r\nexport * from './atom';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './input-train';\r\nexport * from './lightbox';\r\nexport * from './setting';\r\nexport * from './setting-panel';\r\nexport type { ImageCropperRef } from './image-cropper';\r\nexport { ImageCropper } from './image-cropper';\r\nexport { LinkMarkChooser } from './link-marker';\r\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { GatewayOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\nimport { ResolutionPicker } from 'src/component';\r\n\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n    .button-option {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        padding: var(--spacing);\r\n        border-left: var(--bw) solid var(--sub-secondary);\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        .anticon {\r\n            font-size: var(--fs-2xl);\r\n            margin-left: 0;\r\n        }\r\n        .resolution-overlay {\r\n            position: absolute;\r\n            left: 50%;\r\n            bottom: 3px; // Alignment\r\n            font-size: var(--fs-xs);\r\n            text-align: center;\r\n            transform: translateX(-50%);\r\n        }\r\n        .resolution-icon {\r\n            transform: translateY(-5px); // Alignment\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    globalScale: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    globalScale,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey, resolution,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n            globalScale,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n            >\r\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\r\n                    <GatewayOutlined className=\"resolution-icon\" />\r\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                </div>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport copy from 'copy-to-clipboard';\r\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        padding-bottom: var(--spacing-sm);\r\n        .icon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        &.export-download-image {\r\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\r\n            border-bottom: var(--bw) solid var(--sub-secondary);\r\n            &:disabled {\r\n                border-bottom: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n        &.mode_other {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        button {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        > div {\r\n            height: 100%;\r\n        }\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .resolution-picker {\r\n        background-color: var(--main-level-4);\r\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\r\n        padding: var(--spacing-xs);\r\n        line-height: 1;\r\n        text-align: center;\r\n        border: var(--bw) solid transparent;\r\n        cursor: pointer;\r\n    }\r\n    .export-input-raw {\r\n        grid-column: 1 / -1;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n    withText?: boolean,\r\n    disabled: boolean,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    withText,\r\n}: CardDataCopyButton) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledCardDataCopyButton\r\n        disabled={disabled}\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay\r\n            ? <div className=\"copiable-overlay\">\r\n                {withText\r\n                    ? <>Copied&nbsp;<CheckOutlined /></>\r\n                    : <CheckOutlined />}\r\n                </div>\r\n            : null}\r\n        {children}\r\n    </StyledCardDataCopyButton>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    tainted: boolean,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    tainted,\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n    })));\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            width={600}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\r\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\r\n                        <div>\r\n                            <StyledActionIconButton\r\n                                disabled={tainted && mode === 'other'}\r\n                                onClick={() => {\r\n                                    const blob = new Blob([data], { type: 'application/json' });\r\n                                    downloadBlob(\r\n                                        normalizeCardName(name),\r\n                                        blob,\r\n                                        'application/json',\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <div className=\"icon\"><DownloadOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.download-button.label']}\r\n                                </div>\r\n                            </StyledActionIconButton>\r\n                        </div>\r\n                    </InternalPopover>\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['prompt.export.offline-warning.message']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={internalCardData.ygocarder.data}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><CopyOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.copy-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    {mode === 'ygocarder' && <div>\r\n                        <CardDataCopyButton\r\n                            disabled={isPartial}\r\n                            data={window.location.href}\r\n                            withText\r\n                        >\r\n                            <div className=\"icon\"><LinkOutlined /></div>\r\n                            <div className=\"label\">\r\n                                {language['button.export-modal.share-button.label']}\r\n                            </div>\r\n                        </CardDataCopyButton>\r\n                    </div>}\r\n                    <div>\r\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\r\n                            <div>\r\n                                <StyledActionIconButton\r\n                                    disabled={tainted}\r\n                                    className=\"export-download-image\"\r\n                                    onClick={onRequireDownload}\r\n                                >\r\n                                    <div className=\"icon\"><FileImageOutlined /></div>\r\n                                    <div className=\"label\">\r\n                                        {language['button.export-modal.save-button.label']}\r\n                                    </div>\r\n                                </StyledActionIconButton>\r\n                            </div>\r\n                        </InternalPopover>\r\n                        <Dropdown overlay={<ResolutionPicker />}>\r\n                            <div className=\"resolution-picker\">\r\n                                {resolution[0]} × {resolution[1]}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                        rows={5}\r\n                    />}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['button.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown \r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\r\nimport { isYgoprodeckImage, uploadToImgur } from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom,\r\n        .import-empty {\r\n            font-size: var(--fs);\r\n        }\r\n        .import-custom {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .option-separator {\r\n            display: inline-block;\r\n            margin-right: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    try {\r\n                        const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                        if (imgurResponse.status !== 200) {\r\n                            surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                            throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                        }\r\n                        const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                        surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    } catch (e) {\r\n                        /** Failing the upload process does not terminate the import process */\r\n                        console.error('Upload error:', e);\r\n                        notification.error({\r\n                            message: language['prompt.import.imgur.message'],\r\n                            description: language['prompt.import.imgur.description'],\r\n                        });\r\n                    }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['button.import.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                        {mode === 'new' && <>\r\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                            <StyledActionIconButton\r\n                                className=\"import-empty\"\r\n                                onClick={() => {\r\n                                    startImport(getEmptyCard());\r\n                                    cleanup();\r\n                                }}\r\n                            >\r\n                                {language['button.empty.label']}\r\n                            </StyledActionIconButton>\r\n                        </>}\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl-E / ⌘-E</div>\r\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['button.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\r\n    label,\r\n    value,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n                />\r\n                </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation, StyledPopMarkdown } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '★',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '∅',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<StyledPopMarkdown>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </StyledPopMarkdown>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n};\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n            </CircularAnglePicker>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={8} xmin={-8}\r\n                ymax={8} ymin={-8}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}:&nbsp;<GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { InputNumber } from 'antd';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\r\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nconst MaterialColor = styled.div<{ $color: string }>`\r\n    border: var(--bw) solid var(--sub-level-2);\r\n    display: inline-block;\r\n    width: 2rem;\r\n    height: 1em;\r\n    border-radius: var(--br-sm);\r\n    cursor: pointer;\r\n    ${({ $color }) => `background-color: ${$color};`}\r\n`;\r\nconst EmbossControlContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: max-content max-content;\r\n    color: var(--color);\r\n    .emboss-control-title {\r\n        grid-column: -1 / 1;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n        padding: var(--spacing-sm);\r\n        padding-bottom: 0;\r\n    }\r\n    .emboss-control-left h2 {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .angle-picker-container {\r\n        text-align: center;\r\n    }\r\n    .emboss-control-right {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .emboss-control-left {\r\n        padding: var(--spacing-sm);\r\n        padding-top: 0;\r\n    }\r\n    .slider-label {\r\n        padding: 0;\r\n        border: none;\r\n    }\r\n    .vertical-angle-control {\r\n        grid-template-columns: max-content 60px 85px 12px;\r\n    }\r\n    .reset-button {\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n    .navigate-button {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n    .thickness-row {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        column-gap: var(--spacing-sm);\r\n        align-items: center;\r\n        .ant-slider {\r\n            height: unset;\r\n            margin-top: var(--spacing-xs);\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n    }\r\n`;\r\n\r\nconst VECTOR_VALUE_EPSILON = 0.01;\r\nconst DEFAULT_PITCH = 90;\r\nconst DEFAULT_YAW = 90;\r\nfunction hexToRgb(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return (result\r\n        ? [\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16)\r\n        ]\r\n        : [0, 0, 0]) as [number, number, number];\r\n  }\r\n\r\nexport type EmbossControllerRef = {\r\n    setValue: (value: {\r\n        color?: string,\r\n        pitch?: number,\r\n        yaw?: number,\r\n        thickness?: number,\r\n    }) => void,\r\n};\r\nexport type EmbossController = {\r\n    defaultPitch?: number,\r\n    defaultYaw?: number,\r\n    defaultThickness?: number,\r\n    materialColor?: string,\r\n    children?: React.ReactNode,\r\n    language: LanguageDataDictionary,\r\n    onColorTabNavigate: () => void,\r\n    onChange: (value: {\r\n        lightColorVec: [number, number, number],\r\n        lightAngleVec: [number, number, number],\r\n        yaw: number,\r\n        pitch: number,\r\n        thickness: number,\r\n    }) => void,\r\n};\r\nconst defaultValue = getDefaultNameStyle();\r\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\r\n    defaultPitch = defaultValue.embossPitch,\r\n    defaultYaw = defaultValue.embossYaw,\r\n    defaultThickness = defaultValue.embossThickness,\r\n    materialColor,\r\n    children,\r\n    language,\r\n    onColorTabNavigate,\r\n    onChange,\r\n}, ref) => {\r\n    const [requestUpdate, internalId] = useRefresh();\r\n    const [color, setColor] = useState('#ffffff');\r\n    const [thickness, setThickness] = useState(defaultThickness);\r\n    const [angle, setAngle] = useState(defaultYaw);\r\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\r\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\r\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\r\n    const currentThickness = useRef(defaultThickness);\r\n    /** Currently we only allow pure white light to avoid confusion for user. */\r\n    const [allowPickColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (internalId) setTimeout(() => {\r\n            if (relevant) {\r\n                const nextAngle = angleToVector(angle, verticalAngle);\r\n                const nextColor = hexToRgb(color);\r\n\r\n                if (\r\n                    nextColor[0] !== currentColorVec.current[0]\r\n                    || nextColor[1] !== currentColorVec.current[1]\r\n                    || nextColor[2] !== currentColorVec.current[2]\r\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\r\n                    || thickness !== currentThickness.current\r\n                ) {\r\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\r\n                }\r\n                currentColorVec.current = nextColor;\r\n                currentAngleVec.current = nextAngle;\r\n                currentThickness.current = thickness;\r\n            }\r\n        }, 150);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [internalId, color, angle, verticalAngle, thickness]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ color, pitch, yaw, thickness }) => {\r\n            if (color) setColor(color);\r\n            if (pitch) setVerticalAngle(pitch);\r\n            if (yaw) setAngle(yaw);\r\n            if (typeof thickness === 'number') setAngle(thickness);\r\n        }\r\n    }));\r\n\r\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\r\n        <div className=\"emboss-control-title\">\r\n            {children}\r\n        </div>\r\n        <div className=\"emboss-control-left\">\r\n            <h2>\r\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\r\n                    className=\"material-color\"\r\n                    onClick={onColorTabNavigate}\r\n                    $color={materialColor}\r\n                />\r\n            </h2>\r\n            {language['input.name-style.emboss.color.alert'](<span key=\"color-navigate\" className=\"navigate-button\" onClick={onColorTabNavigate}>\r\n                {language['input.name-style.color.label']}\r\n            </span>)}\r\n            <h2 className=\"thickness-row\">\r\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\r\n                <GuardedSlider\r\n                    value={thickness}\r\n                    min={0}\r\n                    max={4}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setThickness(value);\r\n                            requestUpdate();\r\n                        }\r\n                    }}\r\n                />\r\n            </h2>\r\n            <h2>\r\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\r\n                    className=\"reset-button\"\r\n                    onClick={() => {\r\n                        setVerticalAngle(DEFAULT_PITCH);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </h2>\r\n            <CombinedSliderContainer className=\"vertical-angle-control\">\r\n                <div className=\"slider-label\" />\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={-90}\r\n                    max={90}\r\n                    onChange={value => {\r\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\r\n                        requestUpdate();\r\n                    }}\r\n                    value={verticalAngle}\r\n                />\r\n                <GuardedSlider\r\n                    min={-90}\r\n                    max={90}\r\n                    value={verticalAngle}\r\n                    onChange={value => {\r\n                        setVerticalAngle(value);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>\r\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                    setAngle(DEFAULT_YAW);\r\n                    requestUpdate();\r\n                }}\r\n            /></h2>\r\n            <div className=\"horizontal-angle-contorl\">\r\n                <CircularAnglePicker\r\n                    angle={angle}\r\n                    size={120}\r\n                    setAngle={angle => {\r\n                        setAngle(angle);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        {allowPickColor && <div className=\"emboss-control-right\">\r\n            <h2>Light color</h2>\r\n            <ChromePicker\r\n                styles={{\r\n                    default: {\r\n                        picker: {\r\n                            color: '#000000',\r\n                            background: 'var(--main-level-3)',\r\n                            boxShadow: 'none',\r\n                        },\r\n                        body: {\r\n                            padding: 'var(--spacing) var(--spacing)',\r\n                        }\r\n                    },\r\n                }}\r\n                disableAlpha={true}\r\n                color={color}\r\n                onChange={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n                onChangeComplete={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n            />\r\n        </div>}\r\n    </EmbossControlContainer>;\r\n});","import { useEffect, useState } from 'react';\r\nimport { ChromePicker, CompactPicker } from 'react-color';\r\nimport { DefaultColorList } from 'src/model';\r\nimport styled from 'styled-components';\r\n\r\nconst TextColorPickerContainer = styled.div`\r\n    .chrome-picker {\r\n        /** Target color format swapper in picker's body */\r\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\r\n            display: none !important;\r\n        }\r\n    }\r\n`;\r\nexport type TextColorPicker = {\r\n    color: string,\r\n    onChange: (color: string) => void,\r\n};\r\nexport const TextColorPicker = ({\r\n    color,\r\n    onChange,\r\n}: TextColorPicker) => {\r\n    const [internalColor, setInternalColor] = useState(color);\r\n\r\n    useEffect(() => {\r\n        setInternalColor(color);\r\n    }, [color]);\r\n\r\n    return <TextColorPickerContainer>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                        padding: 'var(--spacing-sm) var(--spacing)',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    },\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => {\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n    </TextColorPickerContainer>;\r\n};","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n    StyledPickerButton,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\r\nimport { TextColorPicker } from './text-color-picker';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        requestUpdateCustomStyle();\r\n    }, [requestUpdateCustomStyle]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n                embossPitch, embossYaw, embossThickness,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n            embossControllerRef.current?.setValue({\r\n                pitch: embossPitch,\r\n                yaw: embossYaw,\r\n                thickness: embossThickness,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        hasEmboss, embossPitch, embossYaw, embossThickness,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n\r\n    const colorPickerButtonId = 'color-picker';\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <TextColorPicker\r\n                                        color={fillStyle}\r\n                                        onChange={hexColor => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            id={colorPickerButtonId}\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom}\r\n                            className=\"picker-dropdown color-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className=\"custom-style-picker\">\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.emboss.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\r\n                                    language={language}\r\n                                    defaultPitch={embossPitch}\r\n                                    defaultYaw={embossYaw}\r\n                                    defaultThickness={embossThickness}\r\n                                    materialColor={fillStyle}\r\n                                    onColorTabNavigate={() => {\r\n                                        document.getElementById(colorPickerButtonId)?.click();\r\n                                    }}\r\n                                    onChange={({ thickness, yaw, pitch }) => {\r\n                                        setValue(cur => ({ ...cur,\r\n                                            embossPitch: pitch,\r\n                                            embossYaw: yaw,\r\n                                            embossThickness: thickness,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                >\r\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\r\n                                </EmbossController>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasEmboss}\r\n                            className=\"picker-dropdown emboss-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.emboss.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n    onPasswordChange: (value: string) => void,\r\n    onStatChange: (atk: string, def: string) => void,\r\n};\r\nexport const FrameTrain = ({\r\n    onSTFrameChange,\r\n    onPasswordChange,\r\n    onStatChange,\r\n}: FrameTrain) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                attribute,\r\n                format,\r\n                password,\r\n                star,\r\n                atk,\r\n                def,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const nextTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            const nextPassword = nextFrame === 'token'\r\n                ? passwordSentenceMap[format]\r\n                : password;\r\n            const nextAtk = willRemoveStat ? '' : atk;\r\n            const nextDef = willRemoveStat ? '' : def;\r\n            const nextStar = nextFrame === 'token'\r\n                ? 0\r\n                : star;\r\n\r\n            onPasswordChange(nextPassword);\r\n            if (willBecomeST) {\r\n                onSTFrameChange(nextTypeAbility);\r\n            }\r\n            if (willRemoveStat) {\r\n                onStatChange(nextAtk, nextDef);\r\n            }\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: nextFrame === 'token'\r\n                    ? NO_ATTRIBUTE\r\n                    : willBecomeST\r\n                        ? `${nextFrame}`.toUpperCase()\r\n                        : attribute,\r\n                star: nextStar,\r\n                typeAbility: nextTypeAbility,\r\n                password: nextPassword,\r\n                atk: nextAtk,\r\n                def: nextDef,\r\n            };\r\n        });\r\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n};","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n\r\n                return <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: 375px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).backgroundRatio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        user-select: none;\r\n        &:hover {\r\n            box-shadow: 0 0 2px 0 #222222;\r\n        }\r\n        .background-preview-callback-passer {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .background-type-picker {\r\n            .radio-train-input-group {\r\n                display: grid;\r\n            }\r\n            .ant-radio-button-wrapper {\r\n                border-left: var(--bw) solid var(--sub-level-1);\r\n            }\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background,\r\n            backgroundData,\r\n            backgroundSource,\r\n            backgroundType,\r\n            hasBackground,\r\n            isPendulum,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <Checkbox\r\n                className=\"art-frame\"\r\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                checked={opacity.boundless}\r\n            >\r\n                {language['input.opacity.boundless.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <CombinedSliderContainer key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <div className=\"slider-label\">\r\n                    {type === 'body' && <Popover\r\n                        visible={backgroundInputVisible}\r\n                        destroyTooltipOnHide={false}\r\n                        trigger={['click']}\r\n                        onVisibleChange={setBackgroundInputVisible}\r\n                        overlayClassName={[\r\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                            backgroundInputVisible ? 'picker-visible' : '',\r\n                            backgroundInputHidden ? 'picker-hidden' : '',\r\n                        ].join(' ')}\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledBaseFillPickerContainer\r\n                                className={[\r\n                                    'custom-style-picker',\r\n                                    noBackground ? 'overlay-no-background-image' : ''\r\n                                ].join(' ')}\r\n                            >\r\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                                    <Checkbox\r\n                                        checked={hasBackground}\r\n                                        onChange={e => {\r\n                                            changeHasBackground(e);\r\n                                        }}\r\n                                    >{language['input.background.toggle-label']}</Checkbox>\r\n                                    <br />\r\n                                    <i>{language['input.background.description']}</i>\r\n                                </h3>\r\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                                    <BackgroundInputGroup\r\n                                        ref={backgroundInputRef}\r\n                                        receivingCanvas={receivingCanvas}\r\n                                        onSourceLoaded={onSourceLoaded}\r\n                                        onTainted={onTainted}\r\n                                        onCropChange={onCropChange}\r\n                                        backgroundColor={opacity.baseFill}\r\n                                    >\r\n                                        <div className=\"layout-picker-panel\">\r\n                                            <div className=\"layout-picker-subpanel color-section\">\r\n                                                <h2>{language['input.background-color.label']}</h2>\r\n                                                <CompactPicker\r\n                                                    colors={DefaultColorList}\r\n                                                    color={opacity.baseFill}\r\n                                                    onChangeComplete={color => {\r\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                                <h2>{language['input.background-type.label']}</h2>\r\n                                                <RadioTrain\r\n                                                    className=\"background-type-picker\"\r\n                                                    onChange={changeBackgroundType}\r\n                                                    optionList={getBackgroundTypeList({\r\n                                                        fit: language['input.background-type.fit.label'],\r\n                                                        full: language['input.background-type.full.label'],\r\n                                                        frame: language['input.background-type.frame.label'],\r\n                                                    })}\r\n                                                    value={backgroundType}\r\n                                                />\r\n                                            </div>}\r\n                                        </div>\r\n                                    </BackgroundInputGroup>\r\n                                </div>\r\n                            </StyledBaseFillPickerContainer>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <div\r\n                            className=\"background-preview\"\r\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                        >\r\n                            <Tooltip overlay={language['input.background.toolip']}>\r\n                                <div className=\"background-preview-callback-passer\">\r\n                                    {hasBackground\r\n                                        ? background\r\n                                            ? <img\r\n                                                className=\"background-image-preview\"\r\n                                                src={backgroundSource === 'online'\r\n                                                    ? background\r\n                                                    : backgroundData}\r\n                                                alt=\"Background\"\r\n                                            />\r\n                                            : null\r\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                                </div>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Popover>}\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </div>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { Input, Popover } from 'antd';\r\nimport { RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeList, IconTypeMap } from 'src/model';\r\n\r\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 7rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const autoIconType = getCardIconFromFrame(frame);\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? IconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\r\n        : IconTypeMap[cardIcon];\r\n    const iconDropdownText = language[iconTypeData.labelKey];\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledIconDropdown>\r\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\r\n                    return <StyledDropdown.Option key={value}\r\n                        className={value === cardIcon ? 'menu-active' : ''}\r\n                        onClick={() => changeCardIcon(value)}\r\n                    >\r\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                    </StyledDropdown.Option>;\r\n                })}\r\n            </StyledIconDropdown>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return cardIcon === 'auto' && autoIconType === 'none'\r\n        ? showCreativeOption\r\n            ? <RadioTrain\r\n                className=\"fill-input-train\"\r\n                value={cardIcon}\r\n                onChange={changeCardIcon}\r\n                optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\r\n                    return {\r\n                        label: icon ?? <CloseCircleOutlined />,\r\n                        value,\r\n                        tooltipProps: {\r\n                            title: language[fullLabelKey],\r\n                        },\r\n                    };\r\n                })}\r\n            >\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : null\r\n        : iconTypeData.value === 'st'\r\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : <StyledCheckboxStarTrain\r\n                className=\"checkbox-star-train\"\r\n                value={star}\r\n                onChange={changeStar}\r\n                optionList={StarButtonList}\r\n                strict={true}\r\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                    <Input\r\n                        className=\"custom-star-input\"\r\n                        value={typeof star === 'number' ? '' : star}\r\n                        allowClear\r\n                        onChange={changeStar}\r\n                        placeholder={language['input.icon-type.custom.placeholder']}\r\n                    />\r\n                    <RadioTrain\r\n                        value={starAlignment}\r\n                        onChange={changeStarAlignment}\r\n                        optionList={[\r\n                            {\r\n                                value: 'auto',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                                label: <CloseCircleOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'left',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                                label: <AlignLeftOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'center',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                                label: <AlignCenterOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'right',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                                label: <AlignRightOutlined />,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>}\r\n            >\r\n                {DropdownChildren}\r\n            </StyledCheckboxStarTrain>;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    holdingShift: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': {\r\n            if (holdingShift) {\r\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 4 : 5;\r\n            } else {\r\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 2 : 3;\r\n            }\r\n            break;\r\n        }\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`card-textarea ${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        autoSize={{\r\n            minRows: 9,\r\n        }}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 550px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .frame-auto-checkbox {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { copyrightMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format },\r\n        getUpdater,\r\n    }) => ({\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                    <IconButton\r\n                    onClick={() => {}}\r\n                        Icon={UnorderedListOutlined}\r\n                    />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList } from '../const';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    .ant-input-group-addon {\r\n        flex: 0;\r\n    }\r\n    .radio-train-input-group .ant-radio-button-wrapper {\r\n        min-width: unset;\r\n    }\r\n`;\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish,\r\n            linkMap,\r\n            isPendulum,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <StyledImageRadioTrain\r\n                className=\"art-finish-checkbox fill-input-train\"\r\n                value={artFinish}\r\n                onChange={changeArtFinish}\r\n                optionList={ArtFinishButtonList}\r\n            >\r\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\r\n            </StyledImageRadioTrain>\r\n            : null\r\n        }\r\n    >\r\n        <div>\r\n            <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\r\n                active={isLink === true}\r\n                defaultValue={linkMap}\r\n                onChange={changeLinkMap}\r\n                onStatusChange={changeLinkStatus}\r\n            />\r\n        </div>\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { FrameInfoMap } from 'src/model';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { getNavigationProps } from 'src/util';\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\ntype BottomFrameOptionGrid = {\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onChange: (value: string | number) => void,\r\n    onCancel: () => void,\r\n};\r\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\r\n    frameList,\r\n    pendulumFrame,\r\n    onChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => inputRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPendulumFrameContainer\r\n        className=\"pendulum-frame-picker\"\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: frameList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onChange(frameList[focus].value);\r\n            },\r\n            onCancel,\r\n        })}\r\n    >\r\n        <Checkbox ref={inputRef}\r\n            className=\"frame-auto-checkbox\"\r\n            checked={pendulumFrame === 'auto'}\r\n            onChange={e => {\r\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\r\n            }}\r\n        >{language['input.frame.auto']}</Checkbox>\r\n        <RadioTrain\r\n            className=\"frame-radio\"\r\n            value={pendulumFrame}\r\n            onChange={onChange}\r\n            optionList={frameList}\r\n        />\r\n    </StyledPendulumFrameContainer>;\r\n});\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        background-color: var(--main-level-4);\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .joined-row {\r\n        position: 'relative';\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing-lg);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [isMirrorScale, setMirrorScale] = useState(true);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n        };\r\n    });\r\n    const changeBottomFrame = (value: string | number) => {\r\n        const normalizedValue = `${value}`;\r\n\r\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\r\n        setCard(currentCard => {\r\n            return { ...currentCard, pendulumFrame: normalizedValue };\r\n        });\r\n    };\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            {showCreativeOption && <Popover\r\n                visible={frameDropdownVisible}\r\n                onVisibleChange={setFrameDropdownVisibleVisible}\r\n                trigger={['hover', 'click']}\r\n                placement=\"bottom\"\r\n                overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                content={<div className=\"overlay-event-absorber\">\r\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\r\n                        frameList={frameList}\r\n                        pendulumFrame={pendulumFrame}\r\n                        onCancel={() => {\r\n                            setFrameDropdownVisibleVisible(false);\r\n                            containerRef.current?.focus();\r\n                        }}\r\n                        onChange={changeBottomFrame}\r\n                    />\r\n                </div>}\r\n            >\r\n                <StyledPendulumFrameInputContainer ref={containerRef}\r\n                    className=\"pendulum-frame-input\"\r\n                    tabIndex={0}\r\n                    onKeyDown={e => {\r\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                            setFrameDropdownVisibleVisible(true);\r\n                            /** Popover takes time to mount / become visible */\r\n                            setTimeout(() => {\r\n                                bottomFrameOptionGridRef.current?.focus();\r\n                            }, 200);\r\n\r\n                            return false;\r\n                        }\r\n                    }}\r\n                >\r\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\r\n                    {currentPendulumFrame\r\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\r\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\r\n                </StyledPendulumFrameInputContainer>\r\n            </Popover>}\r\n            {(isPendulum && showCreativeOption)\r\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\r\n                    {language['input.mirror-scale.label']}\r\n                </Checkbox>}\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (isMirrorScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    onChange={e => {\r\n                        if (isMirrorScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    autoSize={{\r\n                        minRows: 5,\r\n                    }}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst StyledPostPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr max-content;\r\n    grid-template-areas:\r\n        \"type-input input-helper\"\r\n        \"condense-input help-button\";\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .input-kanji-helper {\r\n        grid-area: input-helper;\r\n    }\r\n    .type-ability-input {\r\n        grid-area: type-input;\r\n    }\r\n    .condense-input {\r\n        grid-area: condense-input;\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n    &.variant-tcg {\r\n        .type-ability-input {\r\n            grid-column: span 2;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: { typeAbility?: string[] }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon].value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\r\n        <CardTextInput ref={typeAbilityInputRef}\r\n            addonBefore={language[typeLabel]}\r\n            id=\"type-ability\"\r\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n            onChange={changeTypeAbility}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        {isOCG && <Tooltip\r\n            overlay={language['input.furigana-helper.tooltip']}\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n        >\r\n            <Checkbox\r\n                className=\"input-kanji-helper\"\r\n                onChange={toggleFuriganaHelper}\r\n                checked={furiganaHelper}\r\n            >\r\n                {language['input.furigana-helper.label']}\r\n            </Checkbox>\r\n        </Tooltip>}\r\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n            optionList={CondenseThresholdButtonList}\r\n        >\r\n            <span>\r\n                {language['input.condense.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </span>\r\n        </RadioTrain>\r\n        <FormattingHelpDrawer />\r\n    </StyledPostPendulumInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { RadioTrain } from 'src/component';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-block {\r\n        height: 17px;\r\n        width: 17px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        outline: none;\r\n        border: var(--bw) solid var(--sub-level-4);\r\n        &.static-block {\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        }\r\n    }\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        gap: 3px;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        padding-left: 3px;\r\n        input {\r\n            width: 58px;\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\ntype InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nconst InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                /** Contrast formula from google \\ :v / */\r\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\r\n                    ? '#000000'\r\n                    : '#FFFFFF';\r\n\r\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\r\n                    {internalValue.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={currentText}\r\n                onChange={e => {\r\n                    setCurrentText(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker,\r\n        h2.font-style-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\r\n                                <h2 className=\"font-style-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={fontStyle}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\r\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\r\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            background: custom ? '#eaeaea' : 'var(--sub-level-4)',\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\r\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n    StyledPopMarkdown,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getAttributeList,\r\n    FinishButtonList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isPendulum,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={FinishButtonList}\r\n            >\r\n                <span>{language['input.finish.label']}</span>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain\r\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\r\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\r\n            onStatChange={(atk, def) => footerInputGroupRef.current?.setValue({ atk, def })}\r\n        />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <RadioTrain\r\n                    className=\"fill-input-train attribute-input\"\r\n                    value={attribute}\r\n                    onChange={changeAttribute}\r\n                    optionList={attributeList}\r\n                >\r\n                    <span>{language['input.attribute.label']}</span>\r\n                </RadioTrain>\r\n\r\n                {(isPendulum || showCreativeOption)\r\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                        showCreativeOption={showCreativeOption}\r\n                        showExtraDecorativeOption={showExtraDecorativeOption}\r\n                        onTakePicker={setPickerTarget}\r\n                    />}\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1.25;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 100%;\r\n            height: 50%;\r\n            position: absolute;\r\n            left: 0;\r\n            &.top-frame {\r\n                top: 0;\r\n            }\r\n            &.bottom-frame {\r\n                top: 50%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            top: 19px;\r\n            left: 20px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #222222;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    language,\r\n    onDuplicate,\r\n    onSelect,\r\n    onDelete,\r\n    // onDownload,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artData,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundData,\r\n        backgroundFit,\r\n        backgroundSource,\r\n        backgroundType,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        opacity,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n    } = card;\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedBottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n    const normalizedCardArt = artSource === 'offline'\r\n        ? !art\r\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\r\n            : artData\r\n        : art;\r\n    const normalizedBackgroundArt = backgroundSource === 'offline'\r\n        ? !background\r\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\r\n            : backgroundData\r\n        : background;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onSelect(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={normalizedBackgroundArt}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '')}\r\n                    style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(${LinkIndentList[index]}px)` }}\r\n                />;\r\n            })}\r\n            {isPendulum && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {isPendulum && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\r\n                </Tooltip> */}\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${\r\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\r\n        }px) translateY(${\r\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\r\n        }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\n\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    position: relative;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        position: absolute;\r\n        width: 100%;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n}\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDownload,\r\n        onDuplicate,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onSelect={onSelect}\r\n        onDownload={onDownload}\r\n        onDelete={onDelete}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    })));\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onSelect(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onSelect, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            onDuplicate: duplicateCard,\r\n                            onSelect: onSelect,\r\n                            onDownload: onDownload,\r\n                            onDelete: deleteAndReselect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledCode } from 'src/component/atom';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    CondenseTolerantMap,\r\n    FinishMap,\r\n    frameList,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n} from 'src/model';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n        padding: 0;\r\n        padding-left: 24px;\r\n        .ant-collapse-arrow {\r\n            top: 5px;\r\n            left: 0;\r\n        }\r\n    }\r\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\r\n        padding: var(--spacing-sm) 0 0 0;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\ntype CopiableCode = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n}\r\nconst CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledMono\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledMono>;\r\n};\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tr>\r\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                            </tr>\r\n                            {[\r\n                                {\r\n                                    field: 'Format',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'tcg',\r\n                                            'ocg',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Frame',\r\n                                    altField: 'Bottom Frame',\r\n                                    value: <div>\r\n                                        {frameList\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Attribute',\r\n                                    value: <div>\r\n                                        {AttributeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Spell/Trap Icon',\r\n                                    value: <div>\r\n                                        {IconList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Sticker',\r\n                                    value: <div>\r\n                                        {StickerList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Foil',\r\n                                    value: <div>\r\n                                        {getFoilList()\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Finish',\r\n                                    value: <div>\r\n                                        {Object.values(FinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        <div>{language['manager.template.description.joinable']}</div>\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Art Finish',\r\n                                    value: <div>\r\n                                        {Object.values(ArtFinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'number',\r\n                                            'text',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Alignment',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'left',\r\n                                            'center',\r\n                                            'right',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Icon Type',\r\n                                    value: <div>\r\n                                        {IconTypeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Background Type',\r\n                                    value: <div>\r\n                                        {getBackgroundTypeList()\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Condense Rate',\r\n                                    value: <div>\r\n                                        {Object.keys(CondenseTolerantMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'predefined',\r\n                                            'custom',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Font',\r\n                                    value: <div>\r\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                    </div>,\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Preset',\r\n                                    value: <div>\r\n                                        {Object.keys(PresetNameStyleMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Pattern',\r\n                                    value: <div>\r\n                                        {PatternList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                            ].map(({\r\n                                field,\r\n                                altField,\r\n                                value,\r\n                            }) => {\r\n                                return <tr key={field}>\r\n                                    <td>\r\n                                        <StyledMono>{field}</StyledMono>\r\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                    </td>\r\n                                    <td>{value}</td>\r\n                                </tr>;\r\n                            })}\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n                \r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\nimport XLSX from 'xlsx';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const exportFormat = useSetting(state => state.setting.exportFormat);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const [savingFile, setSavingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                setSavingFile(true);\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    try {\r\n                                        const {\r\n                                            error,\r\n                                            value: csvdata,\r\n                                        } = cardListToCsv(useCardList.getState().cardList);\r\n\r\n                                        if (error) {\r\n                                            let errorMessage = '';\r\n                                            let errorDescription = '';\r\n                                            switch (error) {\r\n                                                case 'offline-data': {\r\n                                                    errorMessage = language['error.export.offline-data.message'];\r\n                                                    errorDescription = language['error.export.offline-data.description'];\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (errorMessage || errorDescription) {\r\n                                                notification.error({\r\n                                                    message: errorMessage,\r\n                                                    description: errorDescription,\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        switch (exportFormat) {\r\n                                            case 'xlsx': {\r\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\r\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\r\n                                                break;\r\n                                            }\r\n                                            default: {\r\n                                                downloadBlob(\r\n                                                    useCardList.getState().listName,\r\n                                                    new Blob([csvdata], { type: 'text/csv' }),\r\n                                                    'text/csv',\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        changeEditStatus('download');\r\n                                    } catch (e) {}\r\n                                }\r\n                                setSavingFile(false);\r\n                            }}\r\n                        >\r\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept={[\r\n                                    '.csv',\r\n                                    'application/vnd.ms-excel',\r\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                                ].join(',')}\r\n                                className=\"import-upload-input\"\r\n                                onChange={async (e) => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        try {\r\n                                            const file = await fileList[0].arrayBuffer();\r\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\r\n\r\n                                            /** Assume data from only the very first sheet */\r\n                                            /** 65001 codepage allow display unicode characters such as japanese */\r\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\r\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\r\n                                                workbook.Sheets[workbook.SheetNames[0]],\r\n                                                { header: 1, raw: false },\r\n                                            );\r\n                                            const nextCardList = csvToCardList(csvBook);\r\n\r\n                                            if (nextCardList.length > 0) {\r\n                                                setCardList(nextCardList, nextCardList[0].id);\r\n                                                setListName(fileName);\r\n                                                setInputKey(cnt => cnt + 1);\r\n                                                onSelect(nextCardList[0]);\r\n                                                setReadingFile(false);\r\n                                            } else {\r\n                                                announceError();\r\n                                            }\r\n                                        } catch (e) {\r\n                                            console.error(e);\r\n                                            announceError();\r\n                                        }\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={() => null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onSelect={activeCard}\r\n                onDownload={onDownload}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\nimport { CardActionButton } from './component';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n            border-left: var(--bw) solid var(--sub-level-3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CardPreviewContainer = styled.div`\r\n    position: relative;\r\n    display: block;\r\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    margin: var(--spacing);\r\n    margin-top: 0;\r\n    .reset-button,\r\n    .lightbox-button {\r\n        display: none;\r\n    }\r\n    #preview-canvas {\r\n        display: none;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\r\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\r\n            scale(var(--resize-ratio))\r\n            translateZ(0);\r\n        &.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport const CardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled(CardActionButton)`\r\n    position: absolute;\r\n    z-index: 101;\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    InternalCard,\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCardList,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { notification, Tooltip } from 'antd';\r\nimport { Lightbox, LightboxRef, TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\r\nimport {\r\n    CardPreviewContainer,\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    CardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n        globalScale,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n        globalScale,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<LightboxRef>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'StoneSerif-Italic',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const exportCardInList = useCallback((card: InternalCard) => {\r\n        const { id, ...exportableCard } = card;\r\n\r\n        exportData(undefined, false, exportableCard);\r\n    }, [exportData]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\r\n        if (crossorigin === 'anonymous') {\r\n            setTainted(false);\r\n            lightboxRef.current?.refresh();\r\n        }\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${\r\n                        process.env.PUBLIC_URL\r\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasHeight * globalScale}px`,\r\n                        '--card-width': `${CanvasWidth * globalScale}px`,\r\n                        '--global-scale': `${globalScale}`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <ExportPanel ref={exportPanelRef}\r\n                                    tainted={isTainted}\r\n                                    artworkCanvas={artworkCanvasRef.current}\r\n                                    onRequireExportData={exportData}\r\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                    onClose={forceRefocus}\r\n                                />\r\n                                <div />\r\n                                <ImportPanel ref={importPanelRef}\r\n                                    onImport={treatNewCard}\r\n                                    onClose={forceRefocus}\r\n                                    allowHotkey={allowHotkey}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                            <BatchConverter language={language} />\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                globalScale={globalScale}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\r\n                                <span>\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <CardPreviewContainer className=\"card-preview-container\">\r\n                            <Tooltip title={language['button.reset.tooltip']}>\r\n                                <ResetButton\r\n                                    className=\"reset-button\"\r\n                                    onClick={() => {\r\n                                        const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                        if (consent) {\r\n                                            const { setCard, card } = useCard.getState();\r\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                            const contextualDefaultCardData = card.format === 'tcg'\r\n                                                ? defaultCard\r\n                                                : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                            setCard(contextualDefaultCardData, true);\r\n                                            setImageChangeCount(cnt => cnt + 1);\r\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <ClearOutlined />\r\n                                </ResetButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={<div className=\"center\">\r\n                                {language['button.full-size.label']}\r\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                            </div>}>\r\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                    <ZoomInOutlined />\r\n                                </LightboxButton>\r\n                            </Tooltip>\r\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\r\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\r\n                             */}\r\n                            <canvas\r\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\r\n                                id=\"preview-canvas\"\r\n                                ref={previewCanvasRef}\r\n                                width={CanvasWidth}\r\n                                height={CanvasHeight}\r\n                            />\r\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <canvas\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\r\n                                    id=\"export-canvas\"\r\n                                    ref={exportCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\"\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\r\n                                    ref={frameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"nameCanvas\"\r\n                                    ref={nameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={148 * globalScale}\r\n                                />\r\n                                <canvas id=\"cardIconCanvas\"\r\n                                    ref={cardIconCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={222 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumScaleCanvas\"\r\n                                    ref={pendulumScaleCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={889 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumEffectCanvas\"\r\n                                    ref={pendulumEffectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={889 * globalScale}\r\n                                />\r\n                                <canvas id=\"typeCanvas\"\r\n                                    ref={typeCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={1037 * globalScale}\r\n                                />\r\n                                <canvas id=\"effectCanvas\"\r\n                                    ref={effectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={1111 * globalScale}\r\n                                />\r\n                                <canvas id=\"statCanvas\"\r\n                                    ref={statCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"setIdCanvas\"\r\n                                    ref={setIdCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"passwordCanvas\"\r\n                                    ref={passwordCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"creatorCanvas\"\r\n                                    ref={creatorCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"stickerCanvas\"\r\n                                    ref={stickerCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"finishCanvas\"\r\n                                    ref={finishCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={artworkCanvasRef}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={backgroundCanvasRef}\r\n                                />\r\n                            </CardCanvasGroupContainer>\r\n                        </CardPreviewContainer>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onDownload={exportCardInList}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Lightbox\r\n                    ref={lightboxRef}\r\n                    globalScale={globalScale}\r\n                />\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}