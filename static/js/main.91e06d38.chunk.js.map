{"version":3,"sources":["model/canvas.ts","model/foil-finish-dye.tsx","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/flag.tsx","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/dye.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/color.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-batch-download.ts","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","service/use-color-picker/index.ts","service/use-global.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/mask.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom/color.tsx","component/atom/copiable.tsx","component/atom/index.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/inline-color-picker/index.tsx","component/inline-sketch-picker/index.tsx","component/lightbox/index.tsx","component/link-marker/index.tsx","component/setting-panel/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/attribute-input-group.tsx","page/input-panel/star-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/frame-setting-panel/frame-behavior-setting-panel.tsx","page/input-panel/frame-setting-panel/index.tsx","page/common/index.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/batch-download-button.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artFrameX","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","_objectSpread","distributionMode","result","type3CommonInstruction","blendMode","type8CommonInstruction","ART_FINISH_TYPE","FinishMap","type1","partInstructionMap","pendulumSubstituteMap","type2","type3","type4","type5","type6","type7","type8","type9","type10","type11","type12","type13","ArtFinishMap","art","small","medium","large","OtherFinishTypeMap","key","labelKey","background","attribute","icon","sticker","FoilMap","color","isOption","gold","platinum","getFoilList","DYE_LIST_LENGTH","length","DyeIndexMap","topLeftFrame","topRightFrame","bottomLeftFrame","bottomRightFrame","effectBackground","pendulumEffectBackground","foil","NO_ATTRIBUTE","AttributeList","nameKey","isCreative","ExtraAttributeList","RegionMap","category","fileKey","DefaultFormatAttribute","tcg","en","ocg","jp","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","fullLabelKey","isMixable","showIcon","className","alt","src","concat","process","IconTypeList","Object","values","IconTypeAttributeMap","IconTypeAttributeList","IconTypeStMap","IconTypeStList","TotalIconTypeMap","MAX_STAR_LENGTH","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","hasEmboss","pattern","PresetNameStyleMap","commonB","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","overrideFill","PatternList","PendulumSizeMap","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","FlagInfoList","index","FlagIndexMap","FLAG_LENGTH","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","vietnameseFont","vietnameseFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","DefaultFrameInfo","FramePositionMap","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","VietnameseDiacriticLetterRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","FULL_LINE_PLACEHOLDER","FLAVOR_LINE_PLACEHOLDER","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","region","leftFrame","rightFrame","pendulumRightFrame","finish","otherFinish","artFinish","nameStyleType","nameStyle","headTextFillStyle","embossThickness","subFamily","cardIcon","star","starAlignment","starList","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","linkRating","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","minLine","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","flag","dyeList","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","cardWidth","cardHeight","createCanvas","arguments","undefined","canvas","document","createElement","ctx","getContext","distanceTransform","array","exponent","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","dyeCanvas","baseCanvas","HexColorRegex","test","overlayContext","overlayCanvas","filter","drawImage","globalCompositeOperation","fillRect","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","checkLightFooter","includes","checkDiplayLinkRating","displayMode","showLinkRating","resolveFrameStyle","frameData","_ref2","_ref3","_ref4","_ref5","resolvedFrame","resolvedTopLeft","resolvedBottomLeft","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","kanjiHelper","defaultFlagList","currentFlagList","defaultDyeList","currentDyeList","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","href","window","download","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","getContrastColor","rgbColor","_rgbColor$","_rgbColor$2","_rgbColor$3","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","useState","cnt","setCnt","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","random","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","forceRefocus","_document$querySelect","selector","querySelector","focus","isMobileDevice","check","a","navigator","userAgent","vendor","opera","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","targetRegion","termMap","newSetId","nextNameStyle","_termMap$entry","useBatchDownload","create","batchName","batch","batchQueue","batchDataMap","isBatchDownloading","isReady","startBatchDownload","stopBatchDownload","clearQueue","addToBatch","cardId","cardName","cardBlob","nextQueue","nextBatchDataMap","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","_reader","_reader2","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader11","_reader12","_reader13","_reader14","_reader15","_reader16","_reader17","_reader$split$filter","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_reader40","_reader41","_reader42","_reader43","_reader44","_reader45","_reader46","_emptyCard$isLink","_filter","_reader47","_reader49","_reader50","_reader51","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","finishBackground","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","effectMinLine","pendulumEffectMinLine","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader48","baseFlag","Number","baseDyeList","String","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","selectedMap","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","selectCard","_ref8","nextMap","setSelectMap","_ref9","prev","curr","setCardList","_cardList$","deleteCard","_ref10","_ref11","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref12","targetIndex","_ref13","clonedId","clonedCard","nextCardList","sortList","_ref14","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","exportScheme","globalScale","mirrorPendulumScale","reduceMotionColor","resolution","showCreativeOption","showExtraAttribute","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","getCardDataUrl","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","addToCurrentBatch","fetchedDataUrl","classList","_document$querySelect2","click","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect3","queuingSize","isPipelineRunning","useColorPicker","onChange","currentText","setCurrentText","internalValue","setInternalValue","rgb","normalizedText","inputText","setColor","useGlobalMemory","memory","activeDropzone","updateGlobalMemory","useGlobal","targetMemory","useShallow","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","strokeStyle","imageCacheMap","drawFrom","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawAsset","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","keepControlCharacter","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","vietnameseFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyFuriganaFont","bold","stopApplyFuriganaFont","applyLargerText","fontRatio","stopApplyLargerText","applyNumberFont","stopApplyNumberFont","applyOrdinalFont","stopApplyOrdinalFont","applySymbolFont","stopApplySymbolFont","applyVietnameseFont","stopApplyVietnameseFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","headTextFragmentEdge","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","content","isNormal","fontDataKey","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","baseMinLine","sizeLevel","normalizedContent","lineList","fullLineListOption","effectFlavorCondition","_flavorConditionRegex","lineRegexSource","fullLineRegexSource","wholeLineRegex","effectText","flavorConditionRegex","potentialFlavorConditionText","exec","tryCnt","lineReplacement","lineContent","fullLineReplacement","fullLineContent","paragraphResult","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","precalculatedLine","shift","flavorFontData","dynamicFlavorFontData","flavorTextCurrentFont","flavorTextData","MaskPromise","right","applyAlphaMask","urlOrCanvas","maskData","layerData","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","isSpeedSkill","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","backgroundEffectBoxY","backgroundEffectBoxWidth","backgroundEffectBoxHeight","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resolvedLayoutStyle","resolvedEffectBackground","resolvedPendulumEffectBackground","drawFrame","willReplaceFrame","topFrameCtx","topFrameCanvas","dyedTopFrameCanvas","dyedTopFrameCtx","topRightCanvas","dyedTopRightCanvas","bottomFrameCtx","bottomFrameCanvas","dyedBottomFrameCanvas","dyedBottomFrameCtx","bottomRightCanvas","dyedBottomRightCanvas","backgroundWidth","backgroundHeight","resetTransform","drawCardArt","externalCtx","imageWidth","imageHeight","drawBackground","_otherFinish$","hasArtBorder","backgroundFinish","loopBackgroundFinish","drawAttribute","_otherFinish$2","attributeCanvas","attributeCtx","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishCtx","drawStar","_otherFinish$3","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","normalizedStarList","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starCtx","all","_","cardIconName","starFinishCanvas","starFinishCtx","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconCtx","drawStatBorder","drawNameBackground","nameBackgroundCtx","nameBackgroundCanvas","dyedLeftNameCanvas","dyedLeftNameCtx","nameRightCanvas","dyedRightNameCanvas","drawEffectBackground","withPendulum","effectBackgroundCtx","effectBackgroundCanvas","effectBoxX","dyedEffectBackgroundCanvas","_PendulumSizeMapExcep","pendulumEffectBackgroundCtx","pendulumEffectBackgroundCanvas","dyedPendulumEffectBackgroundCanvas","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","willDye","validDyeColor","usedFoil","pendulumBorderCanvas","pendulumBorderCtx","dyedCardBorderFoilCanvas","pendulumBorderFoilCtx","pendulumBorderFoilCanvas","dyedPendulumBorderFoilCanvas","drawEffectBorder","drawCardBorder","cardBorderFoilCtx","cardBorderFoilCanvas","drawArtBorderFoil","artBorderFoilCtx","artBorderFoilCanvas","dyedArtBorderFoilCanvas","drawEffectBorderFoil","effectBorderFoilCtx","effectBorderFoilCanvas","dyedEffectBorderFoilCanvas","drawNameFinish","drawAttributeFinish","drawArtFinish","artCtx","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","cloneCtx","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","digitList","digit","accLeft","firstDigit","secondDigit","firstDigitWidth","secondDigitWidth","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","nextWidth","condenseRatio","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","bottomFrame","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightRightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","foilDyeColor","normalizedSubFamily","normalizedTypeAbility","showDefAndLinkFlag","linkRatingDisplayMode","isLinkST","showDefAndLink","statInEffect","typeInEffect","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","normalizedOpacity","fillBaseColor","w","customFill","artOnCardCanvas","artOnCardCtx","combinedArtCanvas","combinedArtCtx","normalizedLinkRating","rating","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","hasLink","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","bottom","bottomOffset","actualEdge","actualBaseline","actualBaselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","useItalic","effectIndexSize","coordinateKey","getEffectFontAndCoordinate","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","iconCanvas","iconCtx","iconFinishCanvas","iconFinishCtx","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","positionType","isActive","baseLink","activeLink","baseDrawLinkArrowMap","withBorder","dyeColor","willDyed","drawFunction","linkMapFoilCtx","linkMapFoilCanvas","dyedLinkMapFoilCanvas","baseDrawLinkMapFoil","drawHistory","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","feedbackReminder","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","$freeSize","$size","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","ColorBlock","$static","$empty","StyledCode","StyledMono","CopiableCode","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","_templateObject3","SolidLabel","_templateObject4","CombinedSliderContainer","_templateObject5","PopoverButton","_templateObject6","$active","$softMode","ResolutionLabelContainer","_templateObject7","$warning","ResolutionLabel","warning","backgroundMarch","keyframes","_templateObject8","DropZone","_templateObject9","$visible","_templateObject10","rotate","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","rel","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","b","majorA","minorA","patchA","majorB","minorB","patchB","onMouseOver","FAD_BUTTON_ID","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","setFeedbackReminder","currentReminder","duration","onClose","footer","Tabs","TabPane","tab","answer","Affiliation","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","Button","onMouseOut","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","naturalWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setActiveDropzone","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","applyOfflineSource","maxFileSize","readAsDataURL","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","alert","_fileInputRef$current","setValue","onDragOver","onDrop","currentTarget","contains","dataTransfer","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledInlineColorPickerContainer","InlineColorList","InlineColorPicker","dotColor","SaturationBoardContainer","SaturationBoard","CustomPicker","Saturation","HorizontalSketchColorList","HorizontalSketchPickerContainer","HorizontalSketchPicker","noColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledLinkMarkChooser","LinkMarkerPicker","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Container","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","getFoilButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","nextColor","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextLinkRating","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","destroyTooltipOnHide","BorderOuterOutlined","_language$tooltipKey","_opacity$type","_opacity$type2","activable","step","AttributeRegionTrain","AttributeInputGroup","changeAttribute","changeRegion","attributeList","getAttributeList","_RegionMap$region","extraAttributeList","getExtraAttributeList","DoubleRightOutlined","DoubleLeftOutlined","IconDropdownOverlay","StyledIconDropdown","IconDropdownContainer","StarTypeSelector","activeCardIcon","showMixableOnly","showRemove","filterFunction","StarListSelectPanel","StarListControlPanel","StarListContainer","StarPicker","changeStarList","transformer","nextStarList","slotList","use12","setSlot","slot","activeInformation","setActiveInformation","activeList","changeStatus","currentStarList","list","limit","padUnit","nextList","padRight","slotValue","starInfo","willChecked","TypeWithIconContainer","StyledCheckboxStarTrain","PopoverButtonInCardIconInput","CustomStarContainer","CardIconAlignmentPicker","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","CardIconInputGroup","starPickerRef","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconType","iconDropdownText","IconDropdownLabel","IconDropdown","_starPickerRef$curren","DropdownChildren","_starPickerRef$curren2","iconEntry","_starPickerRef$curren3","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","StyledLinkRatingInputContainer","FooterInputGroup","autoLinkRating","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","linkRatingInputRef","showAtkInput","showLinkInput","showDefInput","showPadding","copyrightList","changeATK","changeDEF","changeLinkRating","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","_linkRatingInputRef$c","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","LinkPickerContainer","$hover","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","minWidth","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","FrameBehaviorSettingPanelContainer","FrameBehaviorSettingPanel","updateFlag","nextFlagList","_FlagInfoList$index","FrameLayoutContainer","CardLayoutContainer","$width","$height","$hoverable","CardLayoutPreview","baseLayoutState","resolvedLayoutState","activeLayout","vertical","_FrameInfoMap$frame","FrameLayoutSettingPanel","_FrameInfoMap$frame2","_FramePositionMap$act","onFrameChange","recentCustomPendulumFrame","setActiveLayout","frameLayoutMainId","foilButtonList","changeFoil","changeBottomLeftFrame","changeBottomRightFrame","changeTopLeftFrame","changeTopRightFrame","changeEffectBackground","nextEffectStyle","changePendulumEffectBackground","nextPendulumEffectStyle","changeDyeList","changeLayout","layoutValue","layoutState","activeFrame","_recentCustomPendulum","changeDye","nextDyeList","FlagPresentationList","valueDisplay","_value","sampleDisplay","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","flagList","willBecomePendulum","_bottomFrameOptionGri","ApartmentOutlined","willMirror","PostPendulumFirstLineContainer","PostPendulumInputGroup","_IconTypeMap$cardIcon","typeAbilitySeparator","typeAbilityInputRef","setEffectMinLine","setPendulumEffectMinLine","changeTypeAbility","toggleFuriganaHelper","newEffectStyle","newPendulumEffectStyle","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","frameTrainRef","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","onFinishChange","changeOpacity","changeNameStyle","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","ClearOutlined","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$topLeft","_FrameInfoMap$topLeft2","_FrameInfoMap$topRigh","_FrameInfoMap$topRigh2","_FrameInfoMap$bottomL","_FrameInfoMap$bottomL2","_FrameInfoMap$bottomR","_FrameInfoMap$bottomR2","selected","onDuplicate","onActive","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","exportableCard","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","ExportingListContainer","BatchDownloadButton","nextSelectedId","lastSelectedId","exportAllCard","LoadingOutlined","CheckCircleOutlined","HourglassOutlined","StyledMenuItem","StyledManagerCardList","CardThumbRow","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","CaretDownFilled","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledManagerSample","ManagerSample","FileTextOutlined","ghost","header","altField","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_FramePositionMap$key","_FramePositionMap$key2","_ref27","_ref28","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","stringifedFlag","stringifedDyeList","stringifedSubFamilyList","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","stopDrag","timeoutHandle","checkDragHeartbeat","clearTimeout","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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a,GAAwD,CACjEnH,IAAK,CACDuG,aAAc,SACdC,SAAU,OACVF,UAAW,KAEfxG,IAAK,CACDyG,aAAc,SACdC,SAAU,OACVF,UAAW,MC3JZ,IAAMc,GAAqB,CAC9B,CACIC,UAAW,2BACXC,SAAU,8FAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,S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,EAAM,MAEjC2lB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFzN,KAAK,MACP0N,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACF1N,KAAK,OAEL8N,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAEjiB,KAAM,KAAMzD,MAAO,GAC7B,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,QAAW,CAAEyD,KAAM,KAAMzD,MAAO,GAChC,GAAM,CAAEyD,KAAM,KAAMzD,MAAO,GAC3B,WAAc,CAAEyD,KAAM,KAAMzD,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAEyD,KAAM,IAAKzD,MAAO,OAEtC2lB,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACFzN,KAAK,MACP0N,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,+BACA,oBACA,8CACA,8CACA,OACA,WACA,gEACA,gEACA,OACA,2IACA,2DAKA,KACF1N,KAAK,OAGE+N,GACF,QAGEC,GAAoCA,KAAA,CAC7CC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,UAAW,EACXC,SAAU,EACVC,MAAO,IACP/iB,KAAMwiB,KAIH,MAAMQ,GAUTC,YAAYC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AAUnB,UAjGeA,WACzB,IACI,MAAMG,QAAiBC,MAAM,GAAD1iC,OACrBC,aAAsB,6BACzB,CACI0iC,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBO,QAA8DT,EAASI,OAE7E,IAAKK,EAAqB,MAAO,IAAI7nB,MAAM,qBAE3Cd,EAAI,CACA2oB,sBACAM,iBAAiB,IAEvB,MAAOzd,GACLC,QAAQC,MAAM,6EAA8EF,GAC5FxL,EAAI,CACA2oB,oBAAqB,CACjBH,IAAK,CACD9pC,KAAM,UACN+oC,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBoB,iBAAiB,MAkErBE,IAEJC,oBAAqBrB,gBAEXD,EAAa,aACbW,EAAe9B,GACrB3mB,EAAI,CACAgpB,cAAc,KAGtBlB,eACAW,qBAIKY,GAAcA,IACN3C,IAAQxf,IAAA,IAAC,SAAE2hB,GAAU3hB,EAAA,OAAK2hB,KAIlCS,GAAcA,IAAM5C,GAAQ6C,WAAWV,S,cCvIpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBACA,SAEA,YACA,iBACA,iBACA,cACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,4BACA,0BACA,gBACA,oCACA,qCACA,qC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","file":"static/js/main.91e06d38.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\r\n\r\nexport const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n    frame: string,\r\n}) => [\r\n        {\r\n            value: 'fit' as const,\r\n            label: dictionary?.fit,\r\n        },\r\n        {\r\n            value: 'full' as const,\r\n            label: dictionary?.full,\r\n        },\r\n        {\r\n            value: 'frame' as const,\r\n            label: dictionary?.frame,\r\n        },\r\n    ];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxRef: React.RefObject<{\r\n        draw: (exportCanvas: HTMLCanvasElement) => void,\r\n    }>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    maximumScale: 2,\r\n    topToPendulumStructure: 210,\r\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\r\n    topToPendulumStructureFrame: 185,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    pendulumIconFrameWidth: 813,\r\n    pendulumIconFrameHeight: 100,\r\n    pendulumFrameWidth: 753,\r\n    pendulumFrameHeight: 955,\r\n    leftToPendulumStructure: 56,\r\n    cardBorder: 28,\r\n    topToEffectBox: 885,\r\n    leftToEffectBox: 54,\r\n    effectBoxWidth: 705,\r\n    effectBoxHeight: 231,\r\n    finishTypeCardWidth: 702,\r\n    finishTypeCardHeight: 200,\r\n    stickerSize: 52,\r\n    attributeSize: 77,\r\n    attributeY: 55,\r\n    attributeX: 678,\r\n    stickerX: 739.1438,\r\n    stickerY: 1110.938,\r\n    iconWidth: 43,\r\n    iconHeight: 44,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        backgroundRatio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    pendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.236,\r\n        backgroundRatio: 1.236,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'pendulumSmall' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\r\n     * Even though the image size does not change, the image frame does become larger.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     *  */\r\n    extendedPendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'extendedPendulumSmall' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\r\n     * This results a taller visible image, but shorter image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'truePendulumSmall' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\r\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumLarge: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'truePendulumLarge' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n    pendulumSize?: PendulumSize,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\r\n\r\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\r\n    if (normalizedBoundless || body < 100) {\r\n        distributionMode = isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard';\r\n    } else {\r\n        if (isPendulum) {\r\n            if (text < 100) {\r\n                distributionMode = pendulumSize === 'small'\r\n                    ? 'extendedPendulumSmall'\r\n                    : 'extendedPendulum';\r\n            } else {\r\n                if (pendulum < 100) {\r\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\r\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\r\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\r\n                } else {\r\n                    distributionMode = pendulumSize === 'small'\r\n                        ? 'pendulumSmall'\r\n                        : 'pendulum';\r\n                }\r\n            }\r\n        } else {\r\n            distributionMode = text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n        }\r\n    }\r\n\r\n    const result = CardArtCanvasCoordinateMap[distributionMode];\r\n    return {\r\n        ...result,\r\n        /** Unlike span background, frame background replace the entire frame even under the border. So frame background start from 0,0 while span background start from 28,28. */\r\n        backgroundRatio: backgroundType === 'frame'\r\n            ? 0.686\r\n            : result.backgroundRatio,\r\n    };\r\n};\r\n","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport const ART_FINISH_TYPE = 'art';\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    labelKey?: string,\r\n    tooltipKey?: string,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n    pendulumSubstituteMap: Record<string, string>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'card-border': type3CommonInstruction,\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'card-border': type8CommonInstruction,\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type10: {\r\n        value: 'type10',\r\n        label: '10',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type11: {\r\n        value: 'type11',\r\n        label: '11',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type12: {\r\n        value: 'type12',\r\n        label: '12',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'source-over', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type13: {\r\n        value: 'type13',\r\n        label: '13',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            art: [\r\n                { blendMode: 'darken', opacity: 1 },\r\n                { blendMode: 'multiply', opacity: 1 },\r\n                { blendMode: 'overlay', opacity: 1 },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n};\r\n\r\nexport const OtherFinishTypeMap = {\r\n    art: {\r\n        key: 'art' as const,\r\n        labelKey: 'input.art-finish.label',\r\n    },\r\n    background: {\r\n        key: 'background' as const,\r\n        labelKey: 'input.background.label',\r\n    },\r\n    attribute: {\r\n        key: 'attribute' as const,\r\n        labelKey: 'input.attribute.label',\r\n    },\r\n    icon: {\r\n        key: 'icon' as const,\r\n        labelKey: 'input.icon-type.icon.label',\r\n    },\r\n    sticker: {\r\n        key: 'sticker' as const,\r\n        labelKey: 'input.sticker.label',\r\n    },\r\n};\r\nexport type OtherFinish = [attribute: string, icon: string, sticker: string, background: string];\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilMap = {\r\n    normal: {\r\n        name: 'normal' as const,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    gold: {\r\n        name: 'gold' as const,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    platinum: {\r\n        name: 'platinum' as const,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        label: dictionary?.normal,\r\n        ...FoilMap.normal,\r\n    },\r\n    {\r\n        label: dictionary?.gold,\r\n        ...FoilMap.gold,\r\n    },\r\n    {\r\n        label: dictionary?.platinum,\r\n        ...FoilMap.platinum,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];\r\n\r\nexport type FrameDyeList = [\r\n    topLeft: string,\r\n    topRight: string,\r\n    bottomLeft: string,\r\n    bottomRight: string,\r\n    effect: string,\r\n    pendulumEffect: string,\r\n    foil: string,\r\n];\r\nexport const getDefaultDyeList = () => ['', '', '', '', '', '', ''] as FrameDyeList;\r\nexport const DYE_LIST_LENGTH = getDefaultDyeList().length;\r\n\r\nexport const DyeIndexMap = {\r\n    topLeftFrame: 0,\r\n    topRightFrame: 1,\r\n    bottomLeftFrame: 2,\r\n    bottomRightFrame: 3,\r\n    effectBackground: 4,\r\n    pendulumEffectBackground: 5,\r\n    foil: 6,\r\n};","import { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { WithLanguage } from 'src/service';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n];\r\nexport const ExtraAttributeList = [\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'MAGIC',\r\n        nameKey: 'input.attribute.magic',\r\n        label: 'Laugh',\r\n        color: '#1b8f83',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-1',\r\n        nameKey: 'input.attribute.boss-1',\r\n        label: 'Boss 1',\r\n        color: '#9b325d',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-2',\r\n        nameKey: 'input.attribute.boss-2',\r\n        label: 'Boss 2',\r\n        color: '#942a56',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-3',\r\n        nameKey: 'input.attribute.boss-3',\r\n        label: 'Boss 3',\r\n        color: '#86214b',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-START',\r\n        nameKey: 'input.attribute.boss-start',\r\n        label: 'Boss Start',\r\n        color: '#a13864',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n];\r\nexport const RegionMap: Record<string, { key: string, category: 'tcg' | 'ocg', fileKey: string }> = {\r\n    'jp': { key: 'jp', category: 'ocg', fileKey: 'ocg' },\r\n    'ch': { key: 'ch', category: 'ocg', fileKey: 'ch' },\r\n    'en': { key: 'en', category: 'tcg', fileKey: 'tcg' },\r\n    'fr': { key: 'fr', category: 'tcg', fileKey: 'fr' },\r\n    'de': { key: 'de', category: 'tcg', fileKey: 'de' },\r\n    'it': { key: 'it', category: 'tcg', fileKey: 'it' },\r\n    'sp': { key: 'sp', category: 'tcg', fileKey: 'sp' },\r\n};\r\nexport const DefaultFormatAttribute: Record<string, string> = {\r\n    tcg: RegionMap.en.key,\r\n    ocg: RegionMap.jp.key,\r\n};\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Normal',\r\n        value: 'NORMAL',\r\n        nameKey: 'input.icon.normal',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport type IconTypeInfo = {\r\n    value: string,\r\n    labelKey: string | ((language: WithLanguage) => React.ReactNode),\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n    isMixable: boolean,\r\n    showIcon: boolean,\r\n}\r\nexport const IconTypeMap: Record<string, IconTypeInfo> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n        isMixable: false,\r\n        showIcon: false,\r\n    },\r\n    'custom': {\r\n        value: 'custom',\r\n        labelKey: 'input.icon-type.custom.label',\r\n        fullLabelKey: 'input.icon-type.custom.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n        isMixable: false,\r\n        showIcon: false,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-icon-list.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: false,\r\n        showIcon: false,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n    },\r\n    'level-rank': {\r\n        value: 'level-rank',\r\n        labelKey: 'input.icon-type.level-rank.label',\r\n        fullLabelKey: 'input.icon-type.level-rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level-rank.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);\r\n\r\nexport const IconTypeAttributeMap: Record<string, IconTypeInfo> = {\r\n    'dark': {\r\n        value: 'dark',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.dark',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"dark-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-dark.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'earth': {\r\n        value: 'earth',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.earth',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"earth-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-earth.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'fire': {\r\n        value: 'fire',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.fire',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"fire-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-fire.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'light': {\r\n        value: 'light',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.light',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"light-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-light.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'water': {\r\n        value: 'water',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.water',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"water-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-water.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'wind': {\r\n        value: 'wind',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.wind',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"wind-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-wind.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'divine': {\r\n        value: 'divine',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.divine',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"divine-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-divine.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'spell': {\r\n        value: 'spell',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.spell',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"spell-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-spell.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'trap': {\r\n        value: 'trap',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.trap',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"trap-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-trap.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n};\r\nexport const IconTypeAttributeList = Object.values(IconTypeAttributeMap);\r\n\r\nexport const IconTypeStMap: Record<string, IconTypeInfo> = {\r\n    'continuous-l': {\r\n        value: 'continuous-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.continuous',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"continuous-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'counter-l': {\r\n        value: 'counter-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.counter',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"counter-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-counter-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'equip-l': {\r\n        value: 'equip-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.equip',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"equip-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-equip-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'field-l': {\r\n        value: 'field-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.field',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"field-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-field-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'quick-play-l': {\r\n        value: 'quick-play-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.quick-play',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"quick-play-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-quick-play-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'ritual-l': {\r\n        value: 'ritual-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.ritual',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"ritual-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-ritual-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n    'normal-l': {\r\n        value: 'normal-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.normal',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"normal-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-normal-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n    },\r\n};\r\nexport const IconTypeStList = Object.values(IconTypeStMap);\r\n\r\nexport const TotalIconTypeMap = {\r\n    ...IconTypeMap,\r\n    ...IconTypeAttributeMap,\r\n    ...IconTypeStMap,\r\n};\r\nexport const MAX_STAR_LENGTH = 13;\r\nexport const NORMAL_STAR_LENGTH = 12;","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    embossPitch: 90,\r\n    embossYaw: 90,\r\n    embossThickness: 0,\r\n    hasEmboss: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    hasEmboss: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo'\r\n| 'embossGold' | 'embossPlatinum';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n    embossGold: {\r\n        key: 'embossGold',\r\n        label: 'Embossed Gold',\r\n        image: 'asset/image/other/name-emboss-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossGold',\r\n            fillStyle: '#d09b0e',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#333333',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n    embossPlatinum: {\r\n        key: 'embossPlatinum',\r\n        label: 'Embossed Platinum',\r\n        image: 'asset/image/other/name-emboss-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossPlatinum',\r\n            fillStyle: '#c0c0c0',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#4d4d4d',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\r\nexport const PendulumSizeMap = {\r\n    small: {\r\n        key: 'small' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.small.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 95,\r\n        pendulumBoxOffsetY: 50,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 816,\r\n        artlessFrameY: 594,\r\n        fontSize: 56.5,\r\n    },\r\n    medium: {\r\n        key: 'medium' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.medium.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 147,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 792,\r\n        artlessFrameY: 553,\r\n        fontSize: 56.5,\r\n    },\r\n    large: {\r\n        key: 'large' as const,\r\n        frameType: 'text',\r\n        labelKey: 'input.pendulum-size.large.label',\r\n        effectBoxOffsetY: 27,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 180,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 808,\r\n        artlessFrameY: 553,\r\n        fontSize: 56.5,\r\n    },\r\n};\r\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\r\n\r\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\r\n    exceptionPendulumBoxOffsetHeight?: number,\r\n    exceptionFrameType?: string,\r\n}>> = {\r\n    small: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: -13,\r\n        },\r\n    },\r\n    medium: {},\r\n    large: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: 15,\r\n        },\r\n        zarc: {\r\n            exceptionFrameType: 'pendulum-large',\r\n        }\r\n    },\r\n};\r\n\r\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CardFlag = [\r\n    ShowDefAndLink: number,\r\n    LinkRating: number,\r\n];\r\n/**\r\n * Remember, 0 is ALWAYS the default state.\r\n */\r\nexport const getDefaultCardFlag = (): CardFlag => [0, 0];\r\n\r\nexport const LINK_RATING_ALWAYS_AUTO = 0;\r\nexport const LINK_RATING_ALWAYS_SHOW = 1;\r\nexport const LINK_RATING_ALWAYS_HIDE = 2;\r\n\r\nexport const FlagInfoList = [\r\n    {\r\n        index: 0,\r\n        labelKey: 'input.flag.mix-def-link',\r\n        type: 'checkbox' as const,\r\n    },\r\n    {\r\n        index: 1,\r\n        labelKey: 'input.flag.link-rating-behavior',\r\n        type: 'link-rating-behavior' as const,\r\n    },\r\n];\r\nexport const FlagIndexMap = {\r\n    showDefAndLink: 0,\r\n    linkRating: 1,\r\n};\r\nexport const FLAG_LENGTH = FlagInfoList.length;","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n    trueHeightCap?: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'tcg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'tcg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'tcg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'ocg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 951.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'ocg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n};\r\n\r\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\r\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\r\n    normal: {\r\n        small: [\r\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94, trueHeightCap: 80 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 122.6 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 155.8 },\r\n        ],\r\n    },\r\n    scaleless: {\r\n        small: [\r\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5, trueHeightCap: 79.8 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 126.1 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 155.5 },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\r\n    tcg: {\r\n        smaller: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 950.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        smaller: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 258,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    allRightSymbolOffset?: number,\r\n    bulletOffset?: number,\r\n    bulletWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    allRightSymbolOffset: 1,\r\n    bulletWidth: 23,\r\n    fontSize: 24.5,\r\n    lineHeight: 24.7,\r\n    lineCount: 6,\r\n    bulletOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport type FontDeviation = {\r\n    uniformBoxDescent?: number,\r\n};\r\nexport type FontDeviationMap = {\r\n    threshold: number,\r\n    letterMap: Record<string, FontDeviation>,\r\n}\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    letterDeviationMap?: Record<string, FontDeviationMap>,\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    vietnameseFont: string,\r\n    vietnameseFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextGapRatio: 0,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    vietnameseFont: 'Times New Roman',\r\n    vietnameseFontRatio: 1.1,\r\n};\r\nexport const DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook, Times New Roman',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"StoneSerif-Italic\", \"SVN-Times New Roman Italic\"',\r\n    vietnameseFont: '\"SVN-Times New Roman Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    vietnameseFontRatio: 1.08,\r\n    fontList: [],\r\n};\r\nexport const DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\n/**\r\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\r\n * */\r\nexport const NormalFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\r\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps, Times New Roman',\r\n            font: 'MatrixRegularSmallCaps, Times New Roman',\r\n            fontStyle: 'tcg',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.55,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix, Times New Roman',\r\n            symbolFontRatio: 0.775,\r\n            vietnameseFont: 'MatrixRegularSmallCaps',\r\n            vietnameseFontRatio: 1,\r\n            fontList: [{\r\n                bulletWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                '1': {\r\n                    threshold: 0.94,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 11 },\r\n                        ị: { uniformBoxDescent: 11 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 11 },\r\n                        e̩: { uniformBoxDescent: 11 },\r\n                        È̩: { uniformBoxDescent: 11 },\r\n                        É̩: { uniformBoxDescent: 11 },\r\n                        è̩: { uniformBoxDescent: 11 },\r\n                        Ẹ: { uniformBoxDescent: 11 },\r\n                        ẹ: { uniformBoxDescent: 11 },\r\n                        Ệ: { uniformBoxDescent: 11 },\r\n                        ệ: { uniformBoxDescent: 11 },\r\n                    },\r\n                },\r\n                '2': {\r\n                    threshold: 0,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 20 },\r\n                        ị: { uniformBoxDescent: 20 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 20 },\r\n                        e̩: { uniformBoxDescent: 20 },\r\n                        È̩: { uniformBoxDescent: 20 },\r\n                        É̩: { uniformBoxDescent: 20 },\r\n                        è̩: { uniformBoxDescent: 20 },\r\n                        Ẹ: { uniformBoxDescent: 20 },\r\n                        ẹ: { uniformBoxDescent: 20 },\r\n                        Ệ: { uniformBoxDescent: 20 },\r\n                        ệ: { uniformBoxDescent: 20 },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            fontStyle: 'tcg',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.825,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            vietnameseFont: 'Arial',\r\n            vietnameseFontRatio: 1,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            fontStyle: 'ocg',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextBold: true,\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            vietnameseFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            vietnameseFontRatio: 1,\r\n            fontList: [{\r\n                bulletWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","import {\r\n    DefaultOCGEffectFontData,\r\n    DefaultTCGEffectFontData,\r\n    DefaultTCGNormalFontData,\r\n    FontData,\r\n} from './font-data-effect';\r\n\r\n/** OCG does not have different fonts between normal and effect monsters */\r\nexport const PendulumNormalFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\r\n        ],\r\n    },\r\n};\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'ocg-small': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\r\n        ],\r\n    },\r\n    'ocg-medium': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\r\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\r\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\r\n        ],\r\n    },\r\n    'ocg-large': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\r\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\r\n        ],\r\n    },\r\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\nexport const passwordSentenceMap: Record<string, string> = {\r\n    ocg: '※デッキ構築には使用できません。',\r\n    tcg: 'This card cannot be in a Deck.',\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 49%',\r\n            'rgba(239,239,239,1) 51%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);\r\nexport const DefaultFrameInfo = FrameInfoMap['effect'];\r\n\r\nexport const FramePositionMap: Record<string, { labelKey: string }> = {\r\n    bottomLeftFrame: { labelKey: 'input.advanced-frame.name.bottom-left' },\r\n    bottomRightFrame: { labelKey: 'input.advanced-frame.name.bottom-right' },\r\n    effectBackground: { labelKey: 'input.advanced-frame.name.effect-background' },\r\n    pendulumEffectBackground: { labelKey: 'input.advanced-frame.name.pendulum-effect-background' },\r\n    frame: { labelKey: 'input.advanced-frame.name.primary' },\r\n    topLeftFrame: { labelKey: 'input.advanced-frame.name.top-left' },\r\n    topRightFrame: { labelKey: 'input.advanced-frame.name.top-right' },\r\n    foil: { labelKey: 'input.foil.label' },\r\n};","export const ArrowPositionMap = {\r\n    normal: [\r\n        { top: 175, left: 55, width: 100, height: 100 },\r\n        { top: 165, left: 323, width: 170, height: 80 },\r\n        { top: 175, left: 655, width: 100, height: 100 },\r\n        { top: 442, left: 45, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 442, left: 700, width: 70, height: 170 },\r\n        { top: 775, left: 55, width: 100, height: 100 },\r\n        { top: 810, left: 323, width: 170, height: 80 },\r\n        { top: 775, left: 655, width: 100, height: 100 },\r\n    ],\r\n    pendulum: [\r\n        { top: 169, left: 11, width: 100, height: 100 },\r\n        { top: 159, left: 323, width: 170, height: 80 },\r\n        { top: 169, left: 699, width: 100, height: 100 },\r\n        { top: 572, left: 1, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 572, left: 744, width: 70, height: 170 },\r\n        { top: 1054, left: 11, width: 100, height: 100 },\r\n        { top: 1093, left: 323, width: 170, height: 80 },\r\n        { top: 1054, left: 699, width: 100, height: 100 },\r\n    ],\r\n};\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\r\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\r\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-ＺÀ-Ö]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\n/** \r\n * Beside usual alphabet letter and number, we try to support accented letters and Japanese's version of alphabet too.\r\n * * Latin-1 Supplement block, without arithmetic symbol such as × and ÷\r\n * * Latin Extended-A\r\n * * Latin Extended-B\r\n * * Latin Extended Additional\r\n * \r\n * Multiple letter that is not used in normal word but have appear in YGO card is also included such as ∞.\r\n */\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９À-ÖÙ-öù-ÿĀ-žƀ-ɏḀ-ỿ!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const VIETNAMESE_DIACRITIC_LETTER = '[ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễếệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]';\r\nexport const VietnameseDiacriticLetterRegex = new RegExp(VIETNAMESE_DIACRITIC_LETTER);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_FULL_LINE_OPEN = '᚛';\r\nexport const NB_FULL_LINE_CLOSE = '᚜';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const FULL_LINE_PLACEHOLDER = '⸦⸧';\r\nexport const FLAVOR_LINE_PLACEHOLDER = '⸦⸦⸧⸧';\r\n\r\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\r\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\n/** Additional symbol including\r\n * * Greek Extended \r\n * * Greek and Coptic\r\n */\r\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞Ͱ-Ͽἀ-῾';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil, getDefaultDyeList, OtherFinish } from './foil-finish-dye';\r\nimport { CondenseType } from './condense';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\r\nimport { getDefaultCardFlag } from './flag';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\n/**\r\n * Check following things when adding new attributes:\r\n * * Default card and empty card\r\n * * Convert codec\r\n * * Shorten codec\r\n * * Card thumb\r\n * * Legacy version\r\n * * Import / export\r\n */\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    region: 'en',\r\n    frame: 'fusion',\r\n    leftFrame: 'auto',\r\n    rightFrame: 'auto',\r\n    pendulumRightFrame: 'auto',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    otherFinish: ['normal', 'normal', 'normal', 'normal'] as OtherFinish,\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    starList: [] as string[],\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    linkRating: '',\r\n    isLink: false as boolean | null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    flag: getDefaultCardFlag(),\r\n    dyeList: getDefaultDyeList(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    region: 'en',\r\n    /** Why we split frame and left frame here? Because there is more nuance to the card other than individual frames, for example name bevel, border bevel, effect bevel etc..., so \"frame\" here is a kind of \"main frame\" that dictates all those nuance, why the actual card background is constructed from those 4 corner frames. */\r\n    frame: 'effect',\r\n    leftFrame: 'auto',\r\n    rightFrame: 'auto',\r\n    pendulumRightFrame: 'auto',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    otherFinish: ['normal', 'normal', 'normal', 'normal'],\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starList: [] as string[],\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    linkRating: '',\r\n    isLink: null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    dyeList: getDefaultDyeList(),\r\n    flag: getDefaultCardFlag(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport const ResolutionMap = {\r\n    '549x800': {\r\n        label: '549 × 800',\r\n        width: 549,\r\n        height: 800,\r\n        scale: 1,\r\n        settingValue: [549, 800] as [number, number],\r\n    },\r\n    '561x818': {\r\n        label: '561 × 818',\r\n        width: 561,\r\n        height: 818,\r\n        scale: 1,\r\n        settingValue: [561, 818] as [number, number],\r\n    },\r\n    '813x1185': {\r\n        label: '813 × 1185',\r\n        width: 813,\r\n        height: 1185,\r\n        scale: 1,\r\n        settingValue: [813, 1185] as [number, number],\r\n    },\r\n    '1122x1636': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\r\n        width: 1122,\r\n        height: 1636,\r\n        scale: 2,\r\n        settingValue: [1122, 1636] as [number, number],\r\n    },\r\n    '1388x2026': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\r\n        width: 1388,\r\n        height: 2026,\r\n        scale: 2,\r\n        settingValue: [1388, 2026] as [number, number],\r\n    },\r\n    '1626x2370': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\r\n        width: 1626,\r\n        height: 2370,\r\n        scale: 2,\r\n        settingValue: [1626, 2370] as [number, number],\r\n    },\r\n};\r\nexport const ResolutionList = [\r\n    ResolutionMap['549x800'],\r\n    ResolutionMap['561x818'],\r\n    ResolutionMap['813x1185'],\r\n    ResolutionMap['1122x1636'],\r\n    ResolutionMap['1388x2026'],\r\n    ResolutionMap['1626x2370'],\r\n];\r\n\r\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\r\nexport const ExportFormatList = [\r\n    {\r\n        value: 'csv' as const,\r\n        label: '.csv',\r\n    },\r\n    {\r\n        value: 'xlsx' as const,\r\n        label: '.xlsx',\r\n    },\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './condense';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './flag';\r\nexport * from './foil-finish-dye';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './font-data-pendulum-effect';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './pendulum';\r\nexport * from './regex';","import { CanvasConst } from 'src/model';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n} = CanvasConst;\r\n\r\nexport const createCanvas = (width = cardWidth, height = cardHeight) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    return {\r\n        canvas,\r\n        ctx,\r\n    };\r\n};","import ndarray, { NdArray } from 'ndarray';\r\nimport ops from 'ndarray-ops';\r\nimport pool from 'typedarray-pool';\r\nimport phase2_1 from 'distance-transform/lib/p1';\r\nimport phase2_2 from 'distance-transform/lib/p2';\r\nimport phase2_inf from 'distance-transform/lib/pinf';\r\nimport phase2_p from 'distance-transform/lib/pp';\r\n\r\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\r\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\r\n    for (i = 0; i < rowCount; ++i) {\r\n        nextPoint = array[ptr++];\r\n        for (j = 1; j < colCount; ++j) {\r\n            nextPoint = min(array[ptr], nextPoint + 1);\r\n            array[ptr++] = nextPoint;\r\n        }\r\n        for (j = 0; j < colCount; ++j) {\r\n            nextPoint = min(array[--ptr], nextPoint + 1);\r\n            array[ptr] = nextPoint;\r\n        }\r\n        ptr += colCount;\r\n    }\r\n}\r\n\r\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\r\n    var dimensionCount = array.shape.length,\r\n        shape = array.shape.slice(0),\r\n        stride = new Array(dimensionCount),\r\n        size = 1,\r\n        stackSize = 0,\r\n        infinityHeight = 0,\r\n        index: number,\r\n        j: number,\r\n        n: number,\r\n        strideList: number[],\r\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\r\n        currentDimensionSize: number;\r\n    exponent = exponent || 2;\r\n    for (index = dimensionCount - 1; index >= 0; --index) {\r\n        stride[index] = size;\r\n        size *= shape[index];\r\n        infinityHeight += shape[index];\r\n        stackSize = Math.max(stackSize, shape[index]);\r\n    }\r\n\r\n    // Allocate scratch buffers\r\n    var phase2ResultAllocation = pool.mallocDouble(size),\r\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\r\n        s_q = pool.mallocUint32(stackSize),\r\n        t_q = pool.mallocUint32(stackSize);\r\n\r\n    /**\r\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\r\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\r\n     * */\r\n    var phase1ResultAllocation = pool.mallocDouble(size),\r\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\r\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\r\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\r\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\r\n        }\r\n    }\r\n    //Perform first phase of distance transform\r\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\r\n\r\n    //Second passes\r\n    for (index = dimensionCount - 1; index > 0; --index) {\r\n        strideList = phase2ResultArray.stride;\r\n        n = 1;\r\n        for (j = index - 1; j < dimensionCount; ++j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        for (j = index - 2; j >= 0; --j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        ops.assign(phase2ResultArray, phase1ResultArray);\r\n\r\n        //Execute phase 2\r\n        currentDimensionSize = shape[index - 1];\r\n        if (!isFinite(exponent)) {\r\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 1) {\r\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 2) {\r\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent < 1) {\r\n            throw new Error('Values of exponent < 1 are not supported');\r\n        } else {\r\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\r\n        }\r\n\r\n        //Swap buffers\r\n        tmp = phase1ResultArray;\r\n        phase1ResultArray = phase2ResultArray;\r\n        phase2ResultArray = tmp;\r\n    }\r\n\r\n    //Copy phase1ResultArray to result\r\n    ops.assign(array, phase1ResultArray);\r\n\r\n    pool.freeDouble(phase1ResultAllocation);\r\n    pool.freeDouble(phase2ResultAllocation);\r\n    pool.freeUint32(s_q);\r\n    pool.freeUint32(t_q);\r\n    return array;\r\n}","import { CanvasConst } from 'src/model';\r\nimport { createCanvas } from './create';\r\nimport { HexColorRegex } from '..';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n} = CanvasConst;\r\nexport const dyeCanvas = (baseCanvas: HTMLCanvasElement, color: string, width = cardWidth, height = cardHeight) => {\r\n    if (!HexColorRegex.test(color)) return {\r\n        canvas: baseCanvas,\r\n        ctx: baseCanvas.getContext('2d'),\r\n    };\r\n\r\n    const { ctx: overlayContext, canvas: overlayCanvas } = createCanvas(width, height);\r\n\r\n    /** Draw the target image with grayscale */\r\n    overlayContext.filter = 'grayscale(1)';\r\n    overlayContext.drawImage(baseCanvas, 0, 0);\r\n    overlayContext.filter = 'none';\r\n\r\n    /** Overlay the color lens on top the grayscale layer to dye it */\r\n    overlayContext.fillStyle = color;\r\n    overlayContext.globalCompositeOperation = 'overlay';\r\n    overlayContext.fillRect(0, 0, cardWidth, cardHeight);\r\n\r\n    /** Draw the target image again but with destination-in mode to remove excess area */\r\n    overlayContext.globalCompositeOperation = 'destination-in';\r\n    overlayContext.drawImage(baseCanvas, 0, 0);\r\n    overlayContext.globalCompositeOperation = 'source-over';\r\n\r\n    return {\r\n        canvas: overlayCanvas,\r\n        ctx: overlayCanvas.getContext('2d'),\r\n    };\r\n};","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\n\r\nconst HorizontalBlurShader = {\r\n    uniforms: {\r\n        'tDiffuse': { type: 't', value: null },\r\n        'h': { type: 'f', value: 3.0 / 512.0 }\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float h;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float lef4 = vUv.x - 4.0 * h;',\r\n        'float lef3 = vUv.x - 3.0 * h;',\r\n        'float lef2 = vUv.x - 2.0 * h;',\r\n        'float lef1 = vUv.x - 1.0 * h;',\r\n        'float rig1 = vUv.x + 1.0 * h;',\r\n        'float rig2 = vUv.x + 2.0 * h;',\r\n        'float rig3 = vUv.x + 3.0 * h;',\r\n        'float rig4 = vUv.x + 4.0 * h;',\r\n\r\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\r\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\r\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\r\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\r\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\r\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\r\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\r\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\r\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\r\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\r\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\r\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\r\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\r\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\r\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\r\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\r\n        'if (h > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n        //\"gl_FragColor = vec4(1,0,0,1);\",\r\n\r\n        '}'\r\n    ].join('\\n')\r\n};\r\nconst VerticalBlurShader = {\r\n    uniforms: {\r\n        tDiffuse: { type: 't', value: null },\r\n        v: { type: 'f', value: 3.0 / 512.0 },\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float v;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float top4 = vUv.y - 4.0 * v;',\r\n        'float top3 = vUv.y - 3.0 * v;',\r\n        'float top2 = vUv.y - 2.0 * v;',\r\n        'float top1 = vUv.y - 1.0 * v;',\r\n        'float bot1 = vUv.y + 1.0 * v;',\r\n        'float bot2 = vUv.y + 2.0 * v;',\r\n        'float bot3 = vUv.y + 3.0 * v;',\r\n        'float bot4 = vUv.y + 4.0 * v;',\r\n\r\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\r\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\r\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\r\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\r\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\r\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\r\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\r\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\r\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\r\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\r\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\r\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\r\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\r\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\r\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\r\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\r\n        'if (v > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n};\r\nconst NormalMapShader = {\r\n    uniforms: {\r\n        'type': { type: '1i', value: 0 },\r\n        'invertR': { type: '1f', value: 1 },\r\n        'invertG': { type: '1f', value: 1 },\r\n        'invertH': { type: '1f', value: 1 },\r\n        'dz': { type: '1f', value: 0 },\r\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\r\n        'tHeightMap': { type: 't', value: null }\r\n    },\r\n    vertexShader: [\r\n        'precision mediump float;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform vec3 dimensions;',\r\n        'void main() {',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\r\n        'vUv = uv;',\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'precision mediump float;',\r\n        'uniform vec3 dimensions;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform float dz;',\r\n        'uniform float invertR;',\r\n        'uniform float invertG;',\r\n        'uniform float invertH;',\r\n        'uniform int type;',\r\n        'uniform sampler2D tHeightMap;',\r\n\r\n        'void main(void) {',\r\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\r\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\r\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\r\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\r\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\r\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\r\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\r\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\r\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\r\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\r\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\r\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\r\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\r\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\r\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\r\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\r\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\r\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\r\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\r\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\r\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\r\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\r\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\r\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\r\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\r\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\r\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\r\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\r\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\r\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\r\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\r\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\r\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\r\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\r\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\r\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\r\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\r\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\r\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\r\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\r\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\r\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\r\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\r\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\r\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\r\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\r\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\r\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\r\n        '   float dx = 0.0, dy = 0.0;',\r\n        '   if(type == 0){',\t// Sobel\r\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\r\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\r\n        '   }',\r\n        '   else{',\t\t\t\t// Scharr\r\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\r\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\r\n        '   }',\r\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\r\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\r\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\r\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\r\n        '}'\r\n    ].join('\\n')\r\n};\r\n\r\nexport const SHADER_FILTER_TYPE = {\r\n    SOBEL: 'sobel' as const,\r\n    SCHARR: 'scharr' as const,\r\n};\r\nexport const getDefaultHeightToNormalMapOption = () => ({\r\n    invertedRed: false,\r\n    invertedGreen: false,\r\n    invertedSource: false,\r\n    blurSharp: 0,\r\n    strength: 1,\r\n    level: 8.5,\r\n    type: SHADER_FILTER_TYPE.SOBEL,\r\n});\r\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\r\n\r\nexport class HeightToNormalMap {\r\n    renderer: THREE.WebGLRenderer;\r\n    effectComposer: EffectComposer;\r\n    normalMapUniform: typeof NormalMapShader['uniforms'];\r\n    material: THREE.ShaderMaterial;\r\n    option: Required<HeightToNormalMapOption>;\r\n    canvas!: HTMLCanvasElement;\r\n    gaussianShaderX!: ShaderPass;\r\n    gaussianShaderY!: ShaderPass;\r\n\r\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\r\n        this.canvas = resultCanvas;\r\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\r\n        this.init();\r\n    }\r\n\r\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\r\n        const { width, height } = image;\r\n        const texture = this.getTexture(image);\r\n        this.normalMapUniform.tHeightMap.value = texture;\r\n        this.normalMapUniform.dimensions.value = [width, height, 0];\r\n        this.renderer.setSize(width, height);\r\n        this.effectComposer.setSize(width, height);\r\n        this.effectComposer.reset(this.getRenderTarget(width, height));\r\n\r\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\r\n            ...this.option,\r\n            ...option,\r\n        };\r\n\r\n        this.invertRed(invertedRed);\r\n        this.invertGreen(invertedGreen);\r\n        this.invertSource(invertedSource);\r\n        this.setBlurSharp(blurSharp, width, height);\r\n        this.setStrengthAndLevel(strength, level);\r\n        this.setType(type);\r\n\r\n        this.effectComposer.render(1 / 60);\r\n    }\r\n\r\n    init() {\r\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\r\n        const scene = new THREE.Scene();\r\n        const normalRenderScene = new RenderPass(scene, camera);\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\r\n        this.renderer.setClearColor(0x000000, 0); // the default\r\n\r\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\r\n\r\n        this.material = new THREE.ShaderMaterial({\r\n            fragmentShader: NormalMapShader.fragmentShader,\r\n            vertexShader: NormalMapShader.vertexShader,\r\n            uniforms: this.normalMapUniform,\r\n        });\r\n        this.material.transparent = true;\r\n\r\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\r\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\r\n        scene.add(renderMesh);\r\n\r\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\r\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\r\n        this.gaussianShaderX.renderToScreen = true;\r\n\r\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\r\n        this.effectComposer.addPass(normalRenderScene);\r\n        this.effectComposer.addPass(this.gaussianShaderY);\r\n        this.effectComposer.addPass(this.gaussianShaderX);\r\n    }\r\n    getRenderTarget(width?: number, height?: number) {\r\n        return new THREE.WebGLRenderTarget(width, height, {\r\n            minFilter: THREE.NearestFilter,\r\n            magFilter: THREE.NearestFilter,\r\n            format: THREE.RGBAFormat,\r\n            stencilBuffer: false,\r\n        });\r\n    }\r\n    getTexture(image: TexImageSource) {\r\n        const texture = new THREE.Texture(image);\r\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\r\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\r\n        texture.anisotropy = 2;\r\n        texture.needsUpdate = true;\r\n        return texture;\r\n    }\r\n\r\n    invertRed(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertR.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertR.value = 1;\r\n        }\r\n    }\r\n\r\n    invertGreen(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertG.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertG.value = 1;\r\n        }\r\n    }\r\n\r\n    invertSource(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertH.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertH.value = 1;\r\n        }\r\n    }\r\n\r\n    setBlurSharp(value: number, width: number, height: number) {\r\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\r\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\r\n    }\r\n\r\n    setStrengthAndLevel(strength: number, level: number) {\r\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\r\n    }\r\n\r\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\r\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\r\n    }\r\n}","// import distanceTransform from 'distance-transform';\r\nimport ndarray from 'ndarray';\r\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\r\nimport { bilateralFilter } from './bilateral-filter';\r\nimport { distanceTransform } from './distance-transform';\r\n\r\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\r\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\r\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\r\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const z = Math.sin(verticalAngleRadian);\r\n\r\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\r\n};\r\nexport const applyEmboss = ({\r\n    inputCanvas,\r\n    affectedHeight,\r\n    affectedWidth,\r\n    maxHeight = 8,\r\n    lightColorVec = [255, 255, 255],\r\n    /** Shine parallel with the surface, from rightside. */\r\n    lightAngleVec,\r\n    lightPitch,\r\n    lightYaw,\r\n    minIntensity = -1,\r\n    maxIntensity = 1,\r\n}: {\r\n    inputCanvas: HTMLCanvasElement,\r\n    affectedWidth?: number,\r\n    affectedHeight?: number,\r\n    maxHeight?: number,\r\n    lightColorVec?: [number, number, number],\r\n    lightAngleVec?: [number, number, number],\r\n    lightPitch?: number,\r\n    lightYaw?: number,\r\n    minIntensity?: number,\r\n    maxIntensity?: number,\r\n}) => {\r\n    const ctx = inputCanvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    /** Support partial transform to increase transform speed and reduce stuttering */\r\n    const height = affectedHeight ?? inputCanvas.height;\r\n    const width = affectedWidth ?? inputCanvas.width;\r\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\r\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\r\n    const data = imageData.data;\r\n\r\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\r\n        ? lightAngleVec\r\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\r\n            ? angleToVector(lightPitch, lightYaw)\r\n            : [1, 0, 0];\r\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\r\n    const normalizedLightAngleVec = [\r\n        computedLightAngleVec[0] / angleVecMagnitude,\r\n        computedLightAngleVec[1] / angleVecMagnitude,\r\n        computedLightAngleVec[2] / angleVecMagnitude\r\n    ];\r\n\r\n    if (!data) return;\r\n\r\n    try {\r\n        /**\r\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\r\n         */\r\n        /** Any pixel that is not transparent will be the foreground. */\r\n        const validPixelList = new Uint8ClampedArray(width * height);\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\r\n                validPixelList[i / 4] = 0;\r\n            } else {\r\n                validPixelList[i / 4] = 1;\r\n            }\r\n        }\r\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\r\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\r\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\r\n\r\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\r\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\r\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\r\n            for (let colIndex = 0; colIndex < column; colIndex++) {\r\n                const currentIndex = (rowIndex * width + colIndex) * 4;\r\n                const heightValue = dtImageData.get(rowIndex, colIndex);\r\n\r\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\r\n            }\r\n        }\r\n\r\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\r\n        const heightmapCanvas = document.createElement('canvas');\r\n        heightmapCanvas.width = width;\r\n        heightmapCanvas.height = height;\r\n        heightmapCanvas.getContext('2d').putImageData(\r\n            new ImageData(nextDtBitmap, width, height),\r\n            0,\r\n            0,\r\n        );\r\n\r\n        /**\r\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\r\n         */\r\n        const normalMapCanvas = document.createElement('canvas');\r\n        normalMapCanvas.width = width;\r\n        normalMapCanvas.height = height;\r\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\r\n        heightToNormalMapConverter.apply(heightmapCanvas, {\r\n            blurSharp: 0,\r\n            level: 9,\r\n            strength: 2.5,\r\n            invertedRed: false,\r\n            invertedGreen: false,\r\n            invertedSource: true,\r\n            type: SHADER_FILTER_TYPE.SOBEL,\r\n        });\r\n\r\n        /**\r\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\r\n         */\r\n        const softenNormalMapCanvas = document.createElement('canvas');\r\n        softenNormalMapCanvas.width = width;\r\n        softenNormalMapCanvas.height = height;\r\n\r\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\r\n        softenNormalMapContext.drawImage(\r\n            normalMapCanvas,\r\n            0,\r\n            0,\r\n            width,\r\n            height,\r\n        );\r\n        const filteredData = bilateralFilter(\r\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\r\n            width,\r\n            height,\r\n            9,\r\n            70,\r\n            20,\r\n        );\r\n\r\n        /**\r\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\r\n         * \r\n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\r\n         */\r\n        const resultData = new Uint8ClampedArray(width * height * 4);\r\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\r\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\r\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\r\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\r\n            const baseIntensity = nx * normalizedLightAngleVec[0]\r\n                + ny * normalizedLightAngleVec[1]\r\n                + nz * normalizedLightAngleVec[2];\r\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\r\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\r\n\r\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\r\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\r\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\r\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\r\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\r\n        }\r\n\r\n        return new ImageData(resultData, width, height);\r\n    } catch (e) {\r\n        console.error('Could not apply emboss effect', e);\r\n        return null;\r\n    }\r\n};","export const bilateralFilter = (\r\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n    diameter: number,\r\n    sigmaColor: number,\r\n    sigmaSpace: number,\r\n) => {\r\n    const output = new Uint8ClampedArray(width * height * 4);\r\n    const halfD = Math.floor(diameter / 2);\r\n\r\n    // Helper function to calculate the Gaussian weight for spatial distance\r\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\r\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\r\n    }\r\n\r\n    // Helper function to calculate the Gaussian weight for color distance\r\n    function colorWeight(c1: number, c2: number) {\r\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\r\n    }\r\n\r\n    // Loop through each pixel in the image\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\r\n\r\n            // Apply the filter to a local neighborhood around the current pixel\r\n            for (let ky = -halfD; ky <= halfD; ky++) {\r\n                for (let kx = -halfD; kx <= halfD; kx++) {\r\n                    const nx = x + kx;\r\n                    const ny = y + ky;\r\n\r\n                    // Check if the neighbor is within the image bounds\r\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\r\n                        const centerPixel = (y * width + x) * 4;\r\n                        const neighborPixel = (ny * width + nx) * 4;\r\n\r\n                        // Get the color values for the center pixel and the neighbor pixel\r\n                        const rCenter = imageData[centerPixel];\r\n                        const gCenter = imageData[centerPixel + 1];\r\n                        const bCenter = imageData[centerPixel + 2];\r\n                        const rNeighbor = imageData[neighborPixel];\r\n                        const gNeighbor = imageData[neighborPixel + 1];\r\n                        const bNeighbor = imageData[neighborPixel + 2];\r\n\r\n                        // Compute spatial and color weights\r\n                        const spatial = spatialWeight(nx, ny, x, y);\r\n                        const colorR = colorWeight(rCenter, rNeighbor);\r\n                        const colorG = colorWeight(gCenter, gNeighbor);\r\n                        const colorB = colorWeight(bCenter, bNeighbor);\r\n\r\n                        const weight = spatial * colorR * colorG * colorB;\r\n\r\n                        // Accumulate weighted sum of colors\r\n                        rSum += rNeighbor * weight;\r\n                        gSum += gNeighbor * weight;\r\n                        bSum += bNeighbor * weight;\r\n                        wSum += weight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize the result and assign it to the output image\r\n            const outputPixel = (y * width + x) * 4;\r\n            output[outputPixel] = rSum / wSum;\r\n            output[outputPixel + 1] = gSum / wSum;\r\n            output[outputPixel + 2] = bSum / wSum;\r\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\r\n        }\r\n    }\r\n\r\n    return output;\r\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\nexport const generateLayer = (\r\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n    exportCtx: CanvasRenderingContext2D | null | undefined,\r\n    delayQueue: number = 0,\r\n) => {\r\n    return new Promise<boolean>(resolve => {\r\n        setTimeout(() => {\r\n            if (!canvasLayer.current || !exportCtx) resolve(false);\r\n            else {\r\n                try {\r\n                    canvasLayer.current.toBlob(blob => {\r\n                        if (!blob) resolve(false);\r\n                        else {\r\n                            const url = URL.createObjectURL(blob);\r\n                            if (!url) resolve(false);\r\n                            else {\r\n                                const layer = new Image();\r\n                                layer.src = url;\r\n                                layer.onload = () => {\r\n                                    exportCtx.drawImage(layer, 0, 0);\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(true);\r\n                                };\r\n                                layer.onerror = () => {\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(false);\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n                } catch (e) {\r\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\r\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\r\n                    console.error(e);\r\n                    resolve(false);\r\n                }\r\n            }\r\n        }, delayQueue * 25);\r\n    });\r\n};","import {\r\n    Card,\r\n    Foil,\r\n    frameList,\r\n    LINK_RATING_ALWAYS_AUTO,\r\n    LINK_RATING_ALWAYS_HIDE,\r\n    LINK_RATING_ALWAYS_SHOW,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PresetNameStyleMap,\r\n} from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink === true;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\r\n    return [\r\n        'fusion',\r\n        'synchro',\r\n        'xyz',\r\n        'link',\r\n        'dark-synchro',\r\n        'zarc',\r\n    ].includes(card.frame);\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFooter = (frame: string) => {\r\n    return ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link'].includes(frame) || checkLightFooter(frame);\r\n};\r\n\r\nexport const checkDiplayLinkRating = (displayMode: number, isLink: boolean) => {\r\n    let showLinkRating = false;\r\n    switch (displayMode) {\r\n        case LINK_RATING_ALWAYS_SHOW: showLinkRating = true; break;\r\n        case LINK_RATING_ALWAYS_HIDE: showLinkRating = false; break;\r\n        case LINK_RATING_ALWAYS_AUTO: showLinkRating = isLink; break;\r\n    }\r\n\r\n    return showLinkRating;\r\n};\r\n\r\nexport const resolveFrameStyle = (frameData: Record<string, string | undefined>, isPendulum: boolean) => {\r\n    const {\r\n        frame,\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    } = frameData;\r\n    const resolvedFrame = frame ?? 'effect';\r\n    const resolvedTopLeft = topLeftFrame === 'auto' ? resolvedFrame : topLeftFrame;\r\n    const resolvedTopRight = (topRightFrame === 'auto' ? resolvedTopLeft : topRightFrame) ?? resolvedFrame;\r\n    const resolvedBottomLeft = (bottomLeftFrame === 'auto'\r\n        ? (isPendulum ? 'spell' : resolvedTopLeft)\r\n        : bottomLeftFrame) ?? resolvedFrame;\r\n    const resolvedBottomRight = (bottomRightFrame === 'auto'\r\n        ? resolvedBottomLeft\r\n        : bottomRightFrame) ?? resolvedFrame;\r\n    const resolvedEffectBackground = (effectBackground === 'auto'\r\n        ? resolvedBottomLeft\r\n        : effectBackground) ?? resolvedFrame;\r\n    const resolvedPendulumEffectBackground = (pendulumEffectBackground === 'auto'\r\n        ? resolvedBottomLeft\r\n        : pendulumEffectBackground) ?? resolvedFrame;\r\n\r\n    return {\r\n        topLeftFrame: resolvedTopLeft,\r\n        topRightFrame: resolvedTopRight,\r\n        bottomLeftFrame: resolvedBottomLeft,\r\n        bottomRightFrame: resolvedBottomRight,\r\n        effectBackground: resolvedEffectBackground,\r\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\r\n    };\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { ART_FINISH_TYPE, RegionMap, Card, CardFlag, FrameDyeList, getDefaultCardFlag, getDefaultCardOpacity, getDefaultCrop, getDefaultDyeList, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkMonster } from './categorize';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    region: 'rg',\r\n    frame: 'fr',\r\n    rightFrame: 'rf',\r\n    leftFrame: 'lf',\r\n    pendulumRightFrame: 'rpf',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    otherFinish: 'of',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        fontStyle: 'efs',\r\n        upSize: 'eus',\r\n        background: 'ebg',\r\n        minLine: 'eml',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        fontStyle: 'pfs',\r\n        upSize: 'pus',\r\n        background: 'pbg',\r\n        minLine: 'pml',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        embossPitch: 'nsep',\r\n        embossThickness: 'nset',\r\n        embossYaw: 'nsey',\r\n        fillStyle: 'nsfs',\r\n        font: 'nsft',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasEmboss: 'nshe',\r\n        hasGradient: 'nshg',\r\n        hasOutline: 'nshl',\r\n        hasShadow: 'nshs',\r\n        headTextFillStyle: 'nshfs',\r\n        lineColor: 'nslc',\r\n        lineOffsetX: 'nslox',\r\n        lineOffsetY: 'nsloy',\r\n        lineWidth: 'nslw',\r\n        pattern: 'nspt',\r\n        preset: 'nspr',\r\n        shadowBlur: 'nssb',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetX: 'nssox',\r\n        shadowOffsetY: 'nssoy',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    starList: 'stl',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    linkRating: 'lr',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    pendulumSize: 'psi',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    dyeList: 'dl',\r\n    flag: 'fl',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const decompressedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                decompressedCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return decompressedCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const unshortenedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return unshortenedCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let rebuiltCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        rebuiltCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        rebuiltCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(rebuiltCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    /** Ensure that we detech the actual version from incoming cards. */\r\n    delete baseCard.version;\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    } else {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n            ...migratedCard.pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.region == null) migratedCard.region = RegionMap[migratedCard.format === 'tcg' ? 'en' : 'jp'].key;\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\r\n    if (migratedCard.rightFrame == null) migratedCard.rightFrame = 'auto';\r\n    if (migratedCard.leftFrame == null) migratedCard.leftFrame = 'auto';\r\n    if (migratedCard.pendulumRightFrame == null) migratedCard.pendulumRightFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n    if (!Array.isArray(migratedCard.starList)) migratedCard.starList = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if (migratedCard.finish) {\r\n        const finishList = migratedCard.finish;\r\n\r\n        if (finishList.includes(ART_FINISH_TYPE)) {\r\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\r\n            migratedCard.otherFinish = [\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n            ];\r\n        }\r\n    }\r\n    if (Array.isArray(migratedCard.otherFinish)\r\n        && ((migratedCard.otherFinish as unknown[]).length === 3 || migratedCard.otherFinish[3] == null)\r\n    ) {\r\n        migratedCard.otherFinish[3] = getEmptyCard().otherFinish[3];\r\n    }\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n    migratedCard.backgroundCrop = {\r\n        ...getDefaultCrop(),\r\n        ...migratedCard.backgroundCrop,\r\n    };\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n    if (migratedCard.linkRating == null) migratedCard.linkRating = '';\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    const defaultFlagList = getDefaultCardFlag();\r\n    if (!Array.isArray(migratedCard.flag)) migratedCard.flag = defaultFlagList;\r\n    else if (migratedCard.flag.length < defaultFlagList.length) {\r\n        const currentFlagList = [...migratedCard.flag];\r\n        migratedCard.flag = defaultFlagList.map((entry, index) => {\r\n            if (typeof currentFlagList[index] === 'number') return currentFlagList[index];\r\n            return entry;\r\n        }) as CardFlag;\r\n    }\r\n\r\n    const defaultDyeList = getDefaultDyeList();\r\n    if (!Array.isArray(migratedCard.dyeList)) migratedCard.dyeList = defaultDyeList;\r\n    else if (migratedCard.dyeList.length < defaultDyeList.length) {\r\n        const currentDyeList = [...migratedCard.dyeList];\r\n        migratedCard.dyeList = defaultDyeList.map((entry, index) => {\r\n            if (typeof currentDyeList[index] === 'string') return currentDyeList[index];\r\n            return entry;\r\n        }) as FrameDyeList;\r\n    }\r\n\r\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\r\n        migratedCard.version = 2;\r\n\r\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\r\n        /**\r\n         * For older card, we have a detailed check to decide whether to display stats or not.\r\n         * \r\n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\r\n         */\r\n        const isMonster = checkMonster({ frame });\r\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n            ? !!(atk || def || (isLink && linkMap.length))\r\n            : isMonster;\r\n\r\n        if (!statInEffect) {\r\n            migratedCard.atk = '';\r\n            migratedCard.def = '';\r\n        }\r\n    }\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name\r\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect\r\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n    const href = window.URL.createObjectURL(blob);\r\n\r\n    link.download = name;\r\n    link.href = href;\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n    window.URL.revokeObjectURL(href);\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const setCharAt = (str: string, index: number, chr: string) => {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n};\r\n\r\nexport const filterFromTrail = (list: (string | undefined | null)[]) => {\r\n    const nextList = [...list];\r\n    for (let cnt = list.length - 1; cnt >= 0; cnt--) {\r\n        if (nextList[cnt] == null || nextList[cnt] === '') {\r\n            nextList.pop();\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return nextList;\r\n};\r\n\r\nexport const padRight = (list: (string | undefined | null)[], limit: number, padUnit = '') => {\r\n    const nextList = [...list];\r\n    for (let cnt = list.length; cnt < limit; cnt++) {\r\n        nextList.push(padUnit);\r\n    }\r\n\r\n    return nextList;\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n    PendulumSize,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst boxSizeMap: Record<string, string> = {\r\n    large: 'Large',\r\n    medium: 'Normal',\r\n    small: 'Small',\r\n};\r\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue as PendulumSize;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: boxSizeMap[pendulumSize],\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { checkExtraDeckMonster } from './categorize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\r\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\r\n    /** Try to being clever */\r\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\r\n    const formattedMonsterEffect = (checkExtraDeckMonster({\r\n        frame: normalizedFrame ?? 'normal'\r\n    }) && splittedMonsterEffect.length > 1)\r\n        ? [\r\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\r\n            ...splittedMonsterEffect.slice(1),\r\n        ].join('\\n')\r\n        : normalizedMonsterEffect;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: formattedMonsterEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\r\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","export const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Contrast formula from google \\ :v / */\r\nexport const getContrastColor = (rgbColor: number[]) => {\r\n    return ((rgbColor[0] ?? 0) * 299 + (rgbColor[1] ?? 0) * 587 + (rgbColor[2] ?? 0) * 114) / 1000 >= 128\r\n        ? '#000000'\r\n        : '#FFFFFF';\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};\r\n\r\nexport const getDynamicFont = ({\r\n    heightCap,\r\n    lineCount,\r\n}: {\r\n    heightCap: number,\r\n    lineCount: number,\r\n}): FontSizeData => {\r\n    return {\r\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\r\n        fontSize: heightCap / lineCount * 0.9,\r\n        lineHeight: heightCap / lineCount,\r\n        lineCount,\r\n        bulletOffset: 1,\r\n    };\r\n};\r\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: [\r\n            ...fontData.fontList,\r\n            getDynamicFont(dynamicFontOption),\r\n        ]\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\r\n\r\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\r\n    const {\r\n        trueBaseline,\r\n        trueEdge,\r\n        trueWidth,\r\n        trueHeightCap,\r\n    } = coordinateData;\r\n\r\n    return {\r\n        ...coordinateData,\r\n        trueBaseline: trueBaseline * scale,\r\n        trueEdge: trueEdge * scale,\r\n        trueWidth: trueWidth * scale,\r\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\r\n    };\r\n};\r\n\r\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\r\n    return coordinate.map(value => value * scale) as [number, number, number, number];\r\n};\r\n\r\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\r\n    fontSizeData: FontData,\r\n    scale: number,\r\n): FontData => {\r\n    const {\r\n        allRightSymbolOffset,\r\n        bulletOffset,\r\n        bulletWidth,\r\n        fontSize,\r\n        headTextSpacing,\r\n        iconSymbolWidth,\r\n        lineHeight,\r\n        offsetY,\r\n        ordinalFontOffsetY,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n\r\n    return {\r\n        ...fontSizeData,\r\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\r\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\r\n        bulletWidth: bulletWidth * scale,\r\n        fontSize: fontSize * scale,\r\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\r\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\r\n        lineHeight: lineHeight * scale,\r\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\r\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\r\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\r\n    };\r\n};\r\n\r\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: fontData.fontList.map(entry => {\r\n            return scaleFontSizeData(entry, scale);\r\n        }),\r\n    };\r\n};","export const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './canvas';\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './color';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';\r\nexport * from './scale';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    cursor: pointer;\r\n    &:not(:disabled):hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    &:disabled {\r\n        color: var(--color-dim);\r\n        cursor: not-allowed;\r\n        background-color: var(--color-contrast);\r\n        border: var(--bw) solid var(--color-contrast);\r\n        .anticon {\r\n            color: inherit;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { RegionMap, DefaultFormatAttribute, InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        region,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n        nameStyle,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const targetRegion = RegionMap[region].category === targetFormat\r\n        ? region\r\n        : RegionMap[DefaultFormatAttribute[targetFormat]].key;\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n    const nextNameStyle: typeof nameStyle = {\r\n        ...nameStyle,\r\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\r\n            ? 'OCG'\r\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\r\n                ? 'Default'\r\n                : nameStyle.font,\r\n    };\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        region: targetRegion,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n        nameStyle: nextNameStyle,\r\n    };\r\n};","import { create } from 'zustand';\r\n\r\nexport type BatchDownloadStore = {\r\n    batchName: string,\r\n    batchQueue: string[],\r\n    batchDataMap: Record<string, { name: string, blob: Blob }>,\r\n    isBatchDownloading: boolean,\r\n    isReady: boolean,\r\n    startBatchDownload: (batchName: string, batchQueue: string[]) => void,\r\n    stopBatchDownload: () => void,\r\n    clearQueue: () => void,\r\n    addToBatch: (cardId: string, cardName: string, cardBlob: Blob) => void,\r\n};\r\nexport const useBatchDownload = create<BatchDownloadStore>((set, get) => {\r\n    return {\r\n        batchName: '',\r\n        batch: undefined,\r\n        batchQueue: [],\r\n        batchDataMap: {},\r\n        isBatchDownloading: false,\r\n        isReady: false,\r\n        startBatchDownload: (batchName, batchQueue) => {\r\n            set({\r\n                batchName,\r\n                batchQueue,\r\n                isBatchDownloading: true,\r\n            });\r\n        },\r\n        stopBatchDownload: () => {\r\n            set({\r\n                batchName: '',\r\n                batchQueue: [],\r\n                batchDataMap: {},\r\n                isBatchDownloading: false,\r\n                isReady: false,\r\n            });\r\n        },\r\n        clearQueue: () => {\r\n            set({\r\n                batchQueue: [],\r\n            });\r\n        },\r\n        addToBatch: (cardId, cardName, cardBlob) => {\r\n            set(({ batchQueue, batchDataMap }) => {\r\n                const nextQueue = batchQueue.filter(id => id !== cardId);\r\n                const nextBatchDataMap = { ...batchDataMap };\r\n                nextBatchDataMap[cardId] = { name: cardName, blob: cardBlob };\r\n\r\n                return {\r\n                    batchQueue: nextQueue,\r\n                    batchDataMap: nextBatchDataMap,\r\n                    isReady: nextQueue.length === 0 ? true : false,\r\n                };\r\n            });\r\n        },\r\n    };\r\n});","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\nexport type WithLanguage = {\r\n    language: LanguageDataDictionary\r\n};\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-6.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-6.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.name-style.emboss.color.alert': (\r\n            colorTab: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\r\n                { colorTab },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardFlag,\r\n    CardOpacity,\r\n    CondenseType,\r\n    DYE_LIST_LENGTH,\r\n    FLAG_LENGTH,\r\n    Foil,\r\n    FoilMap,\r\n    FrameDyeList,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardFlag,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultDyeList,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    MAX_STAR_LENGTH,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    'Region',\r\n    /** Creative customize stuff */\r\n    'Star Type',\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Link Rating',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Emboss Pitch',\r\n    'Name Style - Emboss Yaw',\r\n    'Name Style - Emboss Thickness',\r\n    'Name Style - Has Emboss',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Effect Style - Font Style',\r\n    'Effect Style - Background',\r\n    'Effect Style - Min Line',\r\n    'Pendulum Size',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Pendulum Effect Style - Font Style',\r\n    'Pendulum Effect Style - Background',\r\n    'Pendulum Effect Style - Min Line',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'Other Finish - Attribute',\r\n    'Other Finish - Background',\r\n    'Other Finish - Icon',\r\n    'Other Finish - Sticker',\r\n    'Left Frame',\r\n    'Right Frame',\r\n    'Bottom Right Frame',\r\n    'Dye List',\r\n    'Star List',\r\n    'Flag',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n    let error = '';\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            artFinish,\r\n            artFit,\r\n            artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            backgroundFit,\r\n            backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            flag,\r\n            foil,\r\n            format,\r\n            region,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            leftFrame,\r\n            linkMap,\r\n            linkRating,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherFinish,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumRightFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            rightFrame,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            starList,\r\n            typeAbility,\r\n            typeTextStyle,\r\n            dyeList,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n        const stringifedFlag = flag.join('|');\r\n        const stringifedDyeList = dyeList.join('|');\r\n        const stringifedSubFamilyList = starList.join('|');\r\n\r\n        write('Format', format);\r\n        write('Region', region);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink ?? undefined);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Link Rating', linkRating);\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\r\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\r\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\r\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Effect Style - Font Style', effectStyle.fontStyle);\r\n        write('Effect Style - Background', effectStyle.background);\r\n        write('Effect Style - Min Line', effectStyle.minLine);\r\n        write('Pendulum Size', pendulumSize);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\r\n        write('Pendulum Effect Style - Background', pendulumStyle.background);\r\n        write('Pendulum Effect Style - Min Line', pendulumStyle.minLine);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('Other Finish - Attribute', otherFinish[0]);\r\n        write('Other Finish - Icon', otherFinish[1]);\r\n        write('Other Finish - Sticker', otherFinish[2]);\r\n        write('Other Finish - Background', otherFinish[3]);\r\n        write('Left Frame', leftFrame);\r\n        write('Right Frame', rightFrame);\r\n        write('Bottom Right Frame', pendulumRightFrame);\r\n        write('Dye List', stringifedDyeList);\r\n        write('Star List', stringifedSubFamilyList);\r\n        write('Flag', stringifedFlag);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n\r\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\r\n            error = 'offline-data';\r\n        }\r\n\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return {\r\n        value: [\r\n            CsvStandardFieldList.join(','),\r\n            valueList.join('\\n'),\r\n        ].join('\\n'),\r\n        error,\r\n    };\r\n};\r\n\r\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\r\n    try {\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n                const rightFrame = (reader('Right Frame') ?? emptyCard.rightFrame).toLowerCase();\r\n                const leftFrame = (reader('Left Frame') ?? emptyCard.leftFrame).toLowerCase();\r\n                const pendulumRightFrame = (reader('Bottom Right Frame') ?? emptyCard.pendulumRightFrame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = reader('Star Type') === 'text'\r\n                    ? rawStar\r\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\r\n                        ? parseInt(rawStar)\r\n                        : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\r\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\r\n                const finishIcon = reader('Other Finish - Icon') ?? '';\r\n                const finishBackground = reader('Other Finish - Background') ?? '';\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const region = (reader('Region') ?? emptyCard.region).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\r\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter(entry => typeof entry === 'string' && entry !== '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\r\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\r\n                const effectBackground = (reader('Effect Style - Background') ?? emptyCard.effectStyle.background).toLowerCase();\r\n                const pendulumEffectBackground = (reader('Pendulum Effect Style - Background') ?? emptyCard.pendulumStyle.background).toLowerCase();\r\n                const effectMinLine = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.minLine);\r\n                const pendulumEffectMinLine = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.minLine);\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\r\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\r\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n                const linkRating = reader('Link Rating') ?? '';\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n                const baseFlag = (reader('Flag') ?? '').split('|').map(Number).slice(0, FLAG_LENGTH) as CardFlag;\r\n                const flag = getDefaultCardFlag().map((entry, index) => {\r\n                    if (typeof baseFlag[index] === 'number') return baseFlag[index];\r\n                    return entry;\r\n                }) as CardFlag;\r\n\r\n                const baseDyeList = (reader('Dye List') ?? '').split('|').map(String).slice(0, DYE_LIST_LENGTH) as FrameDyeList;\r\n                const dyeList = getDefaultDyeList().map((entry, index) => {\r\n                    if (typeof baseDyeList[index] === 'string') return baseDyeList[index];\r\n                    return entry;\r\n                }) as FrameDyeList;\r\n\r\n                const starList = (reader('Star List') ?? '').split('|').map(String).slice(0, MAX_STAR_LENGTH);\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    dyeList,\r\n                    effect,\r\n                    effectStyle: {\r\n                        condenseTolerant,\r\n                        upSize: effectUpSize,\r\n                        fontStyle: effectFontStyle,\r\n                        background: effectBackground,\r\n                        minLine: effectMinLine,\r\n                    },\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    flag,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    leftFrame,\r\n                    linkMap,\r\n                    linkRating,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherFinish: [finishAttribute, finishIcon, finishSticker, finishBackground] as OtherFinish,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumRightFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumSize,\r\n                    pendulumStyle: {\r\n                        upSize: pendulumEffectUpSize,\r\n                        fontStyle: pendulumEffectFontStyle, \r\n                        background: pendulumEffectBackground,\r\n                        minLine: pendulumEffectMinLine,\r\n                    },\r\n                    pendulumTextStyle,\r\n                    region,\r\n                    rightFrame,\r\n                    setId,\r\n                    star,\r\n                    starList,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    try {\r\n        const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n        if (frameResult !== 0) return frameResult;\r\n\r\n        /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n        const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n        return bottomFrameResult;\r\n    } catch (e) {\r\n        return 0;\r\n    }\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    selectedMap: Record<string, string>,\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    selectCard: (id: string, type: 'add' | 'remove') => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setSelectMap: (id: InternalCard[], type?: 'add' | 'replace') => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        selectedMap: {},\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        selectCard: (id, type) => {\r\n            set(({ selectedMap }) => {\r\n                const nextMap = { ...selectedMap };\r\n                if (type === 'add') nextMap[id] = id;\r\n                else delete nextMap[id];\r\n\r\n                return { selectedMap: nextMap };\r\n            });\r\n        },\r\n        setSelectMap: (cardList, type) => set(({ selectedMap }) => ({\r\n            selectedMap: cardList.reduce((prev, curr) => {\r\n                prev[curr.id] = curr.id;\r\n                return prev;\r\n            }, type === 'replace' ? {} : { ...selectedMap } as Record<string, string>),\r\n        })),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst, ExportFormat } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    allowHotkey: boolean,\r\n    exportFormat: ExportFormat,\r\n    exportScheme: string,\r\n    globalScale: number,\r\n    mirrorPendulumScale: boolean,\r\n    reduceMotionColor: boolean,\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraAttribute: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        exportScheme,\r\n        globalScale,\r\n        mirrorPendulumScale,\r\n        reduceMotionColor,\r\n        resolution,\r\n        showCreativeOption,\r\n        showExtraAttribute,\r\n        showExtraDecorativeOption,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            exportScheme: typeof exportScheme === 'string' ? exportScheme : 'with-name',\r\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\r\n                ? globalScale\r\n                : 1,\r\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraAttribute: typeof showExtraAttribute === 'boolean' ? showExtraAttribute : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity, PendulumSize } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\nimport { useBatchDownload } from './use-batch-download';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const {\r\n        addToBatch,\r\n        batchDataMap,\r\n        isBatchDownloading,\r\n    } = useBatchDownload();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const exportScheme = useSetting(state => state.setting.exportScheme);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n        pendulumSize,\r\n    } = currentCard;\r\n    const normalizedName = normalizeCardName(name);\r\n    const pendingSave = useRef(false);\r\n\r\n    const getCardDataUrl = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && clonedCanvas && clonedCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            if (size) {\r\n                clonedCanvas.width = size[0];\r\n                clonedCanvas.height = size[1];\r\n            }\r\n            /** Resize here */\r\n            clonedCanvasContext.drawImage(\r\n                drawCanvas,\r\n                0, 0, drawCanvas.width, drawCanvas.height,\r\n                0, 0, clonedCanvas.width, clonedCanvas.height,\r\n            );\r\n\r\n            return clonedCanvas.toDataURL('image/png');\r\n        }\r\n    }, [exportCanvasRef, isTainted, resolution]);\r\n    const addToCurrentBatch = useCallback(async (\r\n        cardName: string,\r\n        cardId: string,\r\n        size: [number, number] = resolution,\r\n    ) => {\r\n        try {\r\n            const fetchedDataUrl = await fetch(getCardDataUrl(size));\r\n            const blob = await fetchedDataUrl.blob();\r\n            if (isBatchDownloading) addToBatch(cardId, cardName, blob);\r\n        } catch (e) {\r\n            onDownloadError();\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [addToBatch, getCardDataUrl, isBatchDownloading, onDownloadComplete, onDownloadError, resolution]);\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        try {\r\n            const normalizedName = normalizeCardName(name);\r\n            var link = document.createElement('a');\r\n            link.download = normalizedName\r\n                ? `${normalizedName}.png`\r\n                : 'card.png';\r\n            link.href = getCardDataUrl(size);\r\n            link.click();\r\n        } catch (e) {\r\n            onDownloadError();\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [resolution, onDownloadComplete, name, getCardDataUrl, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [normalizedName]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            pendulumSize,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                            if (isBatchDownloading && !batchDataMap[normalizedCard.id]) {\r\n                                setTimeout(() => {\r\n                                    addToCurrentBatch(\r\n                                        exportScheme === 'with-name'\r\n                                            ? `${normalizedName}.png`\r\n                                            : `${normalizedCard.setId} - ${normalizedName}.png`,\r\n                                        normalizedCard.id,\r\n                                    );\r\n                                }, 200);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\n\r\nexport type UseColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n};\r\nexport const useColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: UseColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return {\r\n        inputText: currentText,\r\n        color: internalValue,\r\n        setColor: setCurrentText,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type GlobalMemory = {\r\n    activeDropzone: number,\r\n};\r\nexport type GlobalStore = {\r\n    memory: GlobalMemory,\r\n    updateGlobalMemory: (transformerOrPayload: Partial<GlobalMemory>\r\n        | ((currentSetting: GlobalMemory) => GlobalMemory)) => void,\r\n};\r\nexport const useGlobalMemory = create<GlobalStore>((set) => {\r\n    return {\r\n        memory: {\r\n            activeDropzone: 0,\r\n        },\r\n        updateGlobalMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newGlobalMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n\r\n                return {\r\n                    memory: newGlobalMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useGlobal = <Key extends keyof GlobalMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateGlobalMemory,\r\n    } = useGlobalMemory(useShallow(({\r\n        memory,\r\n        updateGlobalMemory,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateGlobalMemory,\r\n    })));\r\n\r\n    const updateTargetNotification = useCallback(\r\n        (value: GlobalMemory[Key] | ((currentSetting: GlobalMemory[Key]) => GlobalMemory[Key])) => {\r\n            updateGlobalMemory(cur => {\r\n                return { ...cur, [key]: typeof value === 'function' ? value(cur[key]) : value };\r\n            });\r\n        },\r\n        [key, updateGlobalMemory],\r\n    );\r\n\r\n    return [targetMemory, updateTargetNotification] as const;\r\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth * maximumScale,\r\n    height = CanvasHeight * maximumScale,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\r\n        pendulumSize?: PendulumSize,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n                const pendulumSuffix = pendulumSize\r\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\r\n                    : DEFAULT_PENDULUM_SIZE;\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType, pendulumSuffix);\r\n                    }\r\n                } else {\r\n                    await caller(finishType, pendulumSuffix);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_LINE_COLOR = '#000000';\r\nconst DEFAULT_LINE_WIDTH = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x,\r\n    y,\r\n    blur,\r\n    color,\r\n    colorGradient,\r\n    shadowColor,\r\n    lineColor,\r\n    lineColorGradient,\r\n    lineWidth,\r\n    globalScale = 1,\r\n    useDefault = true,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    useDefault?: boolean,\r\n    colorGradient?: CanvasGradient,\r\n    lineColorGradient?: CanvasGradient,\r\n} & CanvasTextStyle) => {\r\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\r\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\r\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\r\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\r\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\r\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\r\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\r\n\r\n    return () => {\r\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\r\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n            ctx.drawImage(image, actualDX, actualDY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n                ctx.drawImage(image, actualDX, actualDY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number),\r\n    dy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n\r\n            if (\r\n                typeof actualSX === 'number'\r\n                && typeof actualSY === 'number'\r\n                && typeof actualSW === 'number'\r\n                && typeof actualSH === 'number'\r\n            ) {\r\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n            } else {\r\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n            }\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n    \r\n                if (\r\n                    typeof actualSX === 'number'\r\n                    && typeof actualSY === 'number'\r\n                    && typeof actualSW === 'number'\r\n                    && typeof actualSH === 'number'\r\n                ) {\r\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n                } else {\r\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n                }\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    dx, dy,\r\n    dw, dh,\r\n    sx, sy,\r\n    sw, sh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n        dw, dh,\r\n        sx, sy,\r\n        sw, sh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    globalScale: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    FontDeviationMap,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n        ? 0.046875\r\n        : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2 * globalScale;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation,\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviationMap,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        letterMap = {},\r\n        threshold = 10,\r\n    } = deviation ?? {};\r\n    const {\r\n        uniformBoxDescent,\r\n    } = letterMap[letter] ?? {};\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    let uniformYScale = 1;\r\n    let boxDescentCompensate = 0;\r\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\r\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\r\n\r\n        /** Need to carefully survey if we over-compensate in edge case. */\r\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\r\n\r\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\r\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\r\n    }\r\n    ctx.scale(1, uniformYScale);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\r\n    });\r\n    ctx.scale(1, 1 / uniformYScale);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n    globalScale: number,\r\n) => {\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n        vietnameseFont,\r\n        vietnameseFontRatio = 1,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let vietnameseFontMemory = fontController.getFontInfo();\r\n    const applyVietnameseFont = () => {\r\n        vietnameseFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(vietnameseFont).setSize(fontSize * vietnameseFontRatio).getFont();\r\n    };\r\n    const stopApplyVietnameseFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(vietnameseFontMemory.family)\r\n            .setSize(vietnameseFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyVietnameseFont, stopApplyVietnameseFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n                + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FragmentSplitRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    VietnameseDiacriticLetterRegex,\r\n    WholeWordRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing: _letterSpacing,\r\n    format,\r\n    globalScale,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    globalScale: number,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyVietnameseFont, stopApplyVietnameseFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Vietnamese letter use different font, for the sake of simplicity, we use a widely supported Times New Roman font instead of a more specific one. */\r\n                else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applyVietnameseFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyVietnameseFont();\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    globalScale,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    globalScale: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    VietnameseDiacriticLetterRegex,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\nimport { scaleFontSizeData } from 'src/util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n    option,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    globalScale: number,\r\n    option?: {\r\n        drawHeadText?: boolean,\r\n    },\r\n    debug?: boolean,\r\n}) => {\r\n    const { drawHeadText = true } = option ?? {};\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        bulletOffset = scaledDefaultFontSizeData.bulletOffset,\r\n        bulletWidth,\r\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyVietnameseFont, stopApplyVietnameseFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n            globalScale,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(\r\n                    ctx,\r\n                    fragmentEdge,\r\n                    trueBaseline + bulletOffset - 1 * globalScale,\r\n                    bulletWidth,\r\n                    getBulletSpacing(format) * globalScale,\r\n                );\r\n                fragmentEdge += bulletWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg'\r\n                        ? allRightSymbolOffset\r\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    globalScale,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                if (drawHeadText) fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                    globalScale,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[`${globalScale}`],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applyVietnameseFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyVietnameseFont();\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                    globalScale,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap?.[`${globalScale}`],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    FLAVOR_CONDITION_SOURCE,\r\n    FLAVOR_LINE_PLACEHOLDER,\r\n    FULL_LINE_PLACEHOLDER,\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    OCG_RUBY_SOURCE,\r\n    UNCOMPRESSED_SOURCE,\r\n    WHOLE_WORD_SOURCE,\r\n    contextualDoubleQuoteRegex,\r\n    ocgKeywordDataMap,\r\n    ocgNumberCircleMap,\r\n    ocgToTCGLetterMap,\r\n    tcgToOCGLetterMap,\r\n} from 'src/model';\r\n\r\nexport type LineOption = {\r\n    line: string,\r\n    alignment: 'left' | 'justify',\r\n};\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineListOption: LineOption[] = [];\r\n    const lineList: string[] = [];\r\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\r\n    let effectText = effect;\r\n    let effectFlavorCondition = '';\r\n    /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n     * \r\n     * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n     * \r\n     * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n     * */\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    /** Infinite loop guarding just in case, we are dealing with while loop anyways */\r\n    let tryCnt = 0;\r\n    while (effectText.length > 0 && tryCnt <= 100) {\r\n        const result = wholeLineRegex.exec(effectText);\r\n        const lineReplacement = result?.[1];\r\n        const lineContent = result?.[2];\r\n        const fullLineReplacement = result?.[3];\r\n        const fullLineContent = result?.[4];\r\n\r\n        if (lineContent && lineReplacement) {\r\n            effectText = effectText.replace(lineReplacement, '');\r\n            fullLineListOption.push({ line: lineContent, alignment: 'left' });\r\n            lineList.push(FULL_LINE_PLACEHOLDER);\r\n        } else if (fullLineContent && fullLineReplacement) {\r\n            effectText = effectText.replace(fullLineReplacement, '');\r\n            fullLineListOption.push({ line: fullLineContent, alignment: 'justify' });\r\n            lineList.push(FULL_LINE_PLACEHOLDER);\r\n        } else {\r\n            const paragraphResult = /(.*)(\\n|$)/.exec(effectText);\r\n            const lineReplacement = paragraphResult?.[0];\r\n            const lineContent = paragraphResult?.[1];\r\n            if (lineReplacement) {\r\n                /** Restore all remaining nb line symbol back to their normal letters. Then split those paragraph into lines. */\r\n                lineList.push(...lineContent\r\n                    .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\r\n                    .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]')\r\n                    .split('\\n')\r\n                );\r\n                effectText = effectText.replace(lineReplacement, '');\r\n            }\r\n        }\r\n        tryCnt++;\r\n    }\r\n    if (effectFlavorCondition) {\r\n        lineList.push(FLAVOR_LINE_PLACEHOLDER);\r\n    }\r\n\r\n    return {\r\n        lineList,\r\n        fullLineListOption: [...fullLineListOption],\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    NormalFontData,\r\n    FULL_LINE_PLACEHOLDER,\r\n    FLAVOR_LINE_PLACEHOLDER,\r\n} from '../../model';\r\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    useItalic,\r\n    statInEffect,\r\n    typeInEffect,\r\n    frameType,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    useItalic: boolean,\r\n    frameType: 'normal' | 'pendulumLarge',\r\n}) => {\r\n    const coordinateKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\r\n        fontData = NormalFontData[fontDataKey];\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    // useItalic = false,\r\n    fontDataKey = 'tcg',\r\n    fontData = EffectFontData[fontDataKey],\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    useItalic?: boolean,\r\n    fontData?: FontData,\r\n    fontDataKey?: string,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n        globalScale: number,\r\n        minLine?: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n        globalScale = 1,\r\n        minLine: baseMinLine = 0,\r\n    } = option ?? {};\r\n    const minLine = typeof baseMinLine === 'number' ? baseMinLine : 0;\r\n    let sizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return sizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        lineList,\r\n        fullLineListOption,\r\n        effectFlavorCondition,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    let effectiveLineCount = 0;\r\n    const scaledFontData = scaleFontData(fontData, globalScale);\r\n    const { fontList } = scaledFontData;\r\n    const yRatio = 1;\r\n    /**\r\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\r\n     * \r\n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\r\n     * */\r\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\r\n        const requireDynamicSize = sizeLevel === fontList.length\r\n            ? true\r\n            : false;\r\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\r\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\r\n            ? {\r\n                '1': 1000,\r\n                '2': 1000,\r\n                '3': 1000,\r\n            }\r\n            : (format === 'tcg'\r\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\r\n                    ? CondenseTolerantMap['relaxed']\r\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n                : {\r\n                    '1': 800,\r\n                    '2': 800,\r\n                    '3': 800,\r\n                });\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n            trueHeightCap,\r\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\r\n\r\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\r\n        const dynamicFontData = useDynamicSize\r\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\r\n            : scaledFontData;\r\n        const dynamicSizeLevel = useDynamicSize\r\n            ? sizeLevel\r\n            : appliedSizeLevel;\r\n        const {\r\n            font: dynamicFont,\r\n            fontList: dynamicFontList,\r\n        } = dynamicFontData;\r\n        const fontSizeData = useDynamicSize\r\n            ? dynamicFontList[dynamicSizeLevel]\r\n            : fontList[appliedSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(dynamicFont)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData: dynamicFontData,\r\n            fontLevel: dynamicSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = (lineList.length > lineCount && typeof trueHeightCap === 'number')\r\n            ? 1 // If dynamic size is possible, no need to find condense value if current line count is larger than the font's maximum line count, it will overflow anyways.\r\n            : condense(\r\n                median => {\r\n                    const { currentLineList, currentLineCount } = createLineList({\r\n                        ctx,\r\n                        median,\r\n                        paragraphList: lineList,\r\n                        additionalLineCount: 0,\r\n                        format, textData,\r\n                        width,\r\n                        globalScale,\r\n                    });\r\n                    lineListWithRatio = currentLineList;\r\n\r\n                    if (currentLineCount > lineCount) return false;\r\n                    return true;\r\n                },\r\n                200,\r\n            );\r\n        effectiveLineCount = Math.max(minLine, lineListWithRatio.length);\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\r\n        const tolerantValue = tolerancePerSentence[`${lineList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            ((effectiveMedian < tolerantValue) && (sizeLevel < fontList.length))\r\n            || minLine > lineCount\r\n        ) {\r\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\r\n        } else {\r\n            clearCanvas(ctx);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            lineListWithRatio\r\n                .forEach(({\r\n                    line: precalculatedLine,\r\n                    effectiveMedian,\r\n                    isLast,\r\n                }) => {\r\n                    if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\r\n                        const { line, alignment } = fullLineListOption.shift();\r\n                        const isLast = alignment === 'justify' ? false : true;\r\n                        const xRatio = 1/1000 * condense(\r\n                            median => {\r\n                                const { currentLineCount } = createLineList({\r\n                                    ctx,\r\n                                    median,\r\n                                    paragraphList: [line],\r\n                                    format, textData,\r\n                                    width,\r\n                                    globalScale,\r\n                                });\r\n\r\n                                if (currentLineCount > 1) return false;\r\n                                return true;\r\n                            },\r\n                        );\r\n                        const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\r\n                        ctx.scale(xRatio, yRatio);\r\n                        drawLine({\r\n                            ctx,\r\n                            tokenList,\r\n                            xRatio, yRatio,\r\n                            trueEdge, trueBaseline,\r\n                            spaceWidth,\r\n                            textData,\r\n                            format,\r\n                            globalScale,\r\n                        });\r\n                    } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\r\n                        const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\r\n                        const dynamicFlavorFontData = useDynamicSize\r\n                            ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: Math.max(minLine, lineListWithRatio.length) })\r\n                            : flavorFontData;\r\n                        const { fontSize } = useDynamicSize\r\n                            ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\r\n                            : flavorFontData.fontList[appliedSizeLevel];\r\n                        const flavorTextCurrentFont = createFontGetter();\r\n                        ctx.font = flavorTextCurrentFont\r\n                            .setSize(fontSize)\r\n                            .setFamily(flavorFontData.font)\r\n                            .getFont();\r\n                        const flavorTextData = {\r\n                            fontData: dynamicFlavorFontData,\r\n                            fontLevel: dynamicSizeLevel,\r\n                            currentFont: flavorTextCurrentFont,\r\n                        };\r\n                        const xRatio = 1/1000 * condense(\r\n                            median => {\r\n                                const { currentLineCount } = createLineList({\r\n                                    ctx,\r\n                                    median,\r\n                                    paragraphList: [effectFlavorCondition],\r\n                                    format, textData: flavorTextData,\r\n                                    width,\r\n                                    globalScale,\r\n                                });\r\n\r\n                                if (currentLineCount > 1) return false;\r\n                                return true;\r\n                            },\r\n                        );\r\n                        const tokenList = tokenizeText(effectFlavorCondition);\r\n                        ctx.scale(xRatio, yRatio);\r\n                        drawLine({\r\n                            ctx,\r\n                            tokenList,\r\n                            xRatio, yRatio,\r\n                            trueEdge, trueBaseline,\r\n                            textData: flavorTextData,\r\n                            format,\r\n                            globalScale,\r\n                        });\r\n                    } else {\r\n                        /** Normal line: Draw with the calculated median */\r\n                        const xRatio = effectiveMedian / 1000;\r\n                        const line = precalculatedLine;\r\n                        const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\r\n                        ctx.scale(xRatio, yRatio);\r\n                        drawLine({\r\n                            ctx,\r\n                            tokenList,\r\n                            xRatio, yRatio,\r\n                            trueEdge, trueBaseline,\r\n                            spaceWidth,\r\n                            textData,\r\n                            format,\r\n                            globalScale,\r\n                        });\r\n                    }\r\n\r\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                    trueBaseline += lineHeight;\r\n                });\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return sizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    globalScale,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starList,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n    loopStarFinish,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    globalScale: number,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starList: string[],\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    /** We filter out all undefined star only at the trail of the star list */\r\n    const normalizedStarList = Array.isArray(starList)\r\n        ? starList\r\n        : [];\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = cardIcon === 'custom'\r\n        ? normalizedStarList.length\r\n        : typeof star === 'string'\r\n            ? star === '' ? 0 : 1\r\n            : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    const {\r\n        canvas: starCanvas,\r\n        ctx: starCtx,\r\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\r\n    await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async (_, index) => {\r\n            offset += (starWidth + startSpacing);\r\n            /** We must factor alignment here, because presentation does not factor alignment */\r\n            const cardIconIndex = normalizedStarCount - 1 - index;\r\n            const cardIconName = cardIcon === 'custom' ? normalizedStarList[cardIconIndex] : cardIcon;\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(starCtx, `subfamily/subfamily-${cardIconName}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n    if (loopStarFinish) {\r\n        const {\r\n            canvas: starFinishCanvas,\r\n            ctx: starFinishCtx,\r\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\r\n        starFinishCtx.drawImage(starCanvas, 0, 0);\r\n        await loopStarFinish(\r\n            starFinishCtx,\r\n            'art',\r\n            async (finishType) => {\r\n                return await drawAsset(\r\n                    starFinishCtx,\r\n                    `finish/finish-typeart-${finishType}.png`,\r\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                );\r\n            },\r\n        );\r\n        starCtx.globalCompositeOperation = 'source-in';\r\n        starCtx.drawImage(starFinishCanvas, 0, 0);\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    } else {\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    }\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n    globalScale,\r\n    x, y,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n    globalScale: number,\r\n    x: number,\r\n    y: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    ctx.scale(globalScale, globalScale);\r\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\r\n    ctx.resetTransform();\r\n    return;\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    globalScale,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    globalScale,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...scaleDrawCoordinate(coordinate, globalScale),\r\n        globalScale,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    rating: string,\r\n    style: CanvasTextStyle,\r\n    globalScale: number,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || typeof rating !== 'string') return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\r\n        globalScale,\r\n        style,\r\n    );\r\n    const baseline = isNaN(Number(rating))\r\n        ? 1106\r\n        : 1105;\r\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = `bold ${24 * globalScale}px RoGSanSrfStd-Bd`;\r\n    ctx.fillText(`${rating}`, 622.75 * globalScale, baseline * globalScale);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import { CanvasConst } from 'src/model';\r\nimport { drawAsset } from '../image';\r\nimport { createCanvas } from 'src/util';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n    topToPendulumStructure,\r\n} = CanvasConst;\r\nexport const getMaskPromise = () => {\r\n    const topRightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-top-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    const bottomRightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-bottom-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    /**\r\n     * Be careful: Bottom right + Top right mask does NOT cover the entire right area when bottom left frame is also presented, so if both of them are the same frame, we might need to use right mask.\r\n     * \r\n     * Reason: Because bottom left frame also contains bottom right frame with transparency, if we draw another bottom right frame (that also has transparency) on top of it, it will not overlap the bottom frame, but merged with it, create a mix of both instead of total replacement, which is our desired effect. */\r\n    const rightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    const nameMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = topToPendulumStructure;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-name.png');\r\n            return ctx.getImageData(0, 0, width, topToPendulumStructure).data;\r\n        }\r\n        return null;\r\n    })();\r\n\r\n    return {\r\n        topRight: topRightMask,\r\n        bottomRight: bottomRightMask,\r\n        right: rightMask,\r\n        name: nameMask,\r\n    };\r\n};\r\nexport const MaskPromise = getMaskPromise();\r\n\r\n/**\r\n * Draw the image onto an empty canvas, then apply an alpha mask over it.\r\n * \r\n * Each pixel in the image will be drawn with the alpha data from the corresponding pixel of the mask.\r\n * */\r\nexport const applyAlphaMask = async (\r\n    urlOrCanvas: string | CanvasImageSource,\r\n    maskData: Uint8ClampedArray<ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n) => {\r\n    const { ctx, canvas } = createCanvas(width, height);\r\n    if (typeof urlOrCanvas === 'string') await drawAsset(ctx, urlOrCanvas, 0, 0);\r\n    else ctx.drawImage(urlOrCanvas, 0, 0, width, height);\r\n    const layerData = ctx.getImageData(0, 0, width, height).data;\r\n    for (let cnt = 0; cnt < layerData.length; cnt += 4) {\r\n        layerData[cnt + 3] = maskData[cnt + 3];\r\n    }\r\n\r\n    ctx.putImageData(new ImageData(layerData, width, height), 0, 0);\r\n\r\n    return canvas;\r\n};","import {\r\n    ArrowPositionMap,\r\n    ArtFinishMap,\r\n    RegionMap,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardOpacity,\r\n    Foil,\r\n    FrameDyeList,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PendulumSizeMap,\r\n    PendulumSizeMapException,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { createCanvas, dyeCanvas, getCardIconFromFrame, HexColorRegex, resolveFrameStyle } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { getFinishIterator } from '../canvas-util';\r\nimport { applyAlphaMask, MaskPromise } from './mask';\r\n\r\nexport const baseDrawLinkArrowMap = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    linkMap: string[],\r\n    positionType: keyof typeof ArrowPositionMap,\r\n    boundless: boolean,\r\n) => {\r\n    if (!ctx) return;\r\n    ctx.scale(globalScale, globalScale);\r\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n        .map(async entry => {\r\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n            const isActive = linkMap.includes(`${entry}`);\r\n            const baseLink = `link/link-inactive-${entry}`;\r\n            const activeLink = `link/link-active-${entry}`;\r\n            const coordinate = [left, top, width, height] as const;\r\n\r\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n            if (isActive) {\r\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n            } else return;\r\n        })\r\n    );\r\n    ctx.resetTransform();\r\n};\r\nexport const baseDrawLinkMapFoil = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    foil: string,\r\n    withBorder: boolean,\r\n    positionType: keyof typeof ArrowPositionMap,\r\n    dyeColor: string,\r\n) => {\r\n    if (!ctx) return;\r\n    const willDyed = HexColorRegex.test(dyeColor);\r\n    if (foil === 'normal' && !willDyed) return;\r\n    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n    const usedFoil = willDyed ? 'platinum' : foil;\r\n    const drawFunction = async (ctx: CanvasRenderingContext2D) => {\r\n        if (withBorder) {\r\n            await drawAsset(ctx, `link/link-overlay-arrow-${usedFoil}.png`, 0, 175);\r\n        } else {\r\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n                .map(async entry => {\r\n                    const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n                    const coordinate = [left, top, width, height] as const;\r\n\r\n                    await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${usedFoil}.png`, ...coordinate);\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    ctx.scale(globalScale, globalScale);\r\n    if (willDyed) {\r\n        const { ctx: linkMapFoilCtx, canvas: linkMapFoilCanvas } = createCanvas();\r\n        await drawFunction(linkMapFoilCtx);\r\n        const { canvas: dyedLinkMapFoilCanvas } = dyeCanvas(linkMapFoilCanvas, dyeColor);\r\n        ctx.drawImage(dyedLinkMapFoilCanvas, 0, 0);\r\n    } else {\r\n        await drawFunction(ctx);\r\n    }\r\n    ctx.resetTransform();\r\n};\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    topToPendulumStructure,\r\n    topToPendulumStructureFrame,\r\n    pendulumIconFrameHeight,\r\n    pendulumIconFrameWidth,\r\n    pendulumFrameHeight,\r\n    pendulumFrameWidth,\r\n    attributeSize,\r\n    attributeX,\r\n    attributeY,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    globalScale,\r\n    region,\r\n    hasBackground,\r\n    frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\r\n    dyeList,\r\n    effectBackground, pendulumEffectBackground,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    starList,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    pendulumFrameTypeMap,\r\n    otherFinish,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    globalScale: number,\r\n    region: string,\r\n    frame: string, leftFrame: string, pendulumFrame: string, rightFrame: string, pendulumRightFrame: string,\r\n    dyeList: FrameDyeList,\r\n    effectBackground: string, pendulumEffectBackground: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    starList: string[],\r\n    foil: Foil,\r\n    pendulumSize: PendulumSize,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\r\n    otherFinish: OtherFinish,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFrameX,\r\n        artFrameY,\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n        artRatio,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n    const {\r\n        frameType,\r\n        effectBoxOffsetY,\r\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\r\n        pendulumBoxOffsetY,\r\n        artlessFrameY,\r\n    } = PendulumSizeMap[pendulumSize];\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\r\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderTypeList = frame === 'synchro'\r\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\r\n        : [frameBorderType];\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resolvedLayoutStyle = resolveFrameStyle(\r\n        {\r\n            frame,\r\n            topLeftFrame: leftFrame,\r\n            topRightFrame: rightFrame,\r\n            bottomLeftFrame: pendulumFrame,\r\n            bottomRightFrame: pendulumRightFrame,\r\n            effectBackground: effectBackground,\r\n            pendulumEffectBackground: pendulumEffectBackground,\r\n        },\r\n        isPendulum,\r\n    );\r\n    const {\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n        effectBackground: resolvedEffectBackground,\r\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\r\n    } = resolvedLayoutStyle;\r\n\r\n    const resultAPI = {\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            const willReplaceFrame = hasBackground && backgroundCanvas && backgroundType === 'frame';\r\n\r\n            /** Combine layer frame here */\r\n            const { ctx: topFrameCtx, canvas: topFrameCanvas } = createCanvas();\r\n            await drawAsset(topFrameCtx, `frame/frame-${topLeftFrame}.png`, 0, 0);\r\n            const { canvas: dyedTopFrameCanvas, ctx: dyedTopFrameCtx } = dyeCanvas(topFrameCanvas, dyeList[0]);\r\n            /** No need to dye if background is gonna replace the frame */\r\n            if (\r\n                !willReplaceFrame\r\n                && (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '')\r\n            ) {\r\n                const topRightCanvas = await applyAlphaMask(\r\n                    `frame/frame-${topRightFrame}.png`,\r\n                    await MaskPromise.topRight,\r\n                    cardWidth,\r\n                    cardHeight,\r\n                );\r\n                const { canvas: dyedTopRightCanvas } = dyeCanvas(topRightCanvas, dyeList[1]);\r\n                dyedTopFrameCtx.drawImage(dyedTopRightCanvas, 0, 0);\r\n            }\r\n\r\n            const { ctx: bottomFrameCtx, canvas: bottomFrameCanvas } = createCanvas();\r\n            await drawAsset(bottomFrameCtx, `frame-pendulum/frame-pendulum-${bottomLeftFrame}.png`, 0, 0);\r\n            const { canvas: dyedBottomFrameCanvas, ctx: dyedBottomFrameCtx } = dyeCanvas(bottomFrameCanvas, dyeList[2]);\r\n            if (\r\n                !willReplaceFrame\r\n                && (bottomLeftFrame !== bottomRightFrame || dyeList[2] !== '' || dyeList[3] !== '')\r\n            ) {\r\n                /** What is this?\r\n                 * \r\n                 * Because the \"bottom left\" frame is not actually bottom, but both bottom left and bottom right with transparency. If we draw it first, then draw our \"bottom right\" frame on top of it, it will mixed with the bottom left frame (because both contains transparency), instead of replacing it, create an unintended side effect. Therefore we cut the part that may cause mixing color from the bottom left frame, before drawing the bottom right part.\r\n                 */\r\n                dyedBottomFrameCtx.clearRect(714, 0, 99, cardHeight);\r\n                const bottomRightCanvas = await applyAlphaMask(\r\n                    `frame/frame-${bottomRightFrame}.png`,\r\n                    await MaskPromise.bottomRight,\r\n                    cardWidth,\r\n                    cardHeight,\r\n                );\r\n                const { canvas: dyedBottomRightCanvas } = dyeCanvas(bottomRightCanvas, dyeList[3]);\r\n                dyedBottomFrameCtx.drawImage(dyedBottomRightCanvas, 0, 0);\r\n            }\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            ctx.scale(globalScale, globalScale);\r\n            /** Leave empty space for card art */\r\n            if (isPendulum) {\r\n                dyedTopFrameCtx.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\r\n                dyedBottomFrameCtx.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\r\n            }\r\n            /** Background replace frame */\r\n            if (willReplaceFrame) {\r\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n                dyedTopFrameCtx.globalCompositeOperation = 'source-atop';\r\n                dyedTopFrameCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0, backgroundWidth, backgroundHeight,\r\n                    0, 0, cardWidth, cardHeight,\r\n                );\r\n                dyedBottomFrameCtx.globalCompositeOperation = 'source-atop';\r\n                dyedBottomFrameCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0, backgroundWidth, backgroundHeight,\r\n                    0, 0, cardWidth, cardHeight,\r\n                );\r\n            }\r\n            /** Start assembling the canvas */\r\n            ctx.drawImage(dyedTopFrameCanvas, 0, 0);\r\n            ctx.drawImage(dyedBottomFrameCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: (\r\n            externalCtx = ctx,\r\n        ) => {\r\n            if (!artworkCanvas || !externalCtx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            externalCtx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: async (\r\n            externalCtx = ctx,\r\n            hasArtBorder = false,\r\n        ) => {\r\n            if (!backgroundCanvas || !externalCtx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n                artFrameWidth,\r\n                artFrameX,\r\n                artFrameY,\r\n                ratio,\r\n                artRatio,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                opacity,\r\n                backgroundType,\r\n                pendulumSize,\r\n            );\r\n            if (backgroundType !== 'frame') {\r\n                externalCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0,\r\n                    backgroundWidth, backgroundHeight,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n            } else {\r\n                externalCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0,\r\n                    backgroundWidth, backgroundHeight,\r\n                    0, 0,\r\n                    globalScale * cardWidth, globalScale * cardHeight,\r\n                );\r\n            }\r\n            const backgroundFinish = otherFinish[3] ?? 'normal';\r\n            if (backgroundFinish !== 'normal' && hasArtBorder) {\r\n                const loopBackgroundFinish = getFinishIterator([backgroundFinish], ArtFinishMap);\r\n                await loopBackgroundFinish(\r\n                    externalCtx,\r\n                    'art',\r\n                    async type => drawAssetWithSize(\r\n                        externalCtx,\r\n                        `finish/art-finish-${type}.png`,\r\n                        globalScale * artFrameX, globalScale * artFrameY,\r\n                        globalScale * artFrameWidth, globalScale * artFrameWidth / artRatio,\r\n                    ),\r\n                );\r\n            }\r\n        },\r\n        drawAttribute: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const {\r\n                canvas: attributeCanvas,\r\n                ctx: attributeCtx,\r\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\r\n            await drawAsset(\r\n                attributeCtx,\r\n                `attribute/attr-${RegionMap[region].fileKey}-${attribute.toLowerCase()}.png`,\r\n                attributeX, attributeY,\r\n            );\r\n            const attributeFinish = otherFinish[0] ?? 'normal';\r\n            if (attributeFinish !== 'normal') {\r\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: attributeFinishCanvas,\r\n                    ctx: attributeFinishCtx,\r\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\r\n                attributeFinishCtx.drawImage(attributeCanvas, 0, 0);\r\n                await loopAttributeFinish(\r\n                    attributeFinishCtx,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            attributeFinishCtx,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                        );\r\n                    },\r\n                );\r\n                attributeCtx.globalCompositeOperation = 'source-in';\r\n                attributeCtx.drawImage(attributeFinishCanvas, 0, 0);\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            } else {\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const starFinish = otherFinish[1] ?? 'normal';\r\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starList,\r\n                starAlignment,\r\n                style,\r\n                globalScale,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n                loopStarFinish,\r\n            });\r\n            ctx.resetTransform();\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            if (!ctx) return;\r\n            const {\r\n                canvas: pendulumIconCanvas,\r\n                ctx: pendulumIconCtx,\r\n            } = createCanvas(pendulumIconFrameWidth, pendulumIconFrameHeight);\r\n            await drawAsset(pendulumIconCtx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\r\n\r\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\r\n                pendulumIconCtx.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n            if (pendulumFrameTypeMap.red === 'scaleless') {\r\n                pendulumIconCtx.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\r\n            ctx.resetTransform();\r\n        },\r\n        drawStatBorder: async (style: CanvasTextStyle) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                globalScale,\r\n                style,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            const { ctx: nameBackgroundCtx, canvas: nameBackgroundCanvas } = createCanvas(cardWidth, topToPendulumStructure);\r\n            await drawAsset(nameBackgroundCtx, `background/background-name-${topLeftFrame}.png`, 0, 0);\r\n            const {\r\n                canvas: dyedLeftNameCanvas,\r\n                ctx: dyedLeftNameCtx\r\n            } = dyeCanvas(nameBackgroundCanvas, dyeList[0]);\r\n            if (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '') {\r\n                const nameRightCanvas = await applyAlphaMask(\r\n                    `background/background-name-${topRightFrame}.png`,\r\n                    await MaskPromise.name,\r\n                    cardWidth,\r\n                    topToPendulumStructure,\r\n                );\r\n                const dyedRightNameCanvas = dyeCanvas(nameRightCanvas, dyeList[1]).canvas;\r\n                dyedLeftNameCtx.drawImage(dyedRightNameCanvas, 0, 0);\r\n            }\r\n            ctx.globalAlpha = opacityName / 100;\r\n            ctx.drawImage(dyedLeftNameCanvas, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n\r\n            const { ctx: effectBackgroundCtx, canvas: effectBackgroundCanvas } = createCanvas();\r\n            if (withPendulum) {\r\n                await drawAssetWithSize(\r\n                    effectBackgroundCtx,\r\n                    `background/background-text-${resolvedEffectBackground}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                    0, 0 + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                );\r\n            } else {\r\n                await drawAsset(\r\n                    effectBackgroundCtx,\r\n                    `background/background-text-${resolvedEffectBackground}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY,\r\n                );\r\n            }\r\n            const dyedEffectBackgroundCanvas = dyeCanvas(effectBackgroundCanvas, dyeList[4]).canvas;\r\n            ctx.globalAlpha = opacityText / 100;\r\n            ctx.drawImage(dyedEffectBackgroundCanvas, 0, 0);\r\n\r\n            if (withPendulum) {\r\n                const { ctx: pendulumEffectBackgroundCtx, canvas: pendulumEffectBackgroundCanvas } = createCanvas();\r\n                const {\r\n                    exceptionFrameType = frameType,\r\n                    exceptionPendulumBoxOffsetHeight = 0,\r\n                } = PendulumSizeMapException[pendulumSize][resolvedPendulumEffectBackground] ?? {};\r\n                await drawAssetWithSize(\r\n                    pendulumEffectBackgroundCtx,\r\n                    `background/background-${exceptionFrameType}-${resolvedPendulumEffectBackground}.png`,\r\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\r\n                    pendulumBoxWidth, pendulumBoxHeight,\r\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\r\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\r\n                );\r\n                const dyedPendulumEffectBackgroundCanvas = dyeCanvas(pendulumEffectBackgroundCanvas, dyeList[5]).canvas;\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                ctx.drawImage(dyedPendulumEffectBackgroundCanvas, 0, 0);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            return;\r\n        },\r\n        drawNameBorder: async () => {\r\n            if (nameBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\r\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\r\n                }\r\n                ctx.resetTransform();\r\n            } else {\r\n                Promise.resolve();\r\n            }\r\n            return;\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder && ctx) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                ctx.scale(globalScale, globalScale);\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil, willDye = false) => {\r\n            if (!ctx) return;\r\n            const validDyeColor = HexColorRegex.test(dyeList[6]);\r\n            const usedFoil = validDyeColor && willDye && foilType === 'normal' ? 'platinum' : foilType;\r\n            /** We create a new canvas for easier manipulation. */\r\n            const { canvas: pendulumBorderCanvas, ctx: pendulumBorderCtx } = createCanvas();\r\n            await drawAssetWithSize(\r\n                pendulumBorderCtx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${usedFoil}`\r\n                + '-artless'\r\n                + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\r\n                + '.png',\r\n                30, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                0, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            await drawAssetWithSize(\r\n                pendulumBorderCtx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${usedFoil}`\r\n                + '-artless'\r\n                + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\r\n                + '.png',\r\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                pendulumFrameWidth / 2, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            if (willDye && validDyeColor) {\r\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(pendulumBorderCanvas, dyeList[6]);\r\n                pendulumBorderCtx.drawImage(dyedCardBorderFoilCanvas, 0, 0);\r\n            }\r\n            if (artBorder) {\r\n                /**\r\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\r\n                 */\r\n                pendulumBorderCtx.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\r\n                if (validDyeColor) {\r\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                    const usedFoil = foilType === 'normal' ? 'platinum' : foilType;\r\n                    const { ctx: pendulumBorderFoilCtx, canvas: pendulumBorderFoilCanvas } = createCanvas();\r\n                    await drawAsset(\r\n                        pendulumBorderFoilCtx,\r\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                        + `-${usedFoil}`\r\n                        + '.png',\r\n                        30, topToPendulumStructureFrame,\r\n                    );\r\n                    const { canvas: dyedPendulumBorderFoilCanvas } = dyeCanvas(pendulumBorderFoilCanvas, dyeList[6]);\r\n                    pendulumBorderCtx.drawImage(dyedPendulumBorderFoilCanvas, 0, 0);\r\n                } else {\r\n                    await drawAsset(\r\n                        pendulumBorderCtx,\r\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                        + `-${foilType}`\r\n                        + '.png',\r\n                        30, topToPendulumStructureFrame,\r\n                    );\r\n                }\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (!hasFoil && bottomLeftFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (HexColorRegex.test(dyeList[6])) {\r\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\r\n                const { ctx: cardBorderFoilCtx, canvas: cardBorderFoilCanvas } = createCanvas();\r\n                await drawAsset(cardBorderFoilCtx, `frame/card-border-${usedFoil}.png`, 0, 0);\r\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(cardBorderFoilCanvas, dyeList[6]);\r\n                ctx.drawImage(dyedCardBorderFoilCanvas, 0, 0);\r\n            } else {\r\n                await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) {\r\n                if (HexColorRegex.test(dyeList[6])) {\r\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                    const usedFoil = foil === 'normal' ? 'platinum' : foil;\r\n                    const { ctx: artBorderFoilCtx, canvas: artBorderFoilCanvas } = createCanvas();\r\n                    await drawAsset(artBorderFoilCtx, `frame/art-border-${usedFoil}.png`, artBoxX, artBoxY);\r\n                    const { canvas: dyedArtBorderFoilCanvas } = dyeCanvas(artBorderFoilCanvas, dyeList[6]);\r\n                    ctx.drawImage(dyedArtBorderFoilCanvas, 0, 0);\r\n                } else {\r\n                    await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n                }\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (HexColorRegex.test(dyeList[6])) {\r\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\r\n                const { ctx: effectBorderFoilCtx, canvas: effectBorderFoilCanvas } = createCanvas();\r\n                await drawAsset(effectBorderFoilCtx, `frame/effect-border-${usedFoil}.png`, effectBoxX, effectBoxY);\r\n                const { canvas: dyedEffectBorderFoilCanvas } = dyeCanvas(effectBorderFoilCanvas, dyeList[6]);\r\n                ctx.drawImage(dyedEffectBorderFoilCanvas, 0, 0);\r\n            } else {\r\n                await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if ((artBorder || nameBorder) && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'name',\r\n                    async type => {\r\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                    },\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawArtFinish: async (\r\n            artCtx = ctx,\r\n        ) => {\r\n            if (!applyArtFinish || !artCtx) return;\r\n            artCtx.scale(globalScale, globalScale);\r\n            await loopArtFinish(\r\n                artCtx,\r\n                'art',\r\n                async (finishType, pendulumSuffix) => {\r\n                    return await drawAssetWithSize(\r\n                        artCtx,\r\n                        `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\r\n                        artFinishX, artFinishY,\r\n                        artFrameWidth, artFrameWidth / artRatio,\r\n                    );\r\n                },\r\n                pendulumSize,\r\n            );\r\n            artCtx.resetTransform();\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async (\r\n            artCtx = ctx,\r\n        ) => {\r\n            if (!artCtx) return;\r\n            artCtx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                artCtx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        artCtx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n            artCtx.resetTransform();\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(\r\n                    ctx,\r\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\r\n                    0, 0,\r\n                ),\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => {\r\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0 + cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                }\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { setTextStyle } from '../canvas-util';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    canvas: HTMLCanvasElement,\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _trueBaseline: number,\r\n    _width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n        globalScale: number,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\r\n    const edge = _edge * globalScale;\r\n    const trueBaseline = _trueBaseline * globalScale;\r\n    const width = _width * globalScale;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n\r\n    if (!(ctx && cloneCtx && value)) return;\r\n    const {\r\n        embossPitch,\r\n        embossYaw,\r\n        embossThickness,\r\n        fillStyle,\r\n        font,\r\n        gradientAngle,\r\n        gradientColor,\r\n        hasEmboss,\r\n        hasGradient,\r\n        hasOutline,\r\n        hasShadow,\r\n        headTextFillStyle,\r\n        lineColor,\r\n        lineOffsetX,\r\n        lineOffsetY,\r\n        lineWidth,\r\n        shadowBlur,\r\n        shadowColor,\r\n        shadowOffsetX,\r\n        shadowOffsetY,\r\n        pattern,\r\n    } = { ...getDefaultNameStyle(), ...style };\r\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n\r\n    ctx.textAlign = 'left';\r\n    const fontData = scaleFontData({\r\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n        headTextFillStyle,\r\n    }, globalScale);\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    const quoteConvertedValue = normalizeCardText(\r\n        value,\r\n        format,\r\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n    );\r\n\r\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n    const crudeTokenList = format === 'ocg'\r\n        ? [quoteConvertedValue]\r\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n    const fontGetterForWidthCalculating = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const normalStyle = fontGetterForWidthCalculating.getFont();\r\n    const symbolStyle = fontGetterForWidthCalculating\r\n        .setSize(cur => cur * fontData.symbolFontRatio)\r\n        .setStyle('small-caps')\r\n        .setFamily(fontData.symbolFont)\r\n        .getFont();\r\n    let maxAscent = 0;\r\n    let maxDescent = 0;\r\n    crudeTokenList.forEach((cur, index) => {\r\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n    }, 0);\r\n\r\n    ctx.font = normalStyle;\r\n    /** Calculate fitting ratio like normal */\r\n    let actualLineWidth = 0;\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [quoteConvertedValue],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n\r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n\r\n    ctx.scale(xRatio, yRatio);\r\n    /** Calculate gradient and offset based on card's frame. */\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\r\n    const tokenList = tokenizeText(quoteConvertedValue);\r\n    const gradient = actualLineWidth > 0 && hasGradient\r\n        ? getNameGradient(\r\n            ctx,\r\n            gradientAngle,\r\n            parsePalette(gradientColor),\r\n            edge,\r\n            actualLineWidth,\r\n            trueBaseline,\r\n            maxAscent, maxDescent,\r\n        )\r\n        : undefined;\r\n\r\n    /**\r\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\r\n     * \r\n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\r\n     */\r\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\r\n    let resetEmbossStroke = () => {};\r\n    if (thickenEmboss) {\r\n        resetEmbossStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: embossThickness,\r\n            lineColor: fillStyle,\r\n            lineColorGradient: gradient,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n    }\r\n    ctx.fillStyle = gradient ?? fillStyle;\r\n    const { tokenEdge } = drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        option: { drawHeadText: false },\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n        },\r\n    });\r\n    resetEmbossStroke();\r\n\r\n    /** \r\n     * Second iteration: Draw pattern, we follow these steps.\r\n     *  * We create a second, temporary canvas node.\r\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\r\n     */\r\n    if (patternImage) {\r\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const patternContext = patternCanvas.getContext('2d');\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n        patternContext.scale(globalScale, globalScale);\r\n        await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\r\n        await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\r\n        patternContext.globalCompositeOperation = patternBlendMode;\r\n        patternContext.resetTransform();\r\n        await drawAssetWithSize(\r\n            patternContext, `finish-name/${patternImage}.png`,\r\n            edge, trueBaseline - maxAscent,\r\n            width,\r\n            maxAscent + maxDescent,\r\n        );\r\n        ctx.globalCompositeOperation = 'source-in';\r\n        ctx.drawImage(patternCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.scale(xRatio, yRatio);\r\n    }\r\n\r\n    /** Third iteration: Apply emboss effect */\r\n    if (hasEmboss) {\r\n        const affectedWidthExtraPadding = 10;\r\n        const embossedImageData = applyEmboss({\r\n            inputCanvas: canvas,\r\n            lightPitch: embossPitch,\r\n            lightYaw: embossYaw,\r\n            minIntensity: -0.9,\r\n            maxIntensity: 0.9,\r\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\r\n        });\r\n        ctx.putImageData(embossedImageData, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\r\n     * \r\n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\r\n     * */\r\n    if (hasOutline) {\r\n        const resetStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: lineWidth + (hasEmboss ? embossThickness : 0),\r\n            lineColor,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            globalScale,\r\n            option: { drawHeadText: false },\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.lineJoin = 'round';\r\n                ctx.strokeText(\r\n                    letter,\r\n                    scaledEdge + lineOffsetX,\r\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                );\r\n            },\r\n        });\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetStroke();\r\n    }\r\n\r\n    /**\r\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\r\n     */\r\n    if (hasShadow) {\r\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const shadowContext = shadowCanvas.getContext('2d');\r\n        const resetShadow = setTextStyle({\r\n            ctx: shadowContext,\r\n            x: shadowOffsetX,\r\n            y: shadowOffsetY,\r\n            shadowColor: shadowColor,\r\n            blur: shadowBlur,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.scale(1 / xRatio, 1 / yRatio);\r\n        shadowContext.drawImage(canvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        ctx.drawImage(shadowCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetShadow();\r\n    }\r\n\r\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\r\n    drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: () => {},\r\n    });\r\n\r\n    const defaultTextStyle = getDefaultNameStyle();\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.fillStyle = defaultTextStyle.fillStyle;\r\n    ctx.lineJoin = 'miter';\r\n    ctx.globalCompositeOperation = 'source-over';\r\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\r\n    smaller: 0,\r\n    normal: 1,\r\n    large: 2,\r\n    highPendulumNormal: 1,\r\n    highPendulumSmaller: 0,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: TypeAbilityCoordinateType,\r\n    furiganaHelper: boolean,\r\n    globalScale: number,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = scaleCoordinateData(\r\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\r\n        globalScale,\r\n    );\r\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\r\n    const fontData = {\r\n        ...scaledBaseFontData,\r\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\r\n    };\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nconst {\r\n    finishTypeCardWidth,\r\n    width: CanvasWidth,\r\n    iconHeight,\r\n    iconWidth,\r\n} = CanvasConst;\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    globalScale,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n    loopIconFinish,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: TypeAbilityCoordinateType,\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n        globalScale,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -5 : -1;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        const {\r\n            canvas: iconCanvas,\r\n            ctx: iconCtx,\r\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n        await drawAssetWithSize(\r\n            iconCtx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\r\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\r\n            () => iconWidth * globalScale,\r\n            () => iconHeight * globalScale,\r\n        );\r\n        if (loopIconFinish) {\r\n            const {\r\n                canvas: iconFinishCanvas,\r\n                ctx: iconFinishCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n            iconFinishCtx.drawImage(iconCanvas, 0, 0);\r\n            await loopIconFinish(\r\n                iconFinishCtx,\r\n                'art',\r\n                async (finishType) => {\r\n                    return await drawAsset(\r\n                        iconFinishCtx,\r\n                        `finish/finish-typeart-${finishType}.png`,\r\n                        (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\r\n                    );\r\n                },\r\n            );\r\n            iconCtx.globalCompositeOperation = 'source-in';\r\n            iconCtx.drawImage(iconFinishCanvas, 0, 0);\r\n            ctx.drawImage(iconCanvas, 0, 0);\r\n        } else {\r\n            ctx.drawImage(iconCanvas, 0, 0);\r\n        }\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    _fontSize: number,\r\n    globalScale: number,\r\n) => {\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    if (ctx && value) {\r\n        const fontSize = _fontSize * globalScale;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const digitList = `${value}`.split('');\r\n\r\n        if (digitList.length === 1) {\r\n            const digit = digitList[0];\r\n            const digitWidth = ctx.measureText(digit).width;\r\n            const accLeft = edge - digitWidth / 2;\r\n\r\n            ctx.fillText(\r\n                digit,\r\n                digit === '1' ? accLeft + 2 * globalScale : accLeft,\r\n                baseline + fontSize,\r\n            );\r\n        } else if (digitList.length === 2) {\r\n            /** Observable behavior: The number \"1\" in 2-digits pendulum scale (10, 11, 12, 13) stay in the exact same place no matter which is the second digit, so we try to emulate this pattern here. */\r\n            const firstDigit = digitList[0];\r\n            const secondDigit = digitList[1];\r\n            const firstDigitWidth = ctx.measureText(firstDigit).width * 0.825;\r\n            const secondDigitWidth = ctx.measureText(secondDigit).width;\r\n            const accLeft = edge - firstDigitWidth - (firstDigit === '1'\r\n                ? 0\r\n                : firstDigitWidth * 0.1\r\n            );\r\n\r\n            ctx.fillText(\r\n                firstDigit,\r\n                accLeft,\r\n                baseline + fontSize,\r\n            );\r\n            ctx.fillText(\r\n                secondDigit,\r\n                accLeft + firstDigitWidth - (firstDigit === '1'\r\n                    ? (secondDigit === '1'\r\n                        ? ctx.measureText('1').width * 0.1\r\n                        : secondDigitWidth * 0.1)\r\n                    : secondDigitWidth * -0.1),\r\n                baseline + fontSize,\r\n            );\r\n        } else {\r\n            let totalWidth = 0;\r\n\r\n            digitList.forEach(digit => {\r\n                totalWidth += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\r\n            });\r\n            let accLeft = edge - totalWidth / 2;\r\n\r\n            digitList.forEach(digit => {\r\n                ctx.fillText(\r\n                    digit,\r\n                    accLeft,\r\n                    baseline + fontSize,\r\n                );\r\n                accLeft += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n    baseline = 1150.93,\r\n    baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n        globalScale: number,\r\n    } = {\r\n        globalScale: 1,\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const {\r\n        stroke = false,\r\n        textStyle,\r\n        globalScale,\r\n    } = option ?? {};\r\n    const actualEdge = edge * globalScale;\r\n    const actualBaseline = baseline * globalScale;\r\n    const actualBaselineOffset = baselineOffset * globalScale;\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4 * globalScale;\r\n    ctx.font = `${23.7 * globalScale}px palatino-linotype-bold`;\r\n\r\n    let left = actualEdge;\r\n    ctx.fillText('1', left, actualBaseline + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, actualBaseline);\r\n    left += ctx.measureText('1').width - 2 * globalScale;\r\n\r\n    ctx.font = `${17.78 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText('st', left, actualBaseline - superTextOffset + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, actualBaseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = `${22.22 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText(' Edition', left, actualBaseline + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, actualBaseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const numberOffset = -1;\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const statWidth = 73.97 * globalScale;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${36.18 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.scale(1, 1.29);\r\n        ctx.font = ` ${34 * globalScale}px MatrixBoldSmallCaps`;\r\n        ctx.fillText(value, edge + statWidth, numberOffset + baseline / 1.29);\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = `${36.18 * globalScale}px matrix`;\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, numberOffset + baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = `${34 * globalScale}px MatrixBoldSmallCaps`;\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.scale(1, 1.29);\r\n                    ctx.fillText('?', nextEdge / condenseRatio, numberOffset + baseline / 1.29);\r\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        globalScale: number,\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n    baseDrawLinkArrowMap,\r\n    baseDrawLinkMapFoil,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinateMap,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n    PendulumNormalFontData,\r\n    PendulumSizeMap,\r\n    PendulumSize,\r\n    HALF_SCALE_WIDTH_OFFSET,\r\n} from 'src/model';\r\nimport {\r\n    checkDiplayLinkRating,\r\n    checkLightFooter,\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    createCanvas,\r\n    generateLayer,\r\n    resolveFrameStyle,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    finishTypeCardHeight,\r\n    stickerX,\r\n    stickerY,\r\n    stickerSize,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n    globalScale: number,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format, region,\r\n        hasBackground, backgroundType,\r\n        frame,\r\n        foil, finish, artFinish, otherFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumRightFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\r\n        leftFrame, rightFrame,\r\n        dyeList,\r\n        atk, def, linkMap, linkRating,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment, starList,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n        flag,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const effectBackground = effectStyle.background;\r\n    const pendulumEffectBackground = pendulumStyle.background;\r\n    const effectMinLine = effectStyle.minLine;\r\n    const pendulumEffectMinLine = pendulumStyle.minLine;\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = checkLightFooter(bottomFrame);\r\n    const {\r\n        bottomRightFrame,\r\n    } = resolveFrameStyle(\r\n        {\r\n            frame,\r\n            topLeftFrame: leftFrame,\r\n            topRightFrame: rightFrame,\r\n            bottomLeftFrame: pendulumFrame,\r\n            bottomRightFrame: pendulumRightFrame,\r\n            effectBackground: effectBackground,\r\n            pendulumEffectBackground: pendulumEffectBackground,\r\n        },\r\n        isPendulum,\r\n    );\r\n    const lightRightFooter = checkLightFooter(bottomRightFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n    const foilDyeColor = dyeList[6];\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const [\r\n        showDefAndLinkFlag,\r\n        linkRatingDisplayMode,\r\n    ] = flag;\r\n\r\n    /** One special case where we do not show link rating */\r\n    const isLinkST = !isPendulum && !isMonster && isLink && !(atk || def);\r\n    const showLinkRating = checkDiplayLinkRating(linkRatingDisplayMode, isLink) && !isLinkST;\r\n    const showDefAndLink = showLinkRating && showDefAndLinkFlag;\r\n    const statInEffect = !!(atk || def)\r\n        || showLinkRating\r\n        || !!(isPendulum && setId);\r\n    const typeInEffect = normalizedTypeAbility.length > 0\r\n        ? cardIcon === 'auto'\r\n            ? (isMonster || isSpeedSkill)\r\n            : cardIcon !== 'st'\r\n        : false;\r\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\r\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        language,\r\n        globalScale,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n    const [, iconFinish, stickerFinish] = otherFinish;\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (\r\n                ctx: CanvasRenderingContext2D,\r\n                x: number, y: number,\r\n                w: number, h: number,\r\n                customFill?: string,\r\n            ) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground\r\n                            ? (customFill ?? baseFill)\r\n                            : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                globalScale,\r\n                region,\r\n                frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\r\n                dyeList,\r\n                effectBackground, pendulumEffectBackground,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star, starList,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                pendulumFrameTypeMap: {\r\n                    red: withRedScale ? 'normal' : 'scaleless',\r\n                    blue: withBlueScale ? 'normal' : 'scaleless',\r\n                },\r\n                otherFinish,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Fill color background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(ctx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n\r\n            /** artOnCard canvas ensure the art is drawn correct size and position on the actual card, overlay for art is applied here */\r\n            const {\r\n                canvas: artOnCardCanvas,\r\n                ctx: artOnCardCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            if (artworkCanvas && artOnCardCtx) drawCardArt(artOnCardCtx);\r\n            await drawArtFinish(artOnCardCtx);\r\n            await drawArtOverlayFinish(artOnCardCtx);\r\n\r\n            /** Combine background and artwork together, overlay for background is applied here */\r\n            const {\r\n                canvas: combinedArtCanvas,\r\n                ctx: combinedArtCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            await fillBaseColor(combinedArtCtx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n            if (backgroundCanvas && combinedArtCtx) await drawBackground(combinedArtCtx, hasArtBorder);\r\n            if (!boundless) combinedArtCtx.drawImage(artOnCardCanvas, 0, 0);\r\n\r\n            /** @summary Draw the overall layout */\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            ctx.drawImage(combinedArtCanvas, 0, 0);\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. */\r\n            if (isPendulum && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                const {\r\n                    artX,\r\n                    artY,\r\n                    artWidth,\r\n                    ratio,\r\n                } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n                ctx.drawImage(\r\n                    combinedArtCanvas,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n                \r\n                /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil, true);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will be placed on top of the art border. The extended card image is still below name (text only), level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (isLink && !isPendulum) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil, true);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n\r\n                const {\r\n                    artX,\r\n                    artY,\r\n                    artWidth,\r\n                    ratio,\r\n                } = getArtCanvasCoordinate(isPendulum, opacity, 'full', pendulumSize);\r\n                ctx.drawImage(\r\n                    artOnCardCanvas,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil, true);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder({\r\n                color: '#000000',\r\n                ...resolvedStatTextStyle,\r\n            });\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            \r\n            if (showLinkRating && statInEffect) {\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                const normalizedLinkRating = typeof linkRating === 'string' && linkRating.length > 0\r\n                    ? linkRating\r\n                    : `${(Array.isArray(linkMap) ? linkMap.length : 0)}`;\r\n                await drawLinkRatingText(frameCanvasRef.current, normalizedLinkRating, resolvedStatTextStyle, globalScale);\r\n                resetStyle();\r\n            }\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                globalScale,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        artworkCanvasRef,\r\n        attribute,\r\n        backgroundCanvasRef,\r\n        backgroundType,\r\n        cardIcon,\r\n        dyeList,\r\n        effectBackground,\r\n        finish,\r\n        foil,\r\n        format,\r\n        region,\r\n        frame,\r\n        frameCanvasRef,\r\n        hasBackground,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        leftFrame,\r\n        levelStyle,\r\n        lightFooter,\r\n        linkMap,\r\n        linkRating,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        otherFinish,\r\n        pendulumEffectBackground,\r\n        pendulumFrame,\r\n        pendulumRightFrame,\r\n        pendulumSize,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        rightFrame,\r\n        showLinkRating,\r\n        star,\r\n        starList,\r\n        starAlignment,\r\n        statInEffect,\r\n        withBlueScale,\r\n        withRedScale,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW PENDULUM SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\r\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\r\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\r\n        }\r\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                nameCanvasRef.current,\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n        // const hasAtk = !!atk;\r\n        const hasDef = showLinkRating\r\n            ? !!def && showDefAndLink\r\n            : !!def;\r\n        const hasLink = showLinkRating;\r\n        if (atk) {\r\n            const offset = (hasDef ? 168.75 : 0) + (hasLink ? 168.75 : 0);\r\n            drawStatText(ctx, 'ATK', 600.85 - offset, 1106, globalScale);\r\n            drawStat(ctx, atk.trim(), 677.574 - offset, 1106.5, globalScale);\r\n        }\r\n        if (def && (!showLinkRating || showDefAndLink)) {\r\n            const offset = hasLink ? 168.75 : 0;\r\n            drawStatText(ctx, 'DEF', 600.85 - offset, 1106, globalScale);\r\n            drawStat(ctx, def.trim(), 673.865 - offset, 1106.5, globalScale);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, globalScale, atk, def, showLinkRating, isMonster, showDefAndLink, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                globalScale,\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter: lightRightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightRightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION (1st Edition Text) NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const isNumberPassword = /^[0-9]*$/.test(password);\r\n        const mayOffset = isNumberPassword && isPendulum && isLink;\r\n        const willOffset = mayOffset;\r\n        const { rightEdge } = drawPasswordText({\r\n            ctx,\r\n            globalScale,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n            textStyle: resolvedOtherEffectTextStyle,\r\n            fontLevel: !isNumberPassword ? 1 : 0\r\n        });\r\n        if (isFirstEdition) {\r\n            const willDraw = isPendulum\r\n                ? isNumberPassword ? true : false\r\n                : true;\r\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\r\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            if (willDraw) draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n                {\r\n                    stroke: false,\r\n                    globalScale,\r\n                    textStyle: {\r\n                        color: lightFooter ? '#ffffff' : '#000000',\r\n                        ...resolvedOtherEffectTextStyle,\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter: lightRightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n                globalScale,\r\n            });\r\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\r\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    globalScale,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        lightRightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            const ctx = stickerCanvasRef.current?.getContext('2d');\r\n            if (!clearCanvas(ctx)) return;\r\n            const {\r\n                canvas: stickerCanvas,\r\n                ctx: stickerContext,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            await drawSticker({\r\n                ctx: stickerContext,\r\n                sticker,\r\n                globalScale,\r\n                x: stickerX,\r\n                y: stickerY,\r\n            });\r\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\r\n            if (normalizedStickerFinish !== 'normal') {\r\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: stickerFinishCanvas,\r\n                    ctx: stickerFinishContext,\r\n                } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n                stickerFinishContext.drawImage(stickerCanvas, 0, 0);\r\n                stickerFinishContext.scale(globalScale, globalScale);\r\n                await loopStickerFinish(\r\n                    stickerFinishContext,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            stickerFinishContext,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            stickerX - finishTypeCardWidth + stickerSize, stickerY - finishTypeCardHeight + stickerSize,\r\n                        );\r\n                    },\r\n                );\r\n                stickerContext.globalCompositeOperation = 'source-in';\r\n                stickerContext.drawImage(stickerFinishCanvas, 0, 0);\r\n                ctx.drawImage(stickerCanvas, 0, 0);\r\n            } else {\r\n                ctx.drawImage(stickerCanvas, 0, 0);\r\n            }\r\n        };\r\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\r\n            const customizeEffectStyle = effectTextStyle[0];\r\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\r\n            const useItalic = customizeEffectStyle\r\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\r\n                : isNormal;\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                useItalic,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    useItalic,\r\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                    minLine: effectMinLine,\r\n                },\r\n            });\r\n            const normalizedIconFinish = iconFinish ?? 'normal';\r\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                globalScale,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : (isPendulum && pendulumSize === 'large')\r\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\r\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n                loopIconFinish,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        effectMinLine,\r\n        format,\r\n        frame,\r\n        isPendulum,\r\n        pendulumSize,\r\n        furiganaHelper,\r\n        iconFinish,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { upSize, fontStyle } = pendulumStyle ?? {};\r\n            const customPendulumStyle = pendulumTextStyle[0];\r\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\r\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\r\n            const fontDataKey = `${format}-${pendulumSize}`;\r\n            const coordinateList = PendulumEffectCoordinateMap\r\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\r\n                [pendulumSize];\r\n            /** Account for half scaleless frame */\r\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\r\n                ? coordinateList\r\n                : coordinateList.map(({\r\n                    trueEdge, trueWidth, ...rest\r\n                }) => ({\r\n                    ...rest,\r\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                    trueWidth: trueWidth\r\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\r\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                }));\r\n\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                useItalic: useItalic,\r\n                fontData: (useItalic\r\n                    ? PendulumNormalFontData\r\n                    : PendulumEffectFontData)[fontDataKey],\r\n                fontDataKey,\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: modifiedCoordinateList,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                    minLine: pendulumEffectMinLine,\r\n                }\r\n            });\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        withRedScale,\r\n        withBlueScale,\r\n        pendulumSize,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        pendulumEffectMinLine,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            if (isLink) {\r\n                const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n                const {\r\n                    artBorder: keepArtBorder,\r\n                    body: opacityBody,\r\n                    boundless,\r\n                } = normalizedOpacity;\r\n                const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless || !hasArtBorder);\r\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal', foilDyeColor);\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n            ctx.resetTransform();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        finishCanvasRef,\r\n        loopFinish,\r\n        foilDyeColor,\r\n        name,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        opacity,\r\n        boundless,\r\n        foil,\r\n        resolvedStatTextStyle,\r\n        statInEffect,\r\n        frameCanvasRef,\r\n    ]);\r\n\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (_exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        // const {\r\n        //     isRelevant,\r\n        //     pendulumSize,\r\n        //     isPendulum = false,\r\n        //     opacity,\r\n        // } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            clearCanvas(exportCtx);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxRef.current?.draw(exportCanvas);\r\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\r\n                exportCanvas,\r\n                0,\r\n                0,\r\n                exportCanvas.width,\r\n                exportCanvas.height,\r\n                0,\r\n                0,\r\n                CanvasWidth,\r\n                CanvasHeight,\r\n            );\r\n        }\r\n    }, [\r\n        language,\r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n        previewCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n    lineWidth?: number,\r\n    lineColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    globalScale,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    edgeOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    fontLevel,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    edgeOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    fontLevel: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return {\r\n        rightEdge: 0,\r\n    };\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                    globalScale,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left'\r\n            ? trueEdge + edgeOffset\r\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        rightEdge: result.tokenEdge,\r\n    };\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    globalScale,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    globalScale,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst notificationLocalStorageKey = 'ygocarder-notification';\r\nexport type NotificationMemory = {\r\n    condenseReminder: boolean,\r\n    versionReminder: string,\r\n    faqReminder: string,\r\n    feedbackReminder: boolean,\r\n};\r\nexport type NotificationStore = {\r\n    memory: NotificationMemory,\r\n    updateNotification: <Key extends keyof NotificationMemory>(\r\n        key: Key,\r\n        value: NotificationMemory[Key],\r\n    ) => void,\r\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\r\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\r\n};\r\nexport const useNotificationMemory = create<NotificationStore>((set) => {\r\n    const {\r\n        condenseReminder,\r\n        versionReminder,\r\n        faqReminder,\r\n        feedbackReminder,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useNotificationMemory: Error when getting cached notification', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        memory: {\r\n            feedbackReminder: typeof feedbackReminder === 'boolean' ? feedbackReminder : false,\r\n            faqReminder: typeof faqReminder !== 'string' ? '' : faqReminder,\r\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\r\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\r\n        },\r\n        updateNotification: (key, value) => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        },\r\n        updateNotificationMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateNotification,\r\n    } = useNotificationMemory(useShallow(({\r\n        memory,\r\n        updateNotification,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateNotification,\r\n    })));\r\n\r\n    const updateTargetNotification = useCallback(\r\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\r\n        [key, updateNotification],\r\n    );\r\n\r\n    return [targetMemory, updateTargetNotification] as const;\r\n};","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\r\nimport styled from 'styled-components';\r\n\r\n/** The container must contain this class to spread inner styling to angle picker component */\r\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\r\nconst AnglePickerContainer = styled.div`\r\n    .ap {\r\n        background-color: var(--color-heavy);\r\n        .apc {\r\n            width: 8px;\r\n        }\r\n        .aph {\r\n            width: 8px;\r\n            height: 8px;\r\n        }\r\n    }\r\n    .ai {\r\n        margin: 0;\r\n        margin-top: var(--spacing-sm);\r\n        background: var(--main-slider);\r\n        justify-content: space-between;\r\n        line-height: 1.4;\r\n        span {\r\n            background: var(--main-secondary);\r\n            padding-left: var(--spacing);\r\n            padding-right: var(--spacing);\r\n            &:hover {\r\n                background: var(--sub-secondary);\r\n            }\r\n        }\r\n        span,\r\n        input {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type CircularAnglePicker = AnglePicker & {\r\n    children?: React.ReactChild,\r\n};\r\nexport const CircularAnglePicker = ({\r\n    children,\r\n    ...rest\r\n}: CircularAnglePicker) => {\r\n    return <AnglePickerContainer className=\"angle-picker-container\">\r\n        {children}\r\n        <AnglePicker {...rest} />\r\n    </AnglePickerContainer>;\r\n};","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n`;\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span<{ $freeSize: boolean, $size: 'sm' | 'md' }>`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    ${({ $freeSize, $size }) => $freeSize\r\n        ? 'padding: 0 var(--spacing-xxs);'\r\n        : $size === 'sm' ? 'width: 18px;' : 'width: 24px;'\r\n    };\r\n    ${({ $size }) => $size === 'sm'\r\n        ? `\r\n            height: 18px;\r\n            font-size: var(--fs-sm);\r\n        `\r\n        : `\r\n            height: 24px;\r\n            font-size: var(--fs);\r\n        `}\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    size?: 'sm' | 'md',\r\n    Icon?: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    size = 'md',\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            $size={size}\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n            $freeSize={!Icon}\r\n        >\r\n            <>\r\n                {Icon && <Icon {...iconProps} />}{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    align-items: center;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import styled from 'styled-components';\r\n\r\nexport const ColorBlock = styled.div<{ $static?: boolean, $empty?: boolean }>`\r\n    height: 17px;\r\n    width: 17px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    outline: none;\r\n    box-shadow: 0 0 1px 1px var(--main-level-3);\r\n    border-radius: var(--br);\r\n    ${({ $static }) => $static\r\n        ? `\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        `\r\n        : ''}\r\n    ${({ $empty }) => $empty\r\n        ? `\r\n            background-color: var(--sub-level-4);\r\n            background-image: var(--gradient-diagonal-stripe);\r\n        `\r\n        : ''}\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n`;","import copy from 'copy-to-clipboard';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\n\r\nexport const StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\n\r\nexport type CopiableCode = {\r\n    data: string | number,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string | number) => {\r\n        copy(typeof copyingContent === 'number' ? `${copyingContent}` : copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledMono\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledMono>;\r\n};","import { Popover } from 'antd';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nexport const StyledMarkdown = styled.div`\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-3);\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    text-shadow: var(--ts);\r\n    p {\r\n        white-space: pre-line;\r\n    }\r\n    ul {\r\n        padding-inline-start: var(--spacing-2xl);\r\n        margin-block-end: 0;\r\n        li {\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    :last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\r\n    max-width: 550px;\r\n    border-radius: var(--br-lg);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n`;\r\n\r\nexport const InternalPopover = ({\r\n    content,\r\n    children,\r\n    ...rest\r\n}: React.ComponentProps<typeof Popover>) => {\r\n    if (content) {\r\n        return <Popover content={content} {...rest}>{children}</Popover>;\r\n    }\r\n    return <>{children}</>;\r\n};\r\n\r\nexport const CardActionButton = styled.button`\r\n    --overlay-size: 36px;\r\n    background: var(--main-primary);\r\n    border-width: 0;\r\n    border-style: solid;\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing-sm);\r\n    line-height: 1;\r\n    font-size: var(--fs-xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-1);\r\n    /* display: none; */\r\n    &:not(:disabled) {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        filter: opacity(0.5);\r\n    }\r\n`;\r\n\r\nexport const SolidLabel = styled.div`\r\n    display: inline-flex;\r\n    column-gap: var(--spacing-xs);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    border-radius: var(--br);\r\n    box-shadow: var(--bs-input);\r\n    .ant-checkbox-wrapper {\r\n        transform: translateY(-1px); // Alignment\r\n    }\r\n`;\r\nexport const CombinedSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 57px 39px 6px;\r\n    &.inactive {\r\n        .slider-label,\r\n        .ant-slider,\r\n        .slider-padding {\r\n            background-color: var(--main-level-3);\r\n        }\r\n    }\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        border-right: none;\r\n        border-radius: var(--br) 0 0 var(--br);\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    display: inline-block;\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;\r\n\r\nconst ResolutionLabelContainer = styled.div<{ $warning: boolean }>`\r\n    display: grid;\r\n    grid-template-columns: 3em max-content 3em;\r\n    gap: var(--spacing-xs);\r\n    .left-part {\r\n        text-align: right;\r\n    }\r\n    .right-part {\r\n        text-align: left;\r\n    }\r\n    ${({ $warning }) => $warning\r\n        ? `\r\n            color: var(--main-warning);\r\n        `\r\n        : ''}\r\n`;\r\nexport type ResolutionLabel = {\r\n    warning?: boolean,\r\n    width: number,\r\n    height: number,\r\n}\r\nexport const ResolutionLabel = ({ width, height, warning }: ResolutionLabel) => {\r\n    return <ResolutionLabelContainer $warning={warning}>\r\n        <span className=\"left-part\">{width}</span>\r\n        <span>×</span>\r\n        <span className=\"right-part\">{height}</span>\r\n    </ResolutionLabelContainer>;\r\n};\r\n\r\nconst backgroundMarch = keyframes`\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`;\r\nexport const DropZone = styled.div<{ $visible: boolean }>`\r\n\tdisplay: ${({ $visible }) => $visible ? 'flex' : 'none'};\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-color: #8888cc44;\r\n\tz-index: 1;\r\n\tfont-size: var(--fs-3xl);\r\n\talign-items: center;\r\n    justify-content: center;\r\n\ttext-shadow: 0 0 3px #222;\r\n    border: 5px dashed #cccccc;\r\n    background: linear-gradient(-45deg, #ee7752aa, #e73c7e88, #23a6d588, #23d5ab88);\r\n\tbackground-size: 400% 400%;\r\n    padding: 5px;\r\n    label {\r\n        color: var(--color-heavy);\r\n        line-height: 1.25;\r\n    }\r\n    ${css`animation: ${backgroundMarch} 6s linear infinite;`}\r\n`;\r\n\r\nexport * from './color';\r\nexport * from './copiable';","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { RadioTrain } from '../input-train';\r\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\r\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n    .list-option {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .resolution-list {\r\n        &.radio-train {\r\n            .ant-radio-button-wrapper:first-child {\r\n                border-radius: var(--br) var(--br) 0 0;\r\n            }\r\n            .ant-radio-button-wrapper:last-child {\r\n                border-radius: 0 0 var(--br) var(--br);\r\n            }\r\n        }\r\n        .radio-train-input-group {\r\n            display: inline-grid;\r\n            flex: 0 1 auto;\r\n            .ant-radio-button-wrapper {\r\n                border-left-width: 1.02px;\r\n                &:before {\r\n                    content: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        exportFormat,\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\r\n                    <RadioTrain\r\n                        className=\"resolution-list\"\r\n                        value={`${resolution[0]}x${resolution[1]}`}\r\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\r\n                            value: `${width}x${height}`,\r\n                            label: scale > 1\r\n                                ? <Popover\r\n                                    overlayClassName=\"explanation-overlay\"\r\n                                    placement=\"left\"\r\n                                    content={<StyledPopMarkdown>\r\n                                        {language['setting.option.resolution.warning']}\r\n                                    </StyledPopMarkdown>}\r\n                                >\r\n                                    <ResolutionLabel width={width} height={height} warning={true} />\r\n                                </Popover>\r\n                                : <ResolutionLabel width={width} height={height} />,\r\n                        }))}\r\n                        onChange={value => {\r\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\r\n\r\n                            if (resolutionValue) {\r\n                                updateSetting({\r\n                                    resolution: resolutionValue.settingValue,\r\n                                    globalScale: resolutionValue.scale,\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\r\n                    <RadioTrain\r\n                        value={exportFormat}\r\n                        optionList={ExportFormatList}\r\n                        onChange={value => {\r\n                            updateSetting({ exportFormat: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import styled, { css, keyframes } from 'styled-components';\r\n\r\nconst titlShaking = keyframes`\r\n    0% { transform: rotate(0deg); }\r\n    3% { transform: rotate(5deg); }\r\n    6% { transform: rotate(0eg); }\r\n    9% { transform: rotate(-5deg); }\r\n    12% { transform: rotate(0deg); }\r\n    100% { transform: rotate(0deg); }\r\n`;\r\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\r\n    text-align: center;\r\n    border: var(--bw) solid var(--main-level-3);\r\n    background-color: var(--main-level-1);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    cursor: pointer;\r\n    box-shadow: 0 0 2px 1px #2a2a2a inset;\r\n    transition: background-color 250ms linear;\r\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background: var(--main-warning);\r\n            color: var(--color-contrast);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\r\n    box-shadow: none;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    &.js-highlight {\r\n        background: var(--main-info);\r\n        text-shadow: none;\r\n        box-shadow: 0 0 2px 0 #333333;\r\n    }\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            background: var(--main-info);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background: var(--sub-info);\r\n    }\r\n`;\r\n\r\nexport const QuoteContainer = styled.div`\r\n    white-space: pre-line;\r\n    label {\r\n        font-weight: bold;\r\n        font-style: italic;\r\n        &:after {\r\n            content: \":\";\r\n        }\r\n    }\r\n    .question {\r\n        margin-left: var(--spacing);\r\n    }\r\n    .answer {\r\n        margin: var(--spacing) 0;\r\n        margin-bottom: var(--spacing-lg);\r\n    }\r\n    &:last-child {\r\n        .answer {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n`;","import { Popover } from 'antd';\r\nimport { memo, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { useNotification } from 'src/service';\r\nimport { VersionLogButtonLabel } from './styled';\r\n\r\nconst LogSentence = styled.li`\r\n    text-align: center;\r\n    .content {\r\n        text-align: left;\r\n    }\r\n    a {\r\n        display: inline-block;\r\n    }\r\n    img {\r\n        display: block;\r\n        max-width: 400px;\r\n        max-height: 300px;\r\n        margin: auto;\r\n        box-shadow: var(--bs-1);\r\n        margin-top: var(--spacing-xs);\r\n    }\r\n`;\r\n\r\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\r\nconst VersionLogStore = (() => {\r\n    let isReady = false;\r\n    let versionLog: VersionLog = [];\r\n\r\n    return {\r\n        getLog: async () => {\r\n            if (isReady) return versionLog;\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/log/version.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            try {\r\n                const responseLog = await response.json();\r\n                versionLog = responseLog;\r\n                isReady = true;\r\n\r\n                return versionLog;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return [];\r\n        }\r\n    };\r\n})();\r\nexport const VersionLog = () => {\r\n    const [log, setLog] = useState<VersionLog>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const log = await VersionLogStore.getLog();\r\n\r\n            setLoading(false);\r\n            setLog(log);\r\n        })();\r\n    }, []);\r\n\r\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\r\n    if (loading) return <div>Loading changelog...</div>;\r\n    return <div>\r\n        {log.map(({ logList, version }, index) => {\r\n            return <div key={`${version}-${index}`} className=\"log-section\">\r\n                <b>{version}</b><br />\r\n                <ul>\r\n                    {/* Using index as key here is safe as the component is stateless */}\r\n                    {logList.map(({ content, image }, index) => {\r\n                        return <LogSentence key={index}>\r\n                            <div className=\"content\">\r\n                                {content}\r\n                            </div>\r\n                            {image && <a target=\"_blank\" rel=\"noreferrer\" href={image} title=\"Click to open in new tab\">\r\n                                <img src={image} alt={`version-${version}-illust`} />\r\n                            </a>}\r\n                        </LogSentence>;\r\n                    })}\r\n                </ul>\r\n            </div>;\r\n        })}\r\n    </div>;\r\n};\r\n\r\nconst compareSemver = (a: string, b: string): boolean => {\r\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\r\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\r\n    \r\n    if (majorA !== majorB) {\r\n      return majorA > majorB;\r\n    }\r\n    \r\n    if (minorA !== minorB) {\r\n      return minorA > minorB;\r\n    }\r\n    \r\n    return patchA > patchB;\r\n};\r\n\r\nconst StyledVersionLog = styled(StyledPopMarkdown)`\r\n    overflow: auto;\r\n    width: 550px;\r\n    max-height: 300px;\r\n    width: 550px;\r\n    .log-section + .log-section {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nexport const VersionLogButton = memo(() => {\r\n    const [animating, setAnimating] = useState(false);\r\n    const [\r\n        version,\r\n        setMemoizedVersion,\r\n    ] = useNotification('versionReminder');\r\n\r\n    useEffect(() => {\r\n        if (version) {\r\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\r\n            const memoizedSemver = version;\r\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\r\n\r\n            if (compareSemver(currentSemver, memoizedSemver)) {\r\n                setAnimating(true);\r\n                setTimeout(() => {\r\n                    setAnimating(false);\r\n                }, 8000);\r\n            }\r\n        }\r\n    }, [setMemoizedVersion, version]);\r\n\r\n    return <Popover\r\n        placement=\"bottom\"\r\n        content={<StyledVersionLog>\r\n            <VersionLog />\r\n        </StyledVersionLog>}\r\n    >\r\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\r\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\r\n        </VersionLogButtonLabel>\r\n    </Popover>;\r\n});","import { Modal, notification, Tabs } from 'antd';\r\nimport { FaqButtonLabel, QuoteContainer } from './styled';\r\nimport { useNotification } from 'src/service';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport const FAD_BUTTON_ID = 'faq-button';\r\n\r\ntype Quote = {\r\n    author?: string,\r\n    question: string,\r\n    children: React.ReactNode,\r\n}\r\nconst Quote = ({\r\n    author,\r\n    question,\r\n    children,\r\n}: Quote) => {\r\n    return <QuoteContainer>\r\n        <blockquote>\r\n            {author && <label>{author}</label>}\r\n            <div className=\"question\">{question}</div>\r\n        </blockquote>\r\n        <div className=\"answer\">{children}</div>\r\n    </QuoteContainer>;\r\n};\r\n\r\nexport const QuestionAndFeedback = () => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [animating, setAnimating] = useState(false);\r\n    const [faqReminder, setMemoizedReminder] = useNotification('faqReminder');\r\n    const [feedbackReminder, setFeedbackReminder] = useNotification('feedbackReminder');\r\n\r\n    useEffect(() => {\r\n        const currentReminder = '28/06/2025';\r\n        if (faqReminder !== currentReminder) {\r\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(currentReminder);\r\n\r\n            setAnimating(true);\r\n            setTimeout(() => {\r\n                setAnimating(false);\r\n            }, 8000);\r\n        }\r\n    }, [setMemoizedReminder, faqReminder]);\r\n\r\n    useEffect(() => {\r\n        if (feedbackReminder !== true) {\r\n            setFeedbackReminder(true);\r\n            setAnimating(true);\r\n            notification.info({\r\n                message: 'Feedback Reminder',\r\n                description: 'If you have any feedback or suggestion, please check the FAQ button first to see if your feedback has been addressed.',\r\n                duration: 10,\r\n                onClose: () => {\r\n                    setAnimating(false);;\r\n                }\r\n            });\r\n        }\r\n    }, [feedbackReminder, setFeedbackReminder]);\r\n\r\n    return <>\r\n        <FaqButtonLabel id={FAD_BUTTON_ID} $animating={animating} onClick={() => setVisible(cur => !cur)}>\r\n            {'FAQ'}\r\n        </FaqButtonLabel>\r\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\r\n            <Tabs>\r\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\r\n                    <div><i>Solved feedbacks are removed.</i></div>\r\n                    <br />\r\n                    {[\r\n                        {\r\n                            author: 'New Feature Suggestion at Jul 12, 2025',\r\n                            question: 'For the card art, maybe you could make a drag and drop feature to it?',\r\n                            answer: 'I have added the feature, you may try it now.'\r\n                        },\r\n                        {\r\n                            author: 'TheTonyB at Jul 10, 2025',\r\n                            question: 'Can you add support for greek letters in TCG format? Currently, the only ones that work fine are α, β, Ω, and I think μ too. In OCG format they all work perfectly. I included a screeenshot of me trying to use the greek letter Ν. Goated card maker by the way.',\r\n                        },\r\n                        {\r\n                            author: 'TheTonyB at Jul 10, 2025',\r\n                            question: 'Can you improve compatibility with greek letters in TCG format? The only ones that work fine are α, β and Ω. In OCG format they all work perfectly.',\r\n                            answer: 'I have updated font, hopefully it looks better now.'\r\n                        },\r\n                        {\r\n                            author: 'San_San at Jul 10, 2025',\r\n                            question: 'Al escribir en español las vocales con tilde sobresalen ligeramente del resto de letras',\r\n                            answer: 'Can you provide an example image? As far as I check words like \"número\" or \"además\" looks normal to me.'\r\n                        },\r\n                        {\r\n                            author: 'Error \"é\" at Jun 30, 2025',\r\n                            question: 'There is a problem with the writing. The line wrap is sometimes incorrect when using this \"é\" character.\\nThe last word is \"Matériel\". The last word should not be cut.',\r\n                            answer: 'I have updated the algorithm to have a better behavior for non-alphabet letters. But in case it goes wrong, you can always use non-breakable text syntax to keep the word in line.'\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 30, 2025',\r\n                            question: 'Having a format similar for cards similar to Master Duel cards.',\r\n                            answer: 'I have no plan to support format like Master Duel right now.'\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 29, 2025',\r\n                            question: 'Add a predefined rainbow gradient for Name Styles similar to the one for Secret Rares in Simplified Chinese\\'s proxies',\r\n                            answer: 'I don\\'t think I can do it. I don\\'t even know what those proxies look like.'\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 28, 2025',\r\n                            question: 'It seems to me that the attribute \"darkness\" in French is not the correct image. The name \"Ténèbres\" is written in larger letters (less constricted) and extends beyond the circle because it is a long word.\\nMaybe the same problem for light too \"LUMIERE\".\\nSee this link:\\nhttps://yugioh.fandom.com/fr/wiki/T%C3%89N%C3%88BRES',\r\n                            answer: 'I have updated the icon, hopefully it looks better now.'\r\n                        },\r\n                        {\r\n                            author: 'Blake Jun at 27, 2025',\r\n                            question: 'Can you make a website with rush duel. card templates just like this one? Not only effect and fusion, but all card types.',\r\n                        },\r\n                        {\r\n                            author: 'Blake Jun at 27, 2025',\r\n                            question: 'Can you also put in the link in the description?',\r\n                            answer: 'At the moment, no. You may check the FAQ for more detail.'\r\n                        },\r\n                        {\r\n                            author: 'Skip at Jun 27, 2025',\r\n                            question: 'Good job! I notice a mistake with the attribute spell card in french. It is not \"SPELL\" but \"MAGIE\" we should use.',\r\n                            answer: 'Indeed, I have messed up the Spell attribute between French and German cards. It should be fixed by now.'\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 24, 2025',\r\n                            question: 'In a line with brackets (), with no justifing syntax, the line with brackets will appear more compressed compared to a line with no brackets',\r\n                            answer: 'The first line (\"3 Xyz...\") is using the non-breakable line syntax, which does not obey the overall compressing ratio. I will update the description to make it more clear.'\r\n                        },\r\n                        {\r\n                            author: 'Blake at Jun 23, 2025',\r\n                            question: 'When choose an image for the background of the card, not only it covers the card but also the main image of the card. Can you do something to fix it please?',\r\n                            answer: 'Hi there, the background system is indeed has a bug, but in your case, it seems that you are using the \"Replace Frame\" option, which will replace the usual card frame (Normal, Effect, etc...) with your background. You may want to switch cover type into \"Fit to art border\" instead.',\r\n                        },\r\n                        {\r\n                            author: 'Die Frauen at Jun 22, 2025',\r\n                            question: 'Looking good. One last change for now I\\'d like to see is, if you could implement that dye feature on the card layout for the card frames as well. That way you could get different variations from just Gold and Platinum',\r\n                            answer: 'Update: I already implement the feature.\\nFoil system contains more parts, but I think it should be doable. I will look into it later.',\r\n                        },\r\n                        {\r\n                            author: 'Rush Duel at Jun 22, 2025',\r\n                            question: 'This card maker is amazing! Have you ever consider doing a rush duel section as well?',\r\n                            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\r\n                        },\r\n                        {\r\n                            author: 'Die Frauen at Jun 22, 2025',\r\n                            question: 'Fantastic job, you understood the assignment. It sappears it still needs to be better centered out , the custom array is a bit skewed to the right, and it appears the toggle to move them to the left/center aren\\'t quite there yet.\\n\\nA minor update I would like is, to add a \"normal spell/trap\" icon, I think you can find it on the wiki if you look it up, as a blank template.',\r\n                        },\r\n                        {\r\n                            author: 'Die Frauen at Jun 22, 2025',\r\n                            question: 'Addendum (Disregard the alignment comment, or to rephrase, it works fine. I was under the impression it would align on its own, and put the level at the edges and it projected as though it were the 13th icon).\\n\\nI assume you can organize those manually, but for all intents and purposes it is perfectly functional!',\r\n                            answer: 'Come to think of it, maybe the star editor is not intuitive enough to use, so I have updated it a bit more. Also the normal icon for Spell/Trap is now available.',\r\n                        },\r\n                        {\r\n                            author: 'Die Frauen at Jun 19, 2025',\r\n                            question: 'This may be a bit crazy, but since you\\'ve already come a long way with customization, do you think it\\'d be possible to toggle Star Types to be sorted manually in any combinations of the ones currently available?\\n\\nAnd on that note, and this here may be a bit too out there, but do you think you could use the Spell/Trap iconography as you would any of those? And if it\\'s not too much of a bother, maybe the monster Attributes downsized on that row as well?',\r\n                            answer: 'Putting Spell/Trap/Monster Attribute icon in star slots is possible. As for manual icon of each star slot, I think *technically* it should be doable, but I need to do a bit more test, probably will look into it this weekend.\\nUpdate: I have added those options, you may try it out now.',\r\n                        },\r\n                        {\r\n                            author: 'Die Frauen at Jun 19, 2025',\r\n                            question: 'Hello, first of all I would like to congratulate you on creating what\\'s probably the best card editor there is, and thank you for making things convenient for everyone using it. I shall formally make a request of sorts in a different report, but I couldn\\'t just not commend the efforts you and all others involved have done. Even managed to  mesh together the Link Arrows for a Pendulum frame in a not entirely unsightly way, and the new hue feature for advanced layouts is also superb for custom card frame efforts.\\n\\nSuperb work, keep it up',\r\n                            answer: 'Thanks for your kind words, appreciate your support.',\r\n                        },\r\n                        {\r\n                            author: 'Not really a feedback but... at Jun 19, 2025',\r\n                            question: 'It would be cool to see the Attributes in other languages available in TCG',\r\n                            answer: 'I have added many more Attributes that I could find on Yugipedia.',\r\n                        },\r\n                        {\r\n                            author: 'KaibaSetoo at Jun 15, 2025',\r\n                            question: 'Hello, can you fix the scale number 10, 11 and 12. They are not in the center of the scale value border. Thank you.',\r\n                            answer: 'I have updated some cases, but please note that some scale numbers does not place at the center of the box at all, but deviated a bit to the right side (very clear in cards like \"D/D Savant Kepler\").',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 16, 2025',\r\n                            question: 'Can you change back the *LINK-* text as before, like before the increase card larger update, the letter *L* is now higher.',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 16, 2025',\r\n                            question: 'And the LINK number are now higher then the text too.',\r\n                        },\r\n                        {\r\n                            author: 'TheDuelistt at Jun 15, 2025',\r\n                            question: 'Can you make this L letter to be consistent with the rest of the INK, also, can you make the Link Rating value (number) lower and consistent with the INK, and the dash \"-\" a little bolder, so that the overall look is similar to the official Konami Yugioh Card template. Thank you.',\r\n                            answer: 'I have updated the layer, hopefully it look better now.',\r\n                        },\r\n                        {\r\n                            author: 'text format at Jun 14, 2025',\r\n                            question: 'The text format looks completely different with the pendulum effect than with the monster effect',\r\n                            answer: 'Text effect is automatically calculated to best fit in the card, I always recommended to let it flow naturally, but regardless, I have added input to define the minimum lines of effect you would want in your cards.',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 14, 2025',\r\n                            question: 'The outline is a bit uneven depending on the letter.',\r\n                            answer: 'This is a known issue, unfortunately this is the best I can offer right now.',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 14, 2025',\r\n                            question: 'Justify doesn\\'t seem to work',\r\n                            answer: 'It should work normally by now.',\r\n                        },\r\n                        {\r\n                            author: 'Phan Trí Dĩ at Jun 11, 2025',\r\n                            question: 'Hi, firstly, I want to thanks to your hardwork for making a wonderful website, very appreciate your work. There\\'s some K9 card with a special hash sign. It get a bit smaller when I use it. I wondering if you can fix it. Thank you very much.',\r\n                            answer: 'Hi there. There are two parts of the problem here:\\nThe first thing is the hash sign, which is not a bug. This design has been used on many cards in the past, for example \"Hi-Speedroid Glider #2\", and there is no sign that it would be different this time.\\nThe second thing is the letter \"Ø\", which currently only appear on the OCG card, as Lupus itself is not yet revealed for TCG, we doesn\\'t know if the TCG would keep this letter or not.',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 06, 2025',\r\n                            question: 'When using the Link Arrows on a Pendulum card, the Link Rating disappears',\r\n                            answer: 'It should be fixed by now',\r\n                        },\r\n                        {\r\n                            author: 'Shanaya User at Jun 04, 2025',\r\n                            question: 'I would like to request another artwork effect like this, like the effect of the attached picture its a secret rare effect',\r\n                            answer: 'I have added finish type 9, this is my best and final attempt, sorry if it does not match your need.',\r\n                        },\r\n                        {\r\n                            author: 'Yugiohfann at Jun 03, 2025',\r\n                            question: 'Please fix the ATK/DEF font text, the numbers are higher than the ATK/DEF text.',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 03, 2025',\r\n                            question: 'Small adjustment for size and style of card stats (ATK, DEF). Can you bring back the old size and style of card stats. Now the stats are higher than the ATK and DEF text.',\r\n                            answer: 'Can you provide a sample image so I can see the difference? I cannot take action blindly wihout any reference.',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at Jun 02, 2025',\r\n                            question: 'please can you add sizing selection in card name? please? thank you!',\r\n                            answer: 'Can you provide a sample image of the old card? I would like to take a look to see if it is possible to implement it or not.',\r\n                        },\r\n                        {\r\n                            author: 'Maya at May 23, 2025',\r\n                            question: 'I\\'d like to make a request, is it possible to put a SPEED DUEL watermark in EVERY card types in the description area like the Speed Skill type when it is set to speed duel? thank you so much. Appreciate your lovely cardmaker',\r\n                            answer: 'I will try, but this is pretty hard to do to be honest, don\\'t keep your hope up.',\r\n                        },\r\n                    ].map(({ author, question, answer }, index) => {\r\n                        return <Quote key={index} author={author} question={question}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\r\n                    {[\r\n                        {\r\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\r\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\r\n                        },\r\n                        {\r\n                            question: 'Will you make another version for Rush Duel cards?',\r\n                            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\r\n                        }\r\n                    ].map(({ question, answer }, index) => {\r\n                        return <Quote key={index} question={question}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n            </Tabs>\r\n        </Modal>\r\n    </>;\r\n};","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage } from 'src/service';\r\nimport { Radio, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\nimport { VersionLogButton } from './version-log';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { FAD_BUTTON_ID, QuestionAndFeedback } from './faq';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\r\n                    <span\r\n                        className=\"bug-report\"\r\n                        onMouseOver={() => {\r\n                            document.getElementById(FAD_BUTTON_ID)?.classList.add('js-highlight');\r\n                        }}\r\n                        onMouseOut={() => {\r\n                            document.getElementById(FAD_BUTTON_ID)?.classList.remove('js-highlight');\r\n                        }}\r\n                    >\r\n                        <div id=\"sentry-bug-report\">\r\n                            {language['contributor.bug-report.tooltip']}\r\n                        </div>\r\n                    </span>\r\n                </Tooltip>\r\n                <QuestionAndFeedback />\r\n                <VersionLogButton />\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<StyledPopMarkdown className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasPanel = () => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledPopMarkdown className=\"disclaimer\">\r\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n    </StyledPopMarkdown>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<TaintedCanvasPanel />}\r\n    />;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { StyledCode } from '../atom';\r\nimport './formatting-guide.scss';\r\n\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n    h2 {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-6.label']}</h2>\r\n                {language['guide.format.section-6.content'](\r\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'justified non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'justified non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import React from 'react';\r\nimport { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n    &:focus {\r\n        background-color: var(--main-level-3);\r\n    }\r\n    &:focus-visible {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    id,\r\n    tabIndex,\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n    onClick,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & {\r\n    id?: string,\r\n    tabIndex?: number,\r\n    className?: string,\r\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\r\n}) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        id={id}\r\n        tabIndex={tabIndex}\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n        onClick={onClick}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useGlobal, useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport { DropZone } from '../atom';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nexport const CROPPER_WIDTH = 375;\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\nexport const isCropEqual = (cropL: Partial<ReactCrop.Crop>, cropR: Partial<ReactCrop.Crop>) => {\r\n    const { aspect: aspectL, height: heightL, unit: unitL, width: widthL, x: xL, y: yL } = cropL;\r\n    const { aspect: aspectR, height: heightR, unit: unitR, width: widthR, x: xR, y: yR } = cropR;\r\n    if (Math.abs(widthL - widthR) > 0.01) return false;\r\n    if (Math.abs(heightL - heightR) > 0.01) return false;\r\n    if (Math.abs(xL - xR) > 0.01) return false;\r\n    if (Math.abs(yL - yR) > 0.01) return false;\r\n    if (Math.abs(aspectL - aspectR) > 0.01) return false;\r\n    if (unitL !== unitR) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / CROPPER_WIDTH;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: (crossorigin?: string) => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [activeDropzone, setActiveDropzone] = useGlobal('activeDropzone');\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (fileList: FileList) => {\r\n        const targetFile = fileList[0];\r\n        const maxFileSize = 4;\r\n\r\n        if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n            setLoading(true);\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () => {\r\n                if (typeof reader.result === 'string') {\r\n                    setCrossOrigin('anonymous');\r\n                    setInternalSource(reader.result);\r\n                    setSourceType('offline');\r\n                    setInputMode('offline');\r\n                    onSourceChange('offline', reader.result);\r\n                    setLoading(false);\r\n                }\r\n            });\r\n            reader.readAsDataURL(targetFile);\r\n        } else {\r\n            onMaxSizeExceeded(maxFileSize);\r\n        }\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded(crossorigin);\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [crossorigin, onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setCrossOrigin('anonymous');\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0 || isLoading) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setCrossOrigin('anonymous');\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={mergeClass('card-image-cropper', className)}>\r\n            <div className=\"card-image-source-input\">\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        setCrossOrigin('anonymous');\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                    // setLoading(true);\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Tooltip\r\n                                title={<div className=\"image-info\">\r\n                                    {language['image-cropper.online-tip']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                    {language['image-cropper.source.online.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                            <Tooltip\r\n                                title={<div className=\"image-warning\">\r\n                                    {language['image-cropper.offline-warning']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={e => {\r\n                                if (e.target.files && e.target.files.length > 0) {\r\n                                    applyOfflineSource(e.target.files);\r\n                                } else alert(language['image-cropper.not-found-warning']);\r\n                            }}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {children}\r\n            </div>\r\n            {beforeCropper}\r\n            <div\r\n                className={mergeClass('card-cropper')}\r\n                onKeyDown={() => {\r\n                    /** Nudge selection also count as user interaction */\r\n                    setInteracted(true);\r\n                }}\r\n            >\r\n                <DropZone\r\n                    $visible={activeDropzone > 0}\r\n                    className=\"drop-zone\"\r\n                    onDragOver={e => e.preventDefault()}\r\n                    onDrop={e => {\r\n                        e.preventDefault();\r\n                        setActiveDropzone(0);\r\n                        if (e.currentTarget.classList.contains('drop-zone')) {\r\n                            // const itemList = e.dataTransfer.items;\r\n                            // for (let cnt = 0; cnt < itemList.length; cnt++) {\r\n                            //     console.log(`kind = ${itemList[cnt].kind}, type = ${itemList[cnt].type}`);\r\n                            //     itemList[cnt].getAsString((value) => {/** Redundant to support paste image link here */ });\r\n                            // }\r\n                            const fileList = e.dataTransfer.files;\r\n                        console.log('dropped', fileList);\r\n                            applyOfflineSource(fileList);\r\n                        }\r\n                    }}\r\n                >\r\n                    <label>{language['image-cropper.drop.tooltip']}</label>\r\n                </DropZone>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <Tooltip\r\n                        placement=\"left\"\r\n                        overlay={forceFit\r\n                            ? language['image-cropper.button.use-crop.tooltip']\r\n                            : language['image-cropper.button.force-fit.tooltip']}\r\n                    >\r\n                        <div\r\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                            onClick={() => {\r\n                                setInteracted(true);\r\n                                onForceFitChange(!forceFit);\r\n                            }}\r\n                        >\r\n                            <FullscreenOutlined />\r\n                        </div>\r\n                    </Tooltip>\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\r\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { width, x } = cur.completed ?? {};\r\n\r\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    x: (100 - width) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\r\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { height, y } = cur.completed ?? {};\r\n\r\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    y: (100 - height) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                </div>}\r\n                {((!hasImage || (error && crossorigin === undefined)) && !isLoading) && <Empty\r\n                    description={language['image-cropper.not-found-warning']}\r\n                    image={null}\r\n                />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        if (!receivingCanvas) {\r\n                            pendingCrop.current = {\r\n                                source: '',\r\n                                crop: null,\r\n                            };\r\n                            setLoading(false);\r\n                            setError('No receiving canvas');\r\n                            onTainted();\r\n                        }\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            pendingCrop.current = {\r\n                                source: '',\r\n                                crop: null,\r\n                            };\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded(crossorigin);\r\n                            setLoading(false);\r\n                            setError('Image not found');\r\n                        } else {\r\n                            setCrossOrigin(undefined);\r\n                            onTainted();\r\n                        }\r\n                        if (crossorigin === undefined) {\r\n                            setLoading(false);\r\n                            setError('Tainted canvas');\r\n                        }\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop || isLoading) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop || isLoading) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});","\r\nimport { Input } from 'antd';\r\nimport { useColorPicker } from 'src/service';\r\nimport { getContrastColor } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { ColorBlock } from '../atom';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        gap: 3px; // Alignment\r\n        padding-left: 3px; // Alignment\r\n        input {\r\n            width: 58px; // Alignment\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\n\r\nexport type InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nexport const InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                const dotColor = getContrastColor(rgb);\r\n\r\n                return <ColorBlock key={hex}\r\n                    className=\"color-block\"\r\n                    title={hex}\r\n                    style={{ backgroundColor: hex }}\r\n                    onClick={() => onChange?.(hex)}\r\n                >\r\n                    {color.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </ColorBlock>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <ColorBlock $static style={{ backgroundColor: color.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={inputText}\r\n                onChange={e => {\r\n                    setColor(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};","import { Input } from 'antd';\r\nimport { CustomPicker, InjectedColorProps } from 'react-color';\r\nimport { Saturation } from 'react-color/lib/components/common';\r\nimport { UseColorPicker, useColorPicker } from 'src/service';\r\nimport { getContrastColor } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { ColorBlock } from '../atom';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { IconButton } from '../icon-button';\r\n\r\nconst SaturationBoardContainer = styled.div`\r\n    position: relative;\r\n    border-radius: var(--br);\r\n    > div,\r\n    .saturation-white,\r\n    .saturation-black {\r\n        border-radius: var(--br);\r\n    }\r\n`;\r\n\r\ntype UnlinkedSaturationBoard = InjectedColorProps;\r\nconst UnlinkedSaturationBoard = ({\r\n    onChange,\r\n    ...props\r\n}: UnlinkedSaturationBoard) => {\r\n    return <SaturationBoardContainer>\r\n        <Saturation\r\n            {...props}\r\n            onChange={color => {\r\n                onChange?.(color);\r\n            }}\r\n        />\r\n    </SaturationBoardContainer>;\r\n};\r\nconst SaturationBoard = CustomPicker(UnlinkedSaturationBoard);\r\n\r\nconst HorizontalSketchColorList = [\r\n    { hex: '#B80000', rgb: [184, 0, 0] },\r\n    { hex: '#EB9694', rgb: [235, 150, 148] },\r\n    { hex: '#DB3E00', rgb: [219, 62, 0] },\r\n    { hex: '#FAD0C3', rgb: [250, 208, 195] },\r\n    { hex: '#FCCB00', rgb: [252, 203, 0] },\r\n    { hex: '#FEF3BD', rgb: [254, 243, 189] },\r\n    { hex: '#008B02', rgb: [0, 139, 2] },\r\n    { hex: '#C1E1C5', rgb: [193, 225, 197] },\r\n    { hex: '#006B76', rgb: [0, 107, 118] },\r\n    { hex: '#BEDADC', rgb: [190, 218, 220] },\r\n    { hex: '#1273DE', rgb: [18, 115, 222] },\r\n    { hex: '#C4DEF6', rgb: [196, 222, 246] },\r\n    { hex: '#004DCF', rgb: [0, 77, 207] },\r\n    { hex: '#BED3F3', rgb: [190, 211, 243] },\r\n    { hex: '#5300EB', rgb: [83, 0, 235] },\r\n    { hex: '#D4C4FB', rgb: [212, 196, 251] },\r\n];\r\n\r\nconst HorizontalSketchPickerContainer = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 3.5rem 5rem max-content 1fr;\r\n    gap: var(--spacing-sm);\r\n    .color-input {\r\n        .color-state {\r\n            display: flex;\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n        ${ColorBlock} {\r\n            display: inline-block;\r\n            flex: 1;\r\n            border: var(--bw) solid var(--sub-level-2);\r\n            height: 18px;\r\n        }\r\n    }\r\n    .color-list {\r\n        display: grid;\r\n        grid-template-columns: repeat(${HorizontalSketchColorList.length / 4}, max-content);\r\n        border-radius: var(--br);\r\n        overflow: hidden;\r\n        ${ColorBlock} {\r\n            height: 15px;\r\n            width: 15px;\r\n            box-shadow: none;\r\n            border-radius: 0;\r\n        }\r\n    }\r\n`;\r\nexport type HorizontalSketchPicker = {\r\n    children?: React.ReactNode,\r\n} & UseColorPicker;\r\nexport const HorizontalSketchPicker = ({\r\n    children,\r\n    onChange,\r\n    value,\r\n}: HorizontalSketchPicker) => {\r\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\r\n    const noColor = inputText === '';\r\n\r\n    return <HorizontalSketchPickerContainer className=\"horizontal-sketch-picker\">\r\n        <div className=\"input-label\">\r\n            {children}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-state\">\r\n                <ColorBlock\r\n                    $empty={noColor}\r\n                    style={noColor ? {} : { backgroundColor: color.hex }}\r\n                />\r\n                <IconButton\r\n                    size=\"sm\"\r\n                    Icon={CloseOutlined}\r\n                    onClick={() => {\r\n                        onChange('');\r\n                    }}\r\n                />\r\n            </div>\r\n            <Input\r\n                size=\"small\"\r\n                value={inputText}\r\n                onChange={e => {\r\n                    setColor(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n        <div className=\"color-list\">\r\n            {HorizontalSketchColorList.map(({ hex, rgb }) => {\r\n                const dotColor = getContrastColor(rgb);\r\n\r\n                return <ColorBlock key={hex}\r\n                    className=\"color-block\"\r\n                    title={hex}\r\n                    style={{ backgroundColor: hex }}\r\n                    onClick={() => onChange?.(hex)}\r\n                >\r\n                    {color.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </ColorBlock>;\r\n            })}\r\n        </div>\r\n        <SaturationBoard color={color.hex} onChange={({ hex }) => setColor(hex)} />\r\n    </HorizontalSketchPickerContainer>;\r\n};","import { Modal } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { CanvasConst } from 'src/model';\r\nimport {\r\n    TransformWrapper,\r\n    TransformComponent,\r\n    ReactZoomPanPinchContentRef,\r\n} from 'react-zoom-pan-pinch';\r\nimport styled from 'styled-components';\r\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\r\nimport { CardActionButton } from '../atom';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nconst StyledLightboxContainer = styled.div`\r\n    width: ${CanvasWidth}px;\r\n    height: ${CanvasHeight}px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    line-height: 0;\r\n    .card-lightbox-control {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: var(--spacing);\r\n        right: var(--spacing);\r\n        user-select: none;\r\n        text-align: right;\r\n        .action-list {\r\n            display: inline-flex;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .control-info {\r\n            background-color: var(--main-level-1);\r\n            padding: var(--spacing-xs);\r\n            margin-top: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            line-height: 1;\r\n            box-shadow: var(--bs-1);\r\n        }\r\n    }\r\n    .card-lightbox-content {\r\n        cursor: grab;\r\n    }\r\n`;\r\n\r\nconst MAX_ZOOM = 4;\r\nconst Controls = ({\r\n    zoomIn,\r\n    zoomOut,\r\n    resetTransform,\r\n    setTransform,\r\n    scale,\r\n    globalScale,\r\n    width,\r\n    height,\r\n}: ReactZoomPanPinchContentRef & {\r\n    scale: number,\r\n    globalScale: number,\r\n    width: number,\r\n    height: number,\r\n}) => {\r\n    return <div className=\"control-container\">\r\n        <div className=\"action-list\">\r\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\r\n                zoomIn();\r\n            }}>\r\n                <ZoomInOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\r\n                zoomOut();\r\n            }}>\r\n                <ZoomOutOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                resetTransform();\r\n            }}>\r\n                <FullscreenExitOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                setTransform(\r\n                    -Math.max(0, width - CanvasWidth) / 2,\r\n                    -Math.max(0, height - CanvasHeight) / 2,\r\n                    1,\r\n                );\r\n            }}>\r\n                <FullscreenOutlined />\r\n            </CardActionButton>\r\n        </div>\r\n        <div className=\"control-info\">\r\n            {scale && <>×{\r\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\r\n            }</>}&nbsp;({width} × {height})\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport type Lightbox = {\r\n    globalScale: number,\r\n};\r\nexport type LightboxRef = {\r\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\r\n    draw: (targetCanvas: HTMLCanvasElement) => void,\r\n    refresh: () => void,\r\n    getCanvasKey: () => number,\r\n};\r\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\r\n    globalScale,\r\n}, ref) => {\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\r\n    const [scale, setScale] = useState(() => 1 / globalScale);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setVisible: setLightboxVisible,\r\n        draw: targetCanvas => {\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\r\n                targetCanvas,\r\n                0,\r\n                0,\r\n            );\r\n        },\r\n        refresh: () => setCanvasKey(cnt => cnt + 1),\r\n        getCanvasKey: () => canvasKey,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        lightboxRef.current?.resetTransform();\r\n    }, [globalScale]);\r\n\r\n    return <Modal\r\n        width={`${CanvasWidth + 15 * 2}px`}\r\n        wrapClassName=\"card-lightbox-overlay\"\r\n        visible={lightboxVisible}\r\n        forceRender={true}\r\n        onCancel={() => setLightboxVisible(false)}\r\n        footer={null}\r\n    >\r\n        <StyledLightboxContainer\r\n            className=\"card-lightbox-container\"\r\n        >\r\n            <TransformWrapper ref={lightboxRef}\r\n                initialScale={1 / globalScale}\r\n                initialPositionX={0}\r\n                initialPositionY={0}\r\n                minScale={1 / globalScale}\r\n                maxScale={MAX_ZOOM}\r\n                onTransformed={ref => {\r\n                    setScale(ref.state.scale);\r\n                }}\r\n            >\r\n                {({ ...utils }) => {\r\n                    return <>\r\n                        <div\r\n                            className=\"card-lightbox-control\"\r\n                        >\r\n                            <Controls\r\n                                {...utils}\r\n                                scale={scale}\r\n                                globalScale={globalScale}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </div>\r\n                        <TransformComponent\r\n                            wrapperClass=\"card-lightbox-content\"\r\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\r\n                        >\r\n                            <canvas key={canvasKey + 0.1}\r\n                                id=\"lightbox-canvas\"\r\n                                ref={lightboxCanvasRef}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </TransformComponent>\r\n                    </>;\r\n                }}\r\n            </TransformWrapper>\r\n        </StyledLightboxContainer>\r\n    </Modal>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst LINK_MARKER_HALF_SIZE = 13;\r\nexport const LINK_MARKER_PICKER_WIDTH = 3 * 2 * LINK_MARKER_HALF_SIZE + 5 * 2; // 5 = --spacing-xs\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: ${LINK_MARKER_HALF_SIZE}px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    display: inline-block;\r\n    .title {\r\n        line-height: 1;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkerPicker = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkerPicker = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkerPicker) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-picker', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import { Menu, Popover } from 'antd';\r\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-setting {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nexport type ResolutionPicker = {\r\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ResolutionPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ResolutionPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.resolution.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ResolutionList.map(({ width, height, label, scale }) => {\r\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        resolution: [width, height],\r\n                        globalScale: scale,\r\n                    });\r\n                    onChange?.([width, height], scale);\r\n                }}\r\n            >\r\n                {scale > 1\r\n                    ? <Popover\r\n                        overlayClassName=\"explanation-overlay\"\r\n                        placement=\"left\"\r\n                        content={<StyledPopMarkdown>\r\n                            {language['setting.option.resolution.warning']}\r\n                        </StyledPopMarkdown>}\r\n                    >\r\n                        <ResolutionLabel width={width} height={height} warning={true} />\r\n                    </Popover>\r\n                    : <ResolutionLabel width={width} height={height} />}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};\r\n\r\nexport type ExportFormatPicker = {\r\n    onChange?: (nextFormat: ExportFormat) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ExportFormatPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ExportFormatPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        exportFormat,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, exportFormat },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        exportFormat,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.export-format.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ExportFormatList.map(({ value, label }) => {\r\n            return <StyledDownloadDropdownOption key={label}\r\n                className={value === exportFormat ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        exportFormat: value,\r\n                    });\r\n                    onChange?.(value);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdownLabel = styled.div`\r\n    color: var(--color);\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    padding: 0 var(--spacing);\r\n    padding-bottom: var(--spacing-xs);\r\n    line-height: 1;\r\n    cursor: default;\r\n    &:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './angle-picker';\r\nexport * from './app-header';\r\nexport * from './atom';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './image-cropper';\r\nexport * from './inline-color-picker';\r\nexport * from './inline-sketch-picker';\r\nexport * from './input-train';\r\nexport * from './lightbox';\r\nexport * from './link-marker';\r\nexport * from './setting';\r\nexport * from './setting-panel';\r\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { GatewayOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\nimport { ResolutionPicker } from 'src/component';\r\n\r\nexport const ResolutionButton = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    border-left: var(--bw) solid var(--sub-secondary);\r\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    color: var(--color);\r\n    cursor: pointer;\r\n    .anticon {\r\n        font-size: var(--fs-2xl);\r\n        margin-left: 0;\r\n    }\r\n    .resolution-overlay {\r\n        position: absolute;\r\n        left: 50%;\r\n        bottom: 3px; // Alignment\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        transform: translateX(-50%);\r\n    }\r\n    .resolution-icon {\r\n        transform: translateY(-5px); // Alignment\r\n    }\r\n`;\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    globalScale: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    globalScale,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey, resolution,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n            globalScale,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n            >\r\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                    <GatewayOutlined className=\"resolution-icon\" />\r\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                </ResolutionButton>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport copy from 'copy-to-clipboard';\r\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        padding-bottom: var(--spacing-sm);\r\n        .icon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        &.export-download-image {\r\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\r\n            border-bottom: var(--bw) solid var(--sub-secondary);\r\n            &:disabled {\r\n                border-bottom: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n        &.mode_other {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        button {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        > div {\r\n            height: 100%;\r\n        }\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .resolution-picker {\r\n        background-color: var(--main-level-4);\r\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\r\n        padding: var(--spacing-xs);\r\n        line-height: 1;\r\n        text-align: center;\r\n        border: var(--bw) solid transparent;\r\n        cursor: pointer;\r\n    }\r\n    .export-input-raw {\r\n        grid-column: 1 / -1;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n    withText?: boolean,\r\n    disabled: boolean,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    withText,\r\n}: CardDataCopyButton) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledCardDataCopyButton\r\n        disabled={disabled}\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay\r\n            ? <div className=\"copiable-overlay\">\r\n                {withText\r\n                    ? <>Copied&nbsp;<CheckOutlined /></>\r\n                    : <CheckOutlined />}\r\n                </div>\r\n            : null}\r\n        {children}\r\n    </StyledCardDataCopyButton>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    tainted: boolean,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    tainted,\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n    })));\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            width={600}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\r\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\r\n                        <div>\r\n                            <StyledActionIconButton\r\n                                disabled={tainted && mode === 'other'}\r\n                                onClick={() => {\r\n                                    const blob = new Blob([data], { type: 'application/json' });\r\n                                    downloadBlob(\r\n                                        normalizeCardName(name),\r\n                                        blob,\r\n                                        'application/json',\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <div className=\"icon\"><DownloadOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.download-button.label']}\r\n                                </div>\r\n                            </StyledActionIconButton>\r\n                        </div>\r\n                    </InternalPopover>\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        placement=\"bottom\"\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['prompt.export.offline-warning.message']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={false}\r\n                                data={internalCardData.ygocarder.data}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><CopyOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.copy-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        placement=\"bottom\"\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['image-cropper.offline-warning']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={window.location.href}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><LinkOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.share-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    <div>\r\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\r\n                            <div>\r\n                                <StyledActionIconButton\r\n                                    disabled={tainted}\r\n                                    className=\"export-download-image\"\r\n                                    onClick={onRequireDownload}\r\n                                >\r\n                                    <div className=\"icon\"><FileImageOutlined /></div>\r\n                                    <div className=\"label\">\r\n                                        {language['button.export-modal.save-button.label']}\r\n                                    </div>\r\n                                </StyledActionIconButton>\r\n                            </div>\r\n                        </InternalPopover>\r\n                        <Dropdown overlay={<ResolutionPicker />}>\r\n                            <div className=\"resolution-picker\">\r\n                                {resolution[0]} × {resolution[1]}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                        rows={5}\r\n                    />}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['button.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown \r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\r\nimport {\r\n    isYgoprodeckImage,\r\n    // uploadToImgur,\r\n} from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom,\r\n        .import-empty {\r\n            font-size: var(--fs);\r\n        }\r\n        .import-custom {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .option-separator {\r\n            display: inline-block;\r\n            margin-right: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 * \r\n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    // try {\r\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                    //     if (imgurResponse.status !== 200) {\r\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                    //     }\r\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    // } catch (e) {\r\n                    //     /** Failing the upload process does not terminate the import process */\r\n                    //     console.error('Upload error:', e);\r\n                    //     notification.error({\r\n                    //         message: language['prompt.import.imgur.message'],\r\n                    //         description: language['prompt.import.imgur.description'],\r\n                    //     });\r\n                    // }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['button.import.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                        {mode === 'new' && <>\r\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                            <StyledActionIconButton\r\n                                className=\"import-empty\"\r\n                                onClick={() => {\r\n                                    startImport(getEmptyCard());\r\n                                    cleanup();\r\n                                }}\r\n                            >\r\n                                {language['button.empty.label']}\r\n                            </StyledActionIconButton>\r\n                        </>}\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl-E / ⌘-E</div>\r\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['button.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n    PendulumSizeMap,\r\n    OtherFinishTypeMap,\r\n    ExtraAttributeList,\r\n    RegionMap,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\r\n    label: labelKey ? dictionary[labelKey] : label,\r\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\r\n    value,\r\n}));\r\n\r\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (region: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${RegionMap[region]?.fileKey}-${name.toLowerCase()}.png`}\r\n                />\r\n            </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getExtraAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => ExtraAttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);\r\n\r\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation, StyledPopMarkdown } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '★',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '∅',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<StyledPopMarkdown>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </StyledPopMarkdown>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n};\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n            </CircularAnglePicker>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={8} xmin={-8}\r\n                ymax={8} ymin={-8}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}:&nbsp;<GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { InputNumber } from 'antd';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\r\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nconst MaterialColor = styled.div<{ $color: string }>`\r\n    border: var(--bw) solid var(--sub-level-2);\r\n    display: inline-block;\r\n    width: 2rem;\r\n    height: 1em;\r\n    border-radius: var(--br-sm);\r\n    cursor: pointer;\r\n    ${({ $color }) => `background-color: ${$color};`}\r\n`;\r\nconst EmbossControlContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: max-content max-content;\r\n    color: var(--color);\r\n    .emboss-control-title {\r\n        grid-column: -1 / 1;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n        padding: var(--spacing-sm);\r\n        padding-bottom: 0;\r\n    }\r\n    .emboss-control-left h2 {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .angle-picker-container {\r\n        text-align: center;\r\n    }\r\n    .emboss-control-right {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .emboss-control-left {\r\n        padding: var(--spacing-sm);\r\n        padding-top: 0;\r\n    }\r\n    .slider-label {\r\n        padding: 0;\r\n        border: none;\r\n    }\r\n    .vertical-angle-control {\r\n        grid-template-columns: max-content 60px 85px 12px;\r\n    }\r\n    .reset-button {\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n    .navigate-button {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n    .thickness-row {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        column-gap: var(--spacing-sm);\r\n        align-items: center;\r\n        .ant-slider {\r\n            height: unset;\r\n            margin-top: var(--spacing-xs);\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n    }\r\n`;\r\n\r\nconst VECTOR_VALUE_EPSILON = 0.01;\r\nconst DEFAULT_PITCH = 90;\r\nconst DEFAULT_YAW = 90;\r\nfunction hexToRgb(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return (result\r\n        ? [\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16)\r\n        ]\r\n        : [0, 0, 0]) as [number, number, number];\r\n  }\r\n\r\nexport type EmbossControllerRef = {\r\n    setValue: (value: {\r\n        color?: string,\r\n        pitch?: number,\r\n        yaw?: number,\r\n        thickness?: number,\r\n    }) => void,\r\n};\r\nexport type EmbossController = {\r\n    defaultPitch?: number,\r\n    defaultYaw?: number,\r\n    defaultThickness?: number,\r\n    materialColor?: string,\r\n    children?: React.ReactNode,\r\n    language: LanguageDataDictionary,\r\n    onColorTabNavigate: () => void,\r\n    onChange: (value: {\r\n        lightColorVec: [number, number, number],\r\n        lightAngleVec: [number, number, number],\r\n        yaw: number,\r\n        pitch: number,\r\n        thickness: number,\r\n    }) => void,\r\n};\r\nconst defaultValue = getDefaultNameStyle();\r\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\r\n    defaultPitch = defaultValue.embossPitch,\r\n    defaultYaw = defaultValue.embossYaw,\r\n    defaultThickness = defaultValue.embossThickness,\r\n    materialColor,\r\n    children,\r\n    language,\r\n    onColorTabNavigate,\r\n    onChange,\r\n}, ref) => {\r\n    const [requestUpdate, internalId] = useRefresh();\r\n    const [color, setColor] = useState('#ffffff');\r\n    const [thickness, setThickness] = useState(defaultThickness);\r\n    const [angle, setAngle] = useState(defaultYaw);\r\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\r\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\r\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\r\n    const currentThickness = useRef(defaultThickness);\r\n    /** Currently we only allow pure white light to avoid confusion for user. */\r\n    const [allowPickColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (internalId) setTimeout(() => {\r\n            if (relevant) {\r\n                const nextAngle = angleToVector(angle, verticalAngle);\r\n                const nextColor = hexToRgb(color);\r\n\r\n                if (\r\n                    nextColor[0] !== currentColorVec.current[0]\r\n                    || nextColor[1] !== currentColorVec.current[1]\r\n                    || nextColor[2] !== currentColorVec.current[2]\r\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\r\n                    || thickness !== currentThickness.current\r\n                ) {\r\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\r\n                }\r\n                currentColorVec.current = nextColor;\r\n                currentAngleVec.current = nextAngle;\r\n                currentThickness.current = thickness;\r\n            }\r\n        }, 150);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [internalId, color, angle, verticalAngle, thickness]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ color, pitch, yaw, thickness }) => {\r\n            if (color) setColor(color);\r\n            if (pitch) setVerticalAngle(pitch);\r\n            if (yaw) setAngle(yaw);\r\n            if (typeof thickness === 'number') setAngle(thickness);\r\n        }\r\n    }));\r\n\r\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\r\n        <div className=\"emboss-control-title\">\r\n            {children}\r\n        </div>\r\n        <div className=\"emboss-control-left\">\r\n            <h2>\r\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\r\n                    className=\"material-color\"\r\n                    onClick={onColorTabNavigate}\r\n                    $color={materialColor}\r\n                />\r\n            </h2>\r\n            {language['input.name-style.emboss.color.alert'](<span key=\"color-navigate\" className=\"navigate-button\" onClick={onColorTabNavigate}>\r\n                {language['input.name-style.color.label']}\r\n            </span>)}\r\n            <h2 className=\"thickness-row\">\r\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\r\n                <GuardedSlider\r\n                    value={thickness}\r\n                    min={0}\r\n                    max={4}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setThickness(value);\r\n                            requestUpdate();\r\n                        }\r\n                    }}\r\n                />\r\n            </h2>\r\n            <h2>\r\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\r\n                    className=\"reset-button\"\r\n                    onClick={() => {\r\n                        setVerticalAngle(DEFAULT_PITCH);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </h2>\r\n            <CombinedSliderContainer className=\"vertical-angle-control\">\r\n                <div className=\"slider-label\" />\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={-90}\r\n                    max={90}\r\n                    onChange={value => {\r\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\r\n                        requestUpdate();\r\n                    }}\r\n                    value={verticalAngle}\r\n                />\r\n                <GuardedSlider\r\n                    min={-90}\r\n                    max={90}\r\n                    value={verticalAngle}\r\n                    onChange={value => {\r\n                        setVerticalAngle(value);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>\r\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                    setAngle(DEFAULT_YAW);\r\n                    requestUpdate();\r\n                }}\r\n            /></h2>\r\n            <div className=\"horizontal-angle-contorl\">\r\n                <CircularAnglePicker\r\n                    angle={angle}\r\n                    size={120}\r\n                    setAngle={angle => {\r\n                        setAngle(angle);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        {allowPickColor && <div className=\"emboss-control-right\">\r\n            <h2>Light color</h2>\r\n            <ChromePicker\r\n                styles={{\r\n                    default: {\r\n                        picker: {\r\n                            color: '#000000',\r\n                            background: 'var(--main-level-3)',\r\n                            boxShadow: 'none',\r\n                        },\r\n                        body: {\r\n                            padding: 'var(--spacing) var(--spacing)',\r\n                        }\r\n                    },\r\n                }}\r\n                disableAlpha={true}\r\n                color={color}\r\n                onChange={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n                onChangeComplete={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n            />\r\n        </div>}\r\n    </EmbossControlContainer>;\r\n});","import { useEffect, useState } from 'react';\r\nimport { ChromePicker, CompactPicker } from 'react-color';\r\nimport { DefaultColorList } from 'src/model';\r\nimport styled from 'styled-components';\r\n\r\nconst TextColorPickerContainer = styled.div`\r\n    .chrome-picker {\r\n        /** Target color format swapper in picker's body */\r\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\r\n            display: none !important;\r\n        }\r\n    }\r\n`;\r\nexport type TextColorPicker = {\r\n    color: string,\r\n    onChange: (color: string) => void,\r\n};\r\nexport const TextColorPicker = ({\r\n    color,\r\n    onChange,\r\n}: TextColorPicker) => {\r\n    const [internalColor, setInternalColor] = useState(color);\r\n\r\n    useEffect(() => {\r\n        setInternalColor(color);\r\n    }, [color]);\r\n\r\n    return <TextColorPickerContainer>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                        padding: 'var(--spacing-sm) var(--spacing)',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    },\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => {\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n    </TextColorPickerContainer>;\r\n};","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown, PopoverButton } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\r\nimport { TextColorPicker } from './text-color-picker';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        requestUpdateCustomStyle();\r\n    }, [requestUpdateCustomStyle]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n                embossPitch, embossYaw, embossThickness,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n            embossControllerRef.current?.setValue({\r\n                pitch: embossPitch,\r\n                yaw: embossYaw,\r\n                thickness: embossThickness,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        hasEmboss, embossPitch, embossYaw, embossThickness,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n\r\n    const colorPickerButtonId = 'color-picker';\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <TextColorPicker\r\n                                        color={fillStyle}\r\n                                        onChange={hexColor => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            id={colorPickerButtonId}\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom}\r\n                            className=\"picker-dropdown color-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className=\"custom-style-picker\">\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.emboss.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\r\n                                    language={language}\r\n                                    defaultPitch={embossPitch}\r\n                                    defaultYaw={embossYaw}\r\n                                    defaultThickness={embossThickness}\r\n                                    materialColor={fillStyle}\r\n                                    onColorTabNavigate={() => {\r\n                                        document.getElementById(colorPickerButtonId)?.click();\r\n                                    }}\r\n                                    onChange={({ thickness, yaw, pitch }) => {\r\n                                        setValue(cur => ({ ...cur,\r\n                                            embossPitch: pitch,\r\n                                            embossYaw: yaw,\r\n                                            embossThickness: thickness,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                >\r\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\r\n                                </EmbossController>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasEmboss}\r\n                            className=\"picker-dropdown emboss-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.emboss.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrainRef = {\r\n    changeFrame: (frameValue: number | string) => void,\r\n};\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n    onPasswordChange: (value: string) => void,\r\n    onStatChange: (atk: string, def: string, linkRating: string) => void,\r\n};\r\nexport const FrameTrain = forwardRef<FrameTrainRef, FrameTrain>(({\r\n    onSTFrameChange,\r\n    onPasswordChange,\r\n    onStatChange,\r\n}, ref) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                attribute,\r\n                format,\r\n                password,\r\n                star,\r\n                atk,\r\n                def,\r\n                linkRating,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const nextTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            const nextPassword = nextFrame === 'token'\r\n                ? passwordSentenceMap[format]\r\n                : password;\r\n            const nextAtk = willRemoveStat ? '' : (atk === '' ? '0' : atk);\r\n            const nextDef = willRemoveStat ? '' : (def === '' ? '0' : def);\r\n            const nextLinkRating = willRemoveStat ? '' : linkRating;\r\n            const nextStar = nextFrame === 'token'\r\n                ? 0\r\n                : star;\r\n\r\n            onPasswordChange(nextPassword);\r\n            if (willBecomeST) {\r\n                onSTFrameChange(nextTypeAbility);\r\n            }\r\n            onStatChange(nextAtk, nextDef, nextLinkRating);\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: nextFrame === 'token'\r\n                    ? NO_ATTRIBUTE\r\n                    : willBecomeST\r\n                        ? `${nextFrame}`.toUpperCase()\r\n                        : attribute,\r\n                star: nextStar,\r\n                typeAbility: nextTypeAbility,\r\n                password: nextPassword,\r\n                atk: nextAtk,\r\n                def: nextDef,\r\n                linkRating: nextLinkRating,\r\n            };\r\n        });\r\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        changeFrame,\r\n    }));\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n});","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props, tooltip } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n                const children = <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n\r\n                return tooltip\r\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\r\n                    : children;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: var(--cropper-width);\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum, pendulumSize,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain, SolidLabel } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .art-frame {\r\n        span {\r\n            padding: 0;\r\n        }\r\n    }\r\n    div.ant-slider {\r\n        .ant-slider-handle {\r\n            height: 19px;\r\n            top: 8px;\r\n            border-radius: 0;\r\n            width: 10px;\r\n        }\r\n        .ant-slider-step,\r\n        .ant-slider-track,\r\n        .ant-slider-rail {\r\n            height: 10px;\r\n        }\r\n    }\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n        .ant-slider {\r\n            padding-top: 8px;\r\n        }\r\n    }\r\n    .background-label {\r\n        cursor: pointer;\r\n        &:hover {\r\n            .background-preview {\r\n                box-shadow: 0 0 2px 0 #2a2a2a;\r\n            }\r\n        }\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        text-align: center;\r\n        user-select: none;\r\n        .background-preview-callback-passer {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .layout-picker-panel {\r\n            margin-top: var(--spacing);\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .background-type-picker {\r\n            .radio-train-input-group {\r\n                display: grid;\r\n            }\r\n            .ant-radio-button-wrapper {\r\n                border-left: var(--bw) solid var(--sub-level-1);\r\n            }\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background,\r\n            backgroundData,\r\n            backgroundSource,\r\n            backgroundType,\r\n            hasBackground,\r\n            isPendulum,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <SolidLabel className=\"background-label\">\r\n                <Checkbox\r\n                    className=\"art-frame\"\r\n                    onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                    checked={opacity.boundless}\r\n                >\r\n                    &nbsp;{language['input.opacity.boundless.label']}\r\n                </Checkbox>\r\n            </SolidLabel>\r\n        </Tooltip>\r\n        <Popover\r\n            visible={backgroundInputVisible}\r\n            destroyTooltipOnHide={false}\r\n            trigger={['click']}\r\n            onVisibleChange={setBackgroundInputVisible}\r\n            overlayClassName={[\r\n                'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                backgroundInputVisible ? 'picker-visible' : '',\r\n                backgroundInputHidden ? 'picker-hidden' : '',\r\n            ].join(' ')}\r\n            content={<div className=\"overlay-event-absorber\">\r\n                <StyledBaseFillPickerContainer\r\n                    className={[\r\n                        'custom-style-picker',\r\n                        noBackground ? 'overlay-no-background-image' : ''\r\n                    ].join(' ')}\r\n                >\r\n                    <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                        <Checkbox\r\n                            checked={hasBackground}\r\n                            onChange={e => {\r\n                                changeHasBackground(e);\r\n                            }}\r\n                        >{language['input.background.toggle-label']}</Checkbox>\r\n                        <br />\r\n                        <i>{language['input.background.description']}</i>\r\n                    </h3>\r\n                    <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                        <BackgroundInputGroup\r\n                            ref={backgroundInputRef}\r\n                            receivingCanvas={receivingCanvas}\r\n                            onSourceLoaded={onSourceLoaded}\r\n                            onTainted={onTainted}\r\n                            onCropChange={onCropChange}\r\n                            backgroundColor={opacity.baseFill}\r\n                        >\r\n                            <div className=\"layout-picker-panel\">\r\n                                <div className=\"layout-picker-subpanel color-section\">\r\n                                    <h2>{language['input.background-color.label']}</h2>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={opacity.baseFill}\r\n                                        onChangeComplete={color => {\r\n                                            setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                    <h2>{language['input.background-type.label']}</h2>\r\n                                    <RadioTrain\r\n                                        className=\"background-type-picker\"\r\n                                        onChange={changeBackgroundType}\r\n                                        optionList={getBackgroundTypeList({\r\n                                            fit: language['input.background-type.fit.label'],\r\n                                            full: language['input.background-type.full.label'],\r\n                                            frame: language['input.background-type.frame.label'],\r\n                                        })}\r\n                                        value={backgroundType}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </BackgroundInputGroup>\r\n                    </div>\r\n                </StyledBaseFillPickerContainer>\r\n            </div>}\r\n            placement=\"bottom\"\r\n        >\r\n            <SolidLabel className=\"background-label\">\r\n                <div\r\n                    className=\"background-preview\"\r\n                    style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                >\r\n                    {hasBackground\r\n                        ? background || backgroundData\r\n                            ? <img\r\n                                className=\"background-image-preview\"\r\n                                src={backgroundSource === 'online'\r\n                                    ? background\r\n                                    : backgroundData}\r\n                                alt=\"Background\"\r\n                            />\r\n                            : null\r\n                        : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                </div>\r\n                {language['input.background.label']}\r\n            </SolidLabel>\r\n        </Popover>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <CombinedSliderContainer key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <SolidLabel className=\"slider-label\">\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </SolidLabel>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { IconButton, RadioTrain } from 'src/component';\r\nimport { useCard, useSetting, WithLanguage } from 'src/service';\r\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\r\nimport { useMemo } from 'react';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getAttributeList, getExtraAttributeList } from '../const';\r\nimport { RegionMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\n\r\nconst AttributeRegionTrain = styled.div`\r\n    align-self: flex-end;\r\n    position: relative;\r\n    min-height: 6px; // Alignment\r\n    .attribute-region-picker {\r\n        position: absolute;\r\n        right: 0;\r\n        top: calc(var(--spacing-xxs) * -1);\r\n        z-index: 1;\r\n    }\r\n    &.container-block .attribute-region-picker {\r\n        position: relative;\r\n        right: 0;\r\n        top: 0;\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        font-size: var(--fs-sm);\r\n        height: unset;\r\n        line-height: 1.25;\r\n    }\r\n`;\r\n\r\nexport type AttributeInputGroup = {\r\n} & WithLanguage;\r\nexport const AttributeInputGroup = ({\r\n    language,\r\n}: AttributeInputGroup) => {\r\n    const {\r\n        format,\r\n        region,\r\n        attribute,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            region,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        format,\r\n        region,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n    })));\r\n    const { setting, updateSetting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, showExtraAttribute } = setting;\r\n\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeRegion = useMemo(() => getUpdater('region'), [getUpdater]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(region, language, showCreativeOption), [region, language, showCreativeOption]);\r\n    const extraAttributeList = useMemo(() => getExtraAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n\r\n    return <>\r\n        <RadioTrain\r\n            className=\"fill-input-train span-input-train attribute-input\"\r\n            value={attribute}\r\n            onChange={changeAttribute}\r\n            optionList={attributeList}\r\n            suffix={!showExtraAttribute && showExtraDecorativeOption\r\n                ? <IconButton\r\n                    onClick={() => updateSetting({ showExtraAttribute: true })}\r\n                    Icon={DoubleRightOutlined}\r\n                    tooltipProps={{ overlay: language['button.more.label'] }}\r\n                />\r\n                : null}\r\n        >\r\n            <span>{language['input.attribute.label']}</span>\r\n        </RadioTrain>\r\n        {showExtraDecorativeOption && <AttributeRegionTrain\r\n            className={mergeClass('attribute-region-container', showExtraAttribute ? 'container-block' : 'container-float')}\r\n        >\r\n            <RadioTrain\r\n                className=\"attribute-region-picker\"\r\n                optionList={Object\r\n                    .values(RegionMap)\r\n                    .map(({ key }) => ({\r\n                        value: key,\r\n                        label: key.toUpperCase(),\r\n                    }))\r\n                }\r\n                value={region}\r\n                onChange={changeRegion}\r\n            />\r\n        </AttributeRegionTrain>}\r\n        {(showExtraDecorativeOption && showExtraAttribute) && <RadioTrain\r\n            className=\"fill-input-train extra-attribute-input\"\r\n            value={attribute}\r\n            onChange={changeAttribute}\r\n            optionList={extraAttributeList}\r\n            suffix={showExtraDecorativeOption && showExtraAttribute\r\n                ? <IconButton\r\n                    onClick={() => updateSetting({ showExtraAttribute: false })}\r\n                    Icon={DoubleLeftOutlined}\r\n                    tooltipProps={{ overlay: language['button.less.label'] }}\r\n                />\r\n                : null}\r\n        >\r\n            &nbsp;\r\n        </RadioTrain>}\r\n    </>;\r\n};","import { Button, Checkbox, Modal } from 'antd';\r\nimport { forwardRef, useImperativeHandle, useMemo, useState } from 'react';\r\nimport {\r\n    IconTypeAttributeList,\r\n    IconTypeInfo,\r\n    IconTypeList,\r\n    IconTypeStList,\r\n    MAX_STAR_LENGTH,\r\n    NORMAL_STAR_LENGTH,\r\n    TotalIconTypeMap,\r\n} from 'src/model';\r\nimport { useCard, WithLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CloseCircleOutlined, DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\r\nimport { StyledDropdown } from 'src/component';\r\nimport { mergeClass, padRight } from 'src/util';\r\n\r\nconst IconDropdownOverlay = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: var(--br-lg);\r\n    cursor: not-allowed;\r\n`;\r\nexport const StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    .anticon-close-circle {\r\n        font-size: var(--fs-lg);\r\n    }\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nexport const IconDropdownContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    background-color: var(--sub-level-1);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    overflow: hidden;\r\n    position: relative;\r\n    .container-group {\r\n        box-shadow: none;\r\n        border: none;\r\n        border-radius: 0;\r\n    }\r\n    &.selector-disabled {\r\n        filter: opacity(0.65) grayscale(0.85);\r\n    }\r\n`;\r\nexport type StarTypeSelector = {\r\n    disabled?: boolean,\r\n    className?: string,\r\n    activeCardIcon: string,\r\n    onChange: (value: string) => void,\r\n    onRemove?: () => void,\r\n    showMixableOnly?: boolean,\r\n    showRemove?: boolean,\r\n} & WithLanguage;\r\nexport const StarTypeSelector = ({\r\n    disabled = false,\r\n    className,\r\n    language,\r\n    activeCardIcon,\r\n    showMixableOnly = false,\r\n    showRemove = false,\r\n    onChange,\r\n    onRemove,\r\n}: StarTypeSelector) => {\r\n    const filterFunction = showMixableOnly ? (entry: IconTypeInfo) => entry.isMixable : () => true;\r\n\r\n    return <IconDropdownContainer\r\n        className={mergeClass('icon-dropdown-container overlay-event-absorber', disabled ? 'selector-disabled' : '', className)}\r\n    >\r\n        {disabled && <IconDropdownOverlay className=\"container-disable-overlay\" />}\r\n        <StyledIconDropdown className=\"container-group container-star\">\r\n            {showRemove && <StyledDropdown.Option\r\n                onClick={() => onRemove?.()}\r\n            >\r\n                <CloseCircleOutlined />&nbsp;{language['input.icon-type.remove.label']}\r\n            </StyledDropdown.Option>}\r\n            {IconTypeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\r\n                return <StyledDropdown.Option key={value}\r\n                    className={value === activeCardIcon ? 'menu-active' : ''}\r\n                    onClick={() => onChange(value)}\r\n                >\r\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                </StyledDropdown.Option>;\r\n            })}\r\n        </StyledIconDropdown>\r\n        <StyledIconDropdown className=\"container-group container-attribute\">\r\n            {IconTypeAttributeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\r\n                return <StyledDropdown.Option key={value}\r\n                    className={value === activeCardIcon ? 'menu-active' : ''}\r\n                    onClick={() => onChange(value)}\r\n                >\r\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                </StyledDropdown.Option>;\r\n            })}\r\n        </StyledIconDropdown>\r\n        <StyledIconDropdown className=\"container-group container-icon\">\r\n            {IconTypeStList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\r\n                return <StyledDropdown.Option key={value}\r\n                    className={value === activeCardIcon ? 'menu-active' : ''}\r\n                    onClick={() => onChange(value)}\r\n                >\r\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                </StyledDropdown.Option>;\r\n            })}\r\n        </StyledIconDropdown>\r\n    </IconDropdownContainer>;\r\n};\r\n\r\nconst StarListSelectPanel = styled.div`\r\n    margin-bottom: var(--spacing);\r\n`;\r\nconst StarListControlPanel = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: var(--spacing);\r\n`;\r\nconst StarListContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(13, 2rem);\r\n    gap: var(--spacing-xs);\r\n    align-items: center;\r\n    text-align: center;\r\n    margin-bottom: var(--spacing-sm);\r\n    line-height: 0;\r\n    .star-value {\r\n        display: inline-flex;\r\n        height: 2rem;\r\n        width: 2rem;;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background-color: var(--main-level-1);\r\n        border-radius: var(--br-lg);\r\n        margin-top: var(--spacing-xs);\r\n        cursor: pointer;\r\n        border: var(--bw) solid transparent;\r\n        .anticon-close-circle {\r\n            font-size: var(--fs-lg)\r\n        }\r\n    }\r\n    .icon-image {\r\n        max-width: 1.5rem; // Alignment\r\n        max-height: 1.5rem;; // Alignment\r\n    }\r\n    .entry-active {\r\n        .star-value {\r\n            border-color: var(--main-active);\r\n        }\r\n    }\r\n    .entry-disable {\r\n        filter: opacity(0.65) grayscale(0.85);\r\n        * {\r\n            cursor: not-allowed;\r\n        }\r\n    }\r\n    :not(.entry-disable) .star-value:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n`;\r\n\r\nexport type StarPickerRef = {\r\n    changeStatus: (status: 'open' | 'close' | 'toggle') => void,\r\n};\r\nexport type StarPicker = {\r\n\r\n} & WithLanguage;\r\nexport const StarPicker = forwardRef<StarPickerRef, StarPicker>(({\r\n    language,\r\n}, ref) => {\r\n    const {\r\n        starList,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            starList,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        starList,\r\n        setCard,\r\n    })));\r\n    const [visible, setVisible] = useState(false);\r\n    const changeStarList = useMemo(() => (transformer: string[] | ((prev: string[]) => string[])) => {\r\n        setCard(card => {\r\n            const nextStarList = Array.isArray(transformer) ? transformer : transformer(card.starList);\r\n\r\n            return {\r\n                ...card,\r\n                starList: nextStarList,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n    const [{\r\n        slotList,\r\n        use12,\r\n    }, setSlot] = useState(() => {\r\n        const slotList: { slot: string, index: number, disabled: boolean }[] = [];\r\n        const use12 = starList.length <= NORMAL_STAR_LENGTH ? true : false;\r\n        for (let cnt = 0; cnt < MAX_STAR_LENGTH; cnt++) {\r\n            slotList.push({ slot: `slot-${cnt}`, index: cnt, disabled: false });\r\n        }\r\n        if (use12) slotList[MAX_STAR_LENGTH - 1].disabled = true;\r\n\r\n        return {\r\n            slotList,\r\n            use12,\r\n        };\r\n    });\r\n    const [activeInformation, setActiveInformation] = useState({\r\n        activeList: [] as number[],\r\n    });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        changeStatus: status => {\r\n            if (status === 'open') {\r\n                setVisible(true);\r\n            } else if (status === 'close') {\r\n                setVisible(false);\r\n            } else if (status === 'toggle') {\r\n                setVisible(cur => !cur);\r\n            }\r\n            setActiveInformation({ activeList: [] });\r\n        }\r\n    }));\r\n\r\n    const {\r\n        activeList\r\n    } = activeInformation;\r\n    return <Modal\r\n        className=\"global-overlay global-no-close\"\r\n        visible={visible}\r\n        width={506}\r\n        onCancel={() => setVisible(false)}\r\n        cancelText={language['manager.template.button.cancel.label']}\r\n        okButtonProps={{\r\n            style: { display: 'none' },\r\n        }}\r\n    >\r\n        <StarListSelectPanel className=\"star-list-control-panel\">\r\n            <Checkbox\r\n                checked={use12}\r\n                onChange={e => {\r\n                    if (e.target.checked) {\r\n                        setSlot(({ slotList }) => {\r\n                            const nextSlotList: typeof slotList = [\r\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\r\n                                { disabled: true, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\r\n                            ];\r\n\r\n                            return { slotList: nextSlotList, use12: true };\r\n                        });\r\n                        changeStarList(currentStarList => currentStarList.slice(0, NORMAL_STAR_LENGTH));\r\n                        setActiveInformation(({ activeList }) => ({ activeList: activeList.filter(entry => entry !== MAX_STAR_LENGTH - 1) }));\r\n                    } else {\r\n                        setSlot(({ slotList }) => {\r\n                            const nextSlotList: typeof slotList = [\r\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\r\n                                { disabled: false, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\r\n                            ];\r\n\r\n                            return { slotList: nextSlotList, use12: false };\r\n                        });\r\n                        changeStarList(currentStarList => padRight(currentStarList, MAX_STAR_LENGTH));\r\n                    }\r\n                }}\r\n            >{language['input.icon-type.slot.use-12.label']}</Checkbox>\r\n            <Button size=\"small\" onClick={() => {\r\n                setActiveInformation(cur => {\r\n                    const nextActiveList = slotList\r\n                        .filter(entry => !cur.activeList.includes(entry.index) && !entry.disabled)\r\n                        .map(entry => entry.index);\r\n\r\n                    return { activeList: nextActiveList };\r\n                });\r\n            }}>\r\n                {language['input.icon-type.slot.revert.label']}\r\n            </Button>\r\n            &nbsp;\r\n            <Button size=\"small\" onClick={() => {\r\n                setActiveInformation({ activeList: slotList.filter(entry => !entry.disabled).map(entry => entry.index) });\r\n            }}>\r\n                {language['input.icon-type.slot.select-all.label']}\r\n            </Button>\r\n            &nbsp;\r\n            <Button size=\"small\" onClick={() => {\r\n                setActiveInformation({ activeList: [] });\r\n            }}>\r\n                {language['input.icon-type.slot.deselect-all.label']}\r\n            </Button>\r\n        </StarListSelectPanel>\r\n        <StarListContainer className=\"star-list-container\">\r\n            {slotList.map(({ slot, index, disabled }) => {\r\n                const slotValue = starList[index];\r\n                const starInfo = TotalIconTypeMap[slotValue ?? ''];\r\n                const active = activeList.includes(index);\r\n\r\n                return <div key={slot}\r\n                    className={mergeClass(\r\n                        'star-list-entry',\r\n                        active ? 'entry-active' : '',\r\n                        disabled ? 'entry-disable' : '',\r\n                    )}\r\n                >\r\n                    <div className=\"checkbox-container\">\r\n                        <Checkbox\r\n                            disabled={disabled}\r\n                            checked={active}\r\n                            onChange={e => {\r\n                                if (disabled) return;\r\n                                const willChecked = e.target.checked;\r\n                                if (willChecked) {\r\n                                    setActiveInformation(cur => {\r\n                                        const nextActiveList = [...cur.activeList, index];\r\n\r\n                                        return { activeList: nextActiveList };\r\n                                    });\r\n                                } else {\r\n                                    setActiveInformation(cur => {\r\n                                        const nextActiveList = cur.activeList.filter(entry => entry !== index);\r\n\r\n                                        return { activeList: nextActiveList };\r\n                                    });\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        className=\"star-value\"\r\n                        onClick={() => {\r\n                            if (disabled) return;\r\n                            setActiveInformation({ activeList: [index] });\r\n                        }}\r\n                    >\r\n                        {!starInfo ? <CloseCircleOutlined /> : starInfo.icon}\r\n                    </div>\r\n                </div>;\r\n            })}\r\n        </StarListContainer>\r\n        <StarListControlPanel>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    changeStarList(currentStarList => {\r\n                        return [...currentStarList.slice(1, currentStarList.length), ''];\r\n                    });\r\n                    setActiveInformation({ activeList: [] });\r\n                }}\r\n            >\r\n                <DoubleLeftOutlined />&nbsp;{language['input.icon-type.slot.shift-left.label']}\r\n            </Button>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    changeStarList(currentStarList => {\r\n                        return ['', ...currentStarList.slice(0, currentStarList.length - 1)];\r\n                    });\r\n                    setActiveInformation({ activeList: [] });\r\n                }}\r\n            >\r\n                {language['input.icon-type.slot.shift-right.label']}&nbsp;<DoubleRightOutlined />\r\n            </Button>\r\n        </StarListControlPanel>\r\n        <StarTypeSelector\r\n            disabled={activeList.length === 0}\r\n            language={language}\r\n            activeCardIcon={activeList.length > 1 ? '' : starList[activeList[0]]}\r\n            showMixableOnly={true}\r\n            showRemove={true}\r\n            onRemove={() => {\r\n                changeStarList(currentStarList => {\r\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\r\n                        if (activeList.includes(index)) return '';\r\n                        return currentStarList[index];\r\n                    });\r\n                });\r\n            }}\r\n            onChange={value => {\r\n                changeStarList(currentStarList => {\r\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\r\n                        if (activeList.includes(index)) return value;\r\n                        return currentStarList[index];\r\n                    });\r\n                });\r\n            }}\r\n        />\r\n    </Modal>;\r\n});","import { Button, Input, Popover } from 'antd';\r\nimport { PopoverButton, RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage, useSetting, WithLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeAttributeList, IconTypeList, IconTypeStList, TotalIconTypeMap } from 'src/model';\r\nimport { StarPicker, StarPickerRef, StarTypeSelector, StyledIconDropdown } from '../star-picker';\r\n\r\nconst TypeWithIconContainer = styled.div`\r\n    .icon-image {\r\n        width: 26px;\r\n        height: 26px;\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 7rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\nconst PopoverButtonInCardIconInput = styled(PopoverButton)`\r\n    margin-left: var(--spacing-sm);\r\n`;\r\nconst CustomStarContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    .custom-star-preview {\r\n        display: inline-flex;\r\n        line-height: 0;\r\n        align-items: center;\r\n        background-color: var(--main-level-1);\r\n        padding: var(--spacing-xs);\r\n        border-radius: var(--br);\r\n        .star-preview-entry {\r\n            margin-right: var(--spacing-xs);\r\n            .icon-image {\r\n                max-width: 22px; // Alignment\r\n                max-height: 22px; // Alignment\r\n            }\r\n            .anticon-close-circle {\r\n                font-size: var(--fs-xl);\r\n            }\r\n            &:last-child {\r\n                margin-right: 0;\r\n            }\r\n        }\r\n    }\r\n    .custom-star-content {\r\n        display: inline-flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        gap: var(--spacing-sm);\r\n        margin-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\ntype CardIconAlignmentPicker = {\r\n    value: string,\r\n    onChange: (value: string) => void,\r\n} & WithLanguage;\r\nconst CardIconAlignmentPicker = ({\r\n    language,\r\n    value,\r\n    onChange,\r\n}: CardIconAlignmentPicker) => {\r\n    return <RadioTrain\r\n        value={value}\r\n        onChange={onChange}\r\n        optionList={[\r\n            {\r\n                value: 'auto',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                label: <CloseCircleOutlined />,\r\n            },\r\n            {\r\n                value: 'left',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                label: <AlignLeftOutlined />,\r\n            },\r\n            {\r\n                value: 'center',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                label: <AlignCenterOutlined />,\r\n            },\r\n            {\r\n                value: 'right',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                label: <AlignRightOutlined />,\r\n            },\r\n        ]}\r\n    />;\r\n};\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starList,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starList,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starList,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n    const starPickerRef = useRef<StarPickerRef>(null);\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const autoIconType = getCardIconFromFrame(frame);\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? TotalIconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\r\n        : TotalIconTypeMap[cardIcon];\r\n    const {\r\n        labelKey,\r\n        icon,\r\n        showIcon,\r\n        value: iconType,\r\n    } = iconTypeData ?? TotalIconTypeMap['level'];\r\n    const iconDropdownText = typeof labelKey === 'string'\r\n        ? language[labelKey]\r\n        : labelKey({ language });\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <TypeWithIconContainer>{showIcon ? icon : null} {iconDropdownText} <CaretDownOutlined /></TypeWithIconContainer>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay\"\r\n        content={<StarTypeSelector\r\n            language={language}\r\n            activeCardIcon={cardIcon}\r\n            onChange={value => {\r\n                changeCardIcon(value);\r\n                if (value === 'custom') starPickerRef.current?.changeStatus('open');\r\n            }}\r\n        />}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return <>\r\n        <StarPicker ref={starPickerRef} language={language} />\r\n        {cardIcon === 'auto' && autoIconType === 'none'\r\n            ? showCreativeOption\r\n                ? <>\r\n                    <RadioTrain\r\n                        className=\"fill-input-train\"\r\n                        value={cardIcon}\r\n                        onChange={changeCardIcon}\r\n                        optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\r\n                            return {\r\n                                label: icon ?? <CloseCircleOutlined />,\r\n                                value,\r\n                                tooltipProps: {\r\n                                    title: language[fullLabelKey],\r\n                                },\r\n                            };\r\n                        })}\r\n                    >\r\n                        {DropdownChildren}\r\n                    </RadioTrain>\r\n                    <Popover\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledIconDropdown className=\"container-group container-attribute\">\r\n                                {IconTypeAttributeList.map(({ fullLabelKey, value, icon }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={value === cardIcon ? 'menu-active' : ''}\r\n                                        onClick={() => changeCardIcon(value)}\r\n                                    >\r\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledIconDropdown>\r\n                        </div>}\r\n                    >\r\n                        <PopoverButtonInCardIconInput\r\n                            $softMode={reduceColorMotion}\r\n                            className={showCreativeOption ? '' : 'disabled'}\r\n                        >\r\n                            {language['input.attribute.label']}\r\n                        </PopoverButtonInCardIconInput>\r\n                    </Popover>\r\n                    <Popover\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledIconDropdown className=\"container-group container-icon\">\r\n                                {IconTypeStList.map(({ fullLabelKey, value, icon }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={value === cardIcon ? 'menu-active' : ''}\r\n                                        onClick={() => changeCardIcon(value)}\r\n                                    >\r\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledIconDropdown>\r\n                        </div>}\r\n                    >\r\n                        <PopoverButtonInCardIconInput\r\n                            $softMode={reduceColorMotion}\r\n                            className={showCreativeOption ? '' : 'disabled'}\r\n                        >\r\n                            {language['input.attribute.spell']}&nbsp;/&nbsp;{language['input.attribute.trap']}\r\n                        </PopoverButtonInCardIconInput>\r\n                    </Popover>\r\n                    <PopoverButtonInCardIconInput\r\n                        $softMode={reduceColorMotion}\r\n                        className={showCreativeOption ? '' : 'disabled'}\r\n                        onClick={() => {\r\n                            changeCardIcon('custom');\r\n                            starPickerRef.current?.changeStatus('open');\r\n                        }}\r\n                    >\r\n                        {language['input.icon-type.custom.label']}\r\n                    </PopoverButtonInCardIconInput>\r\n                </>\r\n                : null\r\n            : iconType === 'st'\r\n                ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                    {DropdownChildren}\r\n                </RadioTrain>\r\n                : iconType === 'custom'\r\n                    ? <CustomStarContainer className=\"custom-star-picker\">\r\n                        <label className=\"standalone-addon ant-input-group-addon\">{DropdownChildren}</label>\r\n                        <div className=\"custom-star-content\">\r\n                            {starList.length > 0\r\n                                ? <div className=\"custom-star-preview\">\r\n                                    {starList.map((entry, index) => {\r\n                                        const iconEntry = TotalIconTypeMap[entry];\r\n\r\n                                        return <span key={`${entry}-${index}`} className=\"star-preview-entry\">\r\n                                            {iconEntry ? iconEntry.icon : <CloseCircleOutlined />}\r\n                                        </span>;\r\n                                    })}\r\n                                </div>\r\n                                : null}\r\n                            <Button\r\n                                size=\"small\" \r\n                                onClick={() => {\r\n                                    changeCardIcon('custom');\r\n                                    starPickerRef.current?.changeStatus('open');\r\n                                }}\r\n                            >{language['input.icon-type.slot.edit.label']}</Button>\r\n                        </div>\r\n                    </CustomStarContainer>\r\n                    : <StyledCheckboxStarTrain\r\n                        className=\"checkbox-star-train\"\r\n                        value={star}\r\n                        onChange={changeStar}\r\n                        optionList={StarButtonList}\r\n                        strict={true}\r\n                        suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                            <Input\r\n                                className=\"custom-star-input\"\r\n                                value={typeof star === 'number' ? '' : star}\r\n                                allowClear\r\n                                onChange={changeStar}\r\n                                placeholder={language['input.icon-type.custom.placeholder']}\r\n                            />\r\n                            <CardIconAlignmentPicker\r\n                                language={language}\r\n                                value={starAlignment}\r\n                                onChange={changeStarAlignment}\r\n                            />\r\n                        </div>}\r\n                    >\r\n                        {DropdownChildren}\r\n                    </StyledCheckboxStarTrain>}\r\n    </>;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    holdingShift: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': {\r\n            if (holdingShift) {\r\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 4 : 5;\r\n            } else {\r\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 2 : 3;\r\n            }\r\n            break;\r\n        }\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`card-textarea ${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        autoSize={{\r\n            minRows: 9,\r\n        }}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    position: relative;\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 480px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .radio-train.foil-radio {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        gap: var(--spacing-px); // Alignment\r\n        .ant-radio-button-wrapper {\r\n            font-size: var(--fs);\r\n        }\r\n        .standalone-addon {\r\n            border: none;\r\n            padding-bottom: var(--spacing-xxs);\r\n        }\r\n        .radio-train-input-group {\r\n            gap: 0;\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .inline-input {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .checkbox-disabled {\r\n        .ant-checkbox {\r\n            display: none;\r\n        }\r\n        visibility: hidden; // Avoid collapsing\r\n    }\r\n    .frame-part-name {\r\n        position: absolute;\r\n        padding: 0 var(--spacing);\r\n        top: calc(-1 * var(--spacing-sm));\r\n        right: calc(-1 * var(--spacing-sm));\r\n        border-radius: 0 0 0 var(--br-lg);\r\n        background-color: var(--main-level-4);\r\n        border-left: var(--bw) solid var(--sub-level-4);\r\n        border-bottom: var(--bw) solid var(--sub-level-4);\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n    .horizontal-sketch-picker {\r\n        margin-top: var(--spacing);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { checkDiplayLinkRating, randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Checkbox, Dropdown, Menu, Tooltip } from 'antd';\r\nimport { copyrightMap, FlagIndexMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\nconst StyledLinkRatingInputContainer = styled(StyledInputLabelWithButton)`\r\n    .auto-link-rating-input {\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n    .auto-link-rating {\r\n        display: inline-block;\r\n        width: 1.5rem;\r\n        height: 1.5rem;\r\n        line-height: 1;\r\n        text-align: center;\r\n        padding: var(--spacing-xs);\r\n        background: var(--main-level-4);\r\n        border-radius: var(--br-lg);\r\n        font-family: 'RoGSanSrfStd-Bd';\r\n        box-shadow: var(--bs-button);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string, linkRating?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isLink,\r\n        linkRating,\r\n        autoLinkRating,\r\n        showDefAndLink,\r\n        linkRatingDisplayMode,\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format, flag, isLink, linkRating, linkMap },\r\n        getUpdater,\r\n    }) => ({\r\n        linkRating,\r\n        autoLinkRating: linkMap.length,\r\n        isLink,\r\n        sticker,\r\n        format,\r\n        showDefAndLink: flag[FlagIndexMap['showDefAndLink']] === 1,\r\n        linkRatingDisplayMode: flag[FlagIndexMap['linkRating']],\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n    const linkRatingInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const showAtkInput = true;\r\n    const showLinkInput = checkDiplayLinkRating(linkRatingDisplayMode, isLink);\r\n    const showDefInput = showLinkInput\r\n        ? showDefAndLink\r\n        : true;\r\n    const showPadding = [showAtkInput, showDefInput, showLinkInput].filter(entry => entry === true).length % 2 === 1;\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeLinkRating = useMemo(() => getUpdater('linkRating', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def, linkRating }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n            if (typeof linkRating === 'string') linkRatingInputRef.current?.setValue(linkRating);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            {showAtkInput && <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />}\r\n            {showDefInput && <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />}\r\n            {showPadding && <div />}\r\n            {showLinkInput && <CardTextInput ref={linkRatingInputRef}\r\n                id=\"link\"\r\n                addonBefore={<StyledLinkRatingInputContainer className=\"input-label-with-button\">\r\n                    <div className=\"input-label\">{language['input.link.label']}</div>\r\n                    <Tooltip title={language['input.link.auto.tooltip']}>\r\n                        <div className=\"auto-link-rating-input\">\r\n                            {(typeof linkRating === 'string' && linkRating.length > 0)\r\n                                ? <Checkbox\r\n                                    onChange={e => {\r\n                                        if (e.target.checked) {\r\n                                            changeLinkRating('');\r\n                                            linkRatingInputRef.current.setValue('');\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                : <div className=\"auto-link-rating\">\r\n                                    {isLink ? autoLinkRating : '-'}\r\n                                </div>}\r\n                        </div>\r\n                    </Tooltip>\r\n                </StyledLinkRatingInputContainer>}\r\n                defaultValue={`${useCard.getState().card.linkRating}`}\r\n                onChange={changeLinkRating}\r\n                onTakePicker={onTakePicker}\r\n                placeholder={language['input.link.custom.placeholder']}\r\n            />}\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                        <IconButton\r\n                            onClick={() => {}}\r\n                            Icon={UnorderedListOutlined}\r\n                        />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\r\nimport {\r\n    ImageCropper,\r\n    ImageCropperRef,\r\n    LINK_MARKER_PICKER_WIDTH,\r\n    LinkMarkerPicker,\r\n    RadioTrain,\r\n    StyledDropdown,\r\n    StyledDropdownLabel,\r\n} from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\r\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { notification, Popover } from 'antd';\r\nimport { mergeClass } from 'src/util';\r\n\r\nconst LinkPickerContainer = styled.div<{ $hover: boolean }>`\r\n    position: relative;\r\n    ${({ $hover }) => $hover\r\n        ? `\r\n            .link-marker-picker {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n            }\r\n        `\r\n        : ''}\r\n`;\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    text-align: left;\r\n    .ant-input-group-addon {\r\n        flex: 0 0 auto;\r\n        text-align: left;\r\n    }\r\n    .radio-train-input-group {\r\n        flex: 1;\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        padding: 0 var(--spacing-xs);\r\n    }\r\n`;\r\nconst FinishLabel = styled(StyledDropdown.Option)`\r\n    display: grid;\r\n    grid-template-columns: 30px 1fr;\r\n    column-gap: var(--spacing-xs);\r\n    .tag {\r\n        background: var(--sub-level-2);\r\n        color: var(--color-contrast);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    &.default {\r\n        .tag {\r\n            background: var(--sub-level-4);\r\n        }\r\n    }\r\n`;\r\n\r\ntype OtherFinishPicker = {\r\n    finishValueList: [art: string, ...OtherFinish],\r\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\r\n    language: LanguageDataDictionary,\r\n    showCreativeOption: boolean,\r\n};\r\nconst OtherFinishPicker = ({\r\n    finishValueList,\r\n    changeFinish,\r\n    language,\r\n    showCreativeOption,\r\n}: OtherFinishPicker) => {\r\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\r\n    /** Be careful, we use added order here, so latest finish target is highest index. */\r\n    const valueMap = {\r\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[1],\r\n        [OtherFinishTypeMap['background'].key]: finishValueList[4],\r\n        [OtherFinishTypeMap['icon'].key]: finishValueList[2],\r\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[3],\r\n        [OtherFinishTypeMap['art'].key]: finishValueList[0],\r\n    };\r\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\r\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\r\n\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>\r\n            <label>{language['input.finish.label']}:</label>&nbsp;\r\n            {language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined />\r\n        </>\r\n        : <>\r\n            <label>{language['input.finish.label']}:</label>&nbsp;\r\n            {language[OtherFinishTypeMap[selectedType].labelKey]}\r\n        </>;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledDropdown.Container>\r\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\r\n                {finishList.map(({ label, value }) => {\r\n                    return <FinishLabel key={value}\r\n                        className={mergeClass(\r\n                            valueMap[value] === 'normal' ? 'default' : '',\r\n                            selectedType === value ? 'menu-active' : '',\r\n                        )}\r\n                        onClick={() => {\r\n                            setSelectedType(value);\r\n                        }}\r\n                    >\r\n                        <div className=\"value\">\r\n                            <div className=\"tag\">{valueMap[value] === 'normal' || valueMap[value] === '' ? 'Auto' : valueMap[value]}</div>\r\n                        </div>\r\n                        <div className=\"label\">{label}</div>\r\n                    </FinishLabel>;\r\n                })}\r\n            </StyledDropdown.Container>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n\r\n    return <StyledImageRadioTrain\r\n        className=\"art-finish-checkbox fill-input-train\"\r\n        value={valueMap[selectedType]}\r\n        onChange={value => {\r\n            const nextValueMap = { ...valueMap };\r\n            nextValueMap[selectedType] = `${value}`;\r\n\r\n            changeFinish(nextValueMap);\r\n        }}\r\n        optionList={ArtFinishButtonList}\r\n    >\r\n        {IconDropdown}\r\n    </StyledImageRadioTrain>;\r\n};\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    showCreativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    showCreativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish, otherFinish,\r\n            linkMap,\r\n            isPendulum, pendulumSize,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <OtherFinishPicker\r\n                finishValueList={[artFinish, ...otherFinish]}\r\n                changeFinish={finishMap => {\r\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\r\n                    changeOtherFinish([\r\n                        finishMap[OtherFinishTypeMap['attribute'].key],\r\n                        finishMap[OtherFinishTypeMap['icon'].key],\r\n                        finishMap[OtherFinishTypeMap['sticker'].key],\r\n                        finishMap[OtherFinishTypeMap['background'].key],\r\n                    ]);\r\n                }}\r\n                language={language}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n            : null\r\n        }\r\n    >\r\n        <LinkPickerContainer\r\n            className=\"link-picker-container\"\r\n            style={{ minWidth: LINK_MARKER_PICKER_WIDTH }}\r\n            $hover={showExtraDecorativeOption}\r\n        >\r\n            <LinkMarkerPicker key={`link-${JSON.stringify(linkMap)}`}\r\n                active={isLink === true}\r\n                defaultValue={linkMap}\r\n                onChange={changeLinkMap}\r\n                onStatusChange={changeLinkStatus}\r\n            />\r\n        </LinkPickerContainer>\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { Checkbox } from 'antd';\r\nimport { RadioTrain } from 'src/component';\r\nimport {\r\n    CardFlag,\r\n    FlagInfoList,\r\n    LINK_RATING_ALWAYS_AUTO,\r\n    LINK_RATING_ALWAYS_HIDE,\r\n    LINK_RATING_ALWAYS_SHOW,\r\n} from 'src/model';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst FrameBehaviorSettingPanelContainer = styled.div`\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border-top: var(--bw) solid var(--sub-level-3);\r\n    > * + * {\r\n        margin-top: var(--spacing-sm);\r\n    }\r\n    .link-rating-behavior-panel {\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n            margin-right: var(--spacing-sm);\r\n        }\r\n        label {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n            font-size: var(--fs);\r\n            color: var(--color);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type FrameBehaviorSettingPanel = {\r\n    \r\n};\r\nexport const FrameBehaviorSettingPanel = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        flag,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            flag,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n\r\n    const updateFlag = (value: number, index: number) => setCard(currentCard => {\r\n        const nextFlagList: CardFlag = [...currentCard.flag];\r\n        nextFlagList[index] = value;\r\n\r\n        return {\r\n            ...currentCard,\r\n            flag: nextFlagList,\r\n        };\r\n    });\r\n\r\n    return <FrameBehaviorSettingPanelContainer>\r\n        {flag.map((entry, index) => {\r\n            const { labelKey, type } = FlagInfoList[index] ?? {};\r\n\r\n            if (type === 'checkbox') {\r\n                return <div key={labelKey}>\r\n                    <Checkbox\r\n                        checked={entry !== 0}\r\n                        onChange={e => {\r\n                            const value = e.target.checked ? 1 : 0;\r\n\r\n                            updateFlag(value, index);\r\n                        }}\r\n                    >{language[labelKey]}</Checkbox>\r\n                </div>;\r\n            }\r\n            if (type === 'link-rating-behavior') {\r\n                return <RadioTrain key={labelKey}\r\n                    className=\"link-rating-behavior-panel\"\r\n                    onChange={(value) => updateFlag(Number(value), index)}\r\n                    optionList={[\r\n                        { label: language['input.flag.link-rating-behavior.auto'], value: LINK_RATING_ALWAYS_AUTO },\r\n                        { label: language['input.flag.link-rating-behavior.show'], value: LINK_RATING_ALWAYS_SHOW },\r\n                        { label: language['input.flag.link-rating-behavior.hide'], value: LINK_RATING_ALWAYS_HIDE },\r\n                    ]}\r\n                    value={entry}\r\n                    suffix={<label>\r\n                        {language[labelKey]}\r\n                    </label>}\r\n                />;\r\n            }\r\n            return null;\r\n        })}\r\n    </FrameBehaviorSettingPanelContainer>;\r\n};","import { getNavigationProps, HexColorRegex, mergeClass, resolveFrameStyle } from 'src/util';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { useCard, useLanguage, WithLanguage } from 'src/service';\r\nimport { getFoilButtonList, getFrameButtonList } from '../const';\r\nimport { Button, Checkbox } from 'antd';\r\nimport { FrameInfoBlock, HorizontalSketchPicker, RadioTrain } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { CanvasConst, DefaultFrameInfo, DyeIndexMap, Foil, FoilMap, FrameDyeList, FrameInfoMap, FramePositionMap, getDefaultDyeList } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\nconst FrameLayoutContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    ${StyledPendulumFrameContainer} {\r\n        border: none;\r\n        box-shadow: none;\r\n        padding: 0;\r\n    }\r\n    .visual-preview-container {\r\n        color: var(--color-heavy);\r\n        width: 110px; // Alignment\r\n        text-align: center;\r\n        label {\r\n            display: block;\r\n            padding-bottom: var(--spacing-xxs);\r\n        }\r\n        .frame-info-block {\r\n\t\t\theight: 30px; // Alignment\r\n\t\t\tline-height: 28px; // Alignment with border 1px\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background-color: var(--main-level-1);\r\n            margin-bottom: var(--spacing-xs);\r\n            cursor: pointer;\r\n            .frame-info-block-label {\r\n                padding: 0 var(--spacing-xs);\r\n            }\r\n            &.active {\r\n                border: var(--bw) dashed var(--main-level-2);\r\n            }\r\n            &:hover {\r\n                border: var(--bw) solid var(--main-level-2);\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst CardLayoutContainer = styled.div<{ $width: number, $height: number, $hoverable: boolean }>`\r\n    /** Ensure even width */\r\n    --layout-width: ${props => Math.round(props.$width / 2) * 2}px;\r\n    --layout-height: ${props => props.$height}px;\r\n    display: inline-block;\r\n    width: var(--layout-width);\r\n    height: var(--layout-height);\r\n    box-shadow: 0 0 2px 0 #202020;\r\n    position: relative;\r\n    background: var(--main-level-2);\r\n    button {\r\n        border: none;\r\n    }\r\n    .overlay-patch {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n    }\r\n    .dye-patch {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: 10%;\r\n        left: 50%;\r\n        min-width: 6px;\r\n        min-height: 6px;\r\n        width: ${props => props.$width / 6}px;\r\n        height: ${props => props.$width / 6}px;\r\n        border-radius: var(--br-lg);\r\n        transform: translateX(-50%);\r\n    }\r\n    .card-layout {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        padding: 0;\r\n        &.unmodified .overlay-patch {\r\n            background: var(--gradient-diagonal-stripe);\r\n        }\r\n    }\r\n    .partial-layout {\r\n        background-clip: padding-box;\r\n        ${props => props.$hoverable\r\n        ? `\r\n                border: var(--bw) solid var(--main-level-1);\r\n                &.active {\r\n                    border: var(--bw) dashed var(--main-level-1);\r\n                }\r\n                &:hover {\r\n                    border: var(--bw) dashed var(--main-level-2);\r\n                }\r\n            `\r\n        : ''}\r\n    }\r\n    .float-layout {\r\n        ${props => props.$hoverable\r\n        ? `\r\n                border: var(--bw) solid var(--main-level-1);\r\n                &.active {\r\n                    border: var(--bw) dashed var(--main-level-2);\r\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\r\n                }\r\n                &:hover {\r\n                    border: var(--bw) solid var(--main-level-2);\r\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\r\n                }\r\n            `\r\n        : ''}\r\n    }\r\n    /** For Zarc's gradient */\r\n    .partial-layout {\r\n        background-size: 200%;\r\n    }\r\n    .top-left {\r\n        width: 50%; height: 50%;\r\n        top: 0; left: 0;\r\n    }\r\n    .top-right {\r\n        width: 50%; height: 50%;\r\n        top: 0; left: 50%;\r\n        background-position-x: 100%;\r\n    }\r\n    .bottom-left {\r\n        width: 50%; height: 50%;\r\n        top: 50%; left: 0;\r\n    }\r\n    .bottom-right {\r\n        width: 50%; height: 50%;\r\n        top: 50%; left: 50%;\r\n        background-position-x: 100%;\r\n    }\r\n    /** Background width is slightly reduced to help active bottom frames easier */\r\n    .effect-background {\r\n        width: 80%;\r\n        height: 20%;\r\n        bottom: 5%;\r\n        left: 10%;\r\n        background-size: 125%;\r\n        background-position-x: 50%;\r\n    }\r\n    .pendulum-effect-background {\r\n        width: 80%;\r\n        height: 13%;\r\n        bottom: 28%;\r\n        left: 10%;\r\n        background-size: 125%;\r\n        background-position-x: 50%;\r\n    }\r\n    &.is-vertical {\r\n        margin-bottom: var(--spacing-3xl);\r\n        .float-layout.foil {\r\n            width: 100%;\r\n            left: 0;\r\n            bottom: -22.5%;\r\n            font-size: var(--fs-sm);\r\n            background-color: var(--main-level-1);\r\n        }\r\n    }\r\n    &.is-horizontal {\r\n        margin-right: var(--spacing-lg);\r\n        .float-layout.foil {\r\n            width: 50%;\r\n            height: 80%;\r\n            top: 10%;\r\n            right: -60%;\r\n            font-size: 0;\r\n            background-color: var(--main-level-1);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type CardLayoutPreview = {\r\n    tabIndex?: number,\r\n    width: number,\r\n    height: number,\r\n    baseLayoutState?: Record<string, string | undefined>,\r\n    resolvedLayoutState: Record<string, string | undefined>,\r\n    isPendulum: boolean,\r\n    activeLayout?: string,\r\n    dyeList: string[],\r\n    foil: Foil,\r\n    onClick?: (key: string) => void,\r\n    vertical?: boolean,\r\n} & WithLanguage;\r\nexport const CardLayoutPreview = ({\r\n    tabIndex = 0,\r\n    width,\r\n    height,\r\n    baseLayoutState,\r\n    resolvedLayoutState,\r\n    isPendulum,\r\n    activeLayout,\r\n    dyeList,\r\n    foil,\r\n    onClick,\r\n    language,\r\n    vertical = false,\r\n}: CardLayoutPreview) => {\r\n    return <CardLayoutContainer\r\n        $width={width}\r\n        $height={height}\r\n        $hoverable={!!onClick}\r\n        className={mergeClass('card-layout-container', vertical ? 'is-vertical' : 'is-horizontal')}\r\n    >\r\n        {[\r\n            { key: 'topLeftFrame', className: 'card-layout partial-layout top-left' },\r\n            { key: 'topRightFrame', className: 'card-layout partial-layout top-right' },\r\n            { key: 'bottomLeftFrame', className: 'card-layout partial-layout bottom-left' },\r\n            { key: 'bottomRightFrame', className: 'card-layout partial-layout bottom-right' },\r\n            { key: 'effectBackground', className: 'card-layout float-layout effect-background' },\r\n            { key: 'pendulumEffectBackground', className: 'card-layout float-layout pendulum-effect-background' },\r\n        ].map(({ className, key }) => {\r\n            const frame = resolvedLayoutState[key];\r\n            const dyeIndex = DyeIndexMap[key];\r\n            const dyeColor = dyeIndex == null ? undefined : dyeList[DyeIndexMap[key]];\r\n\r\n            if (!frame) return null;\r\n            if (!isPendulum && key === 'pendulumEffectBackground') return null;\r\n            const {\r\n                labelBackgroundColor,\r\n                labelBackgroundImage,\r\n            } = FrameInfoMap[frame] ?? {};\r\n            return <button key={key}\r\n                {...tabIndex < 0 ? {} : { tabIndex }}\r\n                className={mergeClass(\r\n                    className,\r\n                    key === activeLayout ? 'active' : '',\r\n                    baseLayoutState?.[key] === 'auto' ? 'unmodified' : '',\r\n                )}\r\n                onClick={() => onClick?.(key)}\r\n                style={labelBackgroundImage\r\n                    ? { backgroundImage: labelBackgroundImage }\r\n                    : { backgroundColor: labelBackgroundColor }\r\n                }\r\n            >\r\n                <div\r\n                    className=\"overlay-patch\"\r\n                    style={dyeColor\r\n                        ? {\r\n                            boxShadow: `0 0 0 ${Math.round(width / 16)}px ${dyeColor} inset`,\r\n                        }\r\n                        : {}}\r\n                />\r\n            </button>;\r\n        })}\r\n        <button\r\n            {...tabIndex < 0 ? {} : { tabIndex }}\r\n            className={mergeClass(\r\n                'card-layout float-layout foil',\r\n                'foil' === activeLayout ? 'active' : '',\r\n            )}\r\n            onClick={() => onClick?.('foil')}\r\n            style={{ boxShadow: `0 0 0 2px ${HexColorRegex.test(dyeList[DyeIndexMap.foil])\r\n                ? dyeList[DyeIndexMap.foil]\r\n                : FoilMap[foil].color} inset` }}\r\n        >\r\n            {language['input.foil.label']}\r\n        </button>\r\n    </CardLayoutContainer>;\r\n};\r\n\r\ntype FramelayoutSettingPanelRef = {\r\n    focus: () => void,\r\n};\r\nexport type FramelayoutSettingPanel = {\r\n    isPendulum: boolean,\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onFrameChange: (frame: string) => void,\r\n    onCancel: () => void,\r\n};\r\nexport const FrameLayoutSettingPanel = forwardRef<FramelayoutSettingPanelRef, FramelayoutSettingPanel>(({\r\n    frameList,\r\n    onFrameChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        foil,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground, pendulumEffectBackground,\r\n        dyeList,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            foil,\r\n            frame,\r\n            leftFrame, rightFrame,\r\n            pendulumFrame, pendulumRightFrame,\r\n            dyeList,\r\n            effectStyle,\r\n            pendulumStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        foil,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n        dyeList,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const recentCustomPendulumFrame = useRef({\r\n        topLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        topRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        bottomLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        bottomRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        effectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        pendulumEffectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n    });\r\n    const [focus, setFocus] = useState(0);\r\n    const [activeLayout, setActiveLayout] = useState('frame');\r\n    const frameLayoutMainId = 'frame-layout-main';\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    useEffect(() => {\r\n        /** Avoid confusion */\r\n        if (activeLayout === 'pendulumEffectBackground' && !isPendulum) setActiveLayout('frame');\r\n    }, [activeLayout, isPendulum]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => document.getElementById(frameLayoutMainId)?.focus(),\r\n    }));\r\n\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const changeBottomLeftFrame = useMemo(() => getUpdater('pendulumFrame'), [getUpdater]);\r\n    const changeBottomRightFrame = useMemo(() => getUpdater('pendulumRightFrame'), [getUpdater]);\r\n    const changeTopLeftFrame = useMemo(() => getUpdater('leftFrame'), [getUpdater]);\r\n    const changeTopRightFrame = useMemo(() => getUpdater('rightFrame'), [getUpdater]);\r\n    const changeEffectBackground = (background: string) => setCard(currentCard => {\r\n        const nextEffectStyle = { ...currentCard.effectStyle };\r\n        nextEffectStyle.background = background;\r\n\r\n        return {\r\n            ...currentCard,\r\n            effectStyle: nextEffectStyle,\r\n        };\r\n    });\r\n    const changePendulumEffectBackground = (background: string) => setCard(currentCard => {\r\n        const nextPendulumEffectStyle = { ...currentCard.pendulumStyle };\r\n        nextPendulumEffectStyle.background = background;\r\n\r\n        return {\r\n            ...currentCard,\r\n            pendulumStyle: nextPendulumEffectStyle,\r\n        };\r\n    });\r\n    const changeDyeList = useMemo(() => getUpdater('dyeList'), [getUpdater]);\r\n    const changeDye = (color: string, name: string) => setCard(currentCard => {\r\n        const position = DyeIndexMap[name];\r\n\r\n        if (typeof position !== 'number') return currentCard;\r\n        const nextDyeList = [...currentCard.dyeList] as FrameDyeList;\r\n        nextDyeList[position] = color;\r\n\r\n        return {\r\n            ...currentCard,\r\n            dyeList: nextDyeList,\r\n        };\r\n    });\r\n    const changeLayout = (layoutValue: string) => {\r\n        if (activeLayout === 'bottomLeftFrame') changeBottomLeftFrame(layoutValue);\r\n        if (activeLayout === 'bottomRightFrame') changeBottomRightFrame(layoutValue);\r\n        if (activeLayout === 'topLeftFrame') changeTopLeftFrame(layoutValue);\r\n        if (activeLayout === 'topRightFrame') changeTopRightFrame(layoutValue);\r\n        if (activeLayout === 'effectBackground') changeEffectBackground(layoutValue);\r\n        if (activeLayout === 'pendulumEffectBackground') changePendulumEffectBackground(layoutValue);\r\n    };\r\n\r\n    const layoutState = {\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    };\r\n    const activeFrame = layoutState[activeLayout];\r\n    const resolvedLayoutStyle = resolveFrameStyle(layoutState, isPendulum);\r\n    const dyeColor = DyeIndexMap[activeLayout];\r\n    return <FrameLayoutContainer>\r\n        <div className=\"visual-preview-container\">\r\n            <label>{language['input.advanced-frame.main.label']}</label>\r\n            <FrameInfoBlock\r\n                id={frameLayoutMainId}\r\n                tabIndex={0}\r\n                className={activeLayout === 'frame' ? 'active' : ''}\r\n                {...FrameInfoMap[frame] ?? DefaultFrameInfo}\r\n                onClick={() => setActiveLayout('frame')}\r\n            />\r\n            <label>{language['input.advanced-frame.detailed.label']}</label>\r\n            <CardLayoutPreview\r\n                width={Math.round(width / 20) * 2}\r\n                height={Math.round(height / 20) * 2}\r\n                isPendulum={isPendulum}\r\n                baseLayoutState={layoutState}\r\n                resolvedLayoutState={resolvedLayoutStyle}\r\n                activeLayout={activeLayout}\r\n                onClick={key => setActiveLayout(key)}\r\n                dyeList={dyeList}\r\n                foil={foil}\r\n                language={language}\r\n                vertical={true}\r\n            />\r\n            <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    changeBottomLeftFrame('auto');\r\n                    changeBottomRightFrame('auto');\r\n                    changeTopLeftFrame('auto');\r\n                    changeTopRightFrame('auto');\r\n                    changeEffectBackground('auto');\r\n                    changePendulumEffectBackground('auto');\r\n                    changeFoil('normal');\r\n                    changeDyeList(getDefaultDyeList());\r\n                }}\r\n            >\r\n                {language['button.reset.label']}\r\n            </Button>\r\n        </div>\r\n        <div>\r\n            <StyledPendulumFrameContainer\r\n                className=\"pendulum-frame-picker\"\r\n                {...getNavigationProps({\r\n                    stopPropagation: true,\r\n                    optionLength: frameList.length,\r\n                    setFocus,\r\n                    onTrigger: () => {\r\n                        if (focus >= 0) changeLayout(frameList[focus].value);\r\n                    },\r\n                    onCancel,\r\n                })}\r\n            >\r\n                <div className=\"frame-part-name\">\r\n                    {language[FramePositionMap[activeLayout]?.labelKey]}\r\n                </div>\r\n                {/** Avoid collapsing in case of frame */}\r\n                {activeLayout !== 'foil' && <Checkbox\r\n                    className={mergeClass('inline-input', activeLayout === 'frame' ? 'checkbox-disabled' : '')}\r\n                    checked={activeFrame === 'auto'}\r\n                    disabled={activeLayout === 'frame'}\r\n                    onChange={e => {\r\n                        changeLayout(e.target.checked ? 'auto' : (recentCustomPendulumFrame.current[activeLayout] ?? 'auto'));\r\n                    }}\r\n                >{language['input.frame.auto']}</Checkbox>}\r\n                {activeLayout === 'foil'\r\n                    ? <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                        <span>{language['input.foil.label']}</span>\r\n                    </RadioTrain>\r\n                    : <RadioTrain\r\n                        className=\"frame-radio\"\r\n                        value={activeFrame}\r\n                        onChange={value => {\r\n                            if (activeLayout === 'frame') onFrameChange(value);\r\n                            else changeLayout(value);\r\n                        }}\r\n                        optionList={frameList}\r\n                    />}\r\n                {typeof dyeColor === 'number' && <HorizontalSketchPicker\r\n                    value={dyeList[dyeColor]}\r\n                    onChange={color => {\r\n                        if (color !== dyeList[dyeColor]) changeDye(color, activeLayout);\r\n                    }}\r\n                >\r\n                    {language['input.advanced-frame.dye']}\r\n                </HorizontalSketchPicker>}\r\n            </StyledPendulumFrameContainer>\r\n        </div>\r\n    </FrameLayoutContainer>;\r\n});\r\n\r\nexport * from './frame-behavior-setting-panel';","import { CopiableCode } from 'src/component';\r\nimport { LINK_RATING_ALWAYS_AUTO, LINK_RATING_ALWAYS_SHOW, LINK_RATING_ALWAYS_HIDE, FlagInfoList } from 'src/model';\r\nimport { LanguageDataDictionary } from 'src/service';\r\n\r\nexport const FlagPresentationList = [\r\n    {\r\n        ...FlagInfoList[0],\r\n        valueDisplay: (language: LanguageDataDictionary, _value: number) => language['input.flag.mix-def-link'],\r\n        sampleDisplay: (language: LanguageDataDictionary) => <>\r\n            {language['input.flag.mix-def-link']}:\r\n            <ul>\r\n                <li><CopiableCode data={0}>0</CopiableCode>: {language['manager.template.description.true']}</li>\r\n                <li><CopiableCode data={1}>1</CopiableCode>: {language['manager.template.description.false']}</li>\r\n            </ul>\r\n        </>,\r\n    },\r\n    {\r\n        ...FlagInfoList[1],\r\n        valueDisplay: (language: LanguageDataDictionary, value: number) => <>\r\n            {language['input.flag.link-rating-behavior']}: {language[value === 1\r\n                ? 'input.flag.link-rating-behavior.show'\r\n                : 'input.flag.link-rating-behavior.hide']}\r\n        </>,\r\n        sampleDisplay: (language: LanguageDataDictionary) => <>\r\n            {language['input.flag.link-rating-behavior']}:\r\n            <ul>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_AUTO}>\r\n                        {LINK_RATING_ALWAYS_AUTO}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.auto']}\r\n                </li>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_SHOW}>\r\n                        {LINK_RATING_ALWAYS_SHOW}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.show']}\r\n                </li>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_HIDE}>\r\n                        {LINK_RATING_ALWAYS_HIDE}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.hide']}\r\n                </li>\r\n            </ul>\r\n        </>,\r\n    },\r\n];","import { Checkbox, Input, Popover } from 'antd';\r\nimport { InternalPopover, PopoverButton, StyledDropdown, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CanvasConst, DEFAULT_PENDULUM_SIZE, PendulumSizeMap } from 'src/model';\r\nimport { CaretDownOutlined, ApartmentOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { resolveFrameStyle } from 'src/util';\r\nimport { CardLayoutPreview, FrameBehaviorSettingPanel, FramelayoutSettingPanel, FrameLayoutSettingPanel } from '../frame-setting-panel';\r\nimport { FlagPresentationList } from '../../common';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-4);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n    .card-layout-preview-container {\r\n        line-height: 0;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        overflow: hidden;\r\n    }\r\n    .anticon {\r\n        align-content: center;\r\n        padding: 0 var(--spacing-xs);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-left: none;\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .pendulum-option {\r\n        display: grid;\r\n        grid-template-columns: var(--width-label) 1fr;\r\n        align-items: center;\r\n        .pendulum-frame-input,\r\n        .pendulum-checkbox {\r\n            flex: 0 0 auto;\r\n        }\r\n        .mirror-scale {\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            align-items: center;\r\n        }\r\n    }\r\n    .joined-row {\r\n        position: relative;\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .pendulum-size {\r\n            display: inline-block;\r\n            line-height: 1.15; // Alignment\r\n            margin-right: var(--spacing);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    softMode: boolean,\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n}\r\n    & Pick<CardTextInput, 'onTakePicker'>\r\n    & Pick<FramelayoutSettingPanel, 'onFrameChange'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    softMode,\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n    onFrameChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        frame,\r\n        foil,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground, pendulumEffectBackground,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        dyeList,\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            frame,\r\n            foil,\r\n            leftFrame, rightFrame,\r\n            pendulumFrame, pendulumRightFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n            effectStyle,\r\n            pendulumStyle,\r\n            dyeList,\r\n            flag,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        frame,\r\n        foil,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n        dyeList,\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const {\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { mirrorPendulumScale },\r\n        updateSetting,\r\n    }) => ({\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n        };\r\n    });\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const layoutState = {\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    };\r\n    const advanceLayoutPreviewHeight = 30; // Alignment with frame input\r\n    const flagList = flag\r\n        .map((entry, index) => {\r\n            const target = FlagPresentationList[index];\r\n\r\n            if (entry !== 0 && target) return <li key={target.labelKey}>\r\n                {target.valueDisplay(language, entry)}\r\n            </li>;\r\n            return null;\r\n        })\r\n        .filter(entry => entry != null);\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            <div className=\"pendulum-option-container\">\r\n                {showCreativeOption && <Popover\r\n                    visible={frameDropdownVisible}\r\n                    onVisibleChange={setFrameDropdownVisibleVisible}\r\n                    trigger={['click']}\r\n                    placement=\"bottom\"\r\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                    content={<div className=\"overlay-event-absorber\">\r\n                        <FrameLayoutSettingPanel ref={bottomFrameOptionGridRef}\r\n                            isPendulum={isPendulum}\r\n                            frameList={frameList}\r\n                            pendulumFrame={pendulumFrame}\r\n                            onFrameChange={onFrameChange}\r\n                            onCancel={() => {\r\n                                setFrameDropdownVisibleVisible(false);\r\n                                containerRef.current?.focus();\r\n                            }}\r\n                        />\r\n                        <FrameBehaviorSettingPanel />\r\n                    </div>}\r\n                >\r\n                    <StyledPendulumFrameInputContainer ref={containerRef}\r\n                        className=\"pendulum-frame-input\"\r\n                        tabIndex={0}\r\n                        onKeyDown={e => {\r\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                                setFrameDropdownVisibleVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    bottomFrameOptionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        }}\r\n                    >\r\n                        <span className=\"pendulum-frame-label\">\r\n                            {language['input.advanced-frame.label']}\r\n                        </span>\r\n                        <div className=\"card-layout-preview-container\">\r\n                            <CardLayoutPreview\r\n                                width={Math.round(advanceLayoutPreviewHeight * width / height)}\r\n                                height={advanceLayoutPreviewHeight}\r\n                                isPendulum={isPendulum}\r\n                                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\r\n                                tabIndex={-1}\r\n                                dyeList={dyeList}\r\n                                foil={foil}\r\n                                language={language}\r\n                            />\r\n                        </div>\r\n                        {flagList.length > 0\r\n                            ? <InternalPopover\r\n                                content={<StyledPopMarkdown>\r\n                                    {language['input.flag.effective.label']}\r\n                                    <ul>{flagList}</ul>\r\n                                </StyledPopMarkdown>}\r\n                            >\r\n                                <ApartmentOutlined />\r\n                            </InternalPopover>\r\n                            : null}\r\n                        <CaretDownOutlined />\r\n                    </StyledPendulumFrameInputContainer>\r\n                </Popover>}\r\n                {(isPendulum && showCreativeOption) && <div className=\"pendulum-size\">\r\n                    <Popover key=\"color-picker\"\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {pendulumSizeList.map(({ value, label }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={pendulumSize === value ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            onPendulumSizeChange(value);\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={softMode}\r\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\r\n                        >\r\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                </div>}\r\n                {(isPendulum && showCreativeOption)\r\n                    && <Checkbox\r\n                        className=\"mirror-scale\"\r\n                        onChange={e => {\r\n                            const willMirror = e.target.checked;\r\n\r\n                            updateSetting({ mirrorPendulumScale: willMirror });\r\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\r\n                        }}\r\n                        checked={mirrorPendulumScale}\r\n                    >\r\n                        {language['input.mirror-scale.label']}\r\n                    </Checkbox>}\r\n            </div>\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\" className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (mirrorPendulumScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    autoSize={{\r\n                        minRows: 5,\r\n                    }}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, InputNumber, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst PostPendulumFirstLineContainer = styled.div`\r\n    &.first-line,\r\n    &.second-line {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: var(--spacing-sm);\r\n        align-items: center;\r\n        justify-content: right;\r\n    }\r\n    .type-ability-input {\r\n        flex: 1 1 auto;\r\n        width: unset;\r\n        max-width: 40rem;\r\n    }\r\n    .condense-input {\r\n        flex: 1 1 auto;\r\n    }\r\n    .line-input {\r\n        flex: 0 0 auto;\r\n        display: inline-grid;\r\n        grid-template-columns: var(--width-label) max-content max-content;\r\n        gap: var(--spacing-sm);\r\n        align-items: center;\r\n        .ant-input-number {\r\n            width: 65px;\r\n        }\r\n    }\r\n    .formatting-help-button,\r\n    .input-kanji-helper {\r\n        flex: 0 0 auto;\r\n    }\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .condense-input {\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: {\r\n        typeAbility?: string[],\r\n        effectMinLine?: number,\r\n        pendulumEffectMinLine?: number,\r\n    }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const showExtraDecorativeOption = useSetting(state => state.setting.showExtraDecorativeOption);\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const [effectMinLine, setEffectMinLine] = useState(() => useCard.getState().card.effectStyle.minLine);\r\n    const [pendulumEffectMinLine, setPendulumEffectMinLine] = useState(() => useCard.getState().card.pendulumStyle.minLine);\r\n\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        /** Changing min line force render effect, so we should do so sparingly */\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) setCard(currentCard => {\r\n                const newEffectStyle = { ...currentCard.effectStyle, minLine: effectMinLine };\r\n                const newPendulumEffectStyle = { ...currentCard.pendulumStyle, minLine: pendulumEffectMinLine };\r\n\r\n                return {\r\n                    ...currentCard,\r\n                    effectStyle: newEffectStyle,\r\n                    pendulumStyle: newPendulumEffectStyle,\r\n                };\r\n            });\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [effectMinLine, pendulumEffectMinLine, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility, effectMinLine, pendulumEffectMinLine }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n            if (typeof effectMinLine === 'number') setEffectMinLine(effectMinLine);\r\n            if (typeof pendulumEffectMinLine === 'number') setPendulumEffectMinLine(pendulumEffectMinLine);\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon]?.value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <>\r\n        <PostPendulumFirstLineContainer className={`post-pendulum-input first-line variant-${format}`}>\r\n            <CardTextInput ref={typeAbilityInputRef}\r\n                addonBefore={language[typeLabel]}\r\n                id=\"type-ability\"\r\n                defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n                onChange={changeTypeAbility}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            {isOCG && <Tooltip\r\n                overlay={language['input.furigana-helper.tooltip']}\r\n                overlayClassName=\"long-tooltip-overlay\"\r\n            >\r\n                <Checkbox\r\n                    className=\"input-kanji-helper\"\r\n                    onChange={toggleFuriganaHelper}\r\n                    checked={furiganaHelper}\r\n                >\r\n                    {language['input.furigana-helper.label']}\r\n                </Checkbox>\r\n            </Tooltip>}\r\n            <FormattingHelpDrawer />\r\n        </PostPendulumFirstLineContainer>\r\n        <PostPendulumFirstLineContainer className={`post-pendulum-input second-line variant-${format}`}>\r\n            <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n                onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n                optionList={CondenseThresholdButtonList}\r\n            >\r\n                <span>\r\n                    {language['input.condense.label']} <Explanation\r\n                        content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <div className=\"line-input\">\r\n                <div>\r\n                    {language['input.text-style.min-line.label']}\r\n                </div>\r\n                <InputNumber\r\n                    id=\"effect-line\"\r\n                    value={effectMinLine}\r\n                    placeholder={language['input.text-style.min-line.effect.placeholder']}\r\n                    onChange={value => setEffectMinLine(typeof value === 'number' ? value : 0)}\r\n                    min={0}\r\n                    max={50}\r\n                />\r\n                <InputNumber\r\n                    id=\"pendulum-effect-line\"\r\n                    value={pendulumEffectMinLine}\r\n                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\r\n                    onChange={value => setPendulumEffectMinLine(typeof value === 'number' ? value : 0)}\r\n                    min={0}\r\n                    max={50}\r\n                />\r\n            </div>}\r\n        </PostPendulumFirstLineContainer>\r\n    </>;\r\n});","import { Checkbox, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { InlineColorPicker, RadioTrain } from 'src/component';\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker,\r\n        h2.font-style-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\r\n                                <h2 className=\"font-style-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={fontStyle}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\r\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\r\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\r\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    IconButton,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n    StyledPopMarkdown,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getFinishList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { ClearOutlined } from '@ant-design/icons';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain, FrameTrainRef } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    AttributeInputGroup,\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledInputLabelWithButton,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isLink,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isLink,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const frameTrainRef = useRef<FrameTrainRef>(null);\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const finishList = useMemo(() => getFinishList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n                effectStyle, pendulumStyle,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({\r\n                typeAbility,\r\n                effectMinLine: effectStyle.minLine,\r\n                pendulumEffectMinLine: pendulumStyle.minLine,\r\n            });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={finishList}\r\n            >\r\n                <StyledInputLabelWithButton className=\"finish-checkbox-label\">\r\n                    <div className=\"input-label\">{language['input.finish.label']}</div>\r\n                    <IconButton\r\n                        onClick={() => onFinishChange([])}\r\n                        Icon={ClearOutlined}\r\n                        tooltipProps={{\r\n                            title: language['input.other-finish.reset.tooltip'],\r\n                        }}\r\n                    />\r\n                </StyledInputLabelWithButton>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain ref={frameTrainRef}\r\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\r\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\r\n            onStatChange={(atk, def, linkRating) => footerInputGroupRef.current?.setValue({ atk, def, linkRating })}\r\n        />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <AttributeInputGroup language={language} />\r\n\r\n                <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                    showCreativeOption={showCreativeOption}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    softMode={reduceMotionColor}\r\n                    onTakePicker={setPickerTarget}\r\n                    onFrameChange={frame => frameTrainRef.current.changeFrame(frame)}\r\n                />\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showCreativeOption={showCreativeOption}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkOffsetList,\r\n    LinkPendulumIndentList,\r\n    LinkPendulumOffsetList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkSpeedSkill, compressCardData, getCardIconFromFrame, mergeClass, normalizeCardName, resolveFrameStyle } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined, DownloadOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Checkbox, Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1.25;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .select-box {\r\n            display: inline-block;\r\n            margin-right: var(--spacing-xs);\r\n        }\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 50%;\r\n            height: 50%;\r\n            position: absolute;\r\n            &.top-left-frame {\r\n                top: 0;\r\n                left: 0;\r\n            }\r\n            &.top-right-frame {\r\n                top: 0;\r\n                left: 50%;\r\n            }\r\n            &.bottom-left-frame {\r\n                top: 50%;\r\n                left: 0;\r\n            }\r\n            &.bottom-right-frame {\r\n                top: 50%;\r\n                left: 50%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            left: 21px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #2a2a2a;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    selected,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onActive: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard, type: 'add' | 'remove') => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    selected,\r\n    language,\r\n    onDuplicate,\r\n    onActive,\r\n    onDelete,\r\n    onSelect,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artData,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundData,\r\n        backgroundFit,\r\n        backgroundSource,\r\n        backgroundType,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        opacity,\r\n        pendulumFrame, pendulumRightFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n        effectStyle,\r\n        pendulumStyle,\r\n    } = card;\r\n    const {\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n    } = resolveFrameStyle({\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n    }, isPendulum);\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedCardArt = artSource === 'offline'\r\n        ? !art\r\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\r\n            : artData\r\n        : art;\r\n    const normalizedBackgroundArt = backgroundSource === 'offline'\r\n        ? !background\r\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\r\n            : backgroundData\r\n        : background;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onActive(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-left-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[topLeftFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[topLeftFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame top-right-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[topRightFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[topRightFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-left-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[bottomLeftFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[bottomLeftFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-right-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[bottomRightFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[bottomRightFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={normalizedBackgroundArt}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\r\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\r\n\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\r\n                    )}\r\n                    style={{\r\n                        top: isPendulum ? 16 : 19,\r\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\r\n                    }}\r\n                />;\r\n            })}\r\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                <div className=\"select-box\" onClick={e => e.stopPropagation()}>\r\n                    <Checkbox\r\n                        checked={selected}\r\n                        onChange={e => {\r\n                            onSelect(card, e.target.checked ? 'add' : 'remove');\r\n                        }}\r\n                    />\r\n                </div>\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${(normalizedCardIcon === 'custom'\r\n                        ? 'icon-list'\r\n                        : normalizedCardIcon).toLowerCase()}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(normalizedCardIcon !== NO_ICON\r\n                    && normalizedCardIconType !== 'st'\r\n                    && normalizedCardIconType !== 'none'\r\n                    && normalizedCardIconType !== 'custom'\r\n                ) && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined\r\n                        className=\"action-button action-download\"\r\n                        onClick={() => {\r\n                            const { id, ...exportableCard } = card;\r\n                            copy(JSON.stringify(compressCardData(exportableCard)));\r\n                        }}\r\n                    />\r\n                </Tooltip>\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${- thumbArtXGap * THUMB_TO_CARD_RATIO\r\n            }px) translateY(${- thumbArtYGap * THUMB_TO_CARD_RATIO\r\n            }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { Button, Modal } from 'antd';\r\nimport JSZip from 'jszip';\r\nimport { useEffect, useRef } from 'react';\r\nimport { InternalCard } from 'src/model';\r\nimport { useBatchDownload, useCardList, WithLanguage } from 'src/service';\r\nimport { downloadBlob } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { CheckCircleOutlined, LoadingOutlined, HourglassOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst ExportingListContainer = styled.div`\r\n    .exporting-item {\r\n        display: grid;\r\n        grid-template-columns: 1.5rem 1fr;\r\n    }\r\n    .anticon-hourglass {\r\n        color: var(--main-info);\r\n    }\r\n    .anticon-loading {\r\n        color: var(--main-active);\r\n    }\r\n    .anticon-check-circle {\r\n        color: var(--main-online);\r\n    }\r\n`;\r\n\r\nexport type BatchDownloadButton = {\r\n    onActive: (card: InternalCard) => void,\r\n} & WithLanguage;\r\nexport const BatchDownloadButton = ({\r\n    language,\r\n    onActive,\r\n}: BatchDownloadButton) => {\r\n    const {\r\n        selectedMap,\r\n        listName,\r\n        activeId,\r\n        cardDisplayList,\r\n    } = useCardList(useShallow(({\r\n        selectedMap,\r\n        listName,\r\n        activeId,\r\n        cardDisplayList,\r\n    }) => ({\r\n        selectedMap,\r\n        listName,\r\n        activeId,\r\n        cardDisplayList,\r\n    })));\r\n    const {\r\n        batchQueue,\r\n        batchDataMap,\r\n        isBatchDownloading,\r\n        isReady,\r\n        clearQueue,\r\n        stopBatchDownload,\r\n        startBatchDownload,\r\n    } = useBatchDownload();\r\n    /**\r\n     * The batch download process is as follow:\r\n     * * Start the process, block the screen with a popup and mark the process as started.\r\n     * * During the process, the top card of the exporting list is picked, and force select.\r\n     * * After it fully render (we check it at the useCardExport hook), it trigger the recording process, while also remove the recorded card from exporting list.\r\n     * * When the exporting list changed, jump back to step 2. If the exporting list is now empty, we zip it and trigger the download.\r\n     * * Clean up and end the process.\r\n     */\r\n    const nextSelectedId = batchQueue[0];\r\n    const lastSelectedId = useRef('');\r\n    useEffect(() => {\r\n        if (nextSelectedId && isBatchDownloading && nextSelectedId !== lastSelectedId.current) {\r\n            lastSelectedId.current = nextSelectedId;\r\n            const targetCard = cardDisplayList.find(card => card.id === nextSelectedId);\r\n\r\n            if (targetCard) {\r\n                onActive(targetCard);\r\n            }\r\n        }\r\n    }, [cardDisplayList, isBatchDownloading, nextSelectedId, onActive]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (isReady) {\r\n            (async () => {\r\n                const { batchName, batchDataMap } = useBatchDownload.getState();\r\n                const zipObject = new JSZip();\r\n                const batchDataList = Object.values(batchDataMap);\r\n\r\n                if (batchDataList.length > 0) {\r\n                    Object.values(batchDataMap).forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    if (relevant) {\r\n                        downloadBlob(\r\n                            `${batchName}.zip`,\r\n                            zipBlob,\r\n                            'application/zip',\r\n                        );\r\n                        stopBatchDownload();\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [isReady, stopBatchDownload]);\r\n\r\n    const exportAllCard = Object.keys(selectedMap).length === 0;\r\n    return <>\r\n        <Modal\r\n            visible={isBatchDownloading}\r\n            onCancel={() => stopBatchDownload()}\r\n            onOk={() => clearQueue()}\r\n            cancelText={language['manager.batch.batch-download.cancel-all.label']}\r\n            okText={language['manager.batch.batch-download.premature-stop.label']}\r\n            okButtonProps={{\r\n                type: 'default',\r\n            }}\r\n        >\r\n            <ExportingListContainer className=\"exporting-list\">\r\n                {Object\r\n                    .values(cardDisplayList)\r\n                    .map(({ id, name }) => {\r\n                        if (!exportAllCard && !selectedMap[id]) return null;\r\n                        return <div key={id} className=\"exporting-item\">\r\n                            <div className=\"export-status\">\r\n                                {activeId === id\r\n                                    ? <LoadingOutlined />\r\n                                    : batchDataMap[id]\r\n                                        ? <CheckCircleOutlined />\r\n                                        : <HourglassOutlined />}\r\n                            </div>\r\n                            <div className=\"export-name\">{name}</div>\r\n                        </div>;\r\n                    })}\r\n            </ExportingListContainer>\r\n        </Modal>\r\n        <Button\r\n            className=\"batch-download-button\"\r\n            onClick={() => startBatchDownload(\r\n                listName,\r\n                exportAllCard\r\n                    ? cardDisplayList.map(card => card.id)\r\n                    : Object.keys(selectedMap),\r\n            )}\r\n        >\r\n            {exportAllCard\r\n                ? language['manager.batch.batch-download.label']\r\n                : language['manager.batch.batch-download.partial-download.label']}\r\n        </Button>\r\n    </>;\r\n};","import { LanguageDataDictionary, useCardList, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button, Dropdown, Menu } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\nimport { BatchDownloadButton } from './batch-download-button';\r\nimport { CaretDownFilled } from '@ant-design/icons';\r\n\r\nconst StyledMenuItem = styled(Menu.Item)`\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    position: relative;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .batch-download-button {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .select-panel {\r\n        display: grid;\r\n        grid-template-columns: max-content max-content 1fr;\r\n        padding: var(--spacing-xs);\r\n        gap: var(--spacing-xs);\r\n        text-align: right;\r\n        .ant-checkbox-wrapper span {\r\n            padding-right: 0;\r\n        }\r\n        .scheme-button {\r\n            display: inline-block;\r\n        }\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        position: absolute;\r\n        width: 100%;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    selectedMap: Record<string, string>,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onActive: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n} & Pick<CardThumb, 'onSelect'>;\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        selectedMap,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDuplicate,\r\n        onActive,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        selected={!!selectedMap[list[index].id]}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onActive={onActive}\r\n        onDelete={onDelete}\r\n        onSelect={onSelect}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onActive: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onActive,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        selectedMap,\r\n        selectCard,\r\n        deleteCard,\r\n        duplicateCard,\r\n        setSelectMap,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        selectedMap,\r\n        selectCard,\r\n        deleteCard,\r\n        duplicateCard,\r\n        setSelectMap,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        selectedMap,\r\n        selectCard,\r\n        deleteCard,\r\n        duplicateCard,\r\n        setSelectMap,\r\n        resetFilter,\r\n    })));\r\n    const {\r\n        exportScheme,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { exportScheme },\r\n        updateSetting,\r\n    }) => ({\r\n        exportScheme,\r\n        updateSetting,\r\n    })));\r\n\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const onSelect: CardThumbRowData['onSelect'] = useCallback((card, type) => {\r\n        selectCard(card.id, type);\r\n    }, [selectCard]);\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onActive(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onActive, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        {cardDisplayList.length > 0 && <div className=\"select-panel\">\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => setSelectMap([], 'replace')}\r\n            >\r\n                {language['manager.batch.batch-download.clear.label']}\r\n            </Button>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => setSelectMap(cardDisplayList, 'add')}\r\n            >\r\n                {language['manager.batch.batch-download.all.label']}\r\n            </Button>\r\n            <div>\r\n                <Dropdown\r\n                    overlay={<Menu>\r\n                        {[\r\n                            {\r\n                                value: 'with-name',\r\n                                label: language['manager.batch.batch-download.export-option.with-name.label'],\r\n                            },\r\n                            {\r\n                                value: 'with-id',\r\n                                label: language['manager.batch.batch-download.export-option.with-id.label'],\r\n                            },\r\n                        ].map(({ value, label }) => {\r\n                            return <StyledMenuItem\r\n                                key={value}\r\n                                onClick={() => updateSetting({ exportScheme: value })}\r\n                                className={value === exportScheme ? 'menu-active' : ''}\r\n                            >\r\n                                {label}\r\n                            </StyledMenuItem>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div\r\n                        className=\"scheme-button\"\r\n                    >\r\n                        {language['manager.batch.batch-download.export-scheme.label']} <CaretDownFilled />\r\n                    </div>\r\n                </Dropdown>\r\n            </div>\r\n        </div>}\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            selectedMap,\r\n                            onDuplicate: duplicateCard,\r\n                            onActive,\r\n                            onDelete: deleteAndReselect,\r\n                            onSelect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        {cardDisplayList.length !== 0 && <BatchDownloadButton\r\n            language={language}\r\n            onActive={onActive}\r\n        />}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    RegionMap,\r\n    CondenseTolerantMap,\r\n    DyeIndexMap,\r\n    ExtraAttributeList,\r\n    FinishMap,\r\n    frameList,\r\n    FramePositionMap,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PendulumSizeList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n    TotalIconTypeMap,\r\n} from 'src/model';\r\nimport { FileTextOutlined } from '@ant-design/icons';\r\nimport { CopiableCode, StyledMono } from 'src/component';\r\nimport { FlagPresentationList } from '../common';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n        padding: 0;\r\n        padding-left: 24px;\r\n        .ant-collapse-arrow {\r\n            top: 5px;\r\n            left: 0;\r\n        }\r\n    }\r\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\r\n        padding: var(--spacing-sm) 0 0 0;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                    <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                                </tr>\r\n                                {[\r\n                                    {\r\n                                        field: 'Format',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'tcg',\r\n                                                'ocg',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Frame',\r\n                                        altField: 'Bottom Frame',\r\n                                        value: <div>\r\n                                            {frameList\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Attribute',\r\n                                        value: <div>\r\n                                            {[...AttributeList, ...ExtraAttributeList]\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Spell/Trap Icon',\r\n                                        value: <div>\r\n                                            {IconList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Sticker',\r\n                                        value: <div>\r\n                                            {StickerList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Foil',\r\n                                        value: <div>\r\n                                            {getFoilList()\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Card Finish',\r\n                                        value: <div>\r\n                                            {Object.values(FinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                            <div>{language['manager.template.description.joinable']}</div>\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Art Finish',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star Type',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'number',\r\n                                                'text',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star Alignment',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'left',\r\n                                                'center',\r\n                                                'right',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Card Icon Type',\r\n                                        value: <div>\r\n                                            {IconTypeList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Background Type',\r\n                                        value: <div>\r\n                                            {getBackgroundTypeList()\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Condense Rate',\r\n                                        value: <div>\r\n                                            {Object.keys(CondenseTolerantMap)\r\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style Type',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'predefined',\r\n                                                'custom',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Font',\r\n                                        value: <div>\r\n                                            <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                        </div>,\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Preset',\r\n                                        value: <div>\r\n                                            {Object.keys(PresetNameStyleMap)\r\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Pattern',\r\n                                        value: <div>\r\n                                            {PatternList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Pendulum Size',\r\n                                        value: <div>\r\n                                            {PendulumSizeList\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Attribute',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Background',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Icon',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Sticker',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Region',\r\n                                        value: <div>\r\n                                            {Object.values(RegionMap)\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star List',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.star-list']}</div>\r\n                                            {Object\r\n                                                .values(TotalIconTypeMap)\r\n                                                .filter(({ isMixable }) => isMixable)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Dye List',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.dye-list']}</div>\r\n                                            <ul>\r\n                                                {Object\r\n                                                    .entries(DyeIndexMap)\r\n                                                    .sort((l, r) => l[1] - r[1])\r\n                                                    .map(([key]) => <li key={key}>{language[FramePositionMap[key]?.labelKey ?? '']}</li>)}\r\n                                            </ul>\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Flag',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.flag']}</div>\r\n                                            {FlagPresentationList\r\n                                                .map(({ sampleDisplay, index }) => <div key={index}>{sampleDisplay(language)}</div>)}\r\n                                        </div>\r\n                                    },\r\n                                ].map(({\r\n                                    field,\r\n                                    altField,\r\n                                    value,\r\n                                }) => {\r\n                                    return <tr key={field}>\r\n                                        <td>\r\n                                            <StyledMono>{field}</StyledMono>\r\n                                            {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                        </td>\r\n                                        <td>{value}</td>\r\n                                    </tr>;\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n                \r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\nimport XLSX from 'xlsx';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const exportFormat = useSetting(state => state.setting.exportFormat);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const [savingFile, setSavingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            className=\"card-manager-panel\"\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                setSavingFile(true);\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    try {\r\n                                        const {\r\n                                            error,\r\n                                            value: csvdata,\r\n                                        } = cardListToCsv(useCardList.getState().cardList);\r\n\r\n                                        if (error) {\r\n                                            let errorMessage = '';\r\n                                            let errorDescription = '';\r\n                                            switch (error) {\r\n                                                case 'offline-data': {\r\n                                                    errorMessage = language['error.export.offline-data.message'];\r\n                                                    errorDescription = language['error.export.offline-data.description'];\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (errorMessage || errorDescription) {\r\n                                                notification.error({\r\n                                                    message: errorMessage,\r\n                                                    description: errorDescription,\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        switch (exportFormat) {\r\n                                            case 'xlsx': {\r\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\r\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\r\n                                                break;\r\n                                            }\r\n                                            default: {\r\n                                                downloadBlob(\r\n                                                    useCardList.getState().listName,\r\n                                                    new Blob([csvdata], { type: 'text/csv' }),\r\n                                                    'text/csv',\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        changeEditStatus('download');\r\n                                    } catch (e) {}\r\n                                }\r\n                                setSavingFile(false);\r\n                            }}\r\n                        >\r\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept={[\r\n                                    '.csv',\r\n                                    'application/vnd.ms-excel',\r\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                                ].join(',')}\r\n                                className=\"import-upload-input\"\r\n                                onChange={async (e) => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        try {\r\n                                            const file = await fileList[0].arrayBuffer();\r\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\r\n\r\n                                            /** Assume data from only the very first sheet */\r\n                                            /** 65001 codepage allow display unicode characters such as Japanese */\r\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\r\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\r\n                                                workbook.Sheets[workbook.SheetNames[0]],\r\n                                                { header: 1, raw: false },\r\n                                            );\r\n                                            const nextCardList = csvToCardList(csvBook);\r\n\r\n                                            if (nextCardList.length > 0) {\r\n                                                setCardList(nextCardList, nextCardList[0].id);\r\n                                                setListName(fileName);\r\n                                                setInputKey(cnt => cnt + 1);\r\n                                                onSelect(nextCardList[0]);\r\n                                                setReadingFile(false);\r\n                                            } else {\r\n                                                announceError();\r\n                                            }\r\n                                        } catch (e) {\r\n                                            console.error(e);\r\n                                            announceError();\r\n                                        }\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onActive={activeCard}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\nimport { CardActionButton } from './component';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .save-button-tainted {\r\n        .alert-label {\r\n            flex: 1;\r\n            padding-top: var(--spacing-px);\r\n        }\r\n        .resolution-option {\r\n            position: relative;\r\n            border: none;\r\n            border-radius: var(--br-lg);\r\n            background: var(--main-primary);\r\n        }\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n            border-left: var(--bw) solid var(--sub-level-3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CardPreviewContainer = styled.div`\r\n    position: relative;\r\n    display: block;\r\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    margin: var(--spacing);\r\n    margin-top: 0;\r\n    .reset-button,\r\n    .lightbox-button {\r\n        display: none;\r\n    }\r\n    #preview-canvas {\r\n        display: none;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\r\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\r\n            scale(var(--resize-ratio))\r\n            translateZ(0);\r\n        &.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport const CardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled(CardActionButton)`\r\n    position: absolute;\r\n    z-index: 101;\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n    ResolutionButton,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCardList,\r\n    useGlobal,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Dropdown, notification, Tooltip } from 'antd';\r\nimport { CROPPER_WIDTH, Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\r\nimport {\r\n    CardPreviewContainer,\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    CardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n        globalScale,\r\n        resolution,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale, resolution } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n        globalScale,\r\n        resolution,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [, setActiveDropzone] = useGlobal('activeDropzone');\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<LightboxRef>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        /** Each time a drag over event is fired, we keep the heartbeat, and stop it if there is no heartbeat after a while. */\r\n        const stopDrag = () => {\r\n            setActiveDropzone(0);\r\n        };\r\n        let timeoutHandle = window.setTimeout(stopDrag, 200);\r\n        const checkDragHeartbeat = () => {\r\n            setActiveDropzone(1);\r\n            window.clearTimeout(timeoutHandle);\r\n            timeoutHandle = window.setTimeout(stopDrag, 200);\r\n        };\r\n\r\n        document.addEventListener('dragover', checkDragHeartbeat);\r\n\r\n        return () => {\r\n            document.removeEventListener('dragover', checkDragHeartbeat);\r\n        };\r\n    }, [setActiveDropzone]);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'SVN-Times New Roman Italic',\r\n                    'StoneSerif-Italic',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\r\n        if (crossorigin === 'anonymous') {\r\n            setTainted(false);\r\n            lightboxRef.current?.refresh();\r\n        }\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={e => {\r\n                    e.preventDefault();\r\n                }}\r\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${process.env.PUBLIC_URL\r\n                        }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasHeight * globalScale}px`,\r\n                        '--card-width': `${CanvasWidth * globalScale}px`,\r\n                        '--global-scale': `${globalScale}`,\r\n                        '--cropper-width': `${CROPPER_WIDTH}px`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <ExportPanel ref={exportPanelRef}\r\n                                    tainted={isTainted}\r\n                                    artworkCanvas={artworkCanvasRef.current}\r\n                                    onRequireExportData={exportData}\r\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                    onClose={forceRefocus}\r\n                                />\r\n                                <div />\r\n                                <ImportPanel ref={importPanelRef}\r\n                                    onImport={treatNewCard}\r\n                                    onClose={forceRefocus}\r\n                                    allowHotkey={allowHotkey}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                            <BatchConverter language={language} />\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                globalScale={globalScale}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\r\n                                <div className=\"alert-label\">\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\r\n                                </div>\r\n                                <Dropdown\r\n                                    className=\"save-button-dropdown\"\r\n                                    placement=\"bottomRight\"\r\n                                    overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n                                >\r\n                                    <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                                        <GatewayOutlined className=\"resolution-icon\" />\r\n                                        <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                                    </ResolutionButton>\r\n                                </Dropdown>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <CardPreviewContainer className=\"card-preview-container\">\r\n                            <Tooltip title={language['button.reset.tooltip']}>\r\n                                <ResetButton\r\n                                    className=\"reset-button\"\r\n                                    onClick={() => {\r\n                                        const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                        if (consent) {\r\n                                            const { setCard, card } = useCard.getState();\r\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                            const contextualDefaultCardData = card.format === 'tcg'\r\n                                                ? defaultCard\r\n                                                : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                            setCard(contextualDefaultCardData, true);\r\n                                            setImageChangeCount(cnt => cnt + 1);\r\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <ClearOutlined />\r\n                                </ResetButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={<div className=\"center\">\r\n                                {language['button.full-size.label']}\r\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                            </div>}>\r\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                    <ZoomInOutlined />\r\n                                </LightboxButton>\r\n                            </Tooltip>\r\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\r\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\r\n                             */}\r\n                            <canvas\r\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\r\n                                id=\"preview-canvas\"\r\n                                ref={previewCanvasRef}\r\n                                width={CanvasWidth}\r\n                                height={CanvasHeight}\r\n                            />\r\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <canvas\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\r\n                                    id=\"export-canvas\"\r\n                                    ref={exportCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\"\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\r\n                                    ref={frameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"nameCanvas\"\r\n                                    ref={nameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={148 * globalScale}\r\n                                />\r\n                                <canvas id=\"cardIconCanvas\"\r\n                                    ref={cardIconCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={222 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumScaleCanvas\"\r\n                                    ref={pendulumScaleCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={920 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumEffectCanvas\"\r\n                                    ref={pendulumEffectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={920 * globalScale}\r\n                                />\r\n                                <canvas id=\"typeCanvas\"\r\n                                    ref={typeCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"effectCanvas\"\r\n                                    ref={effectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"statCanvas\"\r\n                                    ref={statCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"setIdCanvas\"\r\n                                    ref={setIdCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"passwordCanvas\"\r\n                                    ref={passwordCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"creatorCanvas\"\r\n                                    ref={creatorCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"stickerCanvas\"\r\n                                    ref={stickerCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"finishCanvas\"\r\n                                    ref={finishCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={artworkCanvasRef}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={backgroundCanvasRef}\r\n                                />\r\n                            </CardCanvasGroupContainer>\r\n                        </CardPreviewContainer>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Lightbox\r\n                    ref={lightboxRef}\r\n                    globalScale={globalScale}\r\n                />\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}