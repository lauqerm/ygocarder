{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/mask.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/lightbox/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/frame-layout-picker/index.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","_objectSpread","distributionMode","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","supportFormat","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","concat","process","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","hasEmboss","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","PendulumSizeMap","small","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","medium","large","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","tcg","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","ART_FINISH_TYPE","FinishMap","partInstructionMap","pendulumSubstituteMap","ArtFinishMap","art","OtherFinishTypeMap","attribute","sticker","FoilNameMap","getFoilList","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","FramePositionMap","bottomLeftFrame","bottomRightFrame","effectBackground","pendulumEffectBackground","topLeftFrame","topRightFrame","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","leftFrame","rightFrame","pendulumRightFrame","foil","finish","otherFinish","artFinish","nameStyleType","nameStyle","headTextFillStyle","embossThickness","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","createCanvas","canvas","document","createElement","context","getContext","distanceTransform","array","exponent","index","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","length","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","arguments","undefined","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","ctx","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","drawImage","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","checkLightFooter","includes","resolveFrameStyle","frameData","_ref2","_ref3","_ref4","_ref5","resolvedFrame","resolvedTopLeft","resolvedBottomLeft","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","filter","kanjiHelper","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","download","href","window","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","useState","cnt","setCnt","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","randomCharacter","charSet","charactersLength","charAt","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","nextNameStyle","_termMap$entry","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","create","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","_reader","_reader2","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader11","_reader12","_reader13","_reader14","_reader15","_reader16","_reader$split$filter","_reader17","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_reader40","_reader41","_reader42","_reader43","_reader44","_emptyCard$isLink","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader45","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","reduceMotionColor","resolution","globalScale","showCreativeOption","showExtraDecorativeOption","mirrorPendulumScale","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","click","classList","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalCompositeOperation","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","strokeStyle","imageCacheMap","drawFrom","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawAsset","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","keepControlCharacter","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","headTextFragmentEdge","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","_fullLineList$length","content","isNormal","fontDataKey","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","sizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","fullLineListOption","_flavorConditionRegex","lineRegexSource","fullLineRegexSource","wholeLineRegex","lineReplacement","lineContent","fullLineReplacement","fullLineContent","willContinue","exec","flavorConditionRegex","potentialFlavorConditionText","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","flavorFontData","dynamicFlavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","drawLinkRatingText","MaskPromise","right","applyAlphaMask","urlOrCanvas","maskData","layerData","baseDrawLinkArrowMap","positionType","all","isActive","baseLink","activeLink","resetTransform","baseDrawLinkMapFoil","withBorder","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","isSpeedSkill","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","backgroundEffectBoxY","backgroundEffectBoxWidth","backgroundEffectBoxHeight","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resolvedLayoutStyle","resolvedEffectBackground","resolvedPendulumEffectBackground","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","fillWidth","fillHeight","drawFrame","topFrameContext","topFrameCanvas","topRightCanvas","bottomFrameContext","bottomFrameCanvas","bottomRightCanvas","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","_otherFinish$","attributeCanvas","attributeContext","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishContext","drawStar","_otherFinish$2","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starContext","starFinishCanvas","starFinishContext","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconContext","drawLinkArrowMap","drawStatBorder","drawNameBackground","nameBackgroundContext","nameBackgroundCanvas","nameRightCanvas","drawEffectBackground","withPendulum","effectBoxX","_PendulumSizeMapExcep","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","pendulumBorderCanvas","pendulumBorderContext","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","cloneCtx","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","exceptionDigitWidthRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","bottomFrame","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightRightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","statInEffect","typeInEffect","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","fillBaseColor","w","customFill","hasArtBorder","artHeight","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","bottom","bottomOffset","_baselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","useItalic","effectIndexSize","coordinateKey","getEffectFontAndCoordinate","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","iconCanvas","iconContext","iconFinishCanvas","iconFinishContext","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","memory","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","targetMemory","useShallow","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","StyledCode","StyledMarkdown","StyledPopMarkdown","_templateObject3","InternalPopover","CardActionButton","_templateObject4","CombinedSliderContainer","_templateObject5","PopoverButton","_templateObject6","$active","$softMode","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","b","majorA","minorA","patchA","String","Number","majorB","minorB","patchB","onMouseOver","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","currentReminder","footer","Tabs","TabPane","tab","answer","Affiliation","rel","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","Button","onMouseOut","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","naturalWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Container","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","nextColor","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","FrameLayoutContainer","CardLayoutContainer","$width","$height","$hoverable","CardLayoutPreview","baseLayoutState","resolvedLayoutState","activeLayout","FrameLayoutPicker","_FramePositionMap$act","onFrameChange","recentCustomPendulumFrame","inputRef","setActiveLayout","_inputRef$current","changeBottomLeftFrame","changeBottomRightFrame","changeTopLeftFrame","changeTopRightFrame","changeEffectBackground","nextEffectStyle","changePendulumEffectBackground","nextPendulumEffectStyle","changeLayout","layoutValue","layoutState","activeFrame","_recentCustomPendulum","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","willBecomePendulum","_bottomFrameOptionGri","willMirror","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","frameTrainRef","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$topLeft","_FrameInfoMap$topLeft2","_FrameInfoMap$topRigh","_FrameInfoMap$topRigh2","_FrameInfoMap$bottomL","_FrameInfoMap$bottomL2","_FrameInfoMap$bottomR","_FrameInfoMap$bottomR2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","FileTextOutlined","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","_templateObject7","LightboxButton","_templateObject8","ResetButton","_templateObject9","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC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KACP4b,cAAc,EACdD,WAAW,EACXE,iBAAiB,EACjBC,SAAUnB,UAjGeA,WACzB,IACI,MAAMG,QAAiBC,MAAM,GAADzhC,OACrBC,aAAsB,6BACzB,CACIyhC,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBO,QAA8DT,EAASI,OAE7E,IAAKK,EAAqB,MAAO,IAAI7lB,MAAM,qBAE3Cd,EAAI,CACA2mB,sBACAM,iBAAiB,IAEvB,MAAO/b,GACLC,QAAQC,MAAM,6EAA8EF,GAC5FlL,EAAI,CACA2mB,oBAAqB,CACjBH,IAAK,CACDtlC,KAAM,UACNukC,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBoB,iBAAiB,MAkErBE,IAEJC,oBAAqBrB,gBAEXD,EAAa,aACbW,EAAe9B,GACrB3kB,EAAI,CACAgnB,cAAc,KAGtBlB,eACAW,qBAIKY,GAAcA,IACN5C,IAAQ/d,IAAA,IAAC,SAAEmgB,GAAUngB,EAAA,OAAKmgB,KAIlCS,GAAcA,IAAM7C,GAAQ8C,WAAWV,S,cC9IpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BAC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","file":"static/js/main.a830fd2f.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\r\n\r\nexport const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n    frame: string,\r\n}) => [\r\n        {\r\n            value: 'fit' as const,\r\n            label: dictionary?.fit,\r\n        },\r\n        {\r\n            value: 'full' as const,\r\n            label: dictionary?.full,\r\n        },\r\n        {\r\n            value: 'frame' as const,\r\n            label: dictionary?.frame,\r\n        },\r\n    ];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxRef: React.RefObject<{\r\n        draw: (exportCanvas: HTMLCanvasElement) => void,\r\n    }>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    maximumScale: 2,\r\n    topToPendulumStructure: 210,\r\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\r\n    topToPendulumStructureFrame: 185,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    pendulumIconFrameWidth: 813,\r\n    pendulumIconFrameHeight: 100,\r\n    pendulumFrameWidth: 753,\r\n    pendulumFrameHeight: 955,\r\n    leftToPendulumStructure: 52,\r\n    cardBorder: 28,\r\n    topToEffectBox: 885,\r\n    leftToEffectBox: 54,\r\n    effectBoxWidth: 705,\r\n    effectBoxHeight: 231,\r\n    finishTypeCardWidth: 702,\r\n    finishTypeCardHeight: 200,\r\n    stickerSize: 52,\r\n    attributeSize: 77,\r\n    attributeY: 55,\r\n    attributeX: 678,\r\n    stickerX: 739.1438,\r\n    stickerY: 1110.938,\r\n    iconWidth: 43,\r\n    iconHeight: 44,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        backgroundRatio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    pendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.236,\r\n        backgroundRatio: 1.236,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artRatio: 1.236,\r\n        type: 'pendulumSmall' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\r\n     * Even though the image size does not change, the image frame does become larger.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     *  */\r\n    extendedPendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.236,\r\n        type: 'extendedPendulumSmall' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\r\n     * This results a taller visible image, but shorter image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artRatio: 1.236,\r\n        type: 'truePendulumSmall' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\r\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumLarge: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'truePendulumLarge' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n    pendulumSize?: PendulumSize,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\r\n\r\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\r\n    if (normalizedBoundless || body < 100) {\r\n        distributionMode = isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard';\r\n    } else {\r\n        if (isPendulum) {\r\n            if (text < 100) {\r\n                distributionMode = pendulumSize === 'small'\r\n                    ? 'extendedPendulumSmall'\r\n                    : 'extendedPendulum';\r\n            } else {\r\n                if (pendulum < 100) {\r\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\r\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\r\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\r\n                } else {\r\n                    distributionMode = pendulumSize === 'small'\r\n                        ? 'pendulumSmall'\r\n                        : 'pendulum';\r\n                }\r\n            }\r\n        } else {\r\n            distributionMode = text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n        }\r\n    }\r\n\r\n    const result = CardArtCanvasCoordinateMap[distributionMode];\r\n    return {\r\n        ...result,\r\n        backgroundRatio: backgroundType === 'frame'\r\n            ? 0.686\r\n            : result.backgroundRatio,\r\n    };\r\n};\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'MAGIC',\r\n        nameKey: 'input.attribute.magic',\r\n        label: 'Laugh',\r\n        color: '#1b8f83',\r\n        isCreative: true,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n];\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const IconTypeMap: Record<string, {\r\n    value: string,\r\n    labelKey: string,\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n}> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    embossPitch: 90,\r\n    embossYaw: 90,\r\n    embossThickness: 0,\r\n    hasEmboss: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    hasEmboss: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo'\r\n| 'embossGold' | 'embossPlatinum';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n    embossGold: {\r\n        key: 'embossGold',\r\n        label: 'Embossed Gold',\r\n        image: 'asset/image/other/name-emboss-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossGold',\r\n            fillStyle: '#d09b0e',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#333333',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n    embossPlatinum: {\r\n        key: 'embossPlatinum',\r\n        label: 'Embossed Platinum',\r\n        image: 'asset/image/other/name-emboss-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossPlatinum',\r\n            fillStyle: '#c0c0c0',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#4d4d4d',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\r\nexport const PendulumSizeMap = {\r\n    small: {\r\n        key: 'small' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.small.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 95,\r\n        pendulumBoxOffsetY: 50,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 816,\r\n        artlessFrameY: 594,\r\n        fontSize: 56.5,\r\n    },\r\n    medium: {\r\n        key: 'medium' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.medium.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 147,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 790,\r\n        artlessFrameY: 553,\r\n        fontSize: 60.5,\r\n    },\r\n    large: {\r\n        key: 'large' as const,\r\n        frameType: 'text',\r\n        labelKey: 'input.pendulum-size.large.label',\r\n        effectBoxOffsetY: 27,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 180,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 806,\r\n        artlessFrameY: 553,\r\n        fontSize: 60.5,\r\n    },\r\n};\r\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\r\n\r\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\r\n    exceptionPendulumBoxOffsetHeight?: number,\r\n    exceptionFrameType?: string,\r\n}>> = {\r\n    small: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: -13,\r\n        },\r\n    },\r\n    medium: {},\r\n    large: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: 15,\r\n        },\r\n        zarc: {\r\n            exceptionFrameType: 'pendulum-large',\r\n        }\r\n    },\r\n};\r\n\r\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n    trueHeightCap?: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'tcg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'tcg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'tcg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'ocg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'ocg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n};\r\n\r\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\r\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\r\n    normal: {\r\n        small: [\r\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n        ],\r\n    },\r\n    scaleless: {\r\n        small: [\r\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\r\n    tcg: {\r\n        smaller: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 950.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        smaller: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 258,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport const ART_FINISH_TYPE = 'art';\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    labelKey?: string,\r\n    tooltipKey?: string,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n    pendulumSubstituteMap: Record<string, string>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'card-border': type3CommonInstruction,\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'card-border': type8CommonInstruction,\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n};\r\n\r\nexport const OtherFinishTypeMap = {\r\n    art: {\r\n        key: 'art' as const,\r\n        labelKey: 'input.art-finish.label',\r\n    },\r\n    attribute: {\r\n        key: 'attribute' as const,\r\n        labelKey: 'input.attribute.label',\r\n    },\r\n    icon: {\r\n        key: 'icon' as const,\r\n        labelKey: 'input.icon-type.icon.label',\r\n    },\r\n    sticker: {\r\n        key: 'sticker' as const,\r\n        labelKey: 'input.sticker.label',\r\n    },\r\n};\r\nexport type OtherFinish = [attribute: string, icon: string, sticker: string];\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilNameMap = {\r\n    normal: 'normal' as const,\r\n    gold: 'gold' as const,\r\n    platinum: 'platinum' as const,\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        name: FoilNameMap['normal' as const],\r\n        label: dictionary?.normal,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: FoilNameMap['gold' as const],\r\n        label: dictionary?.gold,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: FoilNameMap['platinum' as const],\r\n        label: dictionary?.platinum,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    allRightSymbolOffset?: number,\r\n    bulletOffset?: number,\r\n    bulletWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    allRightSymbolOffset: 1,\r\n    bulletWidth: 23,\r\n    fontSize: 24.5,\r\n    lineHeight: 24.7,\r\n    lineCount: 6,\r\n    bulletOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport type FontDeviation = {\r\n    uniformBoxDescent?: number,\r\n};\r\nexport type FontDeviationMap = {\r\n    threshold: number,\r\n    letterMap: Record<string, FontDeviation>,\r\n}\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    letterDeviationMap?: Record<string, FontDeviationMap>,\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    headTextGapRatio: 0,\r\n};\r\nexport const DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"StoneSerif-Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\n/**\r\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\r\n * */\r\nexport const NormalFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\r\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps',\r\n            font: 'MatrixRegularSmallCaps',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.55,\r\n            fontList: [{\r\n                bulletWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                '1': {\r\n                    threshold: 0.94,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 11 },\r\n                        ị: { uniformBoxDescent: 11 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 11 },\r\n                        e̩: { uniformBoxDescent: 11 },\r\n                        È̩: { uniformBoxDescent: 11 },\r\n                        É̩: { uniformBoxDescent: 11 },\r\n                        è̩: { uniformBoxDescent: 11 },\r\n                        Ẹ: { uniformBoxDescent: 11 },\r\n                        ẹ: { uniformBoxDescent: 11 },\r\n                        Ệ: { uniformBoxDescent: 11 },\r\n                        ệ: { uniformBoxDescent: 11 },\r\n                    },\r\n                },\r\n                '2': {\r\n                    threshold: 0,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 20 },\r\n                        ị: { uniformBoxDescent: 20 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 20 },\r\n                        e̩: { uniformBoxDescent: 20 },\r\n                        È̩: { uniformBoxDescent: 20 },\r\n                        É̩: { uniformBoxDescent: 20 },\r\n                        è̩: { uniformBoxDescent: 20 },\r\n                        Ẹ: { uniformBoxDescent: 20 },\r\n                        ẹ: { uniformBoxDescent: 20 },\r\n                        Ệ: { uniformBoxDescent: 20 },\r\n                        ệ: { uniformBoxDescent: 20 },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.825,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            headTextBold: true,\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            fontStyle: 'ocg',\r\n            fontList: [{\r\n                bulletWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","import {\r\n    DefaultOCGEffectFontData,\r\n    DefaultTCGEffectFontData,\r\n    DefaultTCGNormalFontData,\r\n    FontData,\r\n} from './font-data-effect';\r\n\r\n/** OCG does not have different fonts between normal and effect monsters */\r\nexport const PendulumNormalFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\r\n        ],\r\n    },\r\n};\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'ocg-small': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\r\n        ],\r\n    },\r\n    'ocg-medium': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\r\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\r\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\r\n        ],\r\n    },\r\n    'ocg-large': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\r\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\r\n        ],\r\n    },\r\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\nexport const passwordSentenceMap: Record<string, string> = {\r\n    ocg: '※デッキ構築には使用できません。',\r\n    tcg: 'This card cannot be in a Deck.',\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 49%',\r\n            'rgba(239,239,239,1) 51%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);\r\n\r\nexport const FramePositionMap: Record<string, { labelKey: string }> = {\r\n    bottomLeftFrame: { labelKey: 'input.advanced-frame.name.bottom-left' },\r\n    bottomRightFrame: { labelKey: 'input.advanced-frame.name.bottom-right' },\r\n    effectBackground: { labelKey: 'input.advanced-frame.name.effect-background' },\r\n    pendulumEffectBackground: { labelKey: 'input.advanced-frame.name.pendulum-effect-background' },\r\n    frame: { labelKey: 'input.advanced-frame.name.primary' },\r\n    topLeftFrame: { labelKey: 'input.advanced-frame.name.top-left' },\r\n    topRightFrame: { labelKey: 'input.advanced-frame.name.top-right' },\r\n};","export const ArrowPositionMap = {\r\n    normal: [\r\n        { top: 175, left: 55, width: 100, height: 100 },\r\n        { top: 165, left: 323, width: 170, height: 80 },\r\n        { top: 175, left: 655, width: 100, height: 100 },\r\n        { top: 442, left: 45, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 442, left: 700, width: 70, height: 170 },\r\n        { top: 775, left: 55, width: 100, height: 100 },\r\n        { top: 810, left: 323, width: 170, height: 80 },\r\n        { top: 775, left: 655, width: 100, height: 100 },\r\n    ],\r\n    pendulum: [\r\n        { top: 169, left: 11, width: 100, height: 100 },\r\n        { top: 159, left: 323, width: 170, height: 80 },\r\n        { top: 169, left: 699, width: 100, height: 100 },\r\n        { top: 572, left: 1, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 572, left: 744, width: 70, height: 170 },\r\n        { top: 1054, left: 11, width: 100, height: 100 },\r\n        { top: 1093, left: 323, width: 170, height: 80 },\r\n        { top: 1054, left: 699, width: 100, height: 100 },\r\n    ],\r\n};\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\r\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\r\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_FULL_LINE_OPEN = '᚛';\r\nexport const NB_FULL_LINE_CLOSE = '᚜';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\r\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil, OtherFinish } from './foil-finish';\r\nimport { CondenseType } from './condense';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\n/**\r\n * Check following things when adding new attributes:\r\n * * Default card and empty card\r\n * * Convert codec\r\n * * Shorten codec\r\n * * Card thumb\r\n * * Legacy version\r\n * * Import / export\r\n */\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    frame: 'fusion',\r\n    leftFrame: 'auto',\r\n    rightFrame: 'auto',\r\n    pendulumRightFrame: 'auto',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    otherFinish: ['normal', 'normal', 'normal'] as OtherFinish,\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    isLink: false as boolean | null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    /** Why we split frame and left frame here? Because there is more nuance to the card other than individual frames, for example name bevel, border bevel, effect bevel etc..., so \"frame\" here is a kind of \"main frame\" that dictates all those nuance, why the actual card background is constructed from those 4 corner frames. */\r\n    frame: 'effect',\r\n    leftFrame: 'auto',\r\n    rightFrame: 'auto',\r\n    pendulumRightFrame: 'auto',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    otherFinish: ['normal', 'normal', 'normal'],\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    isLink: null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport const ResolutionMap = {\r\n    '549x800': {\r\n        label: '549 × 800',\r\n        width: 549,\r\n        height: 800,\r\n        scale: 1,\r\n        settingValue: [549, 800] as [number, number],\r\n    },\r\n    '561x818': {\r\n        label: '561 × 818',\r\n        width: 561,\r\n        height: 818,\r\n        scale: 1,\r\n        settingValue: [561, 818] as [number, number],\r\n    },\r\n    '813x1185': {\r\n        label: '813 × 1185',\r\n        width: 813,\r\n        height: 1185,\r\n        scale: 1,\r\n        settingValue: [813, 1185] as [number, number],\r\n    },\r\n    '1122x1636': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\r\n        width: 1122,\r\n        height: 1636,\r\n        scale: 2,\r\n        settingValue: [1122, 1636] as [number, number],\r\n    },\r\n    '1388x2026': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\r\n        width: 1388,\r\n        height: 2026,\r\n        scale: 2,\r\n        settingValue: [1388, 2026] as [number, number],\r\n    },\r\n    '1626x2370': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\r\n        width: 1626,\r\n        height: 2370,\r\n        scale: 2,\r\n        settingValue: [1626, 2370] as [number, number],\r\n    },\r\n};\r\nexport const ResolutionList = [\r\n    ResolutionMap['549x800'],\r\n    ResolutionMap['561x818'],\r\n    ResolutionMap['813x1185'],\r\n    ResolutionMap['1122x1636'],\r\n    ResolutionMap['1388x2026'],\r\n    ResolutionMap['1626x2370'],\r\n];\r\n\r\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\r\nexport const ExportFormatList = [\r\n    {\r\n        value: 'csv' as const,\r\n        label: '.csv',\r\n    },\r\n    {\r\n        value: 'xlsx' as const,\r\n        label: '.xlsx',\r\n    },\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './condense';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './foil-finish';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './font-data-pendulum-effect';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './pendulum';\r\nexport * from './regex';","export const createCanvas = (width: number, height: number) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const context = canvas.getContext('2d');\r\n\r\n    return {\r\n        canvas,\r\n        context,\r\n    };\r\n};","import ndarray, { NdArray } from 'ndarray';\r\nimport ops from 'ndarray-ops';\r\nimport pool from 'typedarray-pool';\r\nimport phase2_1 from 'distance-transform/lib/p1';\r\nimport phase2_2 from 'distance-transform/lib/p2';\r\nimport phase2_inf from 'distance-transform/lib/pinf';\r\nimport phase2_p from 'distance-transform/lib/pp';\r\n\r\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\r\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\r\n    for (i = 0; i < rowCount; ++i) {\r\n        nextPoint = array[ptr++];\r\n        for (j = 1; j < colCount; ++j) {\r\n            nextPoint = min(array[ptr], nextPoint + 1);\r\n            array[ptr++] = nextPoint;\r\n        }\r\n        for (j = 0; j < colCount; ++j) {\r\n            nextPoint = min(array[--ptr], nextPoint + 1);\r\n            array[ptr] = nextPoint;\r\n        }\r\n        ptr += colCount;\r\n    }\r\n}\r\n\r\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\r\n    var dimensionCount = array.shape.length,\r\n        shape = array.shape.slice(0),\r\n        stride = new Array(dimensionCount),\r\n        size = 1,\r\n        stackSize = 0,\r\n        infinityHeight = 0,\r\n        index: number,\r\n        j: number,\r\n        n: number,\r\n        strideList: number[],\r\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\r\n        currentDimensionSize: number;\r\n    exponent = exponent || 2;\r\n    for (index = dimensionCount - 1; index >= 0; --index) {\r\n        stride[index] = size;\r\n        size *= shape[index];\r\n        infinityHeight += shape[index];\r\n        stackSize = Math.max(stackSize, shape[index]);\r\n    }\r\n\r\n    // Allocate scratch buffers\r\n    var phase2ResultAllocation = pool.mallocDouble(size),\r\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\r\n        s_q = pool.mallocUint32(stackSize),\r\n        t_q = pool.mallocUint32(stackSize);\r\n\r\n    /**\r\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\r\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\r\n     * */\r\n    var phase1ResultAllocation = pool.mallocDouble(size),\r\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\r\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\r\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\r\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\r\n        }\r\n    }\r\n    //Perform first phase of distance transform\r\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\r\n\r\n    //Second passes\r\n    for (index = dimensionCount - 1; index > 0; --index) {\r\n        strideList = phase2ResultArray.stride;\r\n        n = 1;\r\n        for (j = index - 1; j < dimensionCount; ++j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        for (j = index - 2; j >= 0; --j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        ops.assign(phase2ResultArray, phase1ResultArray);\r\n\r\n        //Execute phase 2\r\n        currentDimensionSize = shape[index - 1];\r\n        if (!isFinite(exponent)) {\r\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 1) {\r\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 2) {\r\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent < 1) {\r\n            throw new Error('Values of exponent < 1 are not supported');\r\n        } else {\r\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\r\n        }\r\n\r\n        //Swap buffers\r\n        tmp = phase1ResultArray;\r\n        phase1ResultArray = phase2ResultArray;\r\n        phase2ResultArray = tmp;\r\n    }\r\n\r\n    //Copy phase1ResultArray to result\r\n    ops.assign(array, phase1ResultArray);\r\n\r\n    pool.freeDouble(phase1ResultAllocation);\r\n    pool.freeDouble(phase2ResultAllocation);\r\n    pool.freeUint32(s_q);\r\n    pool.freeUint32(t_q);\r\n    return array;\r\n}","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\n\r\nconst HorizontalBlurShader = {\r\n    uniforms: {\r\n        'tDiffuse': { type: 't', value: null },\r\n        'h': { type: 'f', value: 3.0 / 512.0 }\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float h;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float lef4 = vUv.x - 4.0 * h;',\r\n        'float lef3 = vUv.x - 3.0 * h;',\r\n        'float lef2 = vUv.x - 2.0 * h;',\r\n        'float lef1 = vUv.x - 1.0 * h;',\r\n        'float rig1 = vUv.x + 1.0 * h;',\r\n        'float rig2 = vUv.x + 2.0 * h;',\r\n        'float rig3 = vUv.x + 3.0 * h;',\r\n        'float rig4 = vUv.x + 4.0 * h;',\r\n\r\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\r\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\r\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\r\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\r\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\r\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\r\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\r\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\r\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\r\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\r\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\r\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\r\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\r\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\r\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\r\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\r\n        'if (h > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n        //\"gl_FragColor = vec4(1,0,0,1);\",\r\n\r\n        '}'\r\n    ].join('\\n')\r\n};\r\nconst VerticalBlurShader = {\r\n    uniforms: {\r\n        tDiffuse: { type: 't', value: null },\r\n        v: { type: 'f', value: 3.0 / 512.0 },\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float v;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float top4 = vUv.y - 4.0 * v;',\r\n        'float top3 = vUv.y - 3.0 * v;',\r\n        'float top2 = vUv.y - 2.0 * v;',\r\n        'float top1 = vUv.y - 1.0 * v;',\r\n        'float bot1 = vUv.y + 1.0 * v;',\r\n        'float bot2 = vUv.y + 2.0 * v;',\r\n        'float bot3 = vUv.y + 3.0 * v;',\r\n        'float bot4 = vUv.y + 4.0 * v;',\r\n\r\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\r\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\r\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\r\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\r\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\r\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\r\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\r\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\r\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\r\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\r\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\r\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\r\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\r\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\r\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\r\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\r\n        'if (v > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n};\r\nconst NormalMapShader = {\r\n    uniforms: {\r\n        'type': { type: '1i', value: 0 },\r\n        'invertR': { type: '1f', value: 1 },\r\n        'invertG': { type: '1f', value: 1 },\r\n        'invertH': { type: '1f', value: 1 },\r\n        'dz': { type: '1f', value: 0 },\r\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\r\n        'tHeightMap': { type: 't', value: null }\r\n    },\r\n    vertexShader: [\r\n        'precision mediump float;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform vec3 dimensions;',\r\n        'void main() {',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\r\n        'vUv = uv;',\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'precision mediump float;',\r\n        'uniform vec3 dimensions;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform float dz;',\r\n        'uniform float invertR;',\r\n        'uniform float invertG;',\r\n        'uniform float invertH;',\r\n        'uniform int type;',\r\n        'uniform sampler2D tHeightMap;',\r\n\r\n        'void main(void) {',\r\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\r\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\r\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\r\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\r\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\r\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\r\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\r\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\r\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\r\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\r\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\r\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\r\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\r\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\r\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\r\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\r\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\r\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\r\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\r\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\r\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\r\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\r\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\r\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\r\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\r\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\r\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\r\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\r\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\r\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\r\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\r\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\r\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\r\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\r\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\r\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\r\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\r\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\r\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\r\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\r\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\r\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\r\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\r\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\r\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\r\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\r\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\r\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\r\n        '   float dx = 0.0, dy = 0.0;',\r\n        '   if(type == 0){',\t// Sobel\r\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\r\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\r\n        '   }',\r\n        '   else{',\t\t\t\t// Scharr\r\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\r\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\r\n        '   }',\r\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\r\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\r\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\r\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\r\n        '}'\r\n    ].join('\\n')\r\n};\r\n\r\nexport const SHADER_FILTER_TYPE = {\r\n    SOBEL: 'sobel' as const,\r\n    SCHARR: 'scharr' as const,\r\n};\r\nexport const getDefaultHeightToNormalMapOption = () => ({\r\n    invertedRed: false,\r\n    invertedGreen: false,\r\n    invertedSource: false,\r\n    blurSharp: 0,\r\n    strength: 1,\r\n    level: 8.5,\r\n    type: SHADER_FILTER_TYPE.SOBEL,\r\n});\r\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\r\n\r\nexport class HeightToNormalMap {\r\n    renderer: THREE.WebGLRenderer;\r\n    effectComposer: EffectComposer;\r\n    normalMapUniform: typeof NormalMapShader['uniforms'];\r\n    material: THREE.ShaderMaterial;\r\n    option: Required<HeightToNormalMapOption>;\r\n    canvas!: HTMLCanvasElement;\r\n    gaussianShaderX!: ShaderPass;\r\n    gaussianShaderY!: ShaderPass;\r\n\r\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\r\n        this.canvas = resultCanvas;\r\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\r\n        this.init();\r\n    }\r\n\r\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\r\n        const { width, height } = image;\r\n        const texture = this.getTexture(image);\r\n        this.normalMapUniform.tHeightMap.value = texture;\r\n        this.normalMapUniform.dimensions.value = [width, height, 0];\r\n        this.renderer.setSize(width, height);\r\n        this.effectComposer.setSize(width, height);\r\n        this.effectComposer.reset(this.getRenderTarget(width, height));\r\n\r\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\r\n            ...this.option,\r\n            ...option,\r\n        };\r\n\r\n        this.invertRed(invertedRed);\r\n        this.invertGreen(invertedGreen);\r\n        this.invertSource(invertedSource);\r\n        this.setBlurSharp(blurSharp, width, height);\r\n        this.setStrengthAndLevel(strength, level);\r\n        this.setType(type);\r\n\r\n        this.effectComposer.render(1 / 60);\r\n    }\r\n\r\n    init() {\r\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\r\n        const scene = new THREE.Scene();\r\n        const normalRenderScene = new RenderPass(scene, camera);\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\r\n        this.renderer.setClearColor(0x000000, 0); // the default\r\n\r\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\r\n\r\n        this.material = new THREE.ShaderMaterial({\r\n            fragmentShader: NormalMapShader.fragmentShader,\r\n            vertexShader: NormalMapShader.vertexShader,\r\n            uniforms: this.normalMapUniform,\r\n        });\r\n        this.material.transparent = true;\r\n\r\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\r\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\r\n        scene.add(renderMesh);\r\n\r\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\r\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\r\n        this.gaussianShaderX.renderToScreen = true;\r\n\r\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\r\n        this.effectComposer.addPass(normalRenderScene);\r\n        this.effectComposer.addPass(this.gaussianShaderY);\r\n        this.effectComposer.addPass(this.gaussianShaderX);\r\n    }\r\n    getRenderTarget(width?: number, height?: number) {\r\n        return new THREE.WebGLRenderTarget(width, height, {\r\n            minFilter: THREE.NearestFilter,\r\n            magFilter: THREE.NearestFilter,\r\n            format: THREE.RGBAFormat,\r\n            stencilBuffer: false,\r\n        });\r\n    }\r\n    getTexture(image: TexImageSource) {\r\n        const texture = new THREE.Texture(image);\r\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\r\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\r\n        texture.anisotropy = 2;\r\n        texture.needsUpdate = true;\r\n        return texture;\r\n    }\r\n\r\n    invertRed(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertR.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertR.value = 1;\r\n        }\r\n    }\r\n\r\n    invertGreen(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertG.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertG.value = 1;\r\n        }\r\n    }\r\n\r\n    invertSource(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertH.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertH.value = 1;\r\n        }\r\n    }\r\n\r\n    setBlurSharp(value: number, width: number, height: number) {\r\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\r\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\r\n    }\r\n\r\n    setStrengthAndLevel(strength: number, level: number) {\r\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\r\n    }\r\n\r\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\r\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\r\n    }\r\n}","// import distanceTransform from 'distance-transform';\r\nimport ndarray from 'ndarray';\r\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\r\nimport { bilateralFilter } from './bilateral-filter';\r\nimport { distanceTransform } from './distance-transform';\r\n\r\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\r\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\r\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\r\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const z = Math.sin(verticalAngleRadian);\r\n\r\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\r\n};\r\nexport const applyEmboss = ({\r\n    inputCanvas,\r\n    affectedHeight,\r\n    affectedWidth,\r\n    maxHeight = 8,\r\n    lightColorVec = [255, 255, 255],\r\n    /** Shine parallel with the surface, from rightside. */\r\n    lightAngleVec,\r\n    lightPitch,\r\n    lightYaw,\r\n    minIntensity = -1,\r\n    maxIntensity = 1,\r\n}: {\r\n    inputCanvas: HTMLCanvasElement,\r\n    affectedWidth?: number,\r\n    affectedHeight?: number,\r\n    maxHeight?: number,\r\n    lightColorVec?: [number, number, number],\r\n    lightAngleVec?: [number, number, number],\r\n    lightPitch?: number,\r\n    lightYaw?: number,\r\n    minIntensity?: number,\r\n    maxIntensity?: number,\r\n}) => {\r\n    const ctx = inputCanvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    /** Support partial transform to increase transform speed and reduce stuttering */\r\n    const height = affectedHeight ?? inputCanvas.height;\r\n    const width = affectedWidth ?? inputCanvas.width;\r\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\r\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\r\n    const data = imageData.data;\r\n\r\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\r\n        ? lightAngleVec\r\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\r\n            ? angleToVector(lightPitch, lightYaw)\r\n            : [1, 0, 0];\r\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\r\n    const normalizedLightAngleVec = [\r\n        computedLightAngleVec[0] / angleVecMagnitude,\r\n        computedLightAngleVec[1] / angleVecMagnitude,\r\n        computedLightAngleVec[2] / angleVecMagnitude\r\n    ];\r\n\r\n    if (!data) return;\r\n\r\n    try {\r\n        /**\r\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\r\n         */\r\n        /** Any pixel that is not transparent will be the foreground. */\r\n        const validPixelList = new Uint8ClampedArray(width * height);\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\r\n                validPixelList[i / 4] = 0;\r\n            } else {\r\n                validPixelList[i / 4] = 1;\r\n            }\r\n        }\r\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\r\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\r\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\r\n\r\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\r\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\r\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\r\n            for (let colIndex = 0; colIndex < column; colIndex++) {\r\n                const currentIndex = (rowIndex * width + colIndex) * 4;\r\n                const heightValue = dtImageData.get(rowIndex, colIndex);\r\n\r\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\r\n            }\r\n        }\r\n\r\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\r\n        const heightmapCanvas = document.createElement('canvas');\r\n        heightmapCanvas.width = width;\r\n        heightmapCanvas.height = height;\r\n        heightmapCanvas.getContext('2d').putImageData(\r\n            new ImageData(nextDtBitmap, width, height),\r\n            0,\r\n            0,\r\n        );\r\n\r\n        /**\r\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\r\n         */\r\n        const normalMapCanvas = document.createElement('canvas');\r\n        normalMapCanvas.width = width;\r\n        normalMapCanvas.height = height;\r\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\r\n        heightToNormalMapConverter.apply(heightmapCanvas, {\r\n            blurSharp: 0,\r\n            level: 9,\r\n            strength: 2.5,\r\n            invertedRed: false,\r\n            invertedGreen: false,\r\n            invertedSource: true,\r\n            type: SHADER_FILTER_TYPE.SOBEL,\r\n        });\r\n\r\n        /**\r\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\r\n         */\r\n        const softenNormalMapCanvas = document.createElement('canvas');\r\n        softenNormalMapCanvas.width = width;\r\n        softenNormalMapCanvas.height = height;\r\n\r\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\r\n        softenNormalMapContext.drawImage(\r\n            normalMapCanvas,\r\n            0,\r\n            0,\r\n            width,\r\n            height,\r\n        );\r\n        const filteredData = bilateralFilter(\r\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\r\n            width,\r\n            height,\r\n            9,\r\n            70,\r\n            20,\r\n        );\r\n\r\n        /**\r\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\r\n         * \r\n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\r\n         */\r\n        const resultData = new Uint8ClampedArray(width * height * 4);\r\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\r\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\r\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\r\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\r\n            const baseIntensity = nx * normalizedLightAngleVec[0]\r\n                + ny * normalizedLightAngleVec[1]\r\n                + nz * normalizedLightAngleVec[2];\r\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\r\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\r\n\r\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\r\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\r\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\r\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\r\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\r\n        }\r\n\r\n        return new ImageData(resultData, width, height);\r\n    } catch (e) {\r\n        console.error('Could not apply emboss effect', e);\r\n        return null;\r\n    }\r\n};","export const bilateralFilter = (\r\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n    diameter: number,\r\n    sigmaColor: number,\r\n    sigmaSpace: number,\r\n) => {\r\n    const output = new Uint8ClampedArray(width * height * 4);\r\n    const halfD = Math.floor(diameter / 2);\r\n\r\n    // Helper function to calculate the Gaussian weight for spatial distance\r\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\r\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\r\n    }\r\n\r\n    // Helper function to calculate the Gaussian weight for color distance\r\n    function colorWeight(c1: number, c2: number) {\r\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\r\n    }\r\n\r\n    // Loop through each pixel in the image\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\r\n\r\n            // Apply the filter to a local neighborhood around the current pixel\r\n            for (let ky = -halfD; ky <= halfD; ky++) {\r\n                for (let kx = -halfD; kx <= halfD; kx++) {\r\n                    const nx = x + kx;\r\n                    const ny = y + ky;\r\n\r\n                    // Check if the neighbor is within the image bounds\r\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\r\n                        const centerPixel = (y * width + x) * 4;\r\n                        const neighborPixel = (ny * width + nx) * 4;\r\n\r\n                        // Get the color values for the center pixel and the neighbor pixel\r\n                        const rCenter = imageData[centerPixel];\r\n                        const gCenter = imageData[centerPixel + 1];\r\n                        const bCenter = imageData[centerPixel + 2];\r\n                        const rNeighbor = imageData[neighborPixel];\r\n                        const gNeighbor = imageData[neighborPixel + 1];\r\n                        const bNeighbor = imageData[neighborPixel + 2];\r\n\r\n                        // Compute spatial and color weights\r\n                        const spatial = spatialWeight(nx, ny, x, y);\r\n                        const colorR = colorWeight(rCenter, rNeighbor);\r\n                        const colorG = colorWeight(gCenter, gNeighbor);\r\n                        const colorB = colorWeight(bCenter, bNeighbor);\r\n\r\n                        const weight = spatial * colorR * colorG * colorB;\r\n\r\n                        // Accumulate weighted sum of colors\r\n                        rSum += rNeighbor * weight;\r\n                        gSum += gNeighbor * weight;\r\n                        bSum += bNeighbor * weight;\r\n                        wSum += weight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize the result and assign it to the output image\r\n            const outputPixel = (y * width + x) * 4;\r\n            output[outputPixel] = rSum / wSum;\r\n            output[outputPixel + 1] = gSum / wSum;\r\n            output[outputPixel + 2] = bSum / wSum;\r\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\r\n        }\r\n    }\r\n\r\n    return output;\r\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\nexport const generateLayer = (\r\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n    exportCtx: CanvasRenderingContext2D | null | undefined,\r\n    delayQueue: number = 0,\r\n) => {\r\n    return new Promise<boolean>(resolve => {\r\n        setTimeout(() => {\r\n            if (!canvasLayer.current || !exportCtx) resolve(false);\r\n            else {\r\n                try {\r\n                    canvasLayer.current.toBlob(blob => {\r\n                        if (!blob) resolve(false);\r\n                        else {\r\n                            const url = URL.createObjectURL(blob);\r\n                            if (!url) resolve(false);\r\n                            else {\r\n                                const layer = new Image();\r\n                                layer.src = url;\r\n                                layer.onload = () => {\r\n                                    exportCtx.drawImage(layer, 0, 0);\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(true);\r\n                                };\r\n                                layer.onerror = () => {\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(false);\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n                } catch (e) {\r\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\r\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\r\n                    console.error(e);\r\n                    resolve(false);\r\n                }\r\n            }\r\n        }, delayQueue * 25);\r\n    });\r\n};","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink === true;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\r\n    return [\r\n        'fusion',\r\n        'synchro',\r\n        'xyz',\r\n        'link',\r\n        'dark-synchro',\r\n        'zarc',\r\n    ].includes(card.frame);\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFooter = (frame: string) => {\r\n    return ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link'].includes(frame) || checkLightFooter(frame);\r\n};\r\n\r\nexport const resolveFrameStyle = (frameData: Record<string, string | undefined>, isPendulum: boolean) => {\r\n    const {\r\n        frame,\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    } = frameData;\r\n    const resolvedFrame = frame ?? 'effect';\r\n    const resolvedTopLeft = topLeftFrame === 'auto' ? resolvedFrame : topLeftFrame;\r\n    const resolvedTopRight = (topRightFrame === 'auto' ? resolvedTopLeft : topRightFrame) ?? resolvedFrame;\r\n    const resolvedBottomLeft = (bottomLeftFrame === 'auto'\r\n        ? (isPendulum ? 'spell' : resolvedTopLeft)\r\n        : bottomLeftFrame) ?? resolvedFrame;\r\n    const resolvedBottomRight = (bottomRightFrame === 'auto'\r\n        ? resolvedBottomLeft\r\n        : bottomRightFrame) ?? resolvedFrame;\r\n    const resolvedEffectBackground = (effectBackground === 'auto'\r\n        ? resolvedBottomLeft\r\n        : effectBackground) ?? resolvedFrame;\r\n    const resolvedPendulumEffectBackground = (pendulumEffectBackground === 'auto'\r\n        ? resolvedBottomLeft\r\n        : pendulumEffectBackground) ?? resolvedFrame;\r\n\r\n    return {\r\n        topLeftFrame: resolvedTopLeft,\r\n        topRightFrame: resolvedTopRight,\r\n        bottomLeftFrame: resolvedBottomLeft,\r\n        bottomRightFrame: resolvedBottomRight,\r\n        effectBackground: resolvedEffectBackground,\r\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\r\n    };\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { ART_FINISH_TYPE, Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkMonster } from './categorize';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    frame: 'fr',\r\n    rightFrame: 'rf',\r\n    leftFrame: 'lf',\r\n    pendulumRightFrame: 'rpf',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    otherFinish: 'of',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        fontStyle: 'efs',\r\n        upSize: 'eus',\r\n        background: 'ebg',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        fontStyle: 'pfs',\r\n        upSize: 'pus',\r\n        background: 'pbg',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        embossPitch: 'nsep',\r\n        embossThickness: 'nset',\r\n        embossYaw: 'nsey',\r\n        fillStyle: 'nsfs',\r\n        font: 'nsft',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasEmboss: 'nshe',\r\n        hasGradient: 'nshg',\r\n        hasOutline: 'nshl',\r\n        hasShadow: 'nshs',\r\n        headTextFillStyle: 'nshfs',\r\n        lineColor: 'nslc',\r\n        lineOffsetX: 'nslox',\r\n        lineOffsetY: 'nsloy',\r\n        lineWidth: 'nslw',\r\n        pattern: 'nspt',\r\n        preset: 'nspr',\r\n        shadowBlur: 'nssb',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetX: 'nssox',\r\n        shadowOffsetY: 'nssoy',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    pendulumSize: 'psi',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const decompressedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                decompressedCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return decompressedCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const unshortenedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return unshortenedCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let rebuiltCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        rebuiltCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        rebuiltCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(rebuiltCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    /** Ensure that we detech the actual version from incoming cards. */\r\n    delete baseCard.version;\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    } else {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n            ...migratedCard.pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\r\n    if (migratedCard.rightFrame == null) migratedCard.rightFrame = 'auto';\r\n    if (migratedCard.leftFrame == null) migratedCard.leftFrame = 'auto';\r\n    if (migratedCard.pendulumRightFrame == null) migratedCard.pendulumRightFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if (migratedCard.finish) {\r\n        const finishList = migratedCard.finish;\r\n\r\n        if (finishList.includes(ART_FINISH_TYPE)) {\r\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\r\n            migratedCard.otherFinish = [migratedCard.artFinish, migratedCard.artFinish, migratedCard.artFinish];\r\n        }\r\n    }\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n    migratedCard.backgroundCrop = {\r\n        ...getDefaultCrop(),\r\n        ...migratedCard.backgroundCrop,\r\n    };\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\r\n        migratedCard.version = 2;\r\n\r\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\r\n        /**\r\n         * For older card, we have a detailed check to decide whether to display stats or not.\r\n         * \r\n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\r\n         */\r\n        const isMonster = checkMonster({ frame });\r\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n            ? !!(atk || def || (isLink && linkMap.length))\r\n            : isMonster;\r\n\r\n        if (!statInEffect) {\r\n            migratedCard.atk = '';\r\n            migratedCard.def = '';\r\n        }\r\n    }\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name\r\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect\r\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n\r\n    link.download = name;\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n    PendulumSize,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst boxSizeMap: Record<string, string> = {\r\n    large: 'Large',\r\n    medium: 'Normal',\r\n    small: 'Small',\r\n};\r\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue as PendulumSize;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: boxSizeMap[pendulumSize],\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { checkExtraDeckMonster } from './categorize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\r\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\r\n    /** Try to being clever */\r\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\r\n    const formattedMonsterEffect = (checkExtraDeckMonster({\r\n        frame: normalizedFrame ?? 'normal'\r\n    }) && splittedMonsterEffect.length > 1)\r\n        ? [\r\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\r\n            ...splittedMonsterEffect.slice(1),\r\n        ].join('\\n')\r\n        : normalizedMonsterEffect;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: formattedMonsterEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\r\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};\r\n\r\nexport const getDynamicFont = ({\r\n    heightCap,\r\n    lineCount,\r\n}: {\r\n    heightCap: number,\r\n    lineCount: number,\r\n}): FontSizeData => {\r\n    return {\r\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\r\n        fontSize: heightCap / lineCount * 0.9,\r\n        lineHeight: heightCap / lineCount,\r\n        lineCount,\r\n        bulletOffset: 1,\r\n    };\r\n};\r\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: [\r\n            ...fontData.fontList,\r\n            getDynamicFont(dynamicFontOption),\r\n        ]\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\r\n\r\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\r\n    const {\r\n        trueBaseline,\r\n        trueEdge,\r\n        trueWidth,\r\n        trueHeightCap,\r\n    } = coordinateData;\r\n\r\n    return {\r\n        ...coordinateData,\r\n        trueBaseline: trueBaseline * scale,\r\n        trueEdge: trueEdge * scale,\r\n        trueWidth: trueWidth * scale,\r\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\r\n    };\r\n};\r\n\r\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\r\n    return coordinate.map(value => value * scale) as [number, number, number, number];\r\n};\r\n\r\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\r\n    fontSizeData: FontData,\r\n    scale: number,\r\n): FontData => {\r\n    const {\r\n        allRightSymbolOffset,\r\n        bulletOffset,\r\n        bulletWidth,\r\n        fontSize,\r\n        headTextSpacing,\r\n        iconSymbolWidth,\r\n        lineHeight,\r\n        offsetY,\r\n        ordinalFontOffsetY,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n\r\n    return {\r\n        ...fontSizeData,\r\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\r\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\r\n        bulletWidth: bulletWidth * scale,\r\n        fontSize: fontSize * scale,\r\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\r\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\r\n        lineHeight: lineHeight * scale,\r\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\r\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\r\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\r\n    };\r\n};\r\n\r\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: fontData.fontList.map(entry => {\r\n            return scaleFontSizeData(entry, scale);\r\n        }),\r\n    };\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './canvas';\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';\r\nexport * from './scale';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    cursor: pointer;\r\n    &:not(:disabled):hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    &:disabled {\r\n        color: var(--color-dim);\r\n        cursor: not-allowed;\r\n        background-color: var(--color-contrast);\r\n        border: var(--bw) solid var(--color-contrast);\r\n        .anticon {\r\n            color: inherit;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n        nameStyle,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n    const nextNameStyle: typeof nameStyle = {\r\n        ...nameStyle,\r\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\r\n            ? 'OCG'\r\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\r\n                ? 'Default'\r\n                : nameStyle.font,\r\n    };\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n        nameStyle: nextNameStyle,\r\n    };\r\n};","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-6.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-6.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.name-style.emboss.color.alert': (\r\n            colorTab: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\r\n                { colorTab },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardOpacity,\r\n    CondenseType,\r\n    Foil,\r\n    FoilNameMap,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    /** Creative customize stuff */\r\n    'Star Type',\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Emboss Pitch',\r\n    'Name Style - Emboss Yaw',\r\n    'Name Style - Emboss Thickness',\r\n    'Name Style - Has Emboss',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Effect Style - Font Style',\r\n    'Effect Style - Background',\r\n    'Pendulum Size',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Pendulum Effect Style - Font Style',\r\n    'Pendulum Effect Style - Background',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'Other Finish - Attribute',\r\n    'Other Finish - Icon',\r\n    'Other Finish - Sticker',\r\n    'Left Frame',\r\n    'Right Frame',\r\n    'Bottom Right Frame',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n    let error = '';\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            artFinish,\r\n            artFit,\r\n            artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            backgroundFit,\r\n            backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            foil,\r\n            format,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            linkMap,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherFinish,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            leftFrame,\r\n            rightFrame,\r\n            pendulumRightFrame,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            typeAbility,\r\n            typeTextStyle,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n\r\n        write('Format', format);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink ?? undefined);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\r\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\r\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\r\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Effect Style - Font Style', effectStyle.fontStyle);\r\n        write('Effect Style - Background', effectStyle.background);\r\n        write('Pendulum Size', pendulumSize);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\r\n        write('Pendulum Effect Style - Background', pendulumStyle.background);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('Other Finish - Attribute', otherFinish[0]);\r\n        write('Other Finish - Icon', otherFinish[1]);\r\n        write('Other Finish - Sticker', otherFinish[2]);\r\n        write('Left Frame', leftFrame);\r\n        write('Right Frame', rightFrame);\r\n        write('Bottom Right Frame', pendulumRightFrame);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n\r\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\r\n            error = 'offline-data';\r\n        }\r\n\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return {\r\n        value: [\r\n            CsvStandardFieldList.join(','),\r\n            valueList.join('\\n'),\r\n        ].join('\\n'),\r\n        error,\r\n    };\r\n};\r\n\r\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\r\n    try {\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n                const rightFrame = (reader('Right Frame') ?? emptyCard.rightFrame).toLowerCase();\r\n                const leftFrame = (reader('Left Frame') ?? emptyCard.leftFrame).toLowerCase();\r\n                const pendulumRightFrame = (reader('Bottom Right Frame') ?? emptyCard.pendulumRightFrame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = reader('Star Type') === 'text'\r\n                    ? rawStar\r\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\r\n                        ? parseInt(rawStar)\r\n                        : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\r\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\r\n                const finishIcon = reader('Other Finish - Icon') ?? '';\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\r\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter(entry => typeof entry === 'string' && entry !== '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\r\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\r\n                const effectBackground = (reader('Effect Style - Background') ?? emptyCard.effectStyle.background).toLowerCase();\r\n                const pendulumEffectBackground = (reader('Pendulum Effect Style - Background') ?? emptyCard.pendulumStyle.background).toLowerCase();\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\r\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\r\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    effect,\r\n                    effectStyle: { condenseTolerant, upSize: effectUpSize, fontStyle: effectFontStyle, background: effectBackground },\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    linkMap,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherFinish: [finishAttribute, finishIcon, finishSticker] as OtherFinish,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumRightFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumSize,\r\n                    pendulumStyle: { upSize: pendulumEffectUpSize, fontStyle: pendulumEffectFontStyle, background: pendulumEffectBackground },\r\n                    pendulumTextStyle,\r\n                    leftFrame,\r\n                    rightFrame,\r\n                    setId,\r\n                    star,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n    if (frameResult !== 0) return frameResult;\r\n\r\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n    return bottomFrameResult;\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst, ExportFormat } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    globalScale: number,\r\n    exportFormat: ExportFormat,\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    allowHotkey: boolean,\r\n    reduceMotionColor: boolean,\r\n    mirrorPendulumScale: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        reduceMotionColor,\r\n        resolution,\r\n        globalScale,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n        mirrorPendulumScale,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\r\n                ? globalScale\r\n                : 1,\r\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity, PendulumSize } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n        pendulumSize,\r\n    } = currentCard;\r\n    const pendingSave = useRef(false);\r\n\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && clonedCanvas && clonedCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            try {\r\n                if (size) {\r\n                    clonedCanvas.width = size[0];\r\n                    clonedCanvas.height = size[1];\r\n                }\r\n                /** Resize here */\r\n                clonedCanvasContext.drawImage(\r\n                    drawCanvas,\r\n                    0, 0, drawCanvas.width, drawCanvas.height,\r\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\r\n                );\r\n\r\n                const normalizedName = normalizeCardName(name);\r\n                var link = document.createElement('a');\r\n                link.download = normalizedName\r\n                    ? `${normalizedName}.png`\r\n                    : 'card.png';\r\n                link.href = clonedCanvas.toDataURL('image/png');\r\n                link.click();\r\n            } catch (e) {\r\n                onDownloadError();\r\n            }\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const normalizedName = normalizeCardName(name);\r\n\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            pendulumSize,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth * maximumScale,\r\n    height = CanvasHeight * maximumScale,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\r\n        pendulumSize?: PendulumSize,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n                const pendulumSuffix = pendulumSize\r\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\r\n                    : DEFAULT_PENDULUM_SIZE;\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType, pendulumSuffix);\r\n                    }\r\n                } else {\r\n                    await caller(finishType, pendulumSuffix);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_LINE_COLOR = '#000000';\r\nconst DEFAULT_LINE_WIDTH = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x,\r\n    y,\r\n    blur,\r\n    color,\r\n    colorGradient,\r\n    shadowColor,\r\n    lineColor,\r\n    lineColorGradient,\r\n    lineWidth,\r\n    globalScale = 1,\r\n    useDefault = true,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    useDefault?: boolean,\r\n    colorGradient?: CanvasGradient,\r\n    lineColorGradient?: CanvasGradient,\r\n} & CanvasTextStyle) => {\r\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\r\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\r\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\r\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\r\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\r\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\r\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\r\n\r\n    return () => {\r\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\r\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n            ctx.drawImage(image, actualDX, actualDY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n                ctx.drawImage(image, actualDX, actualDY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number),\r\n    dy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n\r\n            if (\r\n                typeof actualSX === 'number'\r\n                && typeof actualSY === 'number'\r\n                && typeof actualSW === 'number'\r\n                && typeof actualSH === 'number'\r\n            ) {\r\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n            } else {\r\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n            }\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n    \r\n                if (\r\n                    typeof actualSX === 'number'\r\n                    && typeof actualSY === 'number'\r\n                    && typeof actualSW === 'number'\r\n                    && typeof actualSH === 'number'\r\n                ) {\r\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n                } else {\r\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n                }\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    dx, dy,\r\n    dw, dh,\r\n    sx, sy,\r\n    sw, sh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n        dw, dh,\r\n        sx, sy,\r\n        sw, sh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    globalScale: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    FontDeviationMap,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n        ? 0.046875\r\n        : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2 * globalScale;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation,\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviationMap,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        letterMap = {},\r\n        threshold = 10,\r\n    } = deviation ?? {};\r\n    const {\r\n        uniformBoxDescent,\r\n    } = letterMap[letter] ?? {};\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    let uniformYScale = 1;\r\n    let boxDescentCompensate = 0;\r\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\r\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\r\n\r\n        /** Need to carefully survey if we over-compensate in edge case. */\r\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\r\n\r\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\r\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\r\n    }\r\n    ctx.scale(1, uniformYScale);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\r\n    });\r\n    ctx.scale(1, 1 / uniformYScale);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n    globalScale: number,\r\n) => {\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n                + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    FontData,\r\n    BULLET_LETTER,\r\n    TCGSymbolLetterRegex,\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    FragmentSplitRegex,\r\n    WholeWordRegex,\r\n    DefaultFontSizeData,\r\n    ST_ICON_SYMBOL,\r\n    TextData,\r\n    NoSpaceRegex,\r\n    LETTER_GAP_RATIO,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    SquareBracketLetterRegex,\r\n    CapitalLetterRegex,\r\n    NumberRegex,\r\n    OCGNoOverheadGapRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    RUBY_REGEX,\r\n    DefaultFontData,\r\n    RUBY_BONUS_RATIO,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NonCompressableRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing: _letterSpacing,\r\n    format,\r\n    globalScale,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    globalScale: number,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    globalScale,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    globalScale: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\nimport { scaleFontSizeData } from 'src/util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n    option,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    globalScale: number,\r\n    option?: {\r\n        drawHeadText?: boolean,\r\n    },\r\n    debug?: boolean,\r\n}) => {\r\n    const { drawHeadText = true } = option ?? {};\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        bulletOffset = scaledDefaultFontSizeData.bulletOffset,\r\n        bulletWidth,\r\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n            globalScale,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(\r\n                    ctx,\r\n                    fragmentEdge,\r\n                    trueBaseline + bulletOffset - 1 * globalScale,\r\n                    bulletWidth,\r\n                    getBulletSpacing(format) * globalScale,\r\n                );\r\n                fragmentEdge += bulletWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg'\r\n                        ? allRightSymbolOffset\r\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    globalScale,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                if (drawHeadText) fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                    globalScale,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[`${globalScale}`],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                    globalScale,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap?.[`${globalScale}`],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    OCG_RUBY_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    ocgKeywordDataMap,\r\n    WHOLE_WORD_SOURCE,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    tcgToOCGLetterMap,\r\n    ocgToTCGLetterMap,\r\n    UNCOMPRESSED_SOURCE,\r\n    ocgNumberCircleMap,\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    FLAVOR_CONDITION_SOURCE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    contextualDoubleQuoteRegex,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_FULL_LINE_CLOSE\r\n} from 'src/model';\r\n\r\nexport type LineOption = {\r\n    alignment: 'left' | 'justify',\r\n};\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectText = effect;\r\n\r\n    const fullLineList = [];\r\n    const fullLineListOption: LineOption[] = [];\r\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\r\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\r\n    let lineReplacement: string | undefined;\r\n    let lineContent: string | undefined;\r\n    let fullLineReplacement: string | undefined;\r\n    let fullLineContent: string | undefined;\r\n    let willContinue = false;\r\n    do {\r\n        const result = wholeLineRegex.exec(effectText);\r\n        lineReplacement = result?.[1];\r\n        lineContent = result?.[2];\r\n        fullLineReplacement = result?.[3];\r\n        fullLineContent = result?.[4];\r\n\r\n        willContinue = false;\r\n        if (lineContent && lineReplacement) {\r\n            fullLineList.push(lineContent);\r\n            effectText = effectText.replace(lineReplacement, '');\r\n            fullLineListOption.push({ alignment: 'left' });\r\n            willContinue = true;\r\n        } else if (fullLineContent && fullLineReplacement) {\r\n            fullLineList.push(fullLineContent);\r\n            effectText = effectText.replace(fullLineReplacement, '');\r\n            fullLineListOption.push({ alignment: 'justify' });\r\n            willContinue = true;\r\n        }\r\n    } while (willContinue);\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n    /** Restore all remaining nb line symbol back to their normal letters. */\r\n    effectText = effectText\r\n        .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\r\n        .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]');\r\n\r\n    return {\r\n        fullLineList,\r\n        fullLineListOption,\r\n        effectText,\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    NormalFontData,\r\n} from '../../model';\r\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    useItalic,\r\n    statInEffect,\r\n    typeInEffect,\r\n    frameType,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    useItalic: boolean,\r\n    frameType: 'normal' | 'pendulumLarge',\r\n}) => {\r\n    const coordinateKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\r\n        fontData = NormalFontData[fontDataKey];\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    // useItalic = false,\r\n    fontDataKey = 'tcg',\r\n    fontData = EffectFontData[fontDataKey],\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    useItalic?: boolean,\r\n    fontData?: FontData,\r\n    fontDataKey?: string,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n        globalScale: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n        globalScale = 1,\r\n    } = option ?? {};\r\n    let sizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return sizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        effectText,\r\n        effectFlavorCondition,\r\n        fullLineList,\r\n        fullLineListOption,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n    const paragraphList = effectText ? effectText.split('\\n') : [];\r\n\r\n    let effectiveLineCount = 0;\r\n    const scaledFontData = scaleFontData(fontData, globalScale);\r\n    const { fontList } = scaledFontData;\r\n    const yRatio = 1;\r\n    /**\r\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\r\n     * \r\n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\r\n     * */\r\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\r\n        const requireDynamicSize = sizeLevel === fontList.length\r\n            ? true\r\n            : false;\r\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\r\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\r\n            ? {\r\n                '1': 1000,\r\n                '2': 1000,\r\n                '3': 1000,\r\n            }\r\n            : (format === 'tcg'\r\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\r\n                    ? CondenseTolerantMap['relaxed']\r\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n                : {\r\n                    '1': 800,\r\n                    '2': 800,\r\n                    '3': 800,\r\n                });\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n            trueHeightCap,\r\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\r\n\r\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\r\n        const dynamicFontData = useDynamicSize\r\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\r\n            : scaledFontData;\r\n        const dynamicSizeLevel = useDynamicSize\r\n            ? sizeLevel\r\n            : appliedSizeLevel;\r\n        const {\r\n            font: dynamicFont,\r\n            fontList: dynamicFontList,\r\n        } = dynamicFontData;\r\n        const fontSizeData = useDynamicSize\r\n            ? dynamicFontList[dynamicSizeLevel]\r\n            : fontList[appliedSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(dynamicFont)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData: dynamicFontData,\r\n            fontLevel: dynamicSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = (additionalLineCount > lineCount && typeof trueHeightCap === 'number')\r\n            ? 1 // If dynamic size is possible, no need to find condense value if current lint count is larger than the font's maximum line count, it will overflow anyways.\r\n            : condense(\r\n                median => {\r\n                    const { currentLineList, currentLineCount } = createLineList({\r\n                        ctx,\r\n                        median,\r\n                        paragraphList,\r\n                        additionalLineCount,\r\n                        format, textData,\r\n                        width,\r\n                        globalScale,\r\n                    });\r\n                    lineListWithRatio = currentLineList;\r\n\r\n                    if (currentLineCount > lineCount) return false;\r\n                    return true;\r\n                },\r\n                200,\r\n            );\r\n        effectiveLineCount = lineListWithRatio.length + additionalLineCount;\r\n\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\r\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            (effectiveMedian < tolerantValue)\r\n            && (sizeLevel < fontList.length)\r\n        ) {\r\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\r\n        } else {\r\n            clearCanvas(ctx);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            /** Naturally, non-brekable lines have their own condense ratio. */\r\n            const fullLineListWithRatio = fullLineList.map((line, index) => {\r\n                return {\r\n                    line,\r\n                    isLast: fullLineListOption[index].alignment === 'justify' ? false : true,\r\n                    effectiveMedian: condense(\r\n                        median => {\r\n                            const { currentLineCount } = createLineList({\r\n                                ctx,\r\n                                median,\r\n                                paragraphList: [line],\r\n                                format, textData,\r\n                                width,\r\n                                globalScale,\r\n                            });\r\n    \r\n                            if (currentLineCount > 1) return false;\r\n                            return true;\r\n                        },\r\n                    )\r\n                };\r\n            });\r\n\r\n            /** Draw each line based on their token list and corresponding ratio. */\r\n            [\r\n                ...fullLineListWithRatio,\r\n                ...lineListWithRatio,\r\n            ].forEach(({\r\n                line,\r\n                isLast,\r\n                effectiveMedian,\r\n            }) => {\r\n                const xRatio = effectiveMedian / 1000;\r\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    spaceWidth,\r\n                    textData,\r\n                    format,\r\n                    globalScale,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            });\r\n\r\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\r\n            if (effectFlavorCondition.length > 0 && EffectFontData[fontDataKey]) {\r\n                const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\r\n                const dynamicFlavorFontData = useDynamicSize\r\n                    ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\r\n                    : flavorFontData;\r\n                const flavorFontSizeData = useDynamicSize\r\n                    ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\r\n                    : flavorFontData.fontList[appliedSizeLevel];\r\n                const {\r\n                    fontSize,\r\n                    lineHeight,\r\n                } = flavorFontSizeData;\r\n                const flavorTextCurrentFont = createFontGetter();\r\n                ctx.font = flavorTextCurrentFont\r\n                    .setSize(fontSize)\r\n                    .setFamily(flavorFontData.font)\r\n                    .getFont();\r\n                const flavorTextData = {\r\n                    fontData: dynamicFlavorFontData,\r\n                    fontLevel: dynamicSizeLevel,\r\n                    currentFont: flavorTextCurrentFont,\r\n                };\r\n                const internalEffectiveMedian = condense(\r\n                    median => {\r\n                        const { currentLineCount } = createLineList({\r\n                            ctx,\r\n                            median,\r\n                            paragraphList: [effectFlavorCondition],\r\n                            format, textData: flavorTextData,\r\n                            width,\r\n                            globalScale,\r\n                        });\r\n\r\n                        if (currentLineCount > 1) return false;\r\n                        return true;\r\n                    },\r\n                );\r\n                const xRatio = internalEffectiveMedian / 1000;\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                const tokenList = tokenizeText(effectFlavorCondition);\r\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n                 * \r\n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n                 * \r\n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n                 * */\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    textData: flavorTextData,\r\n                    format,\r\n                    globalScale,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return sizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    globalScale,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n    loopStarFinish,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    globalScale: number,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = typeof star === 'string'\r\n        ? star === '' ? 0 : 1\r\n        : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    const {\r\n        canvas: starCanvas,\r\n        context: starContext,\r\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\r\n    await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async () => {\r\n            offset += (starWidth + startSpacing);\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(starContext, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n    if (loopStarFinish) {\r\n        const {\r\n            canvas: starFinishCanvas,\r\n            context: starFinishContext,\r\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\r\n        starFinishContext.drawImage(starCanvas, 0, 0);\r\n        await loopStarFinish(\r\n            starFinishContext,\r\n            'art',\r\n            async (finishType) => {\r\n                return await drawAsset(\r\n                    starFinishContext,\r\n                    `finish/finish-typeart-${finishType}.png`,\r\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                );\r\n            },\r\n        );\r\n        starContext.globalCompositeOperation = 'source-in';\r\n        starContext.drawImage(starFinishCanvas, 0, 0);\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    } else {\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    }\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n    globalScale,\r\n    x, y,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n    globalScale: number,\r\n    x: number,\r\n    y: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    ctx.scale(globalScale, globalScale);\r\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\r\n    ctx.resetTransform();\r\n    return;\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    globalScale,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    globalScale,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...scaleDrawCoordinate(coordinate, globalScale),\r\n        globalScale,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    linkMap: string[],\r\n    style: CanvasTextStyle,\r\n    globalScale: number,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || !Array.isArray(linkMap)) return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\r\n        globalScale,\r\n        style,\r\n    );\r\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = `bold ${26.55 * globalScale}px RoGSanSrfStd-Bd`;\r\n    ctx.fillText(`${linkMap.length}`, 622.75 * globalScale, 1105 * globalScale);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import { CanvasConst } from 'src/model';\r\nimport { drawAsset } from '../image';\r\nimport { createCanvas } from 'src/util';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n    topToPendulumStructure,\r\n} = CanvasConst;\r\nexport const getMaskPromise = () => {\r\n    const topRightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-top-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    const bottomRightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-bottom-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    /**\r\n     * Be careful: Bottom right + Top right mask does NOT cover the entire right area when bottom left frame is also presented, so if both of them are the same frame, we might need to use right mask.\r\n     * \r\n     * Reason: Because bottom left frame also contains bottom right frame with transparency, if we draw another bottom right frame (that also has transparency) on top of it, it will not overlap the bottom frame, but merged with it, create a mix of both instead of total replacement, which is our desired effect. */\r\n    const rightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    const nameMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = topToPendulumStructure;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-name.png');\r\n            return ctx.getImageData(0, 0, width, topToPendulumStructure).data;\r\n        }\r\n        return null;\r\n    })();\r\n\r\n    return {\r\n        topRight: topRightMask,\r\n        bottomRight: bottomRightMask,\r\n        right: rightMask,\r\n        name: nameMask,\r\n    };\r\n};\r\nexport const MaskPromise = getMaskPromise();\r\n\r\n/**\r\n * Draw the image onto an empty canvas, then apply an alpha mask over it.\r\n * \r\n * Each pixel in the image will be drawn with the alpha data from the corresponding pixel of the mask.\r\n * */\r\nexport const applyAlphaMask = async (\r\n    urlOrCanvas: string | CanvasImageSource,\r\n    maskData: Uint8ClampedArray<ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n) => {\r\n    const { context, canvas } = createCanvas(width, height);\r\n    if (typeof urlOrCanvas === 'string') await drawAsset(context, urlOrCanvas, 0, 0);\r\n    else context.drawImage(urlOrCanvas, 0, 0, width, height);\r\n    const layerData = context.getImageData(0, 0, width, height).data;\r\n    for (let cnt = 0; cnt < layerData.length; cnt += 4) {\r\n        layerData[cnt + 3] = maskData[cnt + 3];\r\n    }\r\n\r\n    context.putImageData(new ImageData(layerData, width, height), 0, 0);\r\n\r\n    return canvas;\r\n};","import {\r\n    ArrowPositionMap,\r\n    ArtFinishMap,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardArtCanvasCoordinateMap,\r\n    CardOpacity,\r\n    Foil,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PendulumSizeMap,\r\n    PendulumSizeMapException,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { createCanvas, getCardIconFromFrame, resolveFrameStyle } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { getFinishIterator } from '../canvas-util';\r\nimport { applyAlphaMask, MaskPromise } from './mask';\r\n\r\nexport const baseDrawLinkArrowMap = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    linkMap: string[],\r\n    positionType: keyof typeof ArrowPositionMap,\r\n    boundless: boolean,\r\n) => {\r\n    if (!ctx) return;\r\n    ctx.scale(globalScale, globalScale);\r\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n        .map(async entry => {\r\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n            const isActive = linkMap.includes(`${entry}`);\r\n            const baseLink = `link/link-inactive-${entry}`;\r\n            const activeLink = `link/link-active-${entry}`;\r\n            const coordinate = [left, top, width, height] as const;\r\n\r\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n            if (isActive) {\r\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n            } else return;\r\n        })\r\n    );\r\n    ctx.resetTransform();\r\n};\r\nexport const baseDrawLinkMapFoil = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    foil: string,\r\n    withBorder: boolean,\r\n    positionType: keyof typeof ArrowPositionMap,\r\n) => {\r\n    if (!ctx) return;\r\n    if (foil === 'normal') return;\r\n\r\n    ctx.scale(globalScale, globalScale);\r\n    if (withBorder) {\r\n        await drawAsset(ctx, `link/link-overlay-arrow-${foil}.png`, 0, 175);\r\n    } else {\r\n        await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n            .map(async entry => {\r\n                const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n                const coordinate = [left, top, width, height] as const;\r\n\r\n                await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${foil}.png`, ...coordinate);\r\n            })\r\n        );\r\n    }\r\n    ctx.resetTransform();\r\n};\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    topToPendulumStructure,\r\n    topToPendulumStructureFrame,\r\n    pendulumIconFrameHeight,\r\n    pendulumIconFrameWidth,\r\n    pendulumFrameHeight,\r\n    pendulumFrameWidth,\r\n    pendulumStructureHeight,\r\n    leftToPendulumStructure,\r\n    effectBoxHeight,\r\n    effectBoxWidth,\r\n    leftToEffectBox,\r\n    topToEffectBox,\r\n    attributeSize,\r\n    attributeX,\r\n    attributeY,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    globalScale,\r\n    format,\r\n    hasBackground,\r\n    frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\r\n    effectBackground, pendulumEffectBackground,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    pendulumFrameTypeMap,\r\n    otherFinish,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    globalScale: number,\r\n    format: string,\r\n    frame: string, leftFrame: string, pendulumFrame: string, rightFrame: string, pendulumRightFrame: string,\r\n    effectBackground: string, pendulumEffectBackground: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    foil: Foil,\r\n    pendulumSize: PendulumSize,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\r\n    otherFinish: OtherFinish,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n        artRatio,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n    const {\r\n        frameType,\r\n        effectBoxOffsetY,\r\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\r\n        pendulumBoxOffsetY,\r\n        artlessFrameY,\r\n    } = PendulumSizeMap[pendulumSize];\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\r\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderTypeList = frame === 'synchro'\r\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\r\n        : [frameBorderType];\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resolvedLayoutStyle = resolveFrameStyle(\r\n        {\r\n            frame,\r\n            topLeftFrame: leftFrame,\r\n            topRightFrame: rightFrame,\r\n            bottomLeftFrame: pendulumFrame,\r\n            bottomRightFrame: pendulumRightFrame,\r\n            effectBackground: effectBackground,\r\n            pendulumEffectBackground: pendulumEffectBackground,\r\n        },\r\n        isPendulum,\r\n    );\r\n    const {\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n        effectBackground: resolvedEffectBackground,\r\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\r\n    } = resolvedLayoutStyle;\r\n\r\n    const resultAPI = {\r\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\r\n         * \r\n         *  * Trying to draw only a portion of the image.\r\n         *  * The source image has totally different size compare to the destination boundary.\r\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\r\n         */\r\n        calculateCardArtRedrawCoordination(\r\n            imageCanvas: HTMLCanvasElement,\r\n            customOpacity?: CardOpacity,\r\n            extraHeightRatio = 1,\r\n            customBackgroundType?: BackgroundType,\r\n        ) {\r\n            const normalizedOpacity = customOpacity ?? opacity;\r\n            const {\r\n                body: bodyOpacity\r\n            } = normalizedOpacity;\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n                artFrameWidth,\r\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType, pendulumSize);\r\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\r\n            const imageScaledRatio = artWidth / imageWidth;\r\n            const sourceOffsetX = bodyOpacity < 100\r\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\r\n            const sourceOffsetY = bodyOpacity < 100\r\n                ? (topToPendulumStructure - artY) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\r\n            const offsetHeight = bodyOpacity < 100\r\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\r\n                : 0;\r\n\r\n            const destinationX = artX + destinationOffsetX;\r\n            const destinationY = artY + destinationOffsetY;\r\n            const destinationWidth = artWidth - destinationOffsetX * 2;\r\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\r\n\r\n            return {\r\n                imageScaledRatio,\r\n                sourceOffsetX,\r\n                sourceOffsetY,\r\n                destinationOffsetX,\r\n                destinationOffsetY,\r\n                offsetHeight,\r\n                destinationX,\r\n                destinationY,\r\n                destinationWidth,\r\n                destinationHeight,\r\n                /** Background fill is not depend on art size */\r\n                fillWidth: artFrameWidth,\r\n                fillHeight: pendulumStructureHeight,\r\n            };\r\n        },\r\n\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            /** Combine layer frame here */\r\n            const { context: topFrameContext, canvas: topFrameCanvas } = createCanvas(cardWidth, cardHeight);\r\n            await drawAsset(topFrameContext, `frame/frame-${topLeftFrame}.png`, 0, 0);\r\n            if (topLeftFrame !== topRightFrame) {\r\n                const topRightCanvas = await applyAlphaMask(\r\n                    `frame/frame-${topRightFrame}.png`,\r\n                    await MaskPromise.topRight,\r\n                    cardWidth,\r\n                    cardHeight,\r\n                );\r\n                topFrameContext.drawImage(topRightCanvas, 0, 0);\r\n            }\r\n            const { context: bottomFrameContext, canvas: bottomFrameCanvas } = createCanvas(cardWidth, cardHeight);\r\n            await drawAsset(bottomFrameContext, `frame-pendulum/frame-pendulum-${bottomLeftFrame}.png`, 0, 0);\r\n            if (bottomLeftFrame !== bottomRightFrame) {\r\n                /** What is this?\r\n                 * \r\n                 * Because the \"bottom left\" frame is not actually bottom, but both bottom left and bottom right with transparency. If we draw it first, then draw our \"bottom right\" frame on top of it, it will mixed with the bottom left frame (because both contains transparency), instead of replacing it, create an unintended side effect. Therefore we cut the part that may cause mixing color from the bottom left frame, before drawing the bottom right part.\r\n                 */\r\n                bottomFrameContext.clearRect(714, 0, 99, cardHeight);\r\n                const bottomRightCanvas = await applyAlphaMask(\r\n                    `frame/frame-${bottomRightFrame}.png`,\r\n                    await (bottomRightFrame === topRightFrame ? MaskPromise.right : MaskPromise.bottomRight),\r\n                    cardWidth,\r\n                    cardHeight,\r\n                );\r\n                bottomFrameContext.drawImage(bottomRightCanvas, 0, 0);\r\n            }\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(topFrameCanvas, 0, 0);\r\n            ctx.drawImage(bottomFrameCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\r\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\r\n\r\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n                if (clonedCanvas && clonedCanvasContext) {\r\n                    /** Clone background to create a new frame */\r\n                    clonedCanvas.width = cardWidth * globalScale;\r\n                    clonedCanvas.height = cardHeight * globalScale;\r\n                    clonedCanvasContext.drawImage(\r\n                        backgroundCanvas,\r\n                        0, 0, backgroundWidth, backgroundHeight,\r\n                        0, 0, cardWidth * globalScale, cardHeight * globalScale,\r\n                    );\r\n                    /** Clear slot for card art */\r\n                    clonedCanvasContext.clearRect(\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artX,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artY,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\r\n                    );\r\n                    /** Clear slot for effect box */\r\n                    clonedCanvasContext.clearRect(\r\n                        globalScale * leftToEffectBox,\r\n                        globalScale * topToEffectBox,\r\n                        globalScale * effectBoxWidth,\r\n                        globalScale * effectBoxHeight,\r\n                    );\r\n                    ctx.drawImage(\r\n                        clonedCanvas,\r\n                        0, 0,\r\n                        globalScale * cardWidth, globalScale * cardHeight,\r\n                        0, 0,\r\n                        globalScale * cardWidth, globalScale * cardHeight,\r\n                    );\r\n                }\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: () => {\r\n            if (!artworkCanvas || !ctx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            ctx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: (\r\n            boundary?: 'pendulum',\r\n        ) => {\r\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\r\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\r\n\r\n                if (backgroundType === 'full') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        { ...opacity, body: 0 },\r\n                        undefined,\r\n                        'full',\r\n                    );\r\n                } else if (backgroundType === 'fit') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        opacity,\r\n                        undefined,\r\n                        'fit',\r\n                    );\r\n                }\r\n\r\n                const {\r\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\r\n                    offsetHeight: backgroundOffsetHeight,\r\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\r\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\r\n                } = redrawCoordination;\r\n                ctx.drawImage(\r\n                    backgroundCanvas,\r\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\r\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\r\n                    globalScale * backgroundDestinationX, globalScale * backgroundDestinationY,\r\n                    globalScale * backgroundDestinationWidth, globalScale * backgroundDestinationHeight,\r\n                );\r\n                return;\r\n            }\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n                ratio,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                { ...opacity, boundless: true },\r\n                backgroundType,\r\n                pendulumSize,\r\n            );\r\n            ctx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0,\r\n                backgroundWidth, backgroundHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / ratio,\r\n            );\r\n        },\r\n        drawAttribute: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const {\r\n                canvas: attributeCanvas,\r\n                context: attributeContext,\r\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\r\n            await drawAsset(\r\n                attributeContext,\r\n                `attribute/attr-${format}-${attribute.toLowerCase()}.png`,\r\n                attributeX, attributeY,\r\n            );\r\n            const attributeFinish = otherFinish[0] ?? 'normal';\r\n            if (attributeFinish !== 'normal') {\r\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: attributeFinishCanvas,\r\n                    context: attributeFinishContext,\r\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\r\n                attributeFinishContext.drawImage(attributeCanvas, 0, 0);\r\n                await loopAttributeFinish(\r\n                    attributeFinishContext,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            attributeFinishContext,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                        );\r\n                    },\r\n                );\r\n                attributeContext.globalCompositeOperation = 'source-in';\r\n                attributeContext.drawImage(attributeFinishCanvas, 0, 0);\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            } else {\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const starFinish = otherFinish[1] ?? 'normal';\r\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starAlignment,\r\n                style,\r\n                globalScale,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n                loopStarFinish,\r\n            });\r\n            ctx.resetTransform();\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            if (!ctx) return;\r\n            /** We create a new canvas for easier manipulation. */\r\n            const pendulumIconCanvas = document.createElement('canvas');\r\n            pendulumIconCanvas.width = pendulumIconFrameWidth;\r\n            pendulumIconCanvas.height = pendulumIconFrameHeight;\r\n            const pendulumIconContext = pendulumIconCanvas.getContext('2d');\r\n            await drawAsset(pendulumIconContext, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\r\n\r\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\r\n                pendulumIconContext.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n            if (pendulumFrameTypeMap.red === 'scaleless') {\r\n                pendulumIconContext.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n        drawLinkArrowMap: async (linkMap: string[], positionType: keyof typeof ArrowPositionMap) => {\r\n            return baseDrawLinkArrowMap(ctx, globalScale, linkMap, positionType, boundless);\r\n        },\r\n        drawStatBorder: async (style: CanvasTextStyle) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                globalScale,\r\n                style,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            const { context: nameBackgroundContext, canvas: nameBackgroundCanvas } = createCanvas(cardWidth, topToPendulumStructure);\r\n            await drawAsset(nameBackgroundContext, `background/background-name-${topLeftFrame}.png`, 0, 0);\r\n            if (topLeftFrame !== topRightFrame) {\r\n                const nameRightCanvas = await applyAlphaMask(\r\n                    `background/background-name-${topRightFrame}.png`,\r\n                    await MaskPromise.name,\r\n                    cardWidth,\r\n                    topToPendulumStructure,\r\n                );\r\n                nameBackgroundContext.drawImage(nameRightCanvas, 0, 0);\r\n            }\r\n            ctx.globalAlpha = opacityName / 100;\r\n            ctx.drawImage(nameBackgroundCanvas, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.globalAlpha = opacityText / 100;\r\n\r\n            if (withPendulum) {\r\n                await drawAssetWithSize(\r\n                    ctx,\r\n                    `background/background-text-${resolvedEffectBackground}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                    0, 0 + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                );\r\n            } else {\r\n                await drawAsset(\r\n                    ctx,\r\n                    `background/background-text-${resolvedEffectBackground}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY,\r\n                );\r\n            }\r\n            if (withPendulum) {\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                const {\r\n                    exceptionFrameType = frameType,\r\n                    exceptionPendulumBoxOffsetHeight = 0,\r\n                } = PendulumSizeMapException[pendulumSize][resolvedPendulumEffectBackground] ?? {};\r\n                await drawAssetWithSize(\r\n                    ctx,\r\n                    `background/background-${exceptionFrameType}-${resolvedPendulumEffectBackground}.png`,\r\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\r\n                    pendulumBoxWidth, pendulumBoxHeight,\r\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\r\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\r\n                );\r\n            }\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            return;\r\n        },\r\n        drawNameBorder: async () => {\r\n            if (nameBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\r\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\r\n                }\r\n                ctx.resetTransform();\r\n            } else {\r\n                Promise.resolve();\r\n            }\r\n            return;\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder && ctx) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                ctx.scale(globalScale, globalScale);\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\r\n            if (!ctx) return;\r\n            /** We create a new canvas for easier manipulation. */\r\n            const pendulumBorderCanvas = document.createElement('canvas');\r\n            pendulumBorderCanvas.width = cardWidth;\r\n            pendulumBorderCanvas.height = cardHeight;\r\n            const pendulumBorderContext = pendulumBorderCanvas.getContext('2d');\r\n            await drawAssetWithSize(\r\n                pendulumBorderContext,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                    + `-${foilType}`\r\n                    + '-artless'\r\n                    + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\r\n                    + '.png',\r\n                30, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                0, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            await drawAssetWithSize(\r\n                pendulumBorderContext,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                    + `-${foilType}`\r\n                    + '-artless'\r\n                    + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\r\n                    + '.png',\r\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                pendulumFrameWidth / 2, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            if (artBorder) {\r\n                /**\r\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\r\n                 */\r\n                pendulumBorderContext.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\r\n                await drawAsset(\r\n                    pendulumBorderContext,\r\n                    `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                        + `-${foilType}`\r\n                        + '.png',\r\n                    30, topToPendulumStructureFrame,\r\n                );\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (!hasFoil && bottomLeftFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n        drawLinkMapFoil: async (withBorder = artBorder, positionType: keyof typeof ArrowPositionMap) => {\r\n            return baseDrawLinkMapFoil(ctx, globalScale, foil, withBorder, positionType);\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if ((artBorder || nameBorder) && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'name',\r\n                    async type => {\r\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                    },\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawArtFinish: async () => {\r\n            if (applyArtFinish && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopArtFinish(\r\n                    ctx,\r\n                    'art',\r\n                    async (finishType, pendulumSuffix) => {\r\n                        return await drawAssetWithSize(\r\n                            ctx,\r\n                            `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\r\n                            artFinishX, artFinishY,\r\n                            artWidth, artWidth / artRatio,\r\n                        );\r\n                    },\r\n                    pendulumSize,\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        ctx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(\r\n                    ctx,\r\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\r\n                    0, 0,\r\n                ),\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => {\r\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0 + cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                }\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { setTextStyle } from '../canvas-util';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    canvas: HTMLCanvasElement,\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _trueBaseline: number,\r\n    _width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n        globalScale: number,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\r\n    const edge = _edge * globalScale;\r\n    const trueBaseline = _trueBaseline * globalScale;\r\n    const width = _width * globalScale;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n\r\n    if (!(ctx && cloneCtx && value)) return;\r\n    const {\r\n        embossPitch,\r\n        embossYaw,\r\n        embossThickness,\r\n        fillStyle,\r\n        font,\r\n        gradientAngle,\r\n        gradientColor,\r\n        hasEmboss,\r\n        hasGradient,\r\n        hasOutline,\r\n        hasShadow,\r\n        headTextFillStyle,\r\n        lineColor,\r\n        lineOffsetX,\r\n        lineOffsetY,\r\n        lineWidth,\r\n        shadowBlur,\r\n        shadowColor,\r\n        shadowOffsetX,\r\n        shadowOffsetY,\r\n        pattern,\r\n    } = { ...getDefaultNameStyle(), ...style };\r\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n\r\n    ctx.textAlign = 'left';\r\n    const fontData = scaleFontData({\r\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n        headTextFillStyle,\r\n    }, globalScale);\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    const quoteConvertedValue = normalizeCardText(\r\n        value,\r\n        format,\r\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n    );\r\n\r\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n    const crudeTokenList = format === 'ocg'\r\n        ? [quoteConvertedValue]\r\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n    const fontGetterForWidthCalculating = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const normalStyle = fontGetterForWidthCalculating.getFont();\r\n    const symbolStyle = fontGetterForWidthCalculating\r\n        .setSize(cur => cur * fontData.symbolFontRatio)\r\n        .setStyle('small-caps')\r\n        .setFamily(fontData.symbolFont)\r\n        .getFont();\r\n    let maxAscent = 0;\r\n    let maxDescent = 0;\r\n    crudeTokenList.forEach((cur, index) => {\r\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n    }, 0);\r\n\r\n    ctx.font = normalStyle;\r\n    /** Calculate fitting ratio like normal */\r\n    let actualLineWidth = 0;\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [quoteConvertedValue],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n\r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n\r\n    ctx.scale(xRatio, yRatio);\r\n    /** Calculate gradient and offset based on card's frame. */\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\r\n    const tokenList = tokenizeText(quoteConvertedValue);\r\n    const gradient = actualLineWidth > 0 && hasGradient\r\n        ? getNameGradient(\r\n            ctx,\r\n            gradientAngle,\r\n            parsePalette(gradientColor),\r\n            edge,\r\n            actualLineWidth,\r\n            trueBaseline,\r\n            maxAscent, maxDescent,\r\n        )\r\n        : undefined;\r\n\r\n    /**\r\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\r\n     * \r\n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\r\n     */\r\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\r\n    let resetEmbossStroke = () => {};\r\n    if (thickenEmboss) {\r\n        resetEmbossStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: embossThickness,\r\n            lineColor: fillStyle,\r\n            lineColorGradient: gradient,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n    }\r\n    ctx.fillStyle = gradient ?? fillStyle;\r\n    const { tokenEdge } = drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        option: { drawHeadText: false },\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n        },\r\n    });\r\n    resetEmbossStroke();\r\n\r\n    /** \r\n     * Second iteration: Draw pattern, we follow these steps.\r\n     *  * We create a second, temporary canvas node.\r\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\r\n     */\r\n    if (patternImage) {\r\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const patternContext = patternCanvas.getContext('2d');\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n        patternContext.scale(globalScale, globalScale);\r\n        await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\r\n        await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\r\n        patternContext.globalCompositeOperation = patternBlendMode;\r\n        patternContext.resetTransform();\r\n        await drawAssetWithSize(\r\n            patternContext, `finish-name/${patternImage}.png`,\r\n            edge, trueBaseline - maxAscent,\r\n            width,\r\n            maxAscent + maxDescent,\r\n        );\r\n        ctx.globalCompositeOperation = 'source-in';\r\n        ctx.drawImage(patternCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.scale(xRatio, yRatio);\r\n    }\r\n\r\n    /** Third iteration: Apply emboss effect */\r\n    if (hasEmboss) {\r\n        const affectedWidthExtraPadding = 10;\r\n        const embossedImageData = applyEmboss({\r\n            inputCanvas: canvas,\r\n            lightPitch: embossPitch,\r\n            lightYaw: embossYaw,\r\n            minIntensity: -0.9,\r\n            maxIntensity: 0.9,\r\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\r\n        });\r\n        ctx.putImageData(embossedImageData, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\r\n     * \r\n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\r\n     * */\r\n    if (hasOutline) {\r\n        const resetStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: lineWidth + embossThickness,\r\n            lineColor,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            globalScale,\r\n            option: { drawHeadText: false },\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.lineJoin = 'round';\r\n                ctx.strokeText(\r\n                    letter,\r\n                    scaledEdge + lineOffsetX,\r\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                );\r\n            },\r\n        });\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetStroke();\r\n    }\r\n\r\n    /**\r\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\r\n     */\r\n    if (hasShadow) {\r\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const shadowContext = shadowCanvas.getContext('2d');\r\n        const resetShadow = setTextStyle({\r\n            ctx: shadowContext,\r\n            x: shadowOffsetX,\r\n            y: shadowOffsetY,\r\n            shadowColor: shadowColor,\r\n            blur: shadowBlur,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.scale(1 / xRatio, 1 / yRatio);\r\n        shadowContext.drawImage(canvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        ctx.drawImage(shadowCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetShadow();\r\n    }\r\n\r\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\r\n    drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: () => {},\r\n    });\r\n\r\n    const defaultTextStyle = getDefaultNameStyle();\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.fillStyle = defaultTextStyle.fillStyle;\r\n    ctx.lineJoin = 'miter';\r\n    ctx.globalCompositeOperation = 'source-over';\r\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\r\n    smaller: 0,\r\n    normal: 1,\r\n    large: 2,\r\n    highPendulumNormal: 1,\r\n    highPendulumSmaller: 0,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: TypeAbilityCoordinateType,\r\n    furiganaHelper: boolean,\r\n    globalScale: number,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = scaleCoordinateData(\r\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\r\n        globalScale,\r\n    );\r\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\r\n    const fontData = {\r\n        ...scaledBaseFontData,\r\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\r\n    };\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nconst {\r\n    finishTypeCardWidth,\r\n    width: CanvasWidth,\r\n    iconHeight,\r\n    iconWidth,\r\n} = CanvasConst;\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    globalScale,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n    loopIconFinish,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: TypeAbilityCoordinateType,\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n        globalScale,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -5 : -1;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        const {\r\n            canvas: iconCanvas,\r\n            context: iconContext,\r\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n        await drawAssetWithSize(\r\n            iconContext,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\r\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\r\n            () => iconWidth * globalScale,\r\n            () => iconHeight * globalScale,\r\n        );\r\n        if (loopIconFinish) {\r\n            const {\r\n                canvas: iconFinishCanvas,\r\n                context: iconFinishContext,\r\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n            iconFinishContext.drawImage(iconCanvas, 0, 0);\r\n            await loopIconFinish(\r\n                iconFinishContext,\r\n                'art',\r\n                async (finishType) => {\r\n                    return await drawAsset(\r\n                        iconFinishContext,\r\n                        `finish/finish-typeart-${finishType}.png`,\r\n                        (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\r\n                    );\r\n                },\r\n            );\r\n            iconContext.globalCompositeOperation = 'source-in';\r\n            iconContext.drawImage(iconFinishCanvas, 0, 0);\r\n            ctx.drawImage(iconCanvas, 0, 0);\r\n        } else {\r\n            ctx.drawImage(iconCanvas, 0, 0);\r\n        }\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    _fontSize: number,\r\n    globalScale: number,\r\n) => {\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    if (ctx && value) {\r\n        const fontSize = _fontSize * globalScale;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const exceptionDigitWidthRatio = 0.8;\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(\r\n                digit,\r\n                digit === '1' ? accLeft + 1 * globalScale : accLeft,\r\n                baseline + fontSize,\r\n            );\r\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\r\n        });\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    _edge = 99,\r\n    _baseline = 1150.93,\r\n    _baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n        globalScale: number,\r\n    } = {\r\n        globalScale: 1,\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { stroke = false, textStyle, globalScale } = option ?? {};\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const baselineOffset = _baselineOffset * globalScale;\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4 * globalScale;\r\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\r\n\r\n    let left = edge;\r\n    ctx.fillText('1', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, baseline);\r\n    left += ctx.measureText('1').width - 2 * globalScale;\r\n\r\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const numberOffset = -1;\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const statWidth = 73.97 * globalScale;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${36.18 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.scale(1, 1.29);\r\n        ctx.font = ` ${34 * globalScale}px MatrixBoldSmallCaps`;\r\n        ctx.fillText(value, edge + statWidth, numberOffset + baseline / 1.29);\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = `${36.18 * globalScale}px matrix`;\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, numberOffset + baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = `${34 * globalScale}px MatrixBoldSmallCaps`;\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.scale(1, 1.29);\r\n                    ctx.fillText('?', nextEdge / condenseRatio, numberOffset + baseline / 1.29);\r\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        globalScale: number,\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n    baseDrawLinkArrowMap,\r\n    baseDrawLinkMapFoil,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinateMap,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    CardArtCanvasCoordinateMap,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n    PendulumNormalFontData,\r\n    PendulumSizeMap,\r\n    PendulumSize,\r\n    HALF_SCALE_WIDTH_OFFSET,\r\n} from 'src/model';\r\nimport {\r\n    checkLightFooter,\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    createCanvas,\r\n    generateLayer,\r\n    resolveFrameStyle,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    finishTypeCardHeight,\r\n    stickerX,\r\n    stickerY,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n    globalScale: number,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format,\r\n        hasBackground, backgroundType,\r\n        frame,\r\n        foil, finish, artFinish, otherFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumRightFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\r\n        leftFrame, rightFrame,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const effectBackground = effectStyle.background;\r\n    const pendulumEffectBackground = pendulumStyle.background;\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = checkLightFooter(bottomFrame);\r\n    const {\r\n        bottomRightFrame,\r\n    } = resolveFrameStyle(\r\n        {\r\n            frame,\r\n            topLeftFrame: leftFrame,\r\n            topRightFrame: rightFrame,\r\n            bottomLeftFrame: pendulumFrame,\r\n            bottomRightFrame: pendulumRightFrame,\r\n            effectBackground: effectBackground,\r\n            pendulumEffectBackground: pendulumEffectBackground,\r\n        },\r\n        isPendulum,\r\n    );\r\n    const lightRightFooter = checkLightFooter(bottomRightFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const statInEffect = !!(atk || def) || !!(isPendulum && setId);\r\n    const typeInEffect = normalizedTypeAbility.length > 0\r\n        ? cardIcon === 'auto'\r\n            ? (isMonster || isSpeedSkill)\r\n            : cardIcon !== 'st'\r\n        : false;\r\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\r\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        language,\r\n        globalScale,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n    const [, iconFinish, stickerFinish] = otherFinish;\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (x: number, y: number, w: number, h: number, customFill?: string) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground\r\n                            ? (customFill ?? baseFill)\r\n                            : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            /** Base colored background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawLinkArrowMap,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n                drawLinkMapFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n\r\n                calculateCardArtRedrawCoordination,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                globalScale,\r\n                format,\r\n                frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\r\n                effectBackground, pendulumEffectBackground,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                pendulumFrameTypeMap: {\r\n                    red: withRedScale ? 'normal' : 'scaleless',\r\n                    blue: withBlueScale ? 'normal' : 'scaleless',\r\n                },\r\n                otherFinish,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            if (backgroundCanvas && ctx) drawBackground();\r\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\r\n            if (isPendulum && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\r\n                    const {\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                        fillWidth, fillHeight,\r\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\r\n\r\n                    /** To avoid stacking transprency, we clear the area before redrawing */\r\n                    await fillBaseColor(\r\n                        globalScale * destinationX, globalScale * destinationY,\r\n                        globalScale * fillWidth, globalScale * fillHeight,\r\n                    );\r\n\r\n                    drawBackground('pendulum');\r\n                    ctx.drawImage(\r\n                        artworkCanvas,\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\r\n                        globalScale * destinationX, globalScale * destinationY,\r\n                        globalScale * destinationWidth, globalScale * destinationHeight,\r\n                    );\r\n                }\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n            }\r\n\r\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\r\n            await drawArtFinish();\r\n            await drawArtOverlayFinish();\r\n\r\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n            if (isPendulum && !boundless) {\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                if (isLink) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\r\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\r\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\r\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\r\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                        const {\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        } = calculateCardArtRedrawCoordination(\r\n                            artworkCanvas,\r\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\r\n                            extraHeightRatio,\r\n                        );\r\n    \r\n                        await fillBaseColor(\r\n                            globalScale * destinationX, globalScale * destinationY,\r\n                            globalScale * destinationWidth, globalScale * destinationHeight,\r\n                        );\r\n                        drawBackground('pendulum');\r\n                    }\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (artworkCanvas && ctx) drawCardArt();\r\n                await drawArtOverlayFinish();\r\n\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder({\r\n                color: '#000000',\r\n                ...resolvedStatTextStyle,\r\n            });\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            /** If we combine both link map and pendulum frame, link markers will be pushed outward and overlay on top of the card frame */\r\n            if (isLink && !isPendulum) {\r\n                await drawLinkArrowMap(linkMap, isPendulum ? 'pendulum' : 'normal');\r\n                await drawLinkMapFoil(false, isPendulum ? 'pendulum' : 'normal');\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                if (statInEffect) {\r\n                    await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\r\n                }\r\n                resetStyle();\r\n            }\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                globalScale,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        frame,\r\n        leftFrame,\r\n        rightFrame,\r\n        pendulumRightFrame,\r\n        format,\r\n        hasBackground,\r\n        backgroundType,\r\n        attribute,\r\n        pendulumFrame,\r\n        foil,\r\n        star,\r\n        starAlignment,\r\n        cardIcon,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        withBlueScale,\r\n        withRedScale,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        lightFooter,\r\n        linkMap,\r\n        resolvedStatTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        finish,\r\n        otherFinish,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        pendulumSize,\r\n        statInEffect,\r\n        levelStyle,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW PENDULUM SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\r\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\r\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\r\n        }\r\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                nameCanvasRef.current,\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n        drawStatText(ctx, 'ATK', 432.10, 1106, globalScale);\r\n        drawStat(ctx, atk.trim(), 508.824, 1106, globalScale);\r\n        if (!isLink) {\r\n            drawStatText(ctx, 'DEF', 600.85, 1106, globalScale);\r\n            drawStat(ctx, def.trim(), 673.865, 1106, globalScale);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, globalScale, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                globalScale,\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter: lightRightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightRightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const isNumberPassword = /^[0-9]*$/.test(password);\r\n        const mayOffset = isNumberPassword && isPendulum && isLink;\r\n        const willOffset = mayOffset;\r\n        const {\r\n            rightEdge,\r\n        } = drawPasswordText({\r\n            ctx,\r\n            globalScale,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n            textStyle: resolvedOtherEffectTextStyle,\r\n            fontLevel: !isNumberPassword ? 1 : 0\r\n        });\r\n        if (isFirstEdition) {\r\n            const willDraw = isPendulum\r\n                ? isNumberPassword ? true : false\r\n                : true;\r\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\r\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            if (willDraw) draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n                {\r\n                    globalScale,\r\n                    textStyle: {\r\n                        color: lightFooter ? '#ffffff' : '#000000',\r\n                        ...resolvedOtherEffectTextStyle,\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter: lightRightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n                globalScale,\r\n            });\r\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\r\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    globalScale,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        lightRightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            const ctx = stickerCanvasRef.current?.getContext('2d');\r\n            if (!clearCanvas(ctx)) return;\r\n            const {\r\n                canvas: stickerCanvas,\r\n                context: stickerContext,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            await drawSticker({\r\n                ctx: stickerContext,\r\n                sticker,\r\n                globalScale,\r\n                x: stickerX,\r\n                y: stickerY,\r\n            });\r\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\r\n            if (normalizedStickerFinish !== 'normal') {\r\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: stickerFinishCanvas,\r\n                    context: stickerFinishContext,\r\n                } = createCanvas(CanvasWidth, CanvasHeight);\r\n                stickerFinishContext.drawImage(stickerCanvas, 0, 0);\r\n                await loopStickerFinish(\r\n                    stickerFinishContext,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            stickerFinishContext,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            CanvasWidth - finishTypeCardWidth, CanvasHeight - finishTypeCardHeight,\r\n                        );\r\n                    },\r\n                );\r\n                stickerContext.globalCompositeOperation = 'source-in';\r\n                stickerContext.drawImage(stickerFinishCanvas, 0, 0);\r\n                ctx.drawImage(stickerCanvas, 0, 0);\r\n            } else {\r\n                ctx.drawImage(stickerCanvas, 0, 0);\r\n            }\r\n        };\r\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\r\n            const customizeEffectStyle = effectTextStyle[0];\r\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\r\n            const useItalic = customizeEffectStyle\r\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\r\n                : isNormal;\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                useItalic,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    useItalic,\r\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                },\r\n            });\r\n            const normalizedIconFinish = iconFinish ?? 'normal';\r\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                globalScale,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : (isPendulum && pendulumSize === 'large')\r\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\r\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n                loopIconFinish,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        format,\r\n        frame,\r\n        isPendulum,\r\n        pendulumSize,\r\n        furiganaHelper,\r\n        iconFinish,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { upSize, fontStyle } = pendulumStyle ?? {};\r\n            const customPendulumStyle = pendulumTextStyle[0];\r\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\r\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\r\n            const fontDataKey = `${format}-${pendulumSize}`;\r\n            const coordinateList = PendulumEffectCoordinateMap\r\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\r\n                [pendulumSize];\r\n            /** Account for half scaleless frame */\r\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\r\n                ? coordinateList\r\n                : coordinateList.map(({\r\n                    trueEdge, trueWidth, ...rest\r\n                }) => ({\r\n                    ...rest,\r\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                    trueWidth: trueWidth\r\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\r\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                }));\r\n\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                useItalic: useItalic,\r\n                fontData: (useItalic\r\n                    ? PendulumNormalFontData\r\n                    : PendulumEffectFontData)[fontDataKey],\r\n                fontDataKey,\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: modifiedCoordinateList,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                }\r\n            });\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        withRedScale,\r\n        withBlueScale,\r\n        pendulumSize,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            if (isLink && isPendulum) {\r\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless);\r\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal');\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                if (statInEffect) {\r\n                    await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\r\n                }\r\n                resetStyle();\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n            ctx.resetTransform();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        finishCanvasRef,\r\n        loopFinish,\r\n        name,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        boundless,\r\n        foil,\r\n        resolvedStatTextStyle,\r\n        statInEffect,\r\n        frameCanvasRef,\r\n    ]);\r\n\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        const {\r\n            // isRelevant,\r\n            pendulumSize,\r\n            isPendulum = false,\r\n            opacity,\r\n        } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            clearCanvas(exportCtx);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            // await generateLayer(frameCanvas, exportCtx);\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            if (artworkCanvas && exportCtx) {\r\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n                if (imageHeight > 0) {\r\n                    exportCtx.drawImage(\r\n                        artworkCanvas,\r\n                        0, 0,\r\n                        imageWidth, imageHeight,\r\n                        artX, artY,\r\n                        artWidth, artWidth / (imageWidth / imageHeight),\r\n                    );\r\n                }\r\n            }\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxRef.current?.draw(exportCanvas);\r\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\r\n                exportCanvas,\r\n                0,\r\n                0,\r\n                exportCanvas.width,\r\n                exportCanvas.height,\r\n                0,\r\n                0,\r\n                CanvasWidth,\r\n                CanvasHeight,\r\n            );\r\n        }\r\n    }, [\r\n        language,\r\n        artworkCanvasRef, \r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n        previewCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n    lineWidth?: number,\r\n    lineColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    globalScale,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    edgeOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    fontLevel,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    edgeOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    fontLevel: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return {\r\n        rightEdge: 0,\r\n    };\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                    globalScale,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left'\r\n            ? trueEdge + edgeOffset\r\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        rightEdge: result.tokenEdge,\r\n    };\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    globalScale,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    globalScale,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst notificationLocalStorageKey = 'ygocarder-notification';\r\nexport type NotificationMemory = {\r\n    condenseReminder: boolean,\r\n    versionReminder: string,\r\n    faqReminder: string,\r\n};\r\nexport type NotificationStore = {\r\n    memory: NotificationMemory,\r\n    updateNotification: <Key extends keyof NotificationMemory>(\r\n        key: Key,\r\n        value: NotificationMemory[Key],\r\n    ) => void,\r\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\r\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\r\n};\r\nexport const useNotificationMemory = create<NotificationStore>((set) => {\r\n    const {\r\n        condenseReminder,\r\n        versionReminder,\r\n        faqReminder,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useNotificationMemory: Error when getting cached notification', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        memory: {\r\n            faqReminder: typeof faqReminder !== 'string' ? '' : faqReminder,\r\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\r\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\r\n        },\r\n        updateNotification: (key, value) => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        },\r\n        updateNotificationMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateNotification,\r\n    } = useNotificationMemory(useShallow(({\r\n        memory,\r\n        updateNotification,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateNotification,\r\n    })));\r\n\r\n    const updateTargetNotification = useCallback(\r\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\r\n        [key, updateNotification],\r\n    );\r\n\r\n    return [targetMemory, updateTargetNotification] as const;\r\n};","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\r\nimport styled from 'styled-components';\r\n\r\n/** The container must contain this class to spread inner styling to angle picker component */\r\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\r\nconst AnglePickerContainer = styled.div`\r\n    .ap {\r\n        background-color: var(--color-heavy);\r\n        .apc {\r\n            width: 8px;\r\n        }\r\n        .aph {\r\n            width: 8px;\r\n            height: 8px;\r\n        }\r\n    }\r\n    .ai {\r\n        margin: 0;\r\n        margin-top: var(--spacing-sm);\r\n        background: var(--main-slider);\r\n        justify-content: space-between;\r\n        line-height: 1.4;\r\n        span {\r\n            background: var(--main-secondary);\r\n            padding-left: var(--spacing);\r\n            padding-right: var(--spacing);\r\n            &:hover {\r\n                background: var(--sub-secondary);\r\n            }\r\n        }\r\n        span,\r\n        input {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type CircularAnglePicker = AnglePicker & {\r\n    children?: React.ReactChild,\r\n};\r\nexport const CircularAnglePicker = ({\r\n    children,\r\n    ...rest\r\n}: CircularAnglePicker) => {\r\n    return <AnglePickerContainer className=\"angle-picker-container\">\r\n        {children}\r\n        <AnglePicker {...rest} />\r\n    </AnglePickerContainer>;\r\n};","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n`;\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    width: 24px;\r\n    height: 24px;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    Icon?: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n        >\r\n            <>\r\n                {Icon && <Icon {...iconProps} />}{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Popover } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\n\r\nexport const StyledMarkdown = styled.div`\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-3);\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    text-shadow: var(--ts);\r\n    p {\r\n        white-space: pre-line;\r\n    }\r\n    ul {\r\n        padding-inline-start: var(--spacing-2xl);\r\n        margin-block-end: 0;\r\n        li {\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    :last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\r\n    max-width: 550px;\r\n    border-radius: var(--br-lg);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n`;\r\n\r\nexport const InternalPopover = ({\r\n    content,\r\n    children,\r\n    ...rest\r\n}: React.ComponentProps<typeof Popover>) => {\r\n    if (content) {\r\n        return <Popover content={content} {...rest}>{children}</Popover>;\r\n    }\r\n    return <>{children}</>;\r\n};\r\n\r\nexport const CardActionButton = styled.button`\r\n    --overlay-size: 36px;\r\n    background: var(--main-primary);\r\n    border-width: 0;\r\n    border-style: solid;\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing-sm);\r\n    line-height: 1;\r\n    font-size: var(--fs-xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-1);\r\n    /* display: none; */\r\n    &:not(:disabled) {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        filter: opacity(0.5);\r\n    }\r\n`;\r\n\r\nexport const CombinedSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 60px 45px 12px;\r\n    &.inactive {\r\n        .slider-label,\r\n        .ant-slider,\r\n        .slider-padding {\r\n            background-color: var(--main-level-3);\r\n        }\r\n    }\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        display: inline-flex;\r\n        column-gap: var(--spacing-xs);\r\n        border-right: none;\r\n        padding: var(--spacing-xxs) var(--spacing-xs);\r\n        border-radius: var(--br) 0 0 var(--br);\r\n        box-shadow: var(--bs-input);\r\n        .ant-checkbox-wrapper {\r\n            transform: translateY(-1px); // Alignment\r\n        }\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    display: inline-block;\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { RadioTrain } from '../input-train';\r\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\r\nimport { StyledPopMarkdown } from '../atom';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n    .list-option {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .resolution-list {\r\n        &.radio-train {\r\n            .ant-radio-button-wrapper:first-child {\r\n                border-radius: var(--br) var(--br) 0 0;\r\n            }\r\n            .ant-radio-button-wrapper:last-child {\r\n                border-radius: 0 0 var(--br) var(--br);\r\n            }\r\n        }\r\n        .radio-train-input-group {\r\n            display: inline-grid;\r\n            flex: 0 1 auto;\r\n            .ant-radio-button-wrapper {\r\n                border-left-width: 1.02px;\r\n                &:before {\r\n                    content: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        exportFormat,\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\r\n                    <RadioTrain\r\n                        className=\"resolution-list\"\r\n                        value={`${resolution[0]}x${resolution[1]}`}\r\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\r\n                            value: `${width}x${height}`,\r\n                            label: scale > 1\r\n                                ? <Popover\r\n                                    overlayClassName=\"explanation-overlay\"\r\n                                    placement=\"left\"\r\n                                    content={<StyledPopMarkdown>\r\n                                        {language['setting.option.resolution.warning']}\r\n                                    </StyledPopMarkdown>}\r\n                                >\r\n                                    {label}\r\n                                </Popover>\r\n                                : label,\r\n                        }))}\r\n                        onChange={value => {\r\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\r\n\r\n                            if (resolutionValue) {\r\n                                updateSetting({\r\n                                    resolution: resolutionValue.settingValue,\r\n                                    globalScale: resolutionValue.scale,\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\r\n                    <RadioTrain\r\n                        value={exportFormat}\r\n                        optionList={ExportFormatList}\r\n                        onChange={value => {\r\n                            updateSetting({ exportFormat: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import styled, { css, keyframes } from 'styled-components';\r\n\r\nconst titlShaking = keyframes`\r\n    0% { transform: rotate(0deg); }\r\n    3% { transform: rotate(5deg); }\r\n    6% { transform: rotate(0eg); }\r\n    9% { transform: rotate(-5deg); }\r\n    12% { transform: rotate(0deg); }\r\n    100% { transform: rotate(0deg); }\r\n`;\r\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\r\n    text-align: center;\r\n    border: var(--bw) solid var(--main-level-3);\r\n    background-color: var(--main-level-1);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    cursor: pointer;\r\n    box-shadow: 0 0 2px 1px #222222 inset;\r\n    transition: background-color 250ms linear;\r\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background: var(--main-warning);\r\n            color: var(--color-contrast);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\r\n    box-shadow: none;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    &.js-highlight {\r\n        background: var(--main-info);\r\n        text-shadow: none;\r\n        box-shadow: 0 0 2px 0 #333333;\r\n    }\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            background: var(--main-info);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background: var(--sub-info);\r\n    }\r\n`;\r\n\r\nexport const QuoteContainer = styled.div`\r\n    label {\r\n        font-weight: bold;\r\n        font-style: italic;\r\n        &:after {\r\n            content: \":\";\r\n        }\r\n    }\r\n    .question {\r\n        margin-left: var(--spacing);\r\n    }\r\n    .answer {\r\n        margin: var(--spacing) 0;\r\n    }\r\n    &:last-child {\r\n        .answer {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n`;","import { Popover } from 'antd';\r\nimport { memo, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { useNotification } from 'src/service';\r\nimport { VersionLogButtonLabel } from './styled';\r\n\r\nconst LogSentence = styled.li`\r\n    img {\r\n        display: block;\r\n        max-width: 400px;\r\n        max-height: 200px;\r\n        margin: auto;\r\n        box-shadow: var(--bs-1);\r\n        margin-top: var(--spacing-xs);\r\n    }\r\n`;\r\n\r\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\r\nconst VersionLogStore = (() => {\r\n    let isReady = false;\r\n    let versionLog: VersionLog = [];\r\n\r\n    return {\r\n        getLog: async () => {\r\n            if (isReady) return versionLog;\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/log/version.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            try {\r\n                const responseLog = await response.json();\r\n                versionLog = responseLog;\r\n                isReady = true;\r\n\r\n                return versionLog;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return [];\r\n        }\r\n    };\r\n})();\r\nexport const VersionLog = () => {\r\n    const [log, setLog] = useState<VersionLog>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const log = await VersionLogStore.getLog();\r\n\r\n            setLoading(false);\r\n            setLog(log);\r\n        })();\r\n    }, []);\r\n\r\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\r\n    if (loading) return <div>Loading changelog...</div>;\r\n    return <div>\r\n        {log.map(({ logList, version }, index) => {\r\n            return <div key={`${version}-${index}`} className=\"log-section\">\r\n                <b>{version}</b><br />\r\n                <ul>\r\n                    {/* Using index as key here is safe as the component is stateless */}\r\n                    {logList.map(({ content, image }, index) => {\r\n                        return <LogSentence key={index}>\r\n                            {content}\r\n                            {image && <img src={image} alt={`version-${version}-illust`} />}\r\n                        </LogSentence>;\r\n                    })}\r\n                </ul>\r\n            </div>;\r\n        })}\r\n    </div>;\r\n};\r\n\r\nconst compareSemver = (a: string, b: string): boolean => {\r\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\r\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\r\n    \r\n    if (majorA !== majorB) {\r\n      return majorA > majorB;\r\n    }\r\n    \r\n    if (minorA !== minorB) {\r\n      return minorA > minorB;\r\n    }\r\n    \r\n    return patchA > patchB;\r\n};\r\n\r\nconst StyledVersionLog = styled(StyledPopMarkdown)`\r\n    overflow: auto;\r\n    width: 550px;\r\n    max-height: 300px;\r\n    width: 550px;\r\n    .log-section + .log-section {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nexport const VersionLogButton = memo(() => {\r\n    const [animating, setAnimating] = useState(false);\r\n    const [\r\n        version,\r\n        setMemoizedVersion,\r\n    ] = useNotification('versionReminder');\r\n\r\n    useEffect(() => {\r\n        if (version) {\r\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\r\n            const memoizedSemver = version;\r\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\r\n\r\n            if (compareSemver(currentSemver, memoizedSemver)) {\r\n                setAnimating(true);\r\n                setTimeout(() => {\r\n                    setAnimating(false);\r\n                }, 8000);\r\n            }\r\n        }\r\n    }, [setMemoizedVersion, version]);\r\n\r\n    return <Popover\r\n        placement=\"bottom\"\r\n        content={<StyledVersionLog>\r\n            <VersionLog />\r\n        </StyledVersionLog>}\r\n    >\r\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\r\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\r\n        </VersionLogButtonLabel>\r\n    </Popover>;\r\n});","import { Modal, Tabs } from 'antd';\r\nimport { FaqButtonLabel, QuoteContainer } from './styled';\r\nimport { useNotification } from 'src/service';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\ntype Quote = {\r\n    author?: string,\r\n    question: string,\r\n    children: React.ReactNode,\r\n}\r\nconst Quote = ({\r\n    author,\r\n    question,\r\n    children,\r\n}: Quote) => {\r\n    return <QuoteContainer>\r\n        <blockquote>\r\n            {author && <label>{author}</label>}\r\n            <div className=\"question\">{question}</div>\r\n        </blockquote>\r\n        <div className=\"answer\">{children}</div>\r\n    </QuoteContainer>;\r\n};\r\n\r\nexport const QuestionAndFeedback = () => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [animating, setAnimating] = useState(false);\r\n    const [\r\n        faqReminder,\r\n        setMemoizedReminder,\r\n    ] = useNotification('faqReminder');\r\n\r\n    useEffect(() => {\r\n        const currentReminder = '31/05/2025';\r\n        if (faqReminder !== currentReminder) {\r\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(currentReminder);\r\n\r\n            setAnimating(true);\r\n            setTimeout(() => {\r\n                setAnimating(false);\r\n            }, 8000);\r\n        }\r\n    }, [setMemoizedReminder, faqReminder]);\r\n\r\n    return <>\r\n        <FaqButtonLabel id=\"faq-button\" $animating={animating} onClick={() => setVisible(cur => !cur)}>\r\n            {'FAQ'}\r\n        </FaqButtonLabel>\r\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\r\n            <Tabs>\r\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\r\n                    <div><i>Solved feedbacks are removed.</i></div>\r\n                    <br />\r\n                    {[\r\n                        {\r\n                            author: 'Cardmaker_01',\r\n                            question: 'Hello, the Xyz cards have black font in Set ID and Copyright, making it invisible to Xyz cards. Attached screenshot is an example. Can you please fix those fields to white font again? tysm and more power to you :)',\r\n                            answer: 'It should be fixed by now, thanks for your feedback.'\r\n                        },\r\n                        {\r\n                            author: 'galaxy dragon',\r\n                            question: 'Can you add a little space on the edge of the spell and trap card? when it is full of text. Thank you.',\r\n                            answer: 'I can\\'t quite understand what you mean, can you be more specific, or provide a sample image?',\r\n                        },\r\n                        {\r\n                            author: 'Anonymous User at May 27, 2025',\r\n                            question: 'Hello, can you add a selection of sizes in card title? because the old card and new card have different card title alignment, the old card seems to appear the title is more stretch than the new maybe because of the card size of the old card. can you fix it pls? maybe add some choices of card title alignments?\\nor maybe size? THANK YOU SO MUCH!!',\r\n                            answer: 'Do you have any sample image of the old card? I would like to see the difference between the two so I can decide that if it is possible or not.',\r\n                        },\r\n                        {\r\n                            author: 'ATK/DEF at May 26, 2025',\r\n                            question: 'The ATK/DEF text and values seem to have different sizes than usual. Also the ? seems to be in a different format to how it appears in TCG/OCG',\r\n                            answer: 'I have made a bit adjustment for font size and font family of stats text.',\r\n                        },\r\n                        {\r\n                            author: 'Maya at May 23, 2025',\r\n                            question: 'I\\'d like to make a request, is it possible to put a SPEED DUEL watermark in EVERY card types in the description area like the Speed Skill type when it is set to speed duel? thank you so much. Appreciate your lovely cardmaker',\r\n                            answer: 'I will try, but this is pretty hard to do to be honest, don\\'t keep your hope up.',\r\n                        },\r\n                        {\r\n                            author: 'Shanaya at May 22, 2025',\r\n                            question: 'Can you put something rainbow effect on the Finish in number 3?',\r\n                            answer: 'I have added art finish type 8, which is a mix between type 3 and 6, you may try that out.',\r\n                        },\r\n                    ].map(({ author, question, answer }, index) => {\r\n                        return <Quote key={index} author={author} question={question}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\r\n                    {[\r\n                        {\r\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\r\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\r\n                        },\r\n                    ].map(({ question, answer }, index) => {\r\n                        return <Quote key={index} question={question}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n            </Tabs>\r\n        </Modal>\r\n    </>;\r\n};","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage } from 'src/service';\r\nimport { Radio, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\nimport { VersionLogButton } from './version-log';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { QuestionAndFeedback } from './faq';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\r\n                    <span\r\n                        className=\"bug-report\"\r\n                        onMouseOver={() => {\r\n                            document.getElementById('faq-button')?.classList.add('js-highlight');\r\n                        }}\r\n                        onMouseOut={() => {\r\n                            document.getElementById('faq-button')?.classList.remove('js-highlight');\r\n                        }}\r\n                    >\r\n                        <div id=\"sentry-bug-report\">\r\n                            {language['contributor.bug-report.tooltip']}\r\n                        </div>\r\n                    </span>\r\n                </Tooltip>\r\n                <QuestionAndFeedback />\r\n                <VersionLogButton />\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<StyledPopMarkdown className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasPanel = () => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledPopMarkdown className=\"disclaimer\">\r\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n    </StyledPopMarkdown>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<TaintedCanvasPanel />}\r\n    />;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { StyledCode } from '../atom';\r\nimport './formatting-guide.scss';\r\n\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n    h2 {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-6.label']}</h2>\r\n                {language['guide.format.section-6.content'](\r\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'justified non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'justified non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import React from 'react';\r\nimport { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n    onClick,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & {\r\n    className?: string,\r\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\r\n}) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n        onClick={onClick}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { Modal } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { CanvasConst } from 'src/model';\r\nimport {\r\n    TransformWrapper,\r\n    TransformComponent,\r\n    ReactZoomPanPinchContentRef,\r\n} from 'react-zoom-pan-pinch';\r\nimport styled from 'styled-components';\r\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\r\nimport { CardActionButton } from '../atom';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nconst StyledLightboxContainer = styled.div`\r\n    width: ${CanvasWidth}px;\r\n    height: ${CanvasHeight}px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    line-height: 0;\r\n    .card-lightbox-control {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: var(--spacing);\r\n        right: var(--spacing);\r\n        user-select: none;\r\n        text-align: right;\r\n        .action-list {\r\n            display: inline-flex;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .control-info {\r\n            background-color: var(--main-level-1);\r\n            padding: var(--spacing-xs);\r\n            margin-top: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            line-height: 1;\r\n            box-shadow: var(--bs-1);\r\n        }\r\n    }\r\n    .card-lightbox-content {\r\n        cursor: grab;\r\n    }\r\n`;\r\n\r\nconst MAX_ZOOM = 4;\r\nconst Controls = ({\r\n    zoomIn,\r\n    zoomOut,\r\n    resetTransform,\r\n    setTransform,\r\n    scale,\r\n    globalScale,\r\n    width,\r\n    height,\r\n}: ReactZoomPanPinchContentRef & {\r\n    scale: number,\r\n    globalScale: number,\r\n    width: number,\r\n    height: number,\r\n}) => {\r\n    return <div className=\"control-container\">\r\n        <div className=\"action-list\">\r\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\r\n                zoomIn();\r\n            }}>\r\n                <ZoomInOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\r\n                zoomOut();\r\n            }}>\r\n                <ZoomOutOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                resetTransform();\r\n            }}>\r\n                <FullscreenExitOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                setTransform(\r\n                    -Math.max(0, width - CanvasWidth) / 2,\r\n                    -Math.max(0, height - CanvasHeight) / 2,\r\n                    1,\r\n                );\r\n            }}>\r\n                <FullscreenOutlined />\r\n            </CardActionButton>\r\n        </div>\r\n        <div className=\"control-info\">\r\n            {scale && <>×{\r\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\r\n            }</>}&nbsp;({width} × {height})\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport type Lightbox = {\r\n    globalScale: number,\r\n};\r\nexport type LightboxRef = {\r\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\r\n    draw: (targetCanvas: HTMLCanvasElement) => void,\r\n    refresh: () => void,\r\n    getCanvasKey: () => number,\r\n};\r\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\r\n    globalScale,\r\n}, ref) => {\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\r\n    const [scale, setScale] = useState(() => 1 / globalScale);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setVisible: setLightboxVisible,\r\n        draw: targetCanvas => {\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\r\n                targetCanvas,\r\n                0,\r\n                0,\r\n            );\r\n        },\r\n        refresh: () => setCanvasKey(cnt => cnt + 1),\r\n        getCanvasKey: () => canvasKey,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        lightboxRef.current?.resetTransform();\r\n    }, [globalScale]);\r\n\r\n    return <Modal\r\n        width={`${CanvasWidth + 15 * 2}px`}\r\n        wrapClassName=\"card-lightbox-overlay\"\r\n        visible={lightboxVisible}\r\n        forceRender={true}\r\n        onCancel={() => setLightboxVisible(false)}\r\n        footer={null}\r\n    >\r\n        <StyledLightboxContainer\r\n            className=\"card-lightbox-container\"\r\n        >\r\n            <TransformWrapper ref={lightboxRef}\r\n                initialScale={1 / globalScale}\r\n                initialPositionX={0}\r\n                initialPositionY={0}\r\n                minScale={1 / globalScale}\r\n                maxScale={MAX_ZOOM}\r\n                onTransformed={ref => {\r\n                    setScale(ref.state.scale);\r\n                }}\r\n            >\r\n                {({ ...utils }) => {\r\n                    return <>\r\n                        <div\r\n                            className=\"card-lightbox-control\"\r\n                        >\r\n                            <Controls\r\n                                {...utils}\r\n                                scale={scale}\r\n                                globalScale={globalScale}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </div>\r\n                        <TransformComponent\r\n                            wrapperClass=\"card-lightbox-content\"\r\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\r\n                        >\r\n                            <canvas key={canvasKey + 0.1}\r\n                                id=\"lightbox-canvas\"\r\n                                ref={lightboxCanvasRef}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </TransformComponent>\r\n                    </>;\r\n                }}\r\n            </TransformWrapper>\r\n        </StyledLightboxContainer>\r\n    </Modal>;\r\n});","import { Menu, Popover } from 'antd';\r\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StyledPopMarkdown } from '../atom';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-setting {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nexport type ResolutionPicker = {\r\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ResolutionPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ResolutionPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.resolution.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ResolutionList.map(({ width, height, label, scale }) => {\r\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        resolution: [width, height],\r\n                        globalScale: scale,\r\n                    });\r\n                    onChange?.([width, height], scale);\r\n                }}\r\n            >\r\n                {scale > 1\r\n                    ? <Popover\r\n                        overlayClassName=\"explanation-overlay\"\r\n                        placement=\"left\"\r\n                        content={<StyledPopMarkdown>\r\n                            {language['setting.option.resolution.warning']}\r\n                        </StyledPopMarkdown>}\r\n                    >\r\n                        {label}\r\n                    </Popover>\r\n                    : label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};\r\n\r\nexport type ExportFormatPicker = {\r\n    onChange?: (nextFormat: ExportFormat) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ExportFormatPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ExportFormatPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        exportFormat,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, exportFormat },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        exportFormat,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.export-format.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ExportFormatList.map(({ value, label }) => {\r\n            return <StyledDownloadDropdownOption key={label}\r\n                className={value === exportFormat ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        exportFormat: value,\r\n                    });\r\n                    onChange?.(value);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / 375;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: (crossorigin?: string) => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const targetFile = e.target.files[0];\r\n            const maxFileSize = 4;\r\n\r\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n                setLoading(true);\r\n                const reader = new FileReader();\r\n                reader.addEventListener('load', () => {\r\n                    if (typeof reader.result === 'string') {\r\n                        setCrossOrigin('anonymous');\r\n                        setInternalSource(reader.result);\r\n                        setSourceType('offline');\r\n                        setInputMode('offline');\r\n                        onSourceChange('offline', reader.result);\r\n                        setLoading(false);\r\n                    }\r\n                });\r\n                reader.readAsDataURL(targetFile);\r\n            } else {\r\n                onMaxSizeExceeded(maxFileSize);\r\n            }\r\n        } else alert(language['image-cropper.not-found-warning']);\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded(crossorigin);\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [crossorigin, onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setCrossOrigin('anonymous');\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setCrossOrigin('anonymous');\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={`card-image-cropper ${className}`}>\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        setCrossOrigin('anonymous');\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                    setLoading(true);\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                {language['image-cropper.source.online.tooltip']}\r\n                            </Radio.Button>\r\n                            <Tooltip\r\n                                placement=\"topLeft\"\r\n                                title={<div className=\"image-warning\">\r\n                                    {language['image-cropper.offline-warning']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                        {<div className=\"online-image-tip\">\r\n                            {language['image-cropper.online-tip']}\r\n                        </div>}\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={applyOfflineSource}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                        <hr />\r\n                        {language['image-cropper.offline-warning']}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {beforeCropper}\r\n            <div className=\"card-cropper\" onKeyDown={() => {\r\n                /** Nudge selection also count as user interaction */\r\n                setInteracted(true);\r\n            }}>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <Tooltip\r\n                        placement=\"left\"\r\n                        overlay={forceFit\r\n                            ? language['image-cropper.button.use-crop.tooltip']\r\n                            : language['image-cropper.button.force-fit.tooltip']}\r\n                    >\r\n                        <div\r\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                            onClick={() => {\r\n                                setInteracted(true);\r\n                                onForceFitChange(!forceFit);\r\n                            }}\r\n                        >\r\n                            <FullscreenOutlined />\r\n                        </div>\r\n                    </Tooltip>\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\r\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { width, x } = cur.completed ?? {};\r\n\r\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    x: (100 - width) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\r\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { height, y } = cur.completed ?? {};\r\n\r\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    y: (100 - height) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                </div>}\r\n                {(!hasImage || (error && crossorigin === undefined)) && <Empty\r\n                    description={language['image-cropper.not-found-warning']}\r\n                    image={null}\r\n                />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        pendingCrop.current = {\r\n                            source: '',\r\n                            crop: null,\r\n                        };\r\n                        if (!receivingCanvas) {\r\n                            setLoading(false);\r\n                            setError('No receiving canvas');\r\n                            onTainted();\r\n                        }\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded(crossorigin);\r\n                            setLoading(false);\r\n                            setError('Image not found');\r\n                        } else {\r\n                            setCrossOrigin(undefined);\r\n                            onTainted();\r\n                        }\r\n                        if (crossorigin === undefined) {\r\n                            setLoading(false);\r\n                            setError('Tainted canvas');\r\n                        }\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: 13px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-sm);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    display: inline-block;\r\n    .title {\r\n        line-height: 0;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkChooser = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdownLabel = styled.div`\r\n    color: var(--color);\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    padding: 0 var(--spacing);\r\n    padding-bottom: var(--spacing-xs);\r\n    line-height: 1;\r\n    cursor: default;\r\n    &:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './angle-picker';\r\nexport * from './app-header';\r\nexport * from './atom';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './input-train';\r\nexport * from './lightbox';\r\nexport * from './setting';\r\nexport * from './setting-panel';\r\nexport type { ImageCropperRef } from './image-cropper';\r\nexport { ImageCropper } from './image-cropper';\r\nexport { LinkMarkChooser } from './link-marker';\r\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { GatewayOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\nimport { ResolutionPicker } from 'src/component';\r\n\r\nexport const ResolutionButton = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    border-left: var(--bw) solid var(--sub-secondary);\r\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    color: var(--color);\r\n    cursor: pointer;\r\n    .anticon {\r\n        font-size: var(--fs-2xl);\r\n        margin-left: 0;\r\n    }\r\n    .resolution-overlay {\r\n        position: absolute;\r\n        left: 50%;\r\n        bottom: 3px; // Alignment\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        transform: translateX(-50%);\r\n    }\r\n    .resolution-icon {\r\n        transform: translateY(-5px); // Alignment\r\n    }\r\n`;\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    globalScale: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    globalScale,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey, resolution,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n            globalScale,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n            >\r\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                    <GatewayOutlined className=\"resolution-icon\" />\r\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                </ResolutionButton>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport copy from 'copy-to-clipboard';\r\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        padding-bottom: var(--spacing-sm);\r\n        .icon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        &.export-download-image {\r\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\r\n            border-bottom: var(--bw) solid var(--sub-secondary);\r\n            &:disabled {\r\n                border-bottom: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n        &.mode_other {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        button {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        > div {\r\n            height: 100%;\r\n        }\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .resolution-picker {\r\n        background-color: var(--main-level-4);\r\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\r\n        padding: var(--spacing-xs);\r\n        line-height: 1;\r\n        text-align: center;\r\n        border: var(--bw) solid transparent;\r\n        cursor: pointer;\r\n    }\r\n    .export-input-raw {\r\n        grid-column: 1 / -1;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n    withText?: boolean,\r\n    disabled: boolean,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    withText,\r\n}: CardDataCopyButton) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledCardDataCopyButton\r\n        disabled={disabled}\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay\r\n            ? <div className=\"copiable-overlay\">\r\n                {withText\r\n                    ? <>Copied&nbsp;<CheckOutlined /></>\r\n                    : <CheckOutlined />}\r\n                </div>\r\n            : null}\r\n        {children}\r\n    </StyledCardDataCopyButton>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    tainted: boolean,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    tainted,\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n    })));\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            width={600}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\r\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\r\n                        <div>\r\n                            <StyledActionIconButton\r\n                                disabled={tainted && mode === 'other'}\r\n                                onClick={() => {\r\n                                    const blob = new Blob([data], { type: 'application/json' });\r\n                                    downloadBlob(\r\n                                        normalizeCardName(name),\r\n                                        blob,\r\n                                        'application/json',\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <div className=\"icon\"><DownloadOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.download-button.label']}\r\n                                </div>\r\n                            </StyledActionIconButton>\r\n                        </div>\r\n                    </InternalPopover>\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['prompt.export.offline-warning.message']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={internalCardData.ygocarder.data}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><CopyOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.copy-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    {mode === 'ygocarder' && <div>\r\n                        <CardDataCopyButton\r\n                            disabled={isPartial}\r\n                            data={window.location.href}\r\n                            withText\r\n                        >\r\n                            <div className=\"icon\"><LinkOutlined /></div>\r\n                            <div className=\"label\">\r\n                                {language['button.export-modal.share-button.label']}\r\n                            </div>\r\n                        </CardDataCopyButton>\r\n                    </div>}\r\n                    <div>\r\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\r\n                            <div>\r\n                                <StyledActionIconButton\r\n                                    disabled={tainted}\r\n                                    className=\"export-download-image\"\r\n                                    onClick={onRequireDownload}\r\n                                >\r\n                                    <div className=\"icon\"><FileImageOutlined /></div>\r\n                                    <div className=\"label\">\r\n                                        {language['button.export-modal.save-button.label']}\r\n                                    </div>\r\n                                </StyledActionIconButton>\r\n                            </div>\r\n                        </InternalPopover>\r\n                        <Dropdown overlay={<ResolutionPicker />}>\r\n                            <div className=\"resolution-picker\">\r\n                                {resolution[0]} × {resolution[1]}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                        rows={5}\r\n                    />}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['button.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown \r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\r\nimport {\r\n    isYgoprodeckImage,\r\n    // uploadToImgur,\r\n} from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom,\r\n        .import-empty {\r\n            font-size: var(--fs);\r\n        }\r\n        .import-custom {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .option-separator {\r\n            display: inline-block;\r\n            margin-right: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 * \r\n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    // try {\r\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                    //     if (imgurResponse.status !== 200) {\r\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                    //     }\r\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    // } catch (e) {\r\n                    //     /** Failing the upload process does not terminate the import process */\r\n                    //     console.error('Upload error:', e);\r\n                    //     notification.error({\r\n                    //         message: language['prompt.import.imgur.message'],\r\n                    //         description: language['prompt.import.imgur.description'],\r\n                    //     });\r\n                    // }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['button.import.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                        {mode === 'new' && <>\r\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                            <StyledActionIconButton\r\n                                className=\"import-empty\"\r\n                                onClick={() => {\r\n                                    startImport(getEmptyCard());\r\n                                    cleanup();\r\n                                }}\r\n                            >\r\n                                {language['button.empty.label']}\r\n                            </StyledActionIconButton>\r\n                        </>}\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl-E / ⌘-E</div>\r\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['button.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n    PendulumSizeMap,\r\n    OtherFinishTypeMap,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\r\n    label: labelKey ? dictionary[labelKey] : label,\r\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\r\n    value,\r\n}));\r\n\r\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative, supportFormat }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n                />\r\n                </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n        supportFormat,\r\n    }))\r\n    .filter(({ isCreative, supportFormat }) => (isCreative === false || isCreative === showCreativeOption) && supportFormat.includes(format));\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);\r\n\r\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation, StyledPopMarkdown } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '★',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '∅',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<StyledPopMarkdown>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </StyledPopMarkdown>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n};\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n            </CircularAnglePicker>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={8} xmin={-8}\r\n                ymax={8} ymin={-8}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}:&nbsp;<GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { InputNumber } from 'antd';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\r\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nconst MaterialColor = styled.div<{ $color: string }>`\r\n    border: var(--bw) solid var(--sub-level-2);\r\n    display: inline-block;\r\n    width: 2rem;\r\n    height: 1em;\r\n    border-radius: var(--br-sm);\r\n    cursor: pointer;\r\n    ${({ $color }) => `background-color: ${$color};`}\r\n`;\r\nconst EmbossControlContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: max-content max-content;\r\n    color: var(--color);\r\n    .emboss-control-title {\r\n        grid-column: -1 / 1;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n        padding: var(--spacing-sm);\r\n        padding-bottom: 0;\r\n    }\r\n    .emboss-control-left h2 {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .angle-picker-container {\r\n        text-align: center;\r\n    }\r\n    .emboss-control-right {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .emboss-control-left {\r\n        padding: var(--spacing-sm);\r\n        padding-top: 0;\r\n    }\r\n    .slider-label {\r\n        padding: 0;\r\n        border: none;\r\n    }\r\n    .vertical-angle-control {\r\n        grid-template-columns: max-content 60px 85px 12px;\r\n    }\r\n    .reset-button {\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n    .navigate-button {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n    .thickness-row {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        column-gap: var(--spacing-sm);\r\n        align-items: center;\r\n        .ant-slider {\r\n            height: unset;\r\n            margin-top: var(--spacing-xs);\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n    }\r\n`;\r\n\r\nconst VECTOR_VALUE_EPSILON = 0.01;\r\nconst DEFAULT_PITCH = 90;\r\nconst DEFAULT_YAW = 90;\r\nfunction hexToRgb(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return (result\r\n        ? [\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16)\r\n        ]\r\n        : [0, 0, 0]) as [number, number, number];\r\n  }\r\n\r\nexport type EmbossControllerRef = {\r\n    setValue: (value: {\r\n        color?: string,\r\n        pitch?: number,\r\n        yaw?: number,\r\n        thickness?: number,\r\n    }) => void,\r\n};\r\nexport type EmbossController = {\r\n    defaultPitch?: number,\r\n    defaultYaw?: number,\r\n    defaultThickness?: number,\r\n    materialColor?: string,\r\n    children?: React.ReactNode,\r\n    language: LanguageDataDictionary,\r\n    onColorTabNavigate: () => void,\r\n    onChange: (value: {\r\n        lightColorVec: [number, number, number],\r\n        lightAngleVec: [number, number, number],\r\n        yaw: number,\r\n        pitch: number,\r\n        thickness: number,\r\n    }) => void,\r\n};\r\nconst defaultValue = getDefaultNameStyle();\r\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\r\n    defaultPitch = defaultValue.embossPitch,\r\n    defaultYaw = defaultValue.embossYaw,\r\n    defaultThickness = defaultValue.embossThickness,\r\n    materialColor,\r\n    children,\r\n    language,\r\n    onColorTabNavigate,\r\n    onChange,\r\n}, ref) => {\r\n    const [requestUpdate, internalId] = useRefresh();\r\n    const [color, setColor] = useState('#ffffff');\r\n    const [thickness, setThickness] = useState(defaultThickness);\r\n    const [angle, setAngle] = useState(defaultYaw);\r\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\r\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\r\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\r\n    const currentThickness = useRef(defaultThickness);\r\n    /** Currently we only allow pure white light to avoid confusion for user. */\r\n    const [allowPickColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (internalId) setTimeout(() => {\r\n            if (relevant) {\r\n                const nextAngle = angleToVector(angle, verticalAngle);\r\n                const nextColor = hexToRgb(color);\r\n\r\n                if (\r\n                    nextColor[0] !== currentColorVec.current[0]\r\n                    || nextColor[1] !== currentColorVec.current[1]\r\n                    || nextColor[2] !== currentColorVec.current[2]\r\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\r\n                    || thickness !== currentThickness.current\r\n                ) {\r\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\r\n                }\r\n                currentColorVec.current = nextColor;\r\n                currentAngleVec.current = nextAngle;\r\n                currentThickness.current = thickness;\r\n            }\r\n        }, 150);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [internalId, color, angle, verticalAngle, thickness]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ color, pitch, yaw, thickness }) => {\r\n            if (color) setColor(color);\r\n            if (pitch) setVerticalAngle(pitch);\r\n            if (yaw) setAngle(yaw);\r\n            if (typeof thickness === 'number') setAngle(thickness);\r\n        }\r\n    }));\r\n\r\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\r\n        <div className=\"emboss-control-title\">\r\n            {children}\r\n        </div>\r\n        <div className=\"emboss-control-left\">\r\n            <h2>\r\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\r\n                    className=\"material-color\"\r\n                    onClick={onColorTabNavigate}\r\n                    $color={materialColor}\r\n                />\r\n            </h2>\r\n            {language['input.name-style.emboss.color.alert'](<span key=\"color-navigate\" className=\"navigate-button\" onClick={onColorTabNavigate}>\r\n                {language['input.name-style.color.label']}\r\n            </span>)}\r\n            <h2 className=\"thickness-row\">\r\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\r\n                <GuardedSlider\r\n                    value={thickness}\r\n                    min={0}\r\n                    max={4}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setThickness(value);\r\n                            requestUpdate();\r\n                        }\r\n                    }}\r\n                />\r\n            </h2>\r\n            <h2>\r\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\r\n                    className=\"reset-button\"\r\n                    onClick={() => {\r\n                        setVerticalAngle(DEFAULT_PITCH);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </h2>\r\n            <CombinedSliderContainer className=\"vertical-angle-control\">\r\n                <div className=\"slider-label\" />\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={-90}\r\n                    max={90}\r\n                    onChange={value => {\r\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\r\n                        requestUpdate();\r\n                    }}\r\n                    value={verticalAngle}\r\n                />\r\n                <GuardedSlider\r\n                    min={-90}\r\n                    max={90}\r\n                    value={verticalAngle}\r\n                    onChange={value => {\r\n                        setVerticalAngle(value);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>\r\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                    setAngle(DEFAULT_YAW);\r\n                    requestUpdate();\r\n                }}\r\n            /></h2>\r\n            <div className=\"horizontal-angle-contorl\">\r\n                <CircularAnglePicker\r\n                    angle={angle}\r\n                    size={120}\r\n                    setAngle={angle => {\r\n                        setAngle(angle);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        {allowPickColor && <div className=\"emboss-control-right\">\r\n            <h2>Light color</h2>\r\n            <ChromePicker\r\n                styles={{\r\n                    default: {\r\n                        picker: {\r\n                            color: '#000000',\r\n                            background: 'var(--main-level-3)',\r\n                            boxShadow: 'none',\r\n                        },\r\n                        body: {\r\n                            padding: 'var(--spacing) var(--spacing)',\r\n                        }\r\n                    },\r\n                }}\r\n                disableAlpha={true}\r\n                color={color}\r\n                onChange={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n                onChangeComplete={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n            />\r\n        </div>}\r\n    </EmbossControlContainer>;\r\n});","import { useEffect, useState } from 'react';\r\nimport { ChromePicker, CompactPicker } from 'react-color';\r\nimport { DefaultColorList } from 'src/model';\r\nimport styled from 'styled-components';\r\n\r\nconst TextColorPickerContainer = styled.div`\r\n    .chrome-picker {\r\n        /** Target color format swapper in picker's body */\r\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\r\n            display: none !important;\r\n        }\r\n    }\r\n`;\r\nexport type TextColorPicker = {\r\n    color: string,\r\n    onChange: (color: string) => void,\r\n};\r\nexport const TextColorPicker = ({\r\n    color,\r\n    onChange,\r\n}: TextColorPicker) => {\r\n    const [internalColor, setInternalColor] = useState(color);\r\n\r\n    useEffect(() => {\r\n        setInternalColor(color);\r\n    }, [color]);\r\n\r\n    return <TextColorPickerContainer>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                        padding: 'var(--spacing-sm) var(--spacing)',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    },\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => {\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n    </TextColorPickerContainer>;\r\n};","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown, PopoverButton } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\r\nimport { TextColorPicker } from './text-color-picker';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        requestUpdateCustomStyle();\r\n    }, [requestUpdateCustomStyle]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n                embossPitch, embossYaw, embossThickness,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n            embossControllerRef.current?.setValue({\r\n                pitch: embossPitch,\r\n                yaw: embossYaw,\r\n                thickness: embossThickness,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        hasEmboss, embossPitch, embossYaw, embossThickness,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n\r\n    const colorPickerButtonId = 'color-picker';\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <TextColorPicker\r\n                                        color={fillStyle}\r\n                                        onChange={hexColor => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            id={colorPickerButtonId}\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom}\r\n                            className=\"picker-dropdown color-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className=\"custom-style-picker\">\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.emboss.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\r\n                                    language={language}\r\n                                    defaultPitch={embossPitch}\r\n                                    defaultYaw={embossYaw}\r\n                                    defaultThickness={embossThickness}\r\n                                    materialColor={fillStyle}\r\n                                    onColorTabNavigate={() => {\r\n                                        document.getElementById(colorPickerButtonId)?.click();\r\n                                    }}\r\n                                    onChange={({ thickness, yaw, pitch }) => {\r\n                                        setValue(cur => ({ ...cur,\r\n                                            embossPitch: pitch,\r\n                                            embossYaw: yaw,\r\n                                            embossThickness: thickness,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                >\r\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\r\n                                </EmbossController>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasEmboss}\r\n                            className=\"picker-dropdown emboss-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.emboss.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrainRef = {\r\n    changeFrame: (frameValue: number | string) => void,\r\n};\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n    onPasswordChange: (value: string) => void,\r\n    onStatChange: (atk: string, def: string) => void,\r\n};\r\nexport const FrameTrain = forwardRef<FrameTrainRef, FrameTrain>(({\r\n    onSTFrameChange,\r\n    onPasswordChange,\r\n    onStatChange,\r\n}, ref) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                attribute,\r\n                format,\r\n                password,\r\n                star,\r\n                atk,\r\n                def,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const nextTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            const nextPassword = nextFrame === 'token'\r\n                ? passwordSentenceMap[format]\r\n                : password;\r\n            const nextAtk = willRemoveStat ? '' : atk;\r\n            const nextDef = willRemoveStat ? '' : def;\r\n            const nextStar = nextFrame === 'token'\r\n                ? 0\r\n                : star;\r\n\r\n            onPasswordChange(nextPassword);\r\n            if (willBecomeST) {\r\n                onSTFrameChange(nextTypeAbility);\r\n            }\r\n            if (willRemoveStat) {\r\n                onStatChange(nextAtk, nextDef);\r\n            }\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: nextFrame === 'token'\r\n                    ? NO_ATTRIBUTE\r\n                    : willBecomeST\r\n                        ? `${nextFrame}`.toUpperCase()\r\n                        : attribute,\r\n                star: nextStar,\r\n                typeAbility: nextTypeAbility,\r\n                password: nextPassword,\r\n                atk: nextAtk,\r\n                def: nextDef,\r\n            };\r\n        });\r\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        changeFrame,\r\n    }));\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n});","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props, tooltip } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n                const children = <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n\r\n                return tooltip\r\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\r\n                    : children;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: 375px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum, pendulumSize,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        user-select: none;\r\n        &:hover {\r\n            box-shadow: 0 0 2px 0 #222222;\r\n        }\r\n        .background-preview-callback-passer {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .background-type-picker {\r\n            .radio-train-input-group {\r\n                display: grid;\r\n            }\r\n            .ant-radio-button-wrapper {\r\n                border-left: var(--bw) solid var(--sub-level-1);\r\n            }\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background,\r\n            backgroundData,\r\n            backgroundSource,\r\n            backgroundType,\r\n            hasBackground,\r\n            isPendulum,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <Checkbox\r\n                className=\"art-frame\"\r\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                checked={opacity.boundless}\r\n            >\r\n                {language['input.opacity.boundless.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <CombinedSliderContainer key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <div className=\"slider-label\">\r\n                    {type === 'body' && <Popover\r\n                        visible={backgroundInputVisible}\r\n                        destroyTooltipOnHide={false}\r\n                        trigger={['click']}\r\n                        onVisibleChange={setBackgroundInputVisible}\r\n                        overlayClassName={[\r\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                            backgroundInputVisible ? 'picker-visible' : '',\r\n                            backgroundInputHidden ? 'picker-hidden' : '',\r\n                        ].join(' ')}\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledBaseFillPickerContainer\r\n                                className={[\r\n                                    'custom-style-picker',\r\n                                    noBackground ? 'overlay-no-background-image' : ''\r\n                                ].join(' ')}\r\n                            >\r\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                                    <Checkbox\r\n                                        checked={hasBackground}\r\n                                        onChange={e => {\r\n                                            changeHasBackground(e);\r\n                                        }}\r\n                                    >{language['input.background.toggle-label']}</Checkbox>\r\n                                    <br />\r\n                                    <i>{language['input.background.description']}</i>\r\n                                </h3>\r\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                                    <BackgroundInputGroup\r\n                                        ref={backgroundInputRef}\r\n                                        receivingCanvas={receivingCanvas}\r\n                                        onSourceLoaded={onSourceLoaded}\r\n                                        onTainted={onTainted}\r\n                                        onCropChange={onCropChange}\r\n                                        backgroundColor={opacity.baseFill}\r\n                                    >\r\n                                        <div className=\"layout-picker-panel\">\r\n                                            <div className=\"layout-picker-subpanel color-section\">\r\n                                                <h2>{language['input.background-color.label']}</h2>\r\n                                                <CompactPicker\r\n                                                    colors={DefaultColorList}\r\n                                                    color={opacity.baseFill}\r\n                                                    onChangeComplete={color => {\r\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                                <h2>{language['input.background-type.label']}</h2>\r\n                                                <RadioTrain\r\n                                                    className=\"background-type-picker\"\r\n                                                    onChange={changeBackgroundType}\r\n                                                    optionList={getBackgroundTypeList({\r\n                                                        fit: language['input.background-type.fit.label'],\r\n                                                        full: language['input.background-type.full.label'],\r\n                                                        frame: language['input.background-type.frame.label'],\r\n                                                    })}\r\n                                                    value={backgroundType}\r\n                                                />\r\n                                            </div>}\r\n                                        </div>\r\n                                    </BackgroundInputGroup>\r\n                                </div>\r\n                            </StyledBaseFillPickerContainer>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <div\r\n                            className=\"background-preview\"\r\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                        >\r\n                            <Tooltip overlay={language['input.background.toolip']}>\r\n                                <div className=\"background-preview-callback-passer\">\r\n                                    {hasBackground\r\n                                        ? background\r\n                                            ? <img\r\n                                                className=\"background-image-preview\"\r\n                                                src={backgroundSource === 'online'\r\n                                                    ? background\r\n                                                    : backgroundData}\r\n                                                alt=\"Background\"\r\n                                            />\r\n                                            : null\r\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                                </div>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Popover>}\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </div>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { Input, Popover } from 'antd';\r\nimport { RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeList, IconTypeMap } from 'src/model';\r\n\r\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 7rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const autoIconType = getCardIconFromFrame(frame);\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? IconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\r\n        : IconTypeMap[cardIcon];\r\n    const iconDropdownText = language[iconTypeData.labelKey];\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledIconDropdown>\r\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\r\n                    return <StyledDropdown.Option key={value}\r\n                        className={value === cardIcon ? 'menu-active' : ''}\r\n                        onClick={() => changeCardIcon(value)}\r\n                    >\r\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                    </StyledDropdown.Option>;\r\n                })}\r\n            </StyledIconDropdown>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return cardIcon === 'auto' && autoIconType === 'none'\r\n        ? showCreativeOption\r\n            ? <RadioTrain\r\n                className=\"fill-input-train\"\r\n                value={cardIcon}\r\n                onChange={changeCardIcon}\r\n                optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\r\n                    return {\r\n                        label: icon ?? <CloseCircleOutlined />,\r\n                        value,\r\n                        tooltipProps: {\r\n                            title: language[fullLabelKey],\r\n                        },\r\n                    };\r\n                })}\r\n            >\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : null\r\n        : iconTypeData.value === 'st'\r\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : <StyledCheckboxStarTrain\r\n                className=\"checkbox-star-train\"\r\n                value={star}\r\n                onChange={changeStar}\r\n                optionList={StarButtonList}\r\n                strict={true}\r\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                    <Input\r\n                        className=\"custom-star-input\"\r\n                        value={typeof star === 'number' ? '' : star}\r\n                        allowClear\r\n                        onChange={changeStar}\r\n                        placeholder={language['input.icon-type.custom.placeholder']}\r\n                    />\r\n                    <RadioTrain\r\n                        value={starAlignment}\r\n                        onChange={changeStarAlignment}\r\n                        optionList={[\r\n                            {\r\n                                value: 'auto',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                                label: <CloseCircleOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'left',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                                label: <AlignLeftOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'center',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                                label: <AlignCenterOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'right',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                                label: <AlignRightOutlined />,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>}\r\n            >\r\n                {DropdownChildren}\r\n            </StyledCheckboxStarTrain>;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    holdingShift: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': {\r\n            if (holdingShift) {\r\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 4 : 5;\r\n            } else {\r\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 2 : 3;\r\n            }\r\n            break;\r\n        }\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`card-textarea ${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        autoSize={{\r\n            minRows: 9,\r\n        }}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    position: relative;\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 480px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .frame-auto-checkbox {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .checkbox-disabled {\r\n        .ant-checkbox {\r\n            display: none;\r\n        }\r\n        visibility: hidden; // Avoid collapsing\r\n    }\r\n    .frame-part-name {\r\n        position: absolute;\r\n        padding: 0 var(--spacing);\r\n        top: calc(-1 * var(--spacing-xs));\r\n        right: calc(-1 * var(--spacing-xs));\r\n        border-radius: 0 0 0 var(--br-lg);\r\n        background-color: var(--main-level-4);\r\n        border-left: var(--bw) solid var(--sub-level-4);\r\n        border-bottom: var(--bw) solid var(--sub-level-4);\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { copyrightMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format },\r\n        getUpdater,\r\n    }) => ({\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                    <IconButton\r\n                    onClick={() => {}}\r\n                        Icon={UnorderedListOutlined}\r\n                    />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain, StyledDropdown, StyledDropdownLabel } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\r\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { notification, Popover } from 'antd';\r\nimport { mergeClass } from 'src/util';\r\n\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    .ant-input-group-addon {\r\n        flex: 0 0 auto;\r\n        text-align: left;\r\n    }\r\n    .radio-train-input-group .ant-radio-button-wrapper {\r\n        min-width: unset;\r\n    }\r\n`;\r\nconst FinishLabel = styled(StyledDropdown.Option)`\r\n    display: grid;\r\n    grid-template-columns: 30px 1fr;\r\n    column-gap: var(--spacing-xs);\r\n    .tag {\r\n        background: var(--sub-level-2);\r\n        color: var(--color-contrast);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    &.default {\r\n        .tag {\r\n            background: var(--sub-level-4);\r\n        }\r\n    }\r\n`;\r\n\r\ntype OtherFinishPicker = {\r\n    finishValueList: [...OtherFinish, art: string],\r\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\r\n    language: LanguageDataDictionary,\r\n    showCreativeOption: boolean,\r\n};\r\nconst OtherFinishPicker = ({\r\n    finishValueList,\r\n    changeFinish,\r\n    language,\r\n    showCreativeOption,\r\n}: OtherFinishPicker) => {\r\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\r\n    const valueMap = {\r\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[0],\r\n        [OtherFinishTypeMap['icon'].key]: finishValueList[1],\r\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[2],\r\n        [OtherFinishTypeMap['art'].key]: finishValueList[3],\r\n    };\r\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\r\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\r\n\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined /></>\r\n        : language[OtherFinishTypeMap[selectedType].labelKey];\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledDropdown.Container>\r\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\r\n                {finishList.map(({ label, value }) => {\r\n                    return <FinishLabel key={value}\r\n                        className={mergeClass(\r\n                            valueMap[value] === 'normal' ? 'default' : '',\r\n                            selectedType === value ? 'menu-active' : '',\r\n                        )}\r\n                        onClick={() => {\r\n                            setSelectedType(value);\r\n                        }}\r\n                    >\r\n                        <div className=\"value\">\r\n                            <div className=\"tag\">{valueMap[value] === 'normal' ? 'Auto' : valueMap[value]}</div>\r\n                        </div>\r\n                        <div className=\"label\">{label}</div>\r\n                    </FinishLabel>;\r\n                })}\r\n            </StyledDropdown.Container>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n\r\n    return <StyledImageRadioTrain\r\n        className=\"art-finish-checkbox fill-input-train\"\r\n        value={valueMap[selectedType]}\r\n        onChange={value => {\r\n            const nextValueMap = { ...valueMap };\r\n            nextValueMap[selectedType] = `${value}`;\r\n\r\n            changeFinish(nextValueMap);\r\n        }}\r\n        optionList={ArtFinishButtonList}\r\n    >\r\n        {IconDropdown}\r\n    </StyledImageRadioTrain>;\r\n};\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    showCreativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    showCreativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish, otherFinish,\r\n            linkMap,\r\n            isPendulum, pendulumSize,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <OtherFinishPicker\r\n                finishValueList={[...otherFinish, artFinish]}\r\n                changeFinish={finishMap => {\r\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\r\n                    changeOtherFinish([\r\n                        finishMap[OtherFinishTypeMap['attribute'].key],\r\n                        finishMap[OtherFinishTypeMap['icon'].key],\r\n                        finishMap[OtherFinishTypeMap['sticker'].key],\r\n                    ]);\r\n                }}\r\n                language={language}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n            : null\r\n        }\r\n    >\r\n        <div>\r\n            <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\r\n                active={isLink === true}\r\n                defaultValue={linkMap}\r\n                onChange={changeLinkMap}\r\n                onStatusChange={changeLinkStatus}\r\n            />\r\n        </div>\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { getNavigationProps, mergeClass, resolveFrameStyle } from 'src/util';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { getFrameButtonList } from '../const';\r\nimport { Button, Checkbox } from 'antd';\r\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { CanvasConst, FrameInfoMap, FramePositionMap } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\nconst FrameLayoutContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-xs);\r\n    ${StyledPendulumFrameContainer} {\r\n        border: none;\r\n        box-shadow: none;\r\n        padding: 0;\r\n    }\r\n    .visual-preview-container {\r\n        color: var(--color-heavy);\r\n        width: 110px; // Alignment\r\n        text-align: center;\r\n        label {\r\n            padding-bottom: var(--spacing-xs);\r\n        }\r\n        .frame-info-block {\r\n\t\t\theight: 30px; // Alignment\r\n\t\t\tline-height: 28px; // Alignment with border 1px\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background-color: var(--main-level-1);\r\n            margin-bottom: var(--spacing-xs);\r\n            cursor: pointer;\r\n            .frame-info-block-label {\r\n                padding: 0 var(--spacing-xs);\r\n            }\r\n            &.active {\r\n                border: var(--bw) dashed var(--main-level-2);\r\n            }\r\n            &:hover {\r\n                border: var(--bw) solid var(--main-level-2);\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst CardLayoutContainer = styled.div<{ $width: number, $height: number, $hoverable: boolean }>`\r\n    --layout-width: ${props => props.$width}px;\r\n    --layout-height: ${props => props.$height}px;\r\n    display: inline-block;\r\n    width: var(--layout-width);\r\n    height: var(--layout-height);\r\n    box-shadow: 0 0 2px 0 #202020;\r\n    position: relative;\r\n    background: var(--main-level-2);\r\n    .overlay-patch {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n    }\r\n    .card-layout {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        &.unmodified .overlay-patch {\r\n            background: repeating-linear-gradient(\r\n                45deg,\r\n                #44444466,\r\n                #44444466 8px,\r\n                #00000000 8px,\r\n                #00000000 12px\r\n            );\r\n        }\r\n    }\r\n    .partial-layout {\r\n        background-clip: padding-box;\r\n        ${props => props.$hoverable\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-1);\r\n                &.active {\r\n                    border: var(--bw) dashed var(--main-level-1);\r\n                }\r\n                &:hover {\r\n                    border: var(--bw) dashed var(--main-level-2);\r\n                }\r\n            `\r\n            : ''}\r\n    }\r\n    .float-layout {\r\n        ${props => props.$hoverable\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-1);\r\n                &.active {\r\n                    border: var(--bw) dashed var(--main-level-2);\r\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\r\n                }\r\n                &:hover {\r\n                    border: var(--bw) solid var(--main-level-2);\r\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\r\n                }\r\n            `\r\n            : ''}\r\n    }\r\n    /** For Zarc's gradient */\r\n    .partial-layout {\r\n        background-size: 200%;\r\n    }\r\n    .top-left {\r\n        width: 50%; height: 50%;\r\n        top: 0; left: 0;\r\n    }\r\n    .top-right {\r\n        width: 50%; height: 50%;\r\n        top: 0; left: 50%;\r\n        background-position-x: 100%;\r\n    }\r\n    .bottom-left {\r\n        width: 50%; height: 50%;\r\n        top: 50%; left: 0;\r\n    }\r\n    .bottom-right {\r\n        width: 50%; height: 50%;\r\n        top: 50%; left: 50%;\r\n        background-position-x: 100%;\r\n    }\r\n    /** Background width is slightly reduced to help active bottom frames easier */\r\n    .effect-background {\r\n        width: 80%;\r\n        height: 20%;\r\n        bottom: 5%;\r\n        left: 10%;\r\n        background-size: 125%;\r\n        background-position-x: 50%;\r\n    }\r\n    .pendulum-effect-background {\r\n        width: 80%;\r\n        height: 13%;\r\n        bottom: 28%;\r\n        left: 10%;\r\n        background-size: 125%;\r\n        background-position-x: 50%;\r\n    }\r\n`;\r\n\r\nexport type CardLayoutPreview = {\r\n    width: number,\r\n    height: number,\r\n    baseLayoutState?: Record<string, string | undefined>,\r\n    resolvedLayoutState: Record<string, string | undefined>,\r\n    isPendulum: boolean,\r\n    activeLayout?: string,\r\n    onClick?: (key: string) => void,\r\n};\r\nexport const CardLayoutPreview = ({\r\n    width,\r\n    height,\r\n    baseLayoutState,\r\n    resolvedLayoutState,\r\n    isPendulum,\r\n    activeLayout,\r\n    onClick,\r\n}: CardLayoutPreview) => {\r\n    return <CardLayoutContainer $width={width} $height={height} $hoverable={!!onClick}>\r\n        {[\r\n            { key: 'topLeftFrame', className: 'card-layout partial-layout top-left' },\r\n            { key: 'topRightFrame', className: 'card-layout partial-layout top-right' },\r\n            { key: 'bottomLeftFrame', className: 'card-layout partial-layout bottom-left' },\r\n            { key: 'bottomRightFrame', className: 'card-layout partial-layout bottom-right' },\r\n            { key: 'effectBackground', className: 'card-layout float-layout effect-background' },\r\n            { key: 'pendulumEffectBackground', className: 'card-layout float-layout pendulum-effect-background' },\r\n        ].map(({ className, key }) => {\r\n            const frame = resolvedLayoutState[key];\r\n\r\n            if (!frame) return null;\r\n            if (!isPendulum && key === 'pendulumEffectBackground') return null;\r\n            const {\r\n                labelBackgroundColor,\r\n                labelBackgroundImage,\r\n            } = FrameInfoMap[frame];\r\n            return <div key={key}\r\n                tabIndex={0}\r\n                className={`${className} ${key === activeLayout ? 'active' : ''} ${baseLayoutState?.[key] === 'auto' ? 'unmodified' : ''}`}\r\n                onClick={() => onClick?.(key)}\r\n                style={labelBackgroundImage\r\n                    ? { backgroundImage: labelBackgroundImage }\r\n                    : { backgroundColor: labelBackgroundColor }\r\n                }\r\n            >\r\n                <div\r\n                    className=\"overlay-patch\"\r\n                />\r\n            </div>;\r\n        })}\r\n    </CardLayoutContainer>;\r\n};\r\n\r\ntype FramelayoutPickerRef = {\r\n    focus: () => void,\r\n};\r\nexport type FramelayoutPicker = {\r\n    isPendulum: boolean,\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onFrameChange: (frame: string) => void,\r\n    onCancel: () => void,\r\n};\r\nexport const FrameLayoutPicker = forwardRef<FramelayoutPickerRef, FramelayoutPicker>(({\r\n    frameList,\r\n    onFrameChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground, pendulumEffectBackground,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            frame,\r\n            leftFrame, rightFrame,\r\n            pendulumFrame, pendulumRightFrame,\r\n            effectStyle,\r\n            pendulumStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const recentCustomPendulumFrame = useRef({\r\n        topLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        topRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        bottomLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        bottomRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        effectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        pendulumEffectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n    });\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n    const [activeLayout, setActiveLayout] = useState('frame');\r\n\r\n    useEffect(() => {\r\n        /** Avoid confusion */\r\n        if (activeLayout === 'pendulumEffectBackground' && !isPendulum) setActiveLayout('frame');\r\n    }, [activeLayout, isPendulum]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => inputRef.current?.focus(),\r\n    }));\r\n\r\n    const changeBottomLeftFrame = useMemo(() => getUpdater('pendulumFrame'), [getUpdater]);\r\n    const changeBottomRightFrame = useMemo(() => getUpdater('pendulumRightFrame'), [getUpdater]);\r\n    const changeTopLeftFrame = useMemo(() => getUpdater('leftFrame'), [getUpdater]);\r\n    const changeTopRightFrame = useMemo(() => getUpdater('rightFrame'), [getUpdater]);\r\n    const changeEffectBackground = (background: string) => setCard(currentCard => {\r\n        const nextEffectStyle = { ...currentCard.effectStyle };\r\n        nextEffectStyle.background = background;\r\n\r\n        return {\r\n            ...currentCard,\r\n            effectStyle: nextEffectStyle,\r\n        };\r\n    });\r\n    const changePendulumEffectBackground = (background: string) => setCard(currentCard => {\r\n        const nextPendulumEffectStyle = { ...currentCard.pendulumStyle };\r\n        nextPendulumEffectStyle.background = background;\r\n\r\n        return {\r\n            ...currentCard,\r\n            pendulumStyle: nextPendulumEffectStyle,\r\n        };\r\n    });\r\n    const changeLayout = (layoutValue: string) => {\r\n        if (activeLayout === 'bottomLeftFrame') changeBottomLeftFrame(layoutValue);\r\n        if (activeLayout === 'bottomRightFrame') changeBottomRightFrame(layoutValue);\r\n        if (activeLayout === 'topLeftFrame') changeTopLeftFrame(layoutValue);\r\n        if (activeLayout === 'topRightFrame') changeTopRightFrame(layoutValue);\r\n        if (activeLayout === 'effectBackground') changeEffectBackground(layoutValue);\r\n        if (activeLayout === 'pendulumEffectBackground') changePendulumEffectBackground(layoutValue);\r\n    };\r\n\r\n    const layoutState = {\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    };\r\n    const activeFrame = layoutState[activeLayout];\r\n    const resolvedLayoutStyle = resolveFrameStyle(layoutState, isPendulum);\r\n    return <FrameLayoutContainer>\r\n        <div className=\"visual-preview-container\">\r\n            <label>{language['input.advanced-frame.main.label']}</label>\r\n            <FrameInfoBlock\r\n                className={activeLayout === 'frame' ? 'active' : ''}\r\n                {...FrameInfoMap[frame]}\r\n                onClick={() => setActiveLayout('frame')}\r\n            />\r\n            <label>{language['input.advanced-frame.detailed.label']}</label>\r\n            <CardLayoutPreview\r\n                width={Math.round(width / 20) * 2}\r\n                height={Math.round(height / 20) * 2}\r\n                isPendulum={isPendulum}\r\n                baseLayoutState={layoutState}\r\n                resolvedLayoutState={resolvedLayoutStyle}\r\n                activeLayout={activeLayout}\r\n                onClick={key => setActiveLayout(key)}\r\n            />\r\n            <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    changeBottomLeftFrame('auto');\r\n                    changeBottomRightFrame('auto');\r\n                    changeTopLeftFrame('auto');\r\n                    changeTopRightFrame('auto');\r\n                    changeEffectBackground('auto');\r\n                    changePendulumEffectBackground('auto');\r\n                }}\r\n            >\r\n                {language['button.reset.label']}\r\n            </Button>\r\n        </div>\r\n        <div>\r\n            <StyledPendulumFrameContainer\r\n                className=\"pendulum-frame-picker\"\r\n                {...getNavigationProps({\r\n                    stopPropagation: true,\r\n                    optionLength: frameList.length,\r\n                    setFocus,\r\n                    onTrigger: () => {\r\n                        if (focus >= 0) changeLayout(frameList[focus].value);\r\n                    },\r\n                    onCancel,\r\n                })}\r\n            >\r\n                <div className=\"frame-part-name\">\r\n                    {language[FramePositionMap[activeLayout]?.labelKey]}\r\n                </div>\r\n                <Checkbox ref={inputRef}\r\n                    className={mergeClass('frame-auto-checkbox', activeLayout === 'frame' ? 'checkbox-disabled' : '')}\r\n                    checked={activeFrame === 'auto'}\r\n                    disabled={activeLayout === 'frame'}\r\n                    onChange={e => {\r\n                        changeLayout(e.target.checked ? 'auto' : (recentCustomPendulumFrame.current[activeLayout] ?? 'auto'));\r\n                    }}\r\n                >{language['input.frame.auto']}</Checkbox>\r\n                <RadioTrain\r\n                    className=\"frame-radio\"\r\n                    value={activeFrame}\r\n                    onChange={value => {\r\n                        if (activeLayout === 'frame') onFrameChange(value);\r\n                        else changeLayout(value);\r\n                    }}\r\n                    optionList={frameList}\r\n                />\r\n            </StyledPendulumFrameContainer>\r\n        </div>\r\n    </FrameLayoutContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { PopoverButton, StyledDropdown } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CanvasConst, DEFAULT_PENDULUM_SIZE, PendulumSizeMap } from 'src/model';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { resolveFrameStyle } from 'src/util';\r\nimport { CardLayoutPreview, FramelayoutPicker, FrameLayoutPicker } from '../frame-layout-picker';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-4);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n    .anticon {\r\n        align-content: center;\r\n        padding: 0 var(--spacing-xs);\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .pendulum-option {\r\n        display: grid;\r\n        grid-template-columns: var(--width-label) 1fr;\r\n        align-items: center;\r\n        .pendulum-frame-input,\r\n        .pendulum-checkbox {\r\n            flex: 0 0 auto;\r\n        }\r\n        .mirror-scale {\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            align-items: center;\r\n        }\r\n    }\r\n    .joined-row {\r\n        position: relative;\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .pendulum-size {\r\n            display: inline-block;\r\n            line-height: 1.15; // Alignment\r\n            margin-right: var(--spacing);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    softMode: boolean,\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n}\r\n& Pick<CardTextInput, 'onTakePicker'>\r\n& Pick<FramelayoutPicker, 'onFrameChange'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    softMode,\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n    onFrameChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground, pendulumEffectBackground,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            frame,\r\n            leftFrame, rightFrame,\r\n            pendulumFrame, pendulumRightFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n            effectStyle,\r\n            pendulumStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const {\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { mirrorPendulumScale },\r\n        updateSetting,\r\n    }) => ({\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n        };\r\n    });\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const layoutState = {\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    };\r\n    const advanceLayoutPreviewHeight = 32; // Alignment with frame input\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            <div className=\"pendulum-option-container\">\r\n                {showCreativeOption && <Popover\r\n                    visible={frameDropdownVisible}\r\n                    onVisibleChange={setFrameDropdownVisibleVisible}\r\n                    trigger={['click']}\r\n                    placement=\"bottom\"\r\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                    content={<div className=\"overlay-event-absorber\">\r\n                        <FrameLayoutPicker\r\n                            isPendulum={isPendulum}\r\n                            frameList={frameList}\r\n                            pendulumFrame={pendulumFrame}\r\n                            onFrameChange={onFrameChange}\r\n                            onCancel={() => {\r\n                                setFrameDropdownVisibleVisible(false);\r\n                                containerRef.current?.focus();\r\n                            }}\r\n                        />\r\n                    </div>}\r\n                >\r\n                    <StyledPendulumFrameInputContainer ref={containerRef}\r\n                        className=\"pendulum-frame-input\"\r\n                        tabIndex={0}\r\n                        onKeyDown={e => {\r\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                                setFrameDropdownVisibleVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    bottomFrameOptionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        }}\r\n                    >\r\n                        <span className=\"pendulum-frame-label\">\r\n                            {language['input.advanced-frame.label']}\r\n                        </span>\r\n                        <CardLayoutPreview\r\n                            width={advanceLayoutPreviewHeight * width / height}\r\n                            height={advanceLayoutPreviewHeight}\r\n                            isPendulum={isPendulum}\r\n                            resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\r\n                        />\r\n                        <CaretDownOutlined />\r\n                    </StyledPendulumFrameInputContainer>\r\n                </Popover>}\r\n                {(isPendulum && showCreativeOption)\r\n                    && <div className=\"pendulum-size\">\r\n                    <Popover key=\"color-picker\"\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {pendulumSizeList.map(({ value, label }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={pendulumSize === value ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            onPendulumSizeChange(value);\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={softMode}\r\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\r\n                        >\r\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                </div>}\r\n                {(isPendulum && showCreativeOption)\r\n                    && <Checkbox\r\n                        className=\"mirror-scale\"\r\n                        onChange={e => {\r\n                            const willMirror = e.target.checked;\r\n\r\n                            updateSetting({ mirrorPendulumScale: willMirror });\r\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\r\n                        }}\r\n                        checked={mirrorPendulumScale}\r\n                    >\r\n                        {language['input.mirror-scale.label']}\r\n                    </Checkbox>}\r\n            </div>\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (mirrorPendulumScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    autoSize={{\r\n                        minRows: 5,\r\n                    }}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst StyledPostPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr max-content;\r\n    grid-template-areas:\r\n        \"type-input input-helper\"\r\n        \"condense-input help-button\";\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .input-kanji-helper {\r\n        grid-area: input-helper;\r\n    }\r\n    .type-ability-input {\r\n        grid-area: type-input;\r\n    }\r\n    .condense-input {\r\n        grid-area: condense-input;\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n    &.variant-tcg {\r\n        .type-ability-input {\r\n            grid-column: span 2;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: { typeAbility?: string[] }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon].value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\r\n        <CardTextInput ref={typeAbilityInputRef}\r\n            addonBefore={language[typeLabel]}\r\n            id=\"type-ability\"\r\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n            onChange={changeTypeAbility}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        {isOCG && <Tooltip\r\n            overlay={language['input.furigana-helper.tooltip']}\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n        >\r\n            <Checkbox\r\n                className=\"input-kanji-helper\"\r\n                onChange={toggleFuriganaHelper}\r\n                checked={furiganaHelper}\r\n            >\r\n                {language['input.furigana-helper.label']}\r\n            </Checkbox>\r\n        </Tooltip>}\r\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n            optionList={CondenseThresholdButtonList}\r\n        >\r\n            <span>\r\n                {language['input.condense.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </span>\r\n        </RadioTrain>\r\n        <FormattingHelpDrawer />\r\n    </StyledPostPendulumInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { RadioTrain } from 'src/component';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-block {\r\n        height: 17px;\r\n        width: 17px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        outline: none;\r\n        border: var(--bw) solid var(--sub-level-4);\r\n        &.static-block {\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        }\r\n    }\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        gap: 3px;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        padding-left: 3px;\r\n        input {\r\n            width: 58px;\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\ntype InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nconst InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                /** Contrast formula from google \\ :v / */\r\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\r\n                    ? '#000000'\r\n                    : '#FFFFFF';\r\n\r\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\r\n                    {internalValue.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={currentText}\r\n                onChange={e => {\r\n                    setCurrentText(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker,\r\n        h2.font-style-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\r\n                                <h2 className=\"font-style-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={fontStyle}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\r\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\r\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\r\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n    StyledPopMarkdown,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getAttributeList,\r\n    getFinishList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain, FrameTrainRef } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isPendulum,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const frameTrainRef = useRef<FrameTrainRef>(null);\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n    const finishList = useMemo(() => getFinishList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={finishList}\r\n            >\r\n                <span>{language['input.finish.label']}</span>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain ref={frameTrainRef}\r\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\r\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\r\n            onStatChange={(atk, def) => footerInputGroupRef.current?.setValue({ atk, def })}\r\n        />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <RadioTrain\r\n                    className=\"fill-input-train attribute-input\"\r\n                    value={attribute}\r\n                    onChange={changeAttribute}\r\n                    optionList={attributeList}\r\n                >\r\n                    <span>{language['input.attribute.label']}</span>\r\n                </RadioTrain>\r\n\r\n                {(isPendulum || showCreativeOption)\r\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                        showCreativeOption={showCreativeOption}\r\n                        showExtraDecorativeOption={showExtraDecorativeOption}\r\n                        softMode={reduceMotionColor}\r\n                        onTakePicker={setPickerTarget}\r\n                        onFrameChange={frame => frameTrainRef.current.changeFrame(frame)}\r\n                    />}\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showCreativeOption={showCreativeOption}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkOffsetList,\r\n    LinkPendulumIndentList,\r\n    LinkPendulumOffsetList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName, resolveFrameStyle } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1.25;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 50%;\r\n            height: 50%;\r\n            position: absolute;\r\n            &.top-left-frame {\r\n                top: 0;\r\n                left: 0;\r\n            }\r\n            &.top-right-frame {\r\n                top: 0;\r\n                left: 50%;\r\n            }\r\n            &.bottom-left-frame {\r\n                top: 50%;\r\n                left: 0;\r\n            }\r\n            &.bottom-right-frame {\r\n                top: 50%;\r\n                left: 50%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            left: 21px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #222222;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    language,\r\n    onDuplicate,\r\n    onSelect,\r\n    onDelete,\r\n    // onDownload,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artData,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundData,\r\n        backgroundFit,\r\n        backgroundSource,\r\n        backgroundType,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        opacity,\r\n        pendulumFrame, pendulumRightFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n        effectStyle,\r\n        pendulumStyle,\r\n    } = card;\r\n    const {\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n    } = resolveFrameStyle({\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n    }, isPendulum);\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedCardArt = artSource === 'offline'\r\n        ? !art\r\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\r\n            : artData\r\n        : art;\r\n    const normalizedBackgroundArt = backgroundSource === 'offline'\r\n        ? !background\r\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\r\n            : backgroundData\r\n        : background;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onSelect(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-left-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[topLeftFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[topLeftFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame top-right-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[topRightFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[topRightFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-left-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[bottomLeftFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[bottomLeftFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-right-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[bottomRightFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[bottomRightFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={normalizedBackgroundArt}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\r\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\r\n\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\r\n                    )}\r\n                    style={{\r\n                        top: isPendulum ? 16 : 19,\r\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\r\n                    }}\r\n                />;\r\n            })}\r\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\r\n                </Tooltip> */}\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${\r\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\r\n        }px) translateY(${\r\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\r\n        }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\n\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    position: relative;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        position: absolute;\r\n        width: 100%;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n}\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDownload,\r\n        onDuplicate,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onSelect={onSelect}\r\n        onDownload={onDownload}\r\n        onDelete={onDelete}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    })));\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onSelect(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onSelect, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            onDuplicate: duplicateCard,\r\n                            onSelect: onSelect,\r\n                            onDownload: onDownload,\r\n                            onDelete: deleteAndReselect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledCode } from 'src/component/atom';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    CondenseTolerantMap,\r\n    FinishMap,\r\n    frameList,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PendulumSizeList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n} from 'src/model';\r\nimport { FileTextOutlined } from '@ant-design/icons';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n        padding: 0;\r\n        padding-left: 24px;\r\n        .ant-collapse-arrow {\r\n            top: 5px;\r\n            left: 0;\r\n        }\r\n    }\r\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\r\n        padding: var(--spacing-sm) 0 0 0;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\ntype CopiableCode = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n}\r\nconst CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledMono\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledMono>;\r\n};\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tr>\r\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                            </tr>\r\n                            {[\r\n                                {\r\n                                    field: 'Format',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'tcg',\r\n                                            'ocg',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Frame',\r\n                                    altField: 'Bottom Frame',\r\n                                    value: <div>\r\n                                        {frameList\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Attribute',\r\n                                    value: <div>\r\n                                        {AttributeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Spell/Trap Icon',\r\n                                    value: <div>\r\n                                        {IconList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Sticker',\r\n                                    value: <div>\r\n                                        {StickerList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Foil',\r\n                                    value: <div>\r\n                                        {getFoilList()\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Finish',\r\n                                    value: <div>\r\n                                        {Object.values(FinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        <div>{language['manager.template.description.joinable']}</div>\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Art Finish',\r\n                                    value: <div>\r\n                                        {Object.values(ArtFinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'number',\r\n                                            'text',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Alignment',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'left',\r\n                                            'center',\r\n                                            'right',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Icon Type',\r\n                                    value: <div>\r\n                                        {IconTypeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Background Type',\r\n                                    value: <div>\r\n                                        {getBackgroundTypeList()\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Condense Rate',\r\n                                    value: <div>\r\n                                        {Object.keys(CondenseTolerantMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'predefined',\r\n                                            'custom',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Font',\r\n                                    value: <div>\r\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                    </div>,\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Preset',\r\n                                    value: <div>\r\n                                        {Object.keys(PresetNameStyleMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Pattern',\r\n                                    value: <div>\r\n                                        {PatternList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Pendulum Size',\r\n                                    value: <div>\r\n                                        {PendulumSizeList\r\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                            ].map(({\r\n                                field,\r\n                                altField,\r\n                                value,\r\n                            }) => {\r\n                                return <tr key={field}>\r\n                                    <td>\r\n                                        <StyledMono>{field}</StyledMono>\r\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                    </td>\r\n                                    <td>{value}</td>\r\n                                </tr>;\r\n                            })}\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n                \r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\nimport XLSX from 'xlsx';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const exportFormat = useSetting(state => state.setting.exportFormat);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const [savingFile, setSavingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                setSavingFile(true);\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    try {\r\n                                        const {\r\n                                            error,\r\n                                            value: csvdata,\r\n                                        } = cardListToCsv(useCardList.getState().cardList);\r\n\r\n                                        if (error) {\r\n                                            let errorMessage = '';\r\n                                            let errorDescription = '';\r\n                                            switch (error) {\r\n                                                case 'offline-data': {\r\n                                                    errorMessage = language['error.export.offline-data.message'];\r\n                                                    errorDescription = language['error.export.offline-data.description'];\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (errorMessage || errorDescription) {\r\n                                                notification.error({\r\n                                                    message: errorMessage,\r\n                                                    description: errorDescription,\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        switch (exportFormat) {\r\n                                            case 'xlsx': {\r\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\r\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\r\n                                                break;\r\n                                            }\r\n                                            default: {\r\n                                                downloadBlob(\r\n                                                    useCardList.getState().listName,\r\n                                                    new Blob([csvdata], { type: 'text/csv' }),\r\n                                                    'text/csv',\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        changeEditStatus('download');\r\n                                    } catch (e) {}\r\n                                }\r\n                                setSavingFile(false);\r\n                            }}\r\n                        >\r\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept={[\r\n                                    '.csv',\r\n                                    'application/vnd.ms-excel',\r\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                                ].join(',')}\r\n                                className=\"import-upload-input\"\r\n                                onChange={async (e) => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        try {\r\n                                            const file = await fileList[0].arrayBuffer();\r\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\r\n\r\n                                            /** Assume data from only the very first sheet */\r\n                                            /** 65001 codepage allow display unicode characters such as japanese */\r\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\r\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\r\n                                                workbook.Sheets[workbook.SheetNames[0]],\r\n                                                { header: 1, raw: false },\r\n                                            );\r\n                                            const nextCardList = csvToCardList(csvBook);\r\n\r\n                                            if (nextCardList.length > 0) {\r\n                                                setCardList(nextCardList, nextCardList[0].id);\r\n                                                setListName(fileName);\r\n                                                setInputKey(cnt => cnt + 1);\r\n                                                onSelect(nextCardList[0]);\r\n                                                setReadingFile(false);\r\n                                            } else {\r\n                                                announceError();\r\n                                            }\r\n                                        } catch (e) {\r\n                                            console.error(e);\r\n                                            announceError();\r\n                                        }\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={() => null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onSelect={activeCard}\r\n                onDownload={onDownload}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\nimport { CardActionButton } from './component';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .save-button-tainted {\r\n        .alert-label {\r\n            flex: 1;\r\n            padding-top: var(--spacing-px);\r\n        }\r\n        .resolution-option {\r\n            position: relative;\r\n            border: none;\r\n            border-radius: var(--br-lg);\r\n            background: var(--main-primary);\r\n        }\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n            border-left: var(--bw) solid var(--sub-level-3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CardPreviewContainer = styled.div`\r\n    position: relative;\r\n    display: block;\r\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    margin: var(--spacing);\r\n    margin-top: 0;\r\n    .reset-button,\r\n    .lightbox-button {\r\n        display: none;\r\n    }\r\n    #preview-canvas {\r\n        display: none;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\r\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\r\n            scale(var(--resize-ratio))\r\n            translateZ(0);\r\n        &.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport const CardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled(CardActionButton)`\r\n    position: absolute;\r\n    z-index: 101;\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    InternalCard,\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n    ResolutionButton,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCardList,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Dropdown, notification, Tooltip } from 'antd';\r\nimport { Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\r\nimport {\r\n    CardPreviewContainer,\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    CardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n        globalScale,\r\n        resolution,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale, resolution } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n        globalScale,\r\n        resolution,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<LightboxRef>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'StoneSerif-Italic',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const exportCardInList = useCallback((card: InternalCard) => {\r\n        const { id, ...exportableCard } = card;\r\n\r\n        exportData(undefined, false, exportableCard);\r\n    }, [exportData]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\r\n        if (crossorigin === 'anonymous') {\r\n            setTainted(false);\r\n            lightboxRef.current?.refresh();\r\n        }\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${\r\n                        process.env.PUBLIC_URL\r\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasHeight * globalScale}px`,\r\n                        '--card-width': `${CanvasWidth * globalScale}px`,\r\n                        '--global-scale': `${globalScale}`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <ExportPanel ref={exportPanelRef}\r\n                                    tainted={isTainted}\r\n                                    artworkCanvas={artworkCanvasRef.current}\r\n                                    onRequireExportData={exportData}\r\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                    onClose={forceRefocus}\r\n                                />\r\n                                <div />\r\n                                <ImportPanel ref={importPanelRef}\r\n                                    onImport={treatNewCard}\r\n                                    onClose={forceRefocus}\r\n                                    allowHotkey={allowHotkey}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                            <BatchConverter language={language} />\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                globalScale={globalScale}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\r\n                                <div className=\"alert-label\">\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\r\n                                </div>\r\n                                <Dropdown\r\n                                    className=\"save-button-dropdown\"\r\n                                    placement=\"bottomRight\"\r\n                                    overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n                                >\r\n                                    <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                                        <GatewayOutlined className=\"resolution-icon\" />\r\n                                        <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                                    </ResolutionButton>\r\n                                </Dropdown>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <CardPreviewContainer className=\"card-preview-container\">\r\n                            <Tooltip title={language['button.reset.tooltip']}>\r\n                                <ResetButton\r\n                                    className=\"reset-button\"\r\n                                    onClick={() => {\r\n                                        const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                        if (consent) {\r\n                                            const { setCard, card } = useCard.getState();\r\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                            const contextualDefaultCardData = card.format === 'tcg'\r\n                                                ? defaultCard\r\n                                                : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                            setCard(contextualDefaultCardData, true);\r\n                                            setImageChangeCount(cnt => cnt + 1);\r\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <ClearOutlined />\r\n                                </ResetButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={<div className=\"center\">\r\n                                {language['button.full-size.label']}\r\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                            </div>}>\r\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                    <ZoomInOutlined />\r\n                                </LightboxButton>\r\n                            </Tooltip>\r\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\r\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\r\n                             */}\r\n                            <canvas\r\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\r\n                                id=\"preview-canvas\"\r\n                                ref={previewCanvasRef}\r\n                                width={CanvasWidth}\r\n                                height={CanvasHeight}\r\n                            />\r\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <canvas\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\r\n                                    id=\"export-canvas\"\r\n                                    ref={exportCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\"\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\r\n                                    ref={frameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"nameCanvas\"\r\n                                    ref={nameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={148 * globalScale}\r\n                                />\r\n                                <canvas id=\"cardIconCanvas\"\r\n                                    ref={cardIconCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={222 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumScaleCanvas\"\r\n                                    ref={pendulumScaleCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={920 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumEffectCanvas\"\r\n                                    ref={pendulumEffectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={920 * globalScale}\r\n                                />\r\n                                <canvas id=\"typeCanvas\"\r\n                                    ref={typeCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"effectCanvas\"\r\n                                    ref={effectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"statCanvas\"\r\n                                    ref={statCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"setIdCanvas\"\r\n                                    ref={setIdCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"passwordCanvas\"\r\n                                    ref={passwordCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"creatorCanvas\"\r\n                                    ref={creatorCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"stickerCanvas\"\r\n                                    ref={stickerCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"finishCanvas\"\r\n                                    ref={finishCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={artworkCanvasRef}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={backgroundCanvasRef}\r\n                                />\r\n                            </CardCanvasGroupContainer>\r\n                        </CardPreviewContainer>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onDownload={exportCardInList}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Lightbox\r\n                    ref={lightboxRef}\r\n                    globalScale={globalScale}\r\n                />\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}