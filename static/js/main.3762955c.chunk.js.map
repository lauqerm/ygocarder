{"version":3,"sources":["model/canvas.ts","model/foil-finish.tsx","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/flag.tsx","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/dye.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/color.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","service/use-color-picker/index.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/mask.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom/color.tsx","component/atom/index.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/inline-color-picker/index.tsx","component/inline-sketch-picker/index.tsx","component/lightbox/index.tsx","component/link-marker/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/frame-setting-panel/frame-behavior-setting-panel.tsx","page/input-panel/frame-setting-panel/index.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artFrameX","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","distributionMode","result","type3CommonInstruction","blendMode","type8CommonInstruction","FinishMap","type1","partInstructionMap","pendulumSubstituteMap","type2","type3","type4","type5","type6","type7","type8","type9","type10","type11","type12","type13","ArtFinishMap","art","small","medium","large","OtherFinishTypeMap","key","labelKey","background","attribute","icon","sticker","FoilNameMap","gold","platinum","getFoilList","color","isOption","DyeIndexMap","topLeftFrame","topRightFrame","bottomLeftFrame","bottomRightFrame","effectBackground","pendulumEffectBackground","NO_ATTRIBUTE","AttributeList","nameKey","isCreative","supportFormat","ExtraAttributeList","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","fullLabelKey","className","alt","src","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","hasEmboss","pattern","PresetNameStyleMap","commonB","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","overrideFill","PatternList","PendulumSizeMap","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","FlagInfoList","index","displayKey","language","_value","_jsxs","_Fragment","children","FlagIndexMap","FLAG_LENGTH","length","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","tcg","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","FramePositionMap","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_SOURCE","map","entry","_entry$regexForm","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","leftFrame","rightFrame","pendulumRightFrame","foil","finish","otherFinish","artFinish","nameStyleType","nameStyle","headTextFillStyle","embossThickness","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","linkRating","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","flag","dyeList","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","ResolutionList","ExportFormatList","cardWidth","cardHeight","createCanvas","arguments","undefined","canvas","document","createElement","ctx","getContext","distanceTransform","array","exponent","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","dyeCanvas","baseCanvas","HexColorRegex","test","overlayContext","overlayCanvas","filter","drawImage","globalCompositeOperation","fillRect","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","checkLightFooter","includes","checkDiplayLinkRating","displayMode","showLinkRating","resolveFrameStyle","frameData","_ref2","_ref3","_ref4","_ref5","resolvedFrame","resolvedTopLeft","resolvedBottomLeft","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","kanjiHelper","defaultFlagList","currentFlagList","defaultDyeList","currentDyeList","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","normalizeCardName","replaceAll","normalizeCardEffect","downloadBlob","link","download","href","window","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","getContrastColor","rgbColor","_rgbColor$","_rgbColor$2","_rgbColor$3","MAX_CONDENSER_THRESHOLD","condense","worker","minThreshold","effectiveMedian","condenser","median","lastEffective","iterateCount","magnitude","maxThreshold","searchDown","reverseSearch","getMedian","setMedian","newMedian","setLastEffective","getLastEffective","applyLastEffective","getIterateCount","createCondenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","cnt","setCnt","useState","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","random","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","forceRefocus","_document$querySelect","selector","querySelector","focus","isMobileDevice","check","a","navigator","userAgent","vendor","opera","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","nextNameStyle","_termMap$entry","processLanguage","rawLanguageData","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","create","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","startsWith","csvToCardList","headerIndexMap","_reader","_reader2","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader11","_reader12","_reader13","_reader14","_reader15","_reader16","_reader17","_reader$split$filter","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_reader40","_reader41","_reader42","_reader43","_reader44","_reader45","_emptyCard$isLink","_filter","_reader46","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","finishBackground","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader47","baseFlag","Number","baseDyeList","String","getDefaultDyeList","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","artCropRight","backgroundCropRight","restRCard","equals","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","globalScale","mirrorPendulumScale","reduceMotionColor","resolution","showCreativeOption","showExtraAttribute","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","click","classList","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","process","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect2","queuingSize","isPipelineRunning","useColorPicker","onChange","currentText","setCurrentText","internalValue","setInternalValue","rgb","normalizedText","inputText","setColor","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","strokeStyle","imageCacheMap","drawAsset","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawFrom","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","getEffectFontAndCoordinate","useItalic","statInEffect","typeInEffect","coordinateKey","fontDataKey","sizeList","drawEffect","_fullLineList$length","content","isNormal","textStyle","defaultSizeLevel","forceRelaxCondenseLimit","sizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","fullLineListOption","_flavorConditionRegex","wholeLineRegex","lineReplacement","lineContent","fullLineReplacement","fullLineContent","willContinue","exec","potentialFlavorConditionText","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","flavorFontData","dynamicFlavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","MaskPromise","right","applyAlphaMask","urlOrCanvas","maskData","layerData","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","isSpeedSkill","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resolvedLayoutStyle","resolvedEffectBackground","resolvedPendulumEffectBackground","resultAPI","drawFrame","topFrameCtx","topFrameCanvas","dyedTopFrameCanvas","dyedTopFrameCtx","topRightCanvas","dyedTopRightCanvas","bottomFrameCtx","bottomFrameCanvas","dyedBottomFrameCanvas","dyedBottomFrameCtx","bottomRightCanvas","dyedBottomRightCanvas","resetTransform","backgroundWidth","backgroundHeight","clonedCanvasCtx","drawCardArt","externalCtx","imageWidth","imageHeight","drawBackground","_otherFinish$","hasArtBorder","backgroundFinish","loopBackgroundFinish","drawAttribute","_otherFinish$2","attributeCanvas","attributeCtx","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishCtx","drawStar","_otherFinish$3","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starCtx","all","starFinishCanvas","starFinishCtx","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconCtx","drawStatBorder","drawNameBackground","nameBackgroundCtx","nameBackgroundCanvas","dyedLeftNameCanvas","dyedLeftNameCtx","nameRightCanvas","dyedRightNameCanvas","drawEffectBackground","withPendulum","effectBackgroundCtx","effectBackgroundCanvas","effectBoxX","dyedEffectBackgroundCanvas","_PendulumSizeMapExcep","pendulumEffectBackgroundCtx","pendulumEffectBackgroundCanvas","dyedPendulumEffectBackgroundCanvas","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","pendulumBorderCanvas","pendulumBorderCtx","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawNameFinish","drawAttributeFinish","drawArtFinish","artCtx","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","cloneCtx","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","exceptionDigitWidthRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","bottomFrame","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightRightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","showDefAndLinkFlag","linkRatingDisplayMode","isLinkST","showDefAndLink","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","normalizedOpacity","fillBaseColor","w","customFill","artOnCardCanvas","artOnCardCtx","combinedArtCanvas","combinedArtCtx","normalizedLinkRating","rating","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","hasLink","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","actualEdge","actualBaseline","actualBaselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","effectIndexSize","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","normalizedStyle","iconCanvas","iconCtx","iconFinishCanvas","iconFinishCtx","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","positionType","isActive","baseLink","activeLink","baseDrawLinkArrowMap","withBorder","baseDrawLinkMapFoil","drawHistory","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","feedbackReminder","memory","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","targetMemory","useShallow","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","getDerivedStateFromError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","$freeSize","$size","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","ColorBlock","$static","$empty","StyledCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","SolidLabel","CombinedSliderContainer","PopoverButton","$active","$softMode","ResolutionLabelContainer","$warning","ResolutionLabel","warning","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","rel","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","b","majorA","minorA","patchA","majorB","minorB","patchB","onMouseOver","FAD_BUTTON_ID","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","setFeedbackReminder","currentReminder","duration","onClose","footer","Tabs","TabPane","tab","answer","Affiliation","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","Button","onMouseOut","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledInlineColorPickerContainer","InlineColorList","InlineColorPicker","dotColor","Input","SaturationBoardContainer","SaturationBoard","CustomPicker","Saturation","HorizontalSketchColorList","HorizontalSketchPickerContainer","HorizontalSketchPicker","noColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledLinkMarkChooser","LinkMarkerPicker","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","transform","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","naturalWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Container","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","isYgoprodeckImage","surveyedDecodedCard","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","_ref13","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","nextColor","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextLinkRating","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","destroyTooltipOnHide","BorderOuterOutlined","_language$tooltipKey","_opacity$type","_opacity$type2","activable","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","StyledLinkRatingInputContainer","FooterInputGroup","autoLinkRating","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","linkRatingInputRef","showAtkInput","showLinkInput","showDefInput","showPadding","copyrightList","changeATK","changeDEF","changeLinkRating","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","_linkRatingInputRef$c","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","LinkPickerContainer","$hover","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","minWidth","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","FrameBehaviorSettingPanelContainer","FrameBehaviorSettingPanel","updateFlag","nextFlagList","_FlagInfoList$index","FrameLayoutContainer","CardLayoutContainer","$width","$height","$hoverable","CardLayoutPreview","baseLayoutState","resolvedLayoutState","activeLayout","dyeColor","FrameLayoutSettingPanel","_FramePositionMap$act","onFrameChange","recentCustomPendulumFrame","setActiveLayout","frameLayoutMainId","changeBottomLeftFrame","changeBottomRightFrame","changeTopLeftFrame","changeTopRightFrame","changeEffectBackground","nextEffectStyle","changePendulumEffectBackground","nextPendulumEffectStyle","changeDyeList","changeLayout","layoutValue","layoutState","activeFrame","_recentCustomPendulum","changeDye","nextDyeList","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_ref14","_pendulumEffectInputR","flagList","_bottomFrameOptionGri","ApartmentOutlined","willMirror","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","frameTrainRef","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","extraAttributeList","getExtraAttributeList","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","formatSwappedCard","ClearOutlined","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","DoubleRightOutlined","DoubleLeftOutlined","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$topLeft","_FrameInfoMap$topLeft2","_FrameInfoMap$topRigh","_FrameInfoMap$topRigh2","_FrameInfoMap$bottomL","_FrameInfoMap$bottomL2","_FrameInfoMap$bottomR","_FrameInfoMap$bottomR2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","FileTextOutlined","ghost","header","altField","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","stringifedFlag","stringifedDyeList","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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AU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAA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,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,cACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,4BACA,gBACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,qCACA,0BACA,2BACA,2BACA,6BACA,2BACA,4BACA,sBACA,yBACA,aACA,cACA,qBACA,WACA,OACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAcxU,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzGyU,GAAc,IAAIC,IAAIL,GAAarwB,IAAIswB,KAEvCK,GAAsBP,GAAqBp6B,QAAO,CAACC,EAAKs6B,EAAO98B,KACjE,MAAMm9B,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuB36B,EAAIs6B,GAAqB98B,GAE7DwC,CAAG,GACX,CAAC,GAEE66B,GAAoBrnB,GACV,MAARA,GACS,KAATA,EADqB,GAElB,IAAIA,EAAKgO,QAAQ,KAAM,SAsP5BsZ,GAAmBA,CAAClqC,EAAYmqC,KAClC,GAAqB,mBAAVnqC,EAAqB,OAAOA,EACvC,GAAqB,kBAAVA,EAAoB,CAC3B,MAAMoqC,EAAkBpqC,EAAM2pC,cAC9B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","file":"static/js/main.3762955c.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\n\nexport const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n    frame: string,\n}) => [\n        {\n            value: 'fit' as const,\n            label: dictionary?.fit,\n        },\n        {\n            value: 'full' as const,\n            label: dictionary?.full,\n        },\n        {\n            value: 'frame' as const,\n            label: dictionary?.frame,\n        },\n    ];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxRef: React.RefObject<{\n        draw: (exportCanvas: HTMLCanvasElement) => void,\n    }>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    maximumScale: 2,\n    topToPendulumStructure: 210,\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\n    topToPendulumStructureFrame: 185,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    pendulumIconFrameWidth: 813,\n    pendulumIconFrameHeight: 100,\n    pendulumFrameWidth: 753,\n    pendulumFrameHeight: 955,\n    leftToPendulumStructure: 56,\n    cardBorder: 28,\n    topToEffectBox: 885,\n    leftToEffectBox: 54,\n    effectBoxWidth: 705,\n    effectBoxHeight: 231,\n    finishTypeCardWidth: 702,\n    finishTypeCardHeight: 200,\n    stickerSize: 52,\n    attributeSize: 77,\n    attributeY: 55,\n    attributeX: 678,\n    stickerX: 739.1438,\n    stickerY: 1110.938,\n    iconWidth: 43,\n    iconHeight: 44,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        backgroundRatio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        backgroundRatio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /**\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    pendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.236,\n        backgroundRatio: 1.236,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'pendulumSmall' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\n     * Even though the image size does not change, the image frame does become larger.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     *  */\n    extendedPendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'extendedPendulumSmall' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\n     * This results a taller visible image, but shorter image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.236,\n        type: 'truePendulumSmall' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumLarge: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1,\n        backgroundRatio: 1,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'truePendulumLarge' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artFrameX: 100,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artFrameX: 56,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n    pendulumSize?: PendulumSize,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\n\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\n    if (normalizedBoundless || body < 100) {\n        distributionMode = isPendulum\n            ? 'fullPendulum'\n            : 'fullCard';\n    } else {\n        if (isPendulum) {\n            if (text < 100) {\n                distributionMode = pendulumSize === 'small'\n                    ? 'extendedPendulumSmall'\n                    : 'extendedPendulum';\n            } else {\n                if (pendulum < 100) {\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\n                } else {\n                    distributionMode = pendulumSize === 'small'\n                        ? 'pendulumSmall'\n                        : 'pendulum';\n                }\n            }\n        } else {\n            distributionMode = text < 100\n                ? 'extendedCard'\n                : 'normal';\n        }\n    }\n\n    const result = CardArtCanvasCoordinateMap[distributionMode];\n    return {\n        ...result,\n        backgroundRatio: backgroundType === 'frame'\n            ? 0.686\n            : result.backgroundRatio,\n    };\n};\n","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport const ART_FINISH_TYPE = 'art';\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    labelKey?: string,\n    tooltipKey?: string,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n    pendulumSubstituteMap: Record<string, string>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'card-border': type3CommonInstruction,\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'card-border': type8CommonInstruction,\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type10: {\n        value: 'type10',\n        label: '10',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type11: {\n        value: 'type11',\n        label: '11',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type12: {\n        value: 'type12',\n        label: '12',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'source-over', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type13: {\n        value: 'type13',\n        label: '13',\n        partInstructionMap: {\n            'total-overlay': [],\n        },\n        pendulumSubstituteMap: {},\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            art: [\n                { blendMode: 'darken', opacity: 1 },\n                { blendMode: 'multiply', opacity: 1 },\n                { blendMode: 'overlay', opacity: 1 },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n};\n\nexport const OtherFinishTypeMap = {\n    art: {\n        key: 'art' as const,\n        labelKey: 'input.art-finish.label',\n    },\n    background: {\n        key: 'background' as const,\n        labelKey: 'input.background.label',\n    },\n    attribute: {\n        key: 'attribute' as const,\n        labelKey: 'input.attribute.label',\n    },\n    icon: {\n        key: 'icon' as const,\n        labelKey: 'input.icon-type.icon.label',\n    },\n    sticker: {\n        key: 'sticker' as const,\n        labelKey: 'input.sticker.label',\n    },\n};\nexport type OtherFinish = [attribute: string, icon: string, sticker: string, background: string];\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilNameMap = {\n    normal: 'normal' as const,\n    gold: 'gold' as const,\n    platinum: 'platinum' as const,\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        name: FoilNameMap['normal' as const],\n        label: dictionary?.normal,\n        color: '#747b95',\n        isOption: false,\n    },\n    {\n        name: FoilNameMap['gold' as const],\n        label: dictionary?.gold,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    {\n        name: FoilNameMap['platinum' as const],\n        label: dictionary?.platinum,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];\n\nexport type FrameDyeList = [\n    topLeft: string,\n    topRight: string,\n    bottomLeft: string,\n    bottomRight: string,\n    effect: string,\n    pendulumEffect: string,\n];\nexport const getDefaultDyeList = () => ['', '', '', '', '', ''] as FrameDyeList;\nexport const DYE_LIST_LENGTH = getDefaultDyeList().length;\n\nexport const DyeIndexMap = {\n    topLeftFrame: 0,\n    topRightFrame: 1,\n    bottomLeftFrame: 2,\n    bottomRightFrame: 3,\n    effectBackground: 4,\n    pendulumEffectBackground: 5,\n};","import { CloseCircleOutlined } from '@ant-design/icons';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n];\nexport const ExtraAttributeList = [\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'MAGIC',\n        nameKey: 'input.attribute.magic',\n        label: 'Laugh',\n        color: '#1b8f83',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'BOSS-1',\n        nameKey: 'input.attribute.boss-1',\n        label: 'Boss 1',\n        color: '#9b325d',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'BOSS-2',\n        nameKey: 'input.attribute.boss-2',\n        label: 'Boss 2',\n        color: '#942a56',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'BOSS-3',\n        nameKey: 'input.attribute.boss-3',\n        label: 'Boss 3',\n        color: '#86214b',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'BOSS-START',\n        nameKey: 'input.attribute.boss-start',\n        label: 'Boss Start',\n        color: '#a13864',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n];\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport const IconTypeMap: Record<string, {\n    value: string,\n    labelKey: string,\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n}> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.full.label',\n        icon: null,\n        isOption: false,\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\n        />,\n        isOption: true,\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const getDefaultNameStyle = () => ({\n    font: 'Default',\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    embossPitch: 90,\n    embossYaw: 90,\n    embossThickness: 0,\n    hasEmboss: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    hasEmboss: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo'\n| 'embossGold' | 'embossPlatinum';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n    embossGold: {\n        key: 'embossGold',\n        label: 'Embossed Gold',\n        image: 'asset/image/other/name-emboss-gold.png',\n        value: createPresetNameStyle({\n            preset: 'embossGold',\n            fillStyle: '#d09b0e',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#333333',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n    embossPlatinum: {\n        key: 'embossPlatinum',\n        label: 'Embossed Platinum',\n        image: 'asset/image/other/name-emboss-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'embossPlatinum',\n            fillStyle: '#c0c0c0',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#4d4d4d',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\nexport const PendulumSizeMap = {\n    small: {\n        key: 'small' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.small.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 95,\n        pendulumBoxOffsetY: 50,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 816,\n        artlessFrameY: 594,\n        fontSize: 56.5,\n    },\n    medium: {\n        key: 'medium' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.medium.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 147,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 790,\n        artlessFrameY: 553,\n        fontSize: 60.5,\n    },\n    large: {\n        key: 'large' as const,\n        frameType: 'text',\n        labelKey: 'input.pendulum-size.large.label',\n        effectBoxOffsetY: 27,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 180,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 806,\n        artlessFrameY: 553,\n        fontSize: 60.5,\n    },\n};\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\n\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\n    exceptionPendulumBoxOffsetHeight?: number,\n    exceptionFrameType?: string,\n}>> = {\n    small: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: -13,\n        },\n    },\n    medium: {},\n    large: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: 15,\n        },\n        zarc: {\n            exceptionFrameType: 'pendulum-large',\n        }\n    },\n};\n\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","import { LanguageDataDictionary } from 'src/service';\n\nexport type CardFlag = [\n    ShowDefAndLink: number,\n    LinkRating: number,\n];\n/**\n * Remember, 0 is ALWAYS the default state.\n */\nexport const getDefaultCardFlag = (): CardFlag => [0, 0];\n\nexport const FlagInfoList = [\n    {\n        index: 0,\n        labelKey: 'input.flag.mix-def-link',\n        type: 'checkbox' as const,\n        displayKey: (language: LanguageDataDictionary, _value: number) => language['input.flag.mix-def-link'],\n    },\n    {\n        index: 1,\n        labelKey: 'input.flag.link-rating-behavior',\n        type: 'link-rating-behavior' as const,\n        displayKey: (language: LanguageDataDictionary, value: number) => <>\n            {language['input.flag.link-rating-behavior']}: {language[value === 1\n                ? 'input.flag.link-rating-behavior.show'\n                : 'input.flag.link-rating-behavior.hide']}\n        </>,\n    },\n];\nexport const FlagIndexMap = {\n    showDefAndLink: 0,\n    linkRating: 1,\n};\nexport const LINK_RATING_ALWAYS_AUTO = 0;\nexport const LINK_RATING_ALWAYS_SHOW = 1;\nexport const LINK_RATING_ALWAYS_HIDE = 2;\nexport const FLAG_LENGTH = FlagInfoList.length;","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n    trueHeightCap?: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'tcg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'tcg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'tcg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'tcg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'ocg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 951.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'ocg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n};\n\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\n    normal: {\n        small: [\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94 },\n        ],\n        medium: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n        ],\n        large: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n        ],\n    },\n    scaleless: {\n        small: [\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5 },\n        ],\n        medium: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\n        ],\n        large: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\n        ],\n    },\n};\n\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\n    tcg: {\n        smaller: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 950.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n    ocg: {\n        smaller: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 258,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    allRightSymbolOffset?: number,\n    bulletOffset?: number,\n    bulletWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    allRightSymbolOffset: 1,\n    bulletWidth: 23,\n    fontSize: 24.5,\n    lineHeight: 24.7,\n    lineCount: 6,\n    bulletOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport type FontDeviation = {\n    uniformBoxDescent?: number,\n};\nexport type FontDeviationMap = {\n    threshold: number,\n    letterMap: Record<string, FontDeviation>,\n}\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    letterDeviationMap?: Record<string, FontDeviationMap>,\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    headTextGapRatio: 0,\n};\nexport const DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"StoneSerif-Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact',\n    fontList: [],\n};\n\n/**\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\n * */\nexport const NormalFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ],\n    },\n    'tcg-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\n        ]\n    },\n    'ocg-pendulumLarge-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\n        ]\n    },\n    'ocg-pendulumLarge-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n};\n\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps',\n            font: 'MatrixRegularSmallCaps',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.55,\n            fontList: [{\n                bulletWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterDeviationMap: {\n                '1': {\n                    threshold: 0.94,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 11 },\n                        ị: { uniformBoxDescent: 11 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 11 },\n                        e̩: { uniformBoxDescent: 11 },\n                        È̩: { uniformBoxDescent: 11 },\n                        É̩: { uniformBoxDescent: 11 },\n                        è̩: { uniformBoxDescent: 11 },\n                        Ẹ: { uniformBoxDescent: 11 },\n                        ẹ: { uniformBoxDescent: 11 },\n                        Ệ: { uniformBoxDescent: 11 },\n                        ệ: { uniformBoxDescent: 11 },\n                    },\n                },\n                '2': {\n                    threshold: 0,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 20 },\n                        ị: { uniformBoxDescent: 20 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 20 },\n                        e̩: { uniformBoxDescent: 20 },\n                        È̩: { uniformBoxDescent: 20 },\n                        É̩: { uniformBoxDescent: 20 },\n                        è̩: { uniformBoxDescent: 20 },\n                        Ẹ: { uniformBoxDescent: 20 },\n                        ẹ: { uniformBoxDescent: 20 },\n                        Ệ: { uniformBoxDescent: 20 },\n                        ệ: { uniformBoxDescent: 20 },\n                    },\n                },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.825,\n            weight: 'bold',\n            fontList: [{\n                bulletWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            headTextBold: true,\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            fontStyle: 'ocg',\n            fontList: [{\n                bulletWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    fontList: [{\n        bulletWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","import {\n    DefaultOCGEffectFontData,\n    DefaultTCGEffectFontData,\n    DefaultTCGNormalFontData,\n    FontData,\n} from './font-data-effect';\n\n/** OCG does not have different fonts between normal and effect monsters */\nexport const PendulumNormalFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\n        ],\n    },\n};\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n        ],\n    },\n    'ocg-small': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\n        ],\n    },\n    'ocg-medium': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\n        ],\n    },\n    'ocg-large': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\n        ],\n    },\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\nexport const passwordSentenceMap: Record<string, string> = {\n    ocg: '※デッキ構築には使用できません。',\n    tcg: 'This card cannot be in a Deck.',\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 49%',\n            'rgba(239,239,239,1) 51%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);\n\nexport const FramePositionMap: Record<string, { labelKey: string }> = {\n    bottomLeftFrame: { labelKey: 'input.advanced-frame.name.bottom-left' },\n    bottomRightFrame: { labelKey: 'input.advanced-frame.name.bottom-right' },\n    effectBackground: { labelKey: 'input.advanced-frame.name.effect-background' },\n    pendulumEffectBackground: { labelKey: 'input.advanced-frame.name.pendulum-effect-background' },\n    frame: { labelKey: 'input.advanced-frame.name.primary' },\n    topLeftFrame: { labelKey: 'input.advanced-frame.name.top-left' },\n    topRightFrame: { labelKey: 'input.advanced-frame.name.top-right' },\n};","export const ArrowPositionMap = {\n    normal: [\n        { top: 175, left: 55, width: 100, height: 100 },\n        { top: 165, left: 323, width: 170, height: 80 },\n        { top: 175, left: 655, width: 100, height: 100 },\n        { top: 442, left: 45, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 442, left: 700, width: 70, height: 170 },\n        { top: 775, left: 55, width: 100, height: 100 },\n        { top: 810, left: 323, width: 170, height: 80 },\n        { top: 775, left: 655, width: 100, height: 100 },\n    ],\n    pendulum: [\n        { top: 169, left: 11, width: 100, height: 100 },\n        { top: 159, left: 323, width: 170, height: 80 },\n        { top: 169, left: 699, width: 100, height: 100 },\n        { top: 572, left: 1, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 572, left: 744, width: 70, height: 170 },\n        { top: 1054, left: 11, width: 100, height: 100 },\n        { top: 1093, left: 323, width: 170, height: 80 },\n        { top: 1054, left: 699, width: 100, height: 100 },\n    ],\n};\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⦉';\nexport const NB_WORD_CLOSE = '⦊';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_FULL_LINE_OPEN = '᚛';\nexport const NB_FULL_LINE_CLOSE = '᚜';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil, getDefaultDyeList, OtherFinish } from './foil-finish';\nimport { CondenseType } from './condense';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\nimport { getDefaultCardFlag } from './flag';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\n/**\n * Check following things when adding new attributes:\n * * Default card and empty card\n * * Convert codec\n * * Shorten codec\n * * Card thumb\n * * Legacy version\n * * Import / export\n */\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 2,\n    format: 'tcg',\n    frame: 'fusion',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    otherFinish: ['normal', 'normal', 'normal', 'normal'] as OtherFinish,\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    linkRating: '',\n    isLink: false as boolean | null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    flag: getDefaultCardFlag(),\n    dyeList: getDefaultDyeList(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 2,\n    format: 'tcg',\n    /** Why we split frame and left frame here? Because there is more nuance to the card other than individual frames, for example name bevel, border bevel, effect bevel etc..., so \"frame\" here is a kind of \"main frame\" that dictates all those nuance, why the actual card background is constructed from those 4 corner frames. */\n    frame: 'effect',\n    leftFrame: 'auto',\n    rightFrame: 'auto',\n    pendulumRightFrame: 'auto',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    otherFinish: ['normal', 'normal', 'normal', 'normal'],\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    linkRating: '',\n    isLink: null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n        background: 'auto',\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    dyeList: getDefaultDyeList(),\n    flag: getDefaultCardFlag(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: null,\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport const ResolutionMap = {\n    '549x800': {\n        label: '549 × 800',\n        width: 549,\n        height: 800,\n        scale: 1,\n        settingValue: [549, 800] as [number, number],\n    },\n    '561x818': {\n        label: '561 × 818',\n        width: 561,\n        height: 818,\n        scale: 1,\n        settingValue: [561, 818] as [number, number],\n    },\n    '813x1185': {\n        label: '813 × 1185',\n        width: 813,\n        height: 1185,\n        scale: 1,\n        settingValue: [813, 1185] as [number, number],\n    },\n    '1122x1636': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\n        width: 1122,\n        height: 1636,\n        scale: 2,\n        settingValue: [1122, 1636] as [number, number],\n    },\n    '1388x2026': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\n        width: 1388,\n        height: 2026,\n        scale: 2,\n        settingValue: [1388, 2026] as [number, number],\n    },\n    '1626x2370': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\n        width: 1626,\n        height: 2370,\n        scale: 2,\n        settingValue: [1626, 2370] as [number, number],\n    },\n};\nexport const ResolutionList = [\n    ResolutionMap['549x800'],\n    ResolutionMap['561x818'],\n    ResolutionMap['813x1185'],\n    ResolutionMap['1122x1636'],\n    ResolutionMap['1388x2026'],\n    ResolutionMap['1626x2370'],\n];\n\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\nexport const ExportFormatList = [\n    {\n        value: 'csv' as const,\n        label: '.csv',\n    },\n    {\n        value: 'xlsx' as const,\n        label: '.xlsx',\n    },\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './condense';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './flag';\nexport * from './foil-finish';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './font-data-pendulum-effect';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './pendulum';\nexport * from './regex';","import { CanvasConst } from 'src/model';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n} = CanvasConst;\n\nexport const createCanvas = (width = cardWidth, height = cardHeight) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n\n    return {\n        canvas,\n        ctx,\n    };\n};","import ndarray, { NdArray } from 'ndarray';\nimport ops from 'ndarray-ops';\nimport pool from 'typedarray-pool';\nimport phase2_1 from 'distance-transform/lib/p1';\nimport phase2_2 from 'distance-transform/lib/p2';\nimport phase2_inf from 'distance-transform/lib/pinf';\nimport phase2_p from 'distance-transform/lib/pp';\n\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\n    for (i = 0; i < rowCount; ++i) {\n        nextPoint = array[ptr++];\n        for (j = 1; j < colCount; ++j) {\n            nextPoint = min(array[ptr], nextPoint + 1);\n            array[ptr++] = nextPoint;\n        }\n        for (j = 0; j < colCount; ++j) {\n            nextPoint = min(array[--ptr], nextPoint + 1);\n            array[ptr] = nextPoint;\n        }\n        ptr += colCount;\n    }\n}\n\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\n    var dimensionCount = array.shape.length,\n        shape = array.shape.slice(0),\n        stride = new Array(dimensionCount),\n        size = 1,\n        stackSize = 0,\n        infinityHeight = 0,\n        index: number,\n        j: number,\n        n: number,\n        strideList: number[],\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\n        currentDimensionSize: number;\n    exponent = exponent || 2;\n    for (index = dimensionCount - 1; index >= 0; --index) {\n        stride[index] = size;\n        size *= shape[index];\n        infinityHeight += shape[index];\n        stackSize = Math.max(stackSize, shape[index]);\n    }\n\n    // Allocate scratch buffers\n    var phase2ResultAllocation = pool.mallocDouble(size),\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\n        s_q = pool.mallocUint32(stackSize),\n        t_q = pool.mallocUint32(stackSize);\n\n    /**\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\n     * */\n    var phase1ResultAllocation = pool.mallocDouble(size),\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\n        }\n    }\n    //Perform first phase of distance transform\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\n\n    //Second passes\n    for (index = dimensionCount - 1; index > 0; --index) {\n        strideList = phase2ResultArray.stride;\n        n = 1;\n        for (j = index - 1; j < dimensionCount; ++j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        for (j = index - 2; j >= 0; --j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        ops.assign(phase2ResultArray, phase1ResultArray);\n\n        //Execute phase 2\n        currentDimensionSize = shape[index - 1];\n        if (!isFinite(exponent)) {\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 1) {\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 2) {\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent < 1) {\n            throw new Error('Values of exponent < 1 are not supported');\n        } else {\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\n        }\n\n        //Swap buffers\n        tmp = phase1ResultArray;\n        phase1ResultArray = phase2ResultArray;\n        phase2ResultArray = tmp;\n    }\n\n    //Copy phase1ResultArray to result\n    ops.assign(array, phase1ResultArray);\n\n    pool.freeDouble(phase1ResultAllocation);\n    pool.freeDouble(phase2ResultAllocation);\n    pool.freeUint32(s_q);\n    pool.freeUint32(t_q);\n    return array;\n}","import { CanvasConst } from 'src/model';\nimport { createCanvas } from './create';\nimport { HexColorRegex } from '..';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n} = CanvasConst;\nexport const dyeCanvas = (baseCanvas: HTMLCanvasElement, color: string, width = cardWidth, height = cardHeight) => {\n    if (!HexColorRegex.test(color)) return {\n        canvas: baseCanvas,\n        ctx: baseCanvas.getContext('2d'),\n    };\n\n    const { ctx: overlayContext, canvas: overlayCanvas } = createCanvas(width, height);\n\n    /** Draw the target image with grayscale */\n    overlayContext.filter = 'grayscale(1)';\n    overlayContext.drawImage(baseCanvas, 0, 0);\n    overlayContext.filter = 'none';\n\n    /** Overlay the color lens on top the grayscale layer to dye it */\n    overlayContext.fillStyle = color;\n    overlayContext.globalCompositeOperation = 'overlay';\n    overlayContext.fillRect(0, 0, cardWidth, cardHeight);\n\n    /** Draw the target image again but with destination-in mode to remove excess area */\n    overlayContext.globalCompositeOperation = 'destination-in';\n    overlayContext.drawImage(baseCanvas, 0, 0);\n    overlayContext.globalCompositeOperation = 'source-over';\n\n    return {\n        canvas: overlayCanvas,\n        ctx: overlayCanvas.getContext('2d'),\n    };\n};","import * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\n\nconst HorizontalBlurShader = {\n    uniforms: {\n        'tDiffuse': { type: 't', value: null },\n        'h': { type: 'f', value: 3.0 / 512.0 }\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float h;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float lef4 = vUv.x - 4.0 * h;',\n        'float lef3 = vUv.x - 3.0 * h;',\n        'float lef2 = vUv.x - 2.0 * h;',\n        'float lef1 = vUv.x - 1.0 * h;',\n        'float rig1 = vUv.x + 1.0 * h;',\n        'float rig2 = vUv.x + 2.0 * h;',\n        'float rig3 = vUv.x + 3.0 * h;',\n        'float rig4 = vUv.x + 4.0 * h;',\n\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\n        'if (h > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n        //\"gl_FragColor = vec4(1,0,0,1);\",\n\n        '}'\n    ].join('\\n')\n};\nconst VerticalBlurShader = {\n    uniforms: {\n        tDiffuse: { type: 't', value: null },\n        v: { type: 'f', value: 3.0 / 512.0 },\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}',\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float v;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float top4 = vUv.y - 4.0 * v;',\n        'float top3 = vUv.y - 3.0 * v;',\n        'float top2 = vUv.y - 2.0 * v;',\n        'float top1 = vUv.y - 1.0 * v;',\n        'float bot1 = vUv.y + 1.0 * v;',\n        'float bot2 = vUv.y + 2.0 * v;',\n        'float bot3 = vUv.y + 3.0 * v;',\n        'float bot4 = vUv.y + 4.0 * v;',\n\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\n        'if (v > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n\n        '}',\n    ].join('\\n'),\n};\nconst NormalMapShader = {\n    uniforms: {\n        'type': { type: '1i', value: 0 },\n        'invertR': { type: '1f', value: 1 },\n        'invertG': { type: '1f', value: 1 },\n        'invertH': { type: '1f', value: 1 },\n        'dz': { type: '1f', value: 0 },\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\n        'tHeightMap': { type: 't', value: null }\n    },\n    vertexShader: [\n        'precision mediump float;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform vec3 dimensions;',\n        'void main() {',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\n        'vUv = uv;',\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'precision mediump float;',\n        'uniform vec3 dimensions;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform float dz;',\n        'uniform float invertR;',\n        'uniform float invertG;',\n        'uniform float invertH;',\n        'uniform int type;',\n        'uniform sampler2D tHeightMap;',\n\n        'void main(void) {',\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\n        '   float dx = 0.0, dy = 0.0;',\n        '   if(type == 0){',\t// Sobel\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\n        '   }',\n        '   else{',\t\t\t\t// Scharr\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\n        '   }',\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\n        '}'\n    ].join('\\n')\n};\n\nexport const SHADER_FILTER_TYPE = {\n    SOBEL: 'sobel' as const,\n    SCHARR: 'scharr' as const,\n};\nexport const getDefaultHeightToNormalMapOption = () => ({\n    invertedRed: false,\n    invertedGreen: false,\n    invertedSource: false,\n    blurSharp: 0,\n    strength: 1,\n    level: 8.5,\n    type: SHADER_FILTER_TYPE.SOBEL,\n});\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\n\nexport class HeightToNormalMap {\n    renderer: THREE.WebGLRenderer;\n    effectComposer: EffectComposer;\n    normalMapUniform: typeof NormalMapShader['uniforms'];\n    material: THREE.ShaderMaterial;\n    option: Required<HeightToNormalMapOption>;\n    canvas!: HTMLCanvasElement;\n    gaussianShaderX!: ShaderPass;\n    gaussianShaderY!: ShaderPass;\n\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\n        this.canvas = resultCanvas;\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\n        this.init();\n    }\n\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\n        const { width, height } = image;\n        const texture = this.getTexture(image);\n        this.normalMapUniform.tHeightMap.value = texture;\n        this.normalMapUniform.dimensions.value = [width, height, 0];\n        this.renderer.setSize(width, height);\n        this.effectComposer.setSize(width, height);\n        this.effectComposer.reset(this.getRenderTarget(width, height));\n\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\n            ...this.option,\n            ...option,\n        };\n\n        this.invertRed(invertedRed);\n        this.invertGreen(invertedGreen);\n        this.invertSource(invertedSource);\n        this.setBlurSharp(blurSharp, width, height);\n        this.setStrengthAndLevel(strength, level);\n        this.setType(type);\n\n        this.effectComposer.render(1 / 60);\n    }\n\n    init() {\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\n        const scene = new THREE.Scene();\n        const normalRenderScene = new RenderPass(scene, camera);\n\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\n        this.renderer.setClearColor(0x000000, 0); // the default\n\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\n\n        this.material = new THREE.ShaderMaterial({\n            fragmentShader: NormalMapShader.fragmentShader,\n            vertexShader: NormalMapShader.vertexShader,\n            uniforms: this.normalMapUniform,\n        });\n        this.material.transparent = true;\n\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\n        scene.add(renderMesh);\n\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\n        this.gaussianShaderX.renderToScreen = true;\n\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\n        this.effectComposer.addPass(normalRenderScene);\n        this.effectComposer.addPass(this.gaussianShaderY);\n        this.effectComposer.addPass(this.gaussianShaderX);\n    }\n    getRenderTarget(width?: number, height?: number) {\n        return new THREE.WebGLRenderTarget(width, height, {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false,\n        });\n    }\n    getTexture(image: TexImageSource) {\n        const texture = new THREE.Texture(image);\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\n        texture.anisotropy = 2;\n        texture.needsUpdate = true;\n        return texture;\n    }\n\n    invertRed(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertR.value = -1;\n        } else {\n            this.normalMapUniform.invertR.value = 1;\n        }\n    }\n\n    invertGreen(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertG.value = -1;\n        } else {\n            this.normalMapUniform.invertG.value = 1;\n        }\n    }\n\n    invertSource(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertH.value = -1;\n        } else {\n            this.normalMapUniform.invertH.value = 1;\n        }\n    }\n\n    setBlurSharp(value: number, width: number, height: number) {\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\n    }\n\n    setStrengthAndLevel(strength: number, level: number) {\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\n    }\n\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\n    }\n}","// import distanceTransform from 'distance-transform';\nimport ndarray from 'ndarray';\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\nimport { bilateralFilter } from './bilateral-filter';\nimport { distanceTransform } from './distance-transform';\n\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\n    const z = Math.sin(verticalAngleRadian);\n\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\n};\nexport const applyEmboss = ({\n    inputCanvas,\n    affectedHeight,\n    affectedWidth,\n    maxHeight = 8,\n    lightColorVec = [255, 255, 255],\n    /** Shine parallel with the surface, from rightside. */\n    lightAngleVec,\n    lightPitch,\n    lightYaw,\n    minIntensity = -1,\n    maxIntensity = 1,\n}: {\n    inputCanvas: HTMLCanvasElement,\n    affectedWidth?: number,\n    affectedHeight?: number,\n    maxHeight?: number,\n    lightColorVec?: [number, number, number],\n    lightAngleVec?: [number, number, number],\n    lightPitch?: number,\n    lightYaw?: number,\n    minIntensity?: number,\n    maxIntensity?: number,\n}) => {\n    const ctx = inputCanvas.getContext('2d');\n\n    if (!ctx) return;\n\n    /** Support partial transform to increase transform speed and reduce stuttering */\n    const height = affectedHeight ?? inputCanvas.height;\n    const width = affectedWidth ?? inputCanvas.width;\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\n    const data = imageData.data;\n\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\n        ? lightAngleVec\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\n            ? angleToVector(lightPitch, lightYaw)\n            : [1, 0, 0];\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\n    const normalizedLightAngleVec = [\n        computedLightAngleVec[0] / angleVecMagnitude,\n        computedLightAngleVec[1] / angleVecMagnitude,\n        computedLightAngleVec[2] / angleVecMagnitude\n    ];\n\n    if (!data) return;\n\n    try {\n        /**\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\n         */\n        /** Any pixel that is not transparent will be the foreground. */\n        const validPixelList = new Uint8ClampedArray(width * height);\n        for (let i = 0; i < data.length; i += 4) {\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\n                validPixelList[i / 4] = 0;\n            } else {\n                validPixelList[i / 4] = 1;\n            }\n        }\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\n\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\n            for (let colIndex = 0; colIndex < column; colIndex++) {\n                const currentIndex = (rowIndex * width + colIndex) * 4;\n                const heightValue = dtImageData.get(rowIndex, colIndex);\n\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\n            }\n        }\n\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\n        const heightmapCanvas = document.createElement('canvas');\n        heightmapCanvas.width = width;\n        heightmapCanvas.height = height;\n        heightmapCanvas.getContext('2d').putImageData(\n            new ImageData(nextDtBitmap, width, height),\n            0,\n            0,\n        );\n\n        /**\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\n         */\n        const normalMapCanvas = document.createElement('canvas');\n        normalMapCanvas.width = width;\n        normalMapCanvas.height = height;\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\n        heightToNormalMapConverter.apply(heightmapCanvas, {\n            blurSharp: 0,\n            level: 9,\n            strength: 2.5,\n            invertedRed: false,\n            invertedGreen: false,\n            invertedSource: true,\n            type: SHADER_FILTER_TYPE.SOBEL,\n        });\n\n        /**\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\n         */\n        const softenNormalMapCanvas = document.createElement('canvas');\n        softenNormalMapCanvas.width = width;\n        softenNormalMapCanvas.height = height;\n\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\n        softenNormalMapContext.drawImage(\n            normalMapCanvas,\n            0,\n            0,\n            width,\n            height,\n        );\n        const filteredData = bilateralFilter(\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\n            width,\n            height,\n            9,\n            70,\n            20,\n        );\n\n        /**\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\n         * \n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\n         */\n        const resultData = new Uint8ClampedArray(width * height * 4);\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\n            const baseIntensity = nx * normalizedLightAngleVec[0]\n                + ny * normalizedLightAngleVec[1]\n                + nz * normalizedLightAngleVec[2];\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\n\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\n        }\n\n        return new ImageData(resultData, width, height);\n    } catch (e) {\n        console.error('Could not apply emboss effect', e);\n        return null;\n    }\n};","export const bilateralFilter = (\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\n    width: number,\n    height: number,\n    diameter: number,\n    sigmaColor: number,\n    sigmaSpace: number,\n) => {\n    const output = new Uint8ClampedArray(width * height * 4);\n    const halfD = Math.floor(diameter / 2);\n\n    // Helper function to calculate the Gaussian weight for spatial distance\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\n    }\n\n    // Helper function to calculate the Gaussian weight for color distance\n    function colorWeight(c1: number, c2: number) {\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\n    }\n\n    // Loop through each pixel in the image\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\n\n            // Apply the filter to a local neighborhood around the current pixel\n            for (let ky = -halfD; ky <= halfD; ky++) {\n                for (let kx = -halfD; kx <= halfD; kx++) {\n                    const nx = x + kx;\n                    const ny = y + ky;\n\n                    // Check if the neighbor is within the image bounds\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\n                        const centerPixel = (y * width + x) * 4;\n                        const neighborPixel = (ny * width + nx) * 4;\n\n                        // Get the color values for the center pixel and the neighbor pixel\n                        const rCenter = imageData[centerPixel];\n                        const gCenter = imageData[centerPixel + 1];\n                        const bCenter = imageData[centerPixel + 2];\n                        const rNeighbor = imageData[neighborPixel];\n                        const gNeighbor = imageData[neighborPixel + 1];\n                        const bNeighbor = imageData[neighborPixel + 2];\n\n                        // Compute spatial and color weights\n                        const spatial = spatialWeight(nx, ny, x, y);\n                        const colorR = colorWeight(rCenter, rNeighbor);\n                        const colorG = colorWeight(gCenter, gNeighbor);\n                        const colorB = colorWeight(bCenter, bNeighbor);\n\n                        const weight = spatial * colorR * colorG * colorB;\n\n                        // Accumulate weighted sum of colors\n                        rSum += rNeighbor * weight;\n                        gSum += gNeighbor * weight;\n                        bSum += bNeighbor * weight;\n                        wSum += weight;\n                    }\n                }\n            }\n\n            // Normalize the result and assign it to the output image\n            const outputPixel = (y * width + x) * 4;\n            output[outputPixel] = rSum / wSum;\n            output[outputPixel + 1] = gSum / wSum;\n            output[outputPixel + 2] = bSum / wSum;\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\n        }\n    }\n\n    return output;\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\nexport const generateLayer = (\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\n    exportCtx: CanvasRenderingContext2D | null | undefined,\n    delayQueue: number = 0,\n) => {\n    return new Promise<boolean>(resolve => {\n        setTimeout(() => {\n            if (!canvasLayer.current || !exportCtx) resolve(false);\n            else {\n                try {\n                    canvasLayer.current.toBlob(blob => {\n                        if (!blob) resolve(false);\n                        else {\n                            const url = URL.createObjectURL(blob);\n                            if (!url) resolve(false);\n                            else {\n                                const layer = new Image();\n                                layer.src = url;\n                                layer.onload = () => {\n                                    exportCtx.drawImage(layer, 0, 0);\n                                    URL.revokeObjectURL(url);\n                                    resolve(true);\n                                };\n                                layer.onerror = () => {\n                                    URL.revokeObjectURL(url);\n                                    resolve(false);\n                                };\n                            }\n                        }\n                    });\n                } catch (e) {\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\n                    console.error(e);\n                    resolve(false);\n                }\n            }\n        }, delayQueue * 25);\n    });\n};","import {\n    Card,\n    Foil,\n    frameList,\n    LINK_RATING_ALWAYS_AUTO,\n    LINK_RATING_ALWAYS_HIDE,\n    LINK_RATING_ALWAYS_SHOW,\n    NameStyle,\n    NameStyleType,\n    PresetNameStyleMap,\n} from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink === true;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\n    return [\n        'fusion',\n        'synchro',\n        'xyz',\n        'link',\n        'dark-synchro',\n        'zarc',\n    ].includes(card.frame);\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFooter = (frame: string) => {\n    return ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link'].includes(frame) || checkLightFooter(frame);\n};\n\nexport const checkDiplayLinkRating = (displayMode: number, isLink: boolean) => {\n    let showLinkRating = false;\n    switch (displayMode) {\n        case LINK_RATING_ALWAYS_SHOW: showLinkRating = true; break;\n        case LINK_RATING_ALWAYS_HIDE: showLinkRating = false; break;\n        case LINK_RATING_ALWAYS_AUTO: showLinkRating = isLink; break;\n    }\n\n    return showLinkRating;\n};\n\nexport const resolveFrameStyle = (frameData: Record<string, string | undefined>, isPendulum: boolean) => {\n    const {\n        frame,\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    } = frameData;\n    const resolvedFrame = frame ?? 'effect';\n    const resolvedTopLeft = topLeftFrame === 'auto' ? resolvedFrame : topLeftFrame;\n    const resolvedTopRight = (topRightFrame === 'auto' ? resolvedTopLeft : topRightFrame) ?? resolvedFrame;\n    const resolvedBottomLeft = (bottomLeftFrame === 'auto'\n        ? (isPendulum ? 'spell' : resolvedTopLeft)\n        : bottomLeftFrame) ?? resolvedFrame;\n    const resolvedBottomRight = (bottomRightFrame === 'auto'\n        ? resolvedBottomLeft\n        : bottomRightFrame) ?? resolvedFrame;\n    const resolvedEffectBackground = (effectBackground === 'auto'\n        ? resolvedBottomLeft\n        : effectBackground) ?? resolvedFrame;\n    const resolvedPendulumEffectBackground = (pendulumEffectBackground === 'auto'\n        ? resolvedBottomLeft\n        : pendulumEffectBackground) ?? resolvedFrame;\n\n    return {\n        topLeftFrame: resolvedTopLeft,\n        topRightFrame: resolvedTopRight,\n        bottomLeftFrame: resolvedBottomLeft,\n        bottomRightFrame: resolvedBottomRight,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    };\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return nameStyle;\n    }\n\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    const lightHeader = checkLightHeader(frame);\n\n    let contextualFont = 'Default';\n    if (format === 'ocg') contextualFont = 'OCG';\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { ART_FINISH_TYPE, Card, CardFlag, FrameDyeList, getDefaultCardFlag, getDefaultCardOpacity, getDefaultCrop, getDefaultDyeList, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\nimport { checkMonster } from './categorize';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    frame: 'fr',\n    rightFrame: 'rf',\n    leftFrame: 'lf',\n    pendulumRightFrame: 'rpf',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        /** legacy */\n        artFrame: 'opaf',\n        artBorder: 'opab',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n    },\n    finish: 'fn',\n    otherFinish: 'of',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        fontStyle: 'efs',\n        upSize: 'eus',\n        background: 'ebg',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        fontStyle: 'pfs',\n        upSize: 'pus',\n        background: 'pbg',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        embossPitch: 'nsep',\n        embossThickness: 'nset',\n        embossYaw: 'nsey',\n        fillStyle: 'nsfs',\n        font: 'nsft',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasEmboss: 'nshe',\n        hasGradient: 'nshg',\n        hasOutline: 'nshl',\n        hasShadow: 'nshs',\n        headTextFillStyle: 'nshfs',\n        lineColor: 'nslc',\n        lineOffsetX: 'nslox',\n        lineOffsetY: 'nsloy',\n        lineWidth: 'nslw',\n        pattern: 'nspt',\n        preset: 'nspr',\n        shadowBlur: 'nssb',\n        shadowColor: 'nssc',\n        shadowOffsetX: 'nssox',\n        shadowOffsetY: 'nssoy',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    linkRating: 'lr',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    pendulumSize: 'psi',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    dyeList: 'dl',\n    flag: 'fl',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const decompressedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                decompressedCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return decompressedCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const unshortenedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return unshortenedCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let rebuiltCard: Record<string, any>;\n    if (isCondensed) {\n        rebuiltCard = legacyReverseCardDataShortener(card);\n    } else {\n        rebuiltCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(rebuiltCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    /** Ensure that we detech the actual version from incoming cards. */\n    delete baseCard.version;\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    } else {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n            ...migratedCard.pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\n    if (migratedCard.rightFrame == null) migratedCard.rightFrame = 'auto';\n    if (migratedCard.leftFrame == null) migratedCard.leftFrame = 'auto';\n    if (migratedCard.pendulumRightFrame == null) migratedCard.pendulumRightFrame = 'auto';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if (migratedCard.finish) {\n        const finishList = migratedCard.finish;\n\n        if (finishList.includes(ART_FINISH_TYPE)) {\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\n            migratedCard.otherFinish = [\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n                migratedCard.artFinish,\n            ];\n        }\n    }\n    if (Array.isArray(migratedCard.otherFinish)\n        && ((migratedCard.otherFinish as unknown[]).length === 3 || migratedCard.otherFinish[3] == null)\n    ) {\n        migratedCard.otherFinish[3] = getEmptyCard().otherFinish[3];\n    }\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n    migratedCard.backgroundCrop = {\n        ...getDefaultCrop(),\n        ...migratedCard.backgroundCrop,\n    };\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n    if (migratedCard.linkRating == null) migratedCard.linkRating = '';\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    const defaultFlagList = getDefaultCardFlag();\n    if (!Array.isArray(migratedCard.flag)) migratedCard.flag = defaultFlagList;\n    else if (migratedCard.flag.length < defaultFlagList.length) {\n        const currentFlagList = [...migratedCard.flag];\n        migratedCard.flag = defaultFlagList.map((entry, index) => {\n            if (typeof currentFlagList[index] === 'number') return currentFlagList[index];\n            return entry;\n        }) as CardFlag;\n    }\n\n    const defaultDyeList = getDefaultDyeList();\n    if (!Array.isArray(migratedCard.dyeList)) migratedCard.dyeList = defaultDyeList;\n    else if (migratedCard.dyeList.length < defaultDyeList.length) {\n        const currentDyeList = [...migratedCard.dyeList];\n        migratedCard.dyeList = defaultDyeList.map((entry, index) => {\n            if (typeof currentDyeList[index] === 'string') return currentDyeList[index];\n            return entry;\n        }) as FrameDyeList;\n    }\n\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\n        migratedCard.version = 2;\n\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\n        /**\n         * For older card, we have a detailed check to decide whether to display stats or not.\n         * \n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\n         */\n        const isMonster = checkMonster({ frame });\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n            ? !!(atk || def || (isLink && linkMap.length))\n            : isMonster;\n\n        if (!statInEffect) {\n            migratedCard.atk = '';\n            migratedCard.def = '';\n        }\n    }\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n\n    link.download = name;\n    link.href = window.URL.createObjectURL(blob);\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const setCharAt = (str: string, index: number, chr: string) => {\n    if (index > str.length - 1) return str;\n    return str.substring(0, index) + chr + str.substring(index + 1);\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n    PendulumSize,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst boxSizeMap: Record<string, string> = {\n    large: 'Large',\n    medium: 'Normal',\n    small: 'Small',\n};\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue as PendulumSize;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: boxSizeMap[pendulumSize],\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\nimport { checkExtraDeckMonster } from './categorize';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\n    /** Try to being clever */\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\n    const formattedMonsterEffect = (checkExtraDeckMonster({\n        frame: normalizedFrame ?? 'normal'\n    }) && splittedMonsterEffect.length > 1)\n        ? [\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\n            ...splittedMonsterEffect.slice(1),\n        ].join('\\n')\n        : normalizedMonsterEffect;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: formattedMonsterEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","export const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\n/** Contrast formula from google \\ :v / */\nexport const getContrastColor = (rgbColor: number[]) => {\n    return ((rgbColor[0] ?? 0) * 299 + (rgbColor[1] ?? 0) * 587 + (rgbColor[2] ?? 0) * 114) / 1000 >= 128\n        ? '#000000'\n        : '#FFFFFF';\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};\n\nexport const getDynamicFont = ({\n    heightCap,\n    lineCount,\n}: {\n    heightCap: number,\n    lineCount: number,\n}): FontSizeData => {\n    return {\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\n        fontSize: heightCap / lineCount * 0.9,\n        lineHeight: heightCap / lineCount,\n        lineCount,\n        bulletOffset: 1,\n    };\n};\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\n    return {\n        ...fontData,\n        fontList: [\n            ...fontData.fontList,\n            getDynamicFont(dynamicFontOption),\n        ]\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};\n\nexport const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\n\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\n    const {\n        trueBaseline,\n        trueEdge,\n        trueWidth,\n        trueHeightCap,\n    } = coordinateData;\n\n    return {\n        ...coordinateData,\n        trueBaseline: trueBaseline * scale,\n        trueEdge: trueEdge * scale,\n        trueWidth: trueWidth * scale,\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\n    };\n};\n\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\n    return coordinate.map(value => value * scale) as [number, number, number, number];\n};\n\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\n    fontSizeData: FontData,\n    scale: number,\n): FontData => {\n    const {\n        allRightSymbolOffset,\n        bulletOffset,\n        bulletWidth,\n        fontSize,\n        headTextSpacing,\n        iconSymbolWidth,\n        lineHeight,\n        offsetY,\n        ordinalFontOffsetY,\n        wordLetterSpacing,\n    } = fontSizeData;\n\n    return {\n        ...fontSizeData,\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\n        bulletWidth: bulletWidth * scale,\n        fontSize: fontSize * scale,\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\n        lineHeight: lineHeight * scale,\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\n    };\n};\n\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\n    return {\n        ...fontData,\n        fontList: fontData.fontList.map(entry => {\n            return scaleFontSizeData(entry, scale);\n        }),\n    };\n};","export const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './canvas';\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './color';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';\nexport * from './scale';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    cursor: pointer;\n    &:not(:disabled):hover {\n        background-color: var(--sub-primary);\n    }\n    &:disabled {\n        color: var(--color-dim);\n        cursor: not-allowed;\n        background-color: var(--color-contrast);\n        border: var(--bw) solid var(--color-contrast);\n        .anticon {\n            color: inherit;\n        }\n    }\n    input {\n        display: none;\n    }  \n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n        nameStyle,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n    const nextNameStyle: typeof nameStyle = {\n        ...nameStyle,\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\n            ? 'OCG'\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\n                ? 'Default'\n                : nameStyle.font,\n    };\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n        nameStyle: nextNameStyle,\n    };\n};","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-6.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-6.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'input.name-style.emboss.color.alert': (\n            colorTab: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\n                { colorTab },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardFlag,\n    CardOpacity,\n    CondenseType,\n    DYE_LIST_LENGTH,\n    FLAG_LENGTH,\n    Foil,\n    FoilNameMap,\n    FrameDyeList,\n    getArtCanvasCoordinate,\n    getDefaultCardFlag,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultDyeList,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    /** Creative customize stuff */\n    'Star Type',\n    'Star Alignment',\n    'Card Icon Type',\n    'Link Rating',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Emboss Pitch',\n    'Name Style - Emboss Yaw',\n    'Name Style - Emboss Thickness',\n    'Name Style - Has Emboss',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Effect Style - Font Style',\n    'Effect Style - Background',\n    'Pendulum Size',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Pendulum Effect Style - Font Style',\n    'Pendulum Effect Style - Background',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'Other Finish - Attribute',\n    'Other Finish - Background',\n    'Other Finish - Icon',\n    'Other Finish - Sticker',\n    'Left Frame',\n    'Right Frame',\n    'Bottom Right Frame',\n    'Dye List',\n    'Flag',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n    let error = '';\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            artFinish,\n            artFit,\n            artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            backgroundFit,\n            backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            flag,\n            foil,\n            format,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            leftFrame,\n            linkMap,\n            linkRating,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherFinish,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            pendulumStyle,\n            pendulumTextStyle,\n            rightFrame,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            typeAbility,\n            typeTextStyle,\n            dyeList,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n        const stringifedFlag = flag.join('|');\n        const stringifedDyeList = dyeList.join('|');\n\n        write('Format', format);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink ?? undefined);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Link Rating', linkRating);\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Effect Style - Font Style', effectStyle.fontStyle);\n        write('Effect Style - Background', effectStyle.background);\n        write('Pendulum Size', pendulumSize);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\n        write('Pendulum Effect Style - Background', pendulumStyle.background);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('Other Finish - Attribute', otherFinish[0]);\n        write('Other Finish - Icon', otherFinish[1]);\n        write('Other Finish - Sticker', otherFinish[2]);\n        write('Other Finish - Background', otherFinish[3]);\n        write('Left Frame', leftFrame);\n        write('Right Frame', rightFrame);\n        write('Bottom Right Frame', pendulumRightFrame);\n        write('Dye List', stringifedDyeList);\n        write('Flag', stringifedFlag);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\n            error = 'offline-data';\n        }\n\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return {\n        value: [\n            CsvStandardFieldList.join(','),\n            valueList.join('\\n'),\n        ].join('\\n'),\n        error,\n    };\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n                const rightFrame = (reader('Right Frame') ?? emptyCard.rightFrame).toLowerCase();\n                const leftFrame = (reader('Left Frame') ?? emptyCard.leftFrame).toLowerCase();\n                const pendulumRightFrame = (reader('Bottom Right Frame') ?? emptyCard.pendulumRightFrame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = reader('Star Type') === 'text'\n                    ? rawStar\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\n                        ? parseInt(rawStar)\n                        : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\n                const finishIcon = reader('Other Finish - Icon') ?? '';\n                const finishBackground = reader('Other Finish - Background') ?? '';\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter(entry => typeof entry === 'string' && entry !== '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\n                const effectBackground = (reader('Effect Style - Background') ?? emptyCard.effectStyle.background).toLowerCase();\n                const pendulumEffectBackground = (reader('Pendulum Effect Style - Background') ?? emptyCard.pendulumStyle.background).toLowerCase();\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n                const linkRating = reader('Link Rating') ?? '';\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n                const baseFlag = reader('Flag').split('|').map(Number).slice(0, FLAG_LENGTH) as CardFlag;\n                const flag = getDefaultCardFlag().map((entry, index) => {\n                    if (typeof baseFlag[index] === 'number') return baseFlag[index];\n                    return entry;\n                }) as CardFlag;\n\n                const baseDyeList = reader('Dye List').split('|').map(String).slice(0, DYE_LIST_LENGTH) as FrameDyeList;\n                const dyeList = getDefaultDyeList().map((entry, index) => {\n                    if (typeof baseDyeList[index] === 'string') return baseDyeList[index];\n                    return entry;\n                }) as FrameDyeList;\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    dyeList,\n                    effect,\n                    effectStyle: { condenseTolerant, upSize: effectUpSize, fontStyle: effectFontStyle, background: effectBackground },\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    flag,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    leftFrame,\n                    linkMap,\n                    linkRating,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherFinish: [finishAttribute, finishIcon, finishSticker, finishBackground] as OtherFinish,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumRightFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumSize,\n                    pendulumStyle: { upSize: pendulumEffectUpSize, fontStyle: pendulumEffectFontStyle, background: pendulumEffectBackground },\n                    pendulumTextStyle,\n                    rightFrame,\n                    setId,\n                    star,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n    if (frameResult !== 0) return frameResult;\n\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n    return bottomFrameResult;\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst, ExportFormat } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    globalScale: number,\n    exportFormat: ExportFormat,\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n    showExtraAttribute: boolean,\n    allowHotkey: boolean,\n    reduceMotionColor: boolean,\n    mirrorPendulumScale: boolean,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        allowHotkey,\n        exportFormat,\n        globalScale,\n        mirrorPendulumScale,\n        reduceMotionColor,\n        resolution,\n        showCreativeOption,\n        showExtraAttribute,\n        showExtraDecorativeOption,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\n                ? globalScale\n                : 1,\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraAttribute: typeof showExtraAttribute === 'boolean' ? showExtraAttribute : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity, PendulumSize } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const resolution = useSetting(state => state.setting.resolution);\n    const {\n        opacity,\n        name,\n        isPendulum,\n        pendulumSize,\n    } = currentCard;\n    const pendingSave = useRef(false);\n\n    const download = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && clonedCanvas && clonedCanvasContext\n            && !isTainted\n        ) {\n            try {\n                if (size) {\n                    clonedCanvas.width = size[0];\n                    clonedCanvas.height = size[1];\n                }\n                /** Resize here */\n                clonedCanvasContext.drawImage(\n                    drawCanvas,\n                    0, 0, drawCanvas.width, drawCanvas.height,\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\n                );\n\n                const normalizedName = normalizeCardName(name);\n                var link = document.createElement('a');\n                link.download = normalizedName\n                    ? `${normalizedName}.png`\n                    : 'card.png';\n                link.href = clonedCanvas.toDataURL('image/png');\n                link.click();\n            } catch (e) {\n                onDownloadError();\n            }\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const normalizedName = normalizeCardName(name);\n\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [name]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            pendulumSize,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRGBA } from 'src/util';\n\nexport type UseColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n};\nexport const useColorPicker = ({\n    value = '',\n    onChange,\n}: UseColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRGBA(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        });\n    }, [value]);\n\n    return {\n        inputText: currentText,\n        color: internalValue,\n        setColor: setCurrentText,\n    };\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth * maximumScale,\n    height = CanvasHeight * maximumScale,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\n        pendulumSize?: PendulumSize,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n                const pendulumSuffix = pendulumSize\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\n                    : DEFAULT_PENDULUM_SIZE;\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType, pendulumSuffix);\n                    }\n                } else {\n                    await caller(finishType, pendulumSuffix);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_LINE_COLOR = '#000000';\nconst DEFAULT_LINE_WIDTH = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x,\n    y,\n    blur,\n    color,\n    colorGradient,\n    shadowColor,\n    lineColor,\n    lineColorGradient,\n    lineWidth,\n    globalScale = 1,\n    useDefault = true,\n}: {\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    useDefault?: boolean,\n    colorGradient?: CanvasGradient,\n    lineColorGradient?: CanvasGradient,\n} & CanvasTextStyle) => {\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\n\n    return () => {\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n            ctx.drawImage(image, actualDX, actualDY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n                ctx.drawImage(image, actualDX, actualDY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n    );\n};\n\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number),\n    dy: number | ((image: HTMLImageElement) => number),\n    dw: number | ((image: HTMLImageElement) => number),\n    dh: number | ((image: HTMLImageElement) => number),\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n\n            if (\n                typeof actualSX === 'number'\n                && typeof actualSY === 'number'\n                && typeof actualSW === 'number'\n                && typeof actualSH === 'number'\n            ) {\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n            } else {\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n            }\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n    \n                if (\n                    typeof actualSX === 'number'\n                    && typeof actualSY === 'number'\n                    && typeof actualSW === 'number'\n                    && typeof actualSH === 'number'\n                ) {\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n                } else {\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n                }\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    dx, dy,\n    dw, dh,\n    sx, sy,\n    sw, sh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n        dw, dh,\n        sx, sy,\n        sw, sh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    globalScale: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    FontDeviationMap,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n    globalScale: number,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n        ? 0.046875\n        : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2 * globalScale;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation,\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviationMap,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        letterMap = {},\n        threshold = 10,\n    } = deviation ?? {};\n    const {\n        uniformBoxDescent,\n    } = letterMap[letter] ?? {};\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    let uniformYScale = 1;\n    let boxDescentCompensate = 0;\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\n\n        /** Need to carefully survey if we over-compensate in edge case. */\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\n\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\n    }\n    ctx.scale(1, uniformYScale);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\n    });\n    ctx.scale(1, 1 / uniformYScale);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: FontData,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n    globalScale: number,\n) => {\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        fontSize,\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = () => {\n        symbolFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyNumberFont, stopApplyNumberFont,\n        applyLargerText, stopApplyLargerText,\n        applySymbolFont, stopApplySymbolFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applyFuriganaFont, stopApplyFuriganaFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n                + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    FontData,\n    BULLET_LETTER,\n    TCGSymbolLetterRegex,\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    FragmentSplitRegex,\n    WholeWordRegex,\n    DefaultFontSizeData,\n    ST_ICON_SYMBOL,\n    TextData,\n    NoSpaceRegex,\n    LETTER_GAP_RATIO,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    SquareBracketLetterRegex,\n    CapitalLetterRegex,\n    NumberRegex,\n    OCGNoOverheadGapRegex,\n    GAP_PER_WIDTH_RATIO,\n    RUBY_REGEX,\n    DefaultFontData,\n    RUBY_BONUS_RATIO,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NonCompressableRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\nimport { getLetterWidth } from './letter';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing: _letterSpacing,\n    format,\n    globalScale,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    format: string,\n    globalScale: number,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont();\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\n        );\n\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    format,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    globalScale,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    globalScale: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\nimport { scaleFontSizeData } from 'src/util';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    textDrawer,\n    debug = false,\n    option,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    globalScale: number,\n    option?: {\n        drawHeadText?: boolean,\n    },\n    debug?: boolean,\n}) => {\n    const { drawHeadText = true } = option ?? {};\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        headTextFillStyle,\n        headTextBold = DefaultFontData.headTextBold,\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        metricMethod,\n        fontStyle,\n        letterDeviationMap = {},\n    } = fontData;\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        bulletOffset = scaledDefaultFontSizeData.bulletOffset,\n        bulletWidth,\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\n        fontSize,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\n        wordLetterSpacing,\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\n    } = fontSizeData;\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const {\n        stopApplyFuriganaFont, applyFuriganaFont,\n        stopApplyLargerText, applyLargerText,\n        stopApplyNumberFont, applyNumberFont,\n        stopApplyOrdinalFont, applyOrdinalFont,\n        applyScale, reverseScale,\n        applySymbolFont, stopApplySymbolFont,\n        applyAsymmetricScale, resetScale,\n    } = textWorker;\n\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    const baseline = trueBaseline / yRatio;\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n            globalScale,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(\n                    ctx,\n                    fragmentEdge,\n                    trueBaseline + bulletOffset - 1 * globalScale,\n                    bulletWidth,\n                    getBulletSpacing(format) * globalScale,\n                );\n                fragmentEdge += bulletWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg'\n                        ? allRightSymbolOffset\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    globalScale,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                if (drawHeadText) fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                    globalScale,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[`${globalScale}`],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applySymbolFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const letter = fragment;\n                applySymbolFont();\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\n                fragmentEdge += letterWidth;\n\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                    globalScale,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap?.[`${globalScale}`],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    OCG_RUBY_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    ocgKeywordDataMap,\n    WHOLE_WORD_SOURCE,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    OCG_BULLET_SOURCE,\n    tcgToOCGLetterMap,\n    ocgToTCGLetterMap,\n    UNCOMPRESSED_SOURCE,\n    ocgNumberCircleMap,\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    FLAVOR_CONDITION_SOURCE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    contextualDoubleQuoteRegex,\n    NB_FULL_LINE_OPEN,\n    NB_FULL_LINE_CLOSE\n} from 'src/model';\n\nexport type LineOption = {\n    alignment: 'left' | 'justify',\n};\nexport const splitEffect = (effect: string, isNormal = false) => {\n    let effectText = effect;\n\n    const fullLineList = [];\n    const fullLineListOption: LineOption[] = [];\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\n    let lineReplacement: string | undefined;\n    let lineContent: string | undefined;\n    let fullLineReplacement: string | undefined;\n    let fullLineContent: string | undefined;\n    let willContinue = false;\n    do {\n        const result = wholeLineRegex.exec(effectText);\n        lineReplacement = result?.[1];\n        lineContent = result?.[2];\n        fullLineReplacement = result?.[3];\n        fullLineContent = result?.[4];\n\n        willContinue = false;\n        if (lineContent && lineReplacement) {\n            fullLineList.push(lineContent);\n            effectText = effectText.replace(lineReplacement, '');\n            fullLineListOption.push({ alignment: 'left' });\n            willContinue = true;\n        } else if (fullLineContent && fullLineReplacement) {\n            fullLineList.push(fullLineContent);\n            effectText = effectText.replace(fullLineReplacement, '');\n            fullLineListOption.push({ alignment: 'justify' });\n            willContinue = true;\n        }\n    } while (willContinue);\n\n    let effectFlavorCondition = '';\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n    /** Restore all remaining nb line symbol back to their normal letters. */\n    effectText = effectText\n        .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\n        .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]');\n\n    return {\n        fullLineList,\n        fullLineListOption,\n        effectText,\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    NormalFontData,\n} from '../../model';\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    useItalic,\n    statInEffect,\n    typeInEffect,\n    frameType,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    useItalic: boolean,\n    frameType: 'normal' | 'pendulumLarge',\n}) => {\n    const coordinateKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n    const fontDataKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\n        fontData = NormalFontData[fontDataKey];\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nexport const drawEffect = ({\n    ctx,\n    content,\n    isNormal = false,\n    // useItalic = false,\n    fontDataKey = 'tcg',\n    fontData = EffectFontData[fontDataKey],\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    useItalic?: boolean,\n    fontData?: FontData,\n    fontDataKey?: string,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n        globalScale: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n        globalScale = 1,\n    } = option ?? {};\n    let sizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return sizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        effectText,\n        effectFlavorCondition,\n        fullLineList,\n        fullLineListOption,\n    } = splitEffect(normalizedContent, isNormal);\n\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\n    const paragraphList = effectText ? effectText.split('\\n') : [];\n\n    let effectiveLineCount = 0;\n    const scaledFontData = scaleFontData(fontData, globalScale);\n    const { fontList } = scaledFontData;\n    const yRatio = 1;\n    /**\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\n     * \n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\n     * */\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\n        const requireDynamicSize = sizeLevel === fontList.length\n            ? true\n            : false;\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\n            ? {\n                '1': 1000,\n                '2': 1000,\n                '3': 1000,\n            }\n            : (format === 'tcg'\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\n                    ? CondenseTolerantMap['relaxed']\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n                : {\n                    '1': 800,\n                    '2': 800,\n                    '3': 800,\n                });\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n            trueHeightCap,\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\n\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\n        const dynamicFontData = useDynamicSize\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\n            : scaledFontData;\n        const dynamicSizeLevel = useDynamicSize\n            ? sizeLevel\n            : appliedSizeLevel;\n        const {\n            font: dynamicFont,\n            fontList: dynamicFontList,\n        } = dynamicFontData;\n        const fontSizeData = useDynamicSize\n            ? dynamicFontList[dynamicSizeLevel]\n            : fontList[appliedSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(dynamicFont)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData: dynamicFontData,\n            fontLevel: dynamicSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = (additionalLineCount > lineCount && typeof trueHeightCap === 'number')\n            ? 1 // If dynamic size is possible, no need to find condense value if current lint count is larger than the font's maximum line count, it will overflow anyways.\n            : condense(\n                median => {\n                    const { currentLineList, currentLineCount } = createLineList({\n                        ctx,\n                        median,\n                        paragraphList,\n                        additionalLineCount,\n                        format, textData,\n                        width,\n                        globalScale,\n                    });\n                    lineListWithRatio = currentLineList;\n\n                    if (currentLineCount > lineCount) return false;\n                    return true;\n                },\n                200,\n            );\n        effectiveLineCount = lineListWithRatio.length + additionalLineCount;\n\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            (effectiveMedian < tolerantValue)\n            && (sizeLevel < fontList.length)\n        ) {\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\n        } else {\n            clearCanvas(ctx);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            /** Naturally, non-brekable lines have their own condense ratio. */\n            const fullLineListWithRatio = fullLineList.map((line, index) => {\n                return {\n                    line,\n                    isLast: fullLineListOption[index].alignment === 'justify' ? false : true,\n                    effectiveMedian: condense(\n                        median => {\n                            const { currentLineCount } = createLineList({\n                                ctx,\n                                median,\n                                paragraphList: [line],\n                                format, textData,\n                                width,\n                                globalScale,\n                            });\n    \n                            if (currentLineCount > 1) return false;\n                            return true;\n                        },\n                    )\n                };\n            });\n\n            /** Draw each line based on their token list and corresponding ratio. */\n            [\n                ...fullLineListWithRatio,\n                ...lineListWithRatio,\n            ].forEach(({\n                line,\n                isLast,\n                effectiveMedian,\n            }) => {\n                const xRatio = effectiveMedian / 1000;\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\n\n                ctx.scale(xRatio, yRatio);\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    spaceWidth,\n                    textData,\n                    format,\n                    globalScale,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            });\n\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\n            if (effectFlavorCondition.length > 0 && EffectFontData[fontDataKey]) {\n                const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\n                const dynamicFlavorFontData = useDynamicSize\n                    ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\n                    : flavorFontData;\n                const flavorFontSizeData = useDynamicSize\n                    ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\n                    : flavorFontData.fontList[appliedSizeLevel];\n                const {\n                    fontSize,\n                    lineHeight,\n                } = flavorFontSizeData;\n                const flavorTextCurrentFont = createFontGetter();\n                ctx.font = flavorTextCurrentFont\n                    .setSize(fontSize)\n                    .setFamily(flavorFontData.font)\n                    .getFont();\n                const flavorTextData = {\n                    fontData: dynamicFlavorFontData,\n                    fontLevel: dynamicSizeLevel,\n                    currentFont: flavorTextCurrentFont,\n                };\n                const internalEffectiveMedian = condense(\n                    median => {\n                        const { currentLineCount } = createLineList({\n                            ctx,\n                            median,\n                            paragraphList: [effectFlavorCondition],\n                            format, textData: flavorTextData,\n                            width,\n                            globalScale,\n                        });\n\n                        if (currentLineCount > 1) return false;\n                        return true;\n                    },\n                );\n                const xRatio = internalEffectiveMedian / 1000;\n\n                ctx.scale(xRatio, yRatio);\n                const tokenList = tokenizeText(effectFlavorCondition);\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n                 * \n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n                 * \n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n                 * */\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    textData: flavorTextData,\n                    format,\n                    globalScale,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            break;\n        }\n        resetStyle();\n    }\n\n    return sizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\n\nconst {\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    globalScale,\n    cardIcon,\n    text,\n    star,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n    loopStarFinish,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    globalScale: number,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = typeof star === 'string'\n        ? star === '' ? 0 : 1\n        : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    const {\n        canvas: starCanvas,\n        ctx: starCtx,\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\n    await Promise.all([...Array(normalizedStarCount)]\n        .map(async () => {\n            offset += (starWidth + startSpacing);\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(starCtx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n    if (loopStarFinish) {\n        const {\n            canvas: starFinishCanvas,\n            ctx: starFinishCtx,\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\n        starFinishCtx.drawImage(starCanvas, 0, 0);\n        await loopStarFinish(\n            starFinishCtx,\n            'art',\n            async (finishType) => {\n                return await drawAsset(\n                    starFinishCtx,\n                    `finish/finish-typeart-${finishType}.png`,\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\n                );\n            },\n        );\n        starCtx.globalCompositeOperation = 'source-in';\n        starCtx.drawImage(starFinishCanvas, 0, 0);\n        ctx.drawImage(starCanvas, 0, 0);\n    } else {\n        ctx.drawImage(starCanvas, 0, 0);\n    }\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n    globalScale,\n    x, y,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n    globalScale: number,\n    x: number,\n    y: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    ctx.scale(globalScale, globalScale);\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\n    ctx.resetTransform();\n    return;\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    globalScale,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    globalScale,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...scaleDrawCoordinate(coordinate, globalScale),\n        globalScale,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    rating: string,\n    style: CanvasTextStyle,\n    globalScale: number,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || typeof rating !== 'string') return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\n        globalScale,\n        style,\n    );\n    const baseline = isNaN(Number(rating))\n        ? 1106\n        : 1105;\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = `bold ${26.55 * globalScale}px RoGSanSrfStd-Bd`;\n    ctx.fillText(`${rating}`, 622.75 * globalScale, baseline * globalScale);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import { CanvasConst } from 'src/model';\nimport { drawAsset } from '../image';\nimport { createCanvas } from 'src/util';\n\nconst {\n    width,\n    height,\n    topToPendulumStructure,\n} = CanvasConst;\nexport const getMaskPromise = () => {\n    const topRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-top-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const bottomRightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-bottom-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    /**\n     * Be careful: Bottom right + Top right mask does NOT cover the entire right area when bottom left frame is also presented, so if both of them are the same frame, we might need to use right mask.\n     * \n     * Reason: Because bottom left frame also contains bottom right frame with transparency, if we draw another bottom right frame (that also has transparency) on top of it, it will not overlap the bottom frame, but merged with it, create a mix of both instead of total replacement, which is our desired effect. */\n    const rightMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-right.png');\n            return ctx.getImageData(0, 0, width, height).data;\n        }\n        return null;\n    })();\n    const nameMask = (async () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = topToPendulumStructure;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            await drawAsset(ctx, 'mask/mask-name.png');\n            return ctx.getImageData(0, 0, width, topToPendulumStructure).data;\n        }\n        return null;\n    })();\n\n    return {\n        topRight: topRightMask,\n        bottomRight: bottomRightMask,\n        right: rightMask,\n        name: nameMask,\n    };\n};\nexport const MaskPromise = getMaskPromise();\n\n/**\n * Draw the image onto an empty canvas, then apply an alpha mask over it.\n * \n * Each pixel in the image will be drawn with the alpha data from the corresponding pixel of the mask.\n * */\nexport const applyAlphaMask = async (\n    urlOrCanvas: string | CanvasImageSource,\n    maskData: Uint8ClampedArray<ArrayBufferLike>,\n    width: number,\n    height: number,\n) => {\n    const { ctx, canvas } = createCanvas(width, height);\n    if (typeof urlOrCanvas === 'string') await drawAsset(ctx, urlOrCanvas, 0, 0);\n    else ctx.drawImage(urlOrCanvas, 0, 0, width, height);\n    const layerData = ctx.getImageData(0, 0, width, height).data;\n    for (let cnt = 0; cnt < layerData.length; cnt += 4) {\n        layerData[cnt + 3] = maskData[cnt + 3];\n    }\n\n    ctx.putImageData(new ImageData(layerData, width, height), 0, 0);\n\n    return canvas;\n};","import {\n    ArrowPositionMap,\n    ArtFinishMap,\n    BackgroundType,\n    CanvasConst,\n    CardOpacity,\n    Foil,\n    FrameDyeList,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PendulumSizeMap,\n    PendulumSizeMapException,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { createCanvas, dyeCanvas, getCardIconFromFrame, resolveFrameStyle } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\nimport { getFinishIterator } from '../canvas-util';\nimport { applyAlphaMask, MaskPromise } from './mask';\n\nexport const baseDrawLinkArrowMap = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    linkMap: string[],\n    positionType: keyof typeof ArrowPositionMap,\n    boundless: boolean,\n) => {\n    if (!ctx) return;\n    ctx.scale(globalScale, globalScale);\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n        .map(async entry => {\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n            const isActive = linkMap.includes(`${entry}`);\n            const baseLink = `link/link-inactive-${entry}`;\n            const activeLink = `link/link-active-${entry}`;\n            const coordinate = [left, top, width, height] as const;\n\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n            if (isActive) {\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n            } else return;\n        })\n    );\n    ctx.resetTransform();\n};\nexport const baseDrawLinkMapFoil = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    foil: string,\n    withBorder: boolean,\n    positionType: keyof typeof ArrowPositionMap,\n) => {\n    if (!ctx) return;\n    if (foil === 'normal') return;\n\n    ctx.scale(globalScale, globalScale);\n    if (withBorder) {\n        await drawAsset(ctx, `link/link-overlay-arrow-${foil}.png`, 0, 175);\n    } else {\n        await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n            .map(async entry => {\n                const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n                const coordinate = [left, top, width, height] as const;\n\n                await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${foil}.png`, ...coordinate);\n            })\n        );\n    }\n    ctx.resetTransform();\n};\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n    topToPendulumStructure,\n    topToPendulumStructureFrame,\n    pendulumIconFrameHeight,\n    pendulumIconFrameWidth,\n    pendulumFrameHeight,\n    pendulumFrameWidth,\n    attributeSize,\n    attributeX,\n    attributeY,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    globalScale,\n    format,\n    hasBackground,\n    frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n    dyeList,\n    effectBackground, pendulumEffectBackground,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    pendulumFrameTypeMap,\n    otherFinish,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    globalScale: number,\n    format: string,\n    frame: string, leftFrame: string, pendulumFrame: string, rightFrame: string, pendulumRightFrame: string,\n    dyeList: FrameDyeList,\n    effectBackground: string, pendulumEffectBackground: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    foil: Foil,\n    pendulumSize: PendulumSize,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\n    otherFinish: OtherFinish,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFrameX,\n        artFrameY,\n        artFrameHeight,\n        artFrameWidth,\n        artFinishX,\n        artFinishY,\n        artWidth,\n        artRatio,\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n    const {\n        frameType,\n        effectBoxOffsetY,\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\n        pendulumBoxOffsetY,\n        artlessFrameY,\n    } = PendulumSizeMap[pendulumSize];\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderTypeList = frame === 'synchro'\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\n        : [frameBorderType];\n    const applyArtFinish = !boundless && artBorder;\n\n    const resolvedLayoutStyle = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n        effectBackground: resolvedEffectBackground,\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\n    } = resolvedLayoutStyle;\n\n    const resultAPI = {\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            /** Combine layer frame here */\n            const { ctx: topFrameCtx, canvas: topFrameCanvas } = createCanvas();\n            await drawAsset(topFrameCtx, `frame/frame-${topLeftFrame}.png`, 0, 0);\n            const { canvas: dyedTopFrameCanvas, ctx: dyedTopFrameCtx } = dyeCanvas(topFrameCanvas, dyeList[0]);\n            if (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '') {\n                const topRightCanvas = await applyAlphaMask(\n                    `frame/frame-${topRightFrame}.png`,\n                    await MaskPromise.topRight,\n                    cardWidth,\n                    cardHeight,\n                );\n                const { canvas: dyedTopRightCanvas } = dyeCanvas(topRightCanvas, dyeList[1]);\n                dyedTopFrameCtx.drawImage(dyedTopRightCanvas, 0, 0);\n            }\n\n            const { ctx: bottomFrameCtx, canvas: bottomFrameCanvas } = createCanvas();\n            await drawAsset(bottomFrameCtx, `frame-pendulum/frame-pendulum-${bottomLeftFrame}.png`, 0, 0);\n            const { canvas: dyedBottomFrameCanvas, ctx: dyedBottomFrameCtx } = dyeCanvas(bottomFrameCanvas, dyeList[2]);\n            if (bottomLeftFrame !== bottomRightFrame || dyeList[2] !== '' || dyeList[3] !== '') {\n                /** What is this?\n                 * \n                 * Because the \"bottom left\" frame is not actually bottom, but both bottom left and bottom right with transparency. If we draw it first, then draw our \"bottom right\" frame on top of it, it will mixed with the bottom left frame (because both contains transparency), instead of replacing it, create an unintended side effect. Therefore we cut the part that may cause mixing color from the bottom left frame, before drawing the bottom right part.\n                 */\n                dyedBottomFrameCtx.clearRect(714, 0, 99, cardHeight);\n                const bottomRightCanvas = await applyAlphaMask(\n                    `frame/frame-${bottomRightFrame}.png`,\n                    await MaskPromise.bottomRight,\n                    cardWidth,\n                    cardHeight,\n                );\n                const { canvas: dyedBottomRightCanvas } = dyeCanvas(bottomRightCanvas, dyeList[3]);\n                dyedBottomFrameCtx.drawImage(dyedBottomRightCanvas, 0, 0);\n            }\n\n            ctx.globalAlpha = opacityBody / 100;\n            ctx.scale(globalScale, globalScale);\n            /** Leave empty space for card art */\n            if (isPendulum) {\n                dyedTopFrameCtx.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n                dyedBottomFrameCtx.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\n            }\n            /** Start assembling the canvas */\n            ctx.drawImage(dyedTopFrameCanvas, 0, 0);\n            ctx.drawImage(dyedBottomFrameCanvas, 0, 0);\n            ctx.resetTransform();\n\n            /** Check for background that replace the frame here */\n            if (!hasBackground || !backgroundCanvas || backgroundType !== 'frame') {\n                ctx.globalAlpha = 1;\n                return;\n            }\n\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n            const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\n            const clonedCanvasCtx = clonedCanvas?.getContext('2d');\n            if (!clonedCanvas || !clonedCanvasCtx) {\n                ctx.globalAlpha = 1;\n                return;\n            }\n\n            /** Clone background to create a new frame */\n            clonedCanvas.width = cardWidth * globalScale;\n            clonedCanvas.height = cardHeight * globalScale;\n            clonedCanvasCtx.drawImage(\n                backgroundCanvas,\n                0, 0, backgroundWidth, backgroundHeight,\n                0, 0, cardWidth * globalScale, cardHeight * globalScale,\n            );\n            ctx.drawImage(\n                clonedCanvas,\n                0, 0,\n                globalScale * cardWidth, globalScale * cardHeight,\n                0, 0,\n                globalScale * cardWidth, globalScale * cardHeight,\n            );\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: (\n            externalCtx = ctx,\n        ) => {\n            if (!artworkCanvas || !externalCtx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            externalCtx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: async (\n            externalCtx = ctx,\n            hasArtBorder = false,\n        ) => {\n            if (!backgroundCanvas || !externalCtx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n\n            const {\n                artX,\n                artY,\n                artWidth,\n                artFrameWidth,\n                artFrameX,\n                artFrameY,\n                ratio,\n                artRatio,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                opacity,\n                backgroundType,\n                pendulumSize,\n            );\n            externalCtx.drawImage(\n                backgroundCanvas,\n                0, 0,\n                backgroundWidth, backgroundHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / ratio,\n            );\n            const backgroundFinish = otherFinish[3] ?? 'normal';\n            if (backgroundFinish !== 'normal' && hasArtBorder) {\n                const loopBackgroundFinish = getFinishIterator([backgroundFinish], ArtFinishMap);\n                await loopBackgroundFinish(\n                    externalCtx,\n                    'art',\n                    async type => drawAssetWithSize(\n                        externalCtx,\n                        `finish/art-finish-${type}.png`,\n                        globalScale * artFrameX, globalScale * artFrameY,\n                        globalScale * artFrameWidth, globalScale * artFrameWidth / artRatio,\n                    ),\n                );\n            }\n        },\n        drawAttribute: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const {\n                canvas: attributeCanvas,\n                ctx: attributeCtx,\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\n            await drawAsset(\n                attributeCtx,\n                `attribute/attr-${format}-${attribute.toLowerCase()}.png`,\n                attributeX, attributeY,\n            );\n            const attributeFinish = otherFinish[0] ?? 'normal';\n            if (attributeFinish !== 'normal') {\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\n                const {\n                    canvas: attributeFinishCanvas,\n                    ctx: attributeFinishCtx,\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\n                attributeFinishCtx.drawImage(attributeCanvas, 0, 0);\n                await loopAttributeFinish(\n                    attributeFinishCtx,\n                    'art',\n                    async (finishType) => {\n                        return await drawAsset(\n                            attributeFinishCtx,\n                            `finish/finish-typeart-${finishType}.png`,\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\n                        );\n                    },\n                );\n                attributeCtx.globalCompositeOperation = 'source-in';\n                attributeCtx.drawImage(attributeFinishCanvas, 0, 0);\n                ctx.drawImage(attributeCanvas, 0, 0);\n            } else {\n                ctx.drawImage(attributeCanvas, 0, 0);\n            }\n            ctx.resetTransform();\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const starFinish = otherFinish[1] ?? 'normal';\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starAlignment,\n                style,\n                globalScale,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n                loopStarFinish,\n            });\n            ctx.resetTransform();\n        },\n        drawPendulumScaleIcon: async () => {\n            if (!ctx) return;\n            const {\n                canvas: pendulumIconCanvas,\n                ctx: pendulumIconCtx,\n            } = createCanvas(pendulumIconFrameWidth, pendulumIconFrameHeight);\n            await drawAsset(pendulumIconCtx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\n\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\n                pendulumIconCtx.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n            if (pendulumFrameTypeMap.red === 'scaleless') {\n                pendulumIconCtx.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\n            ctx.resetTransform();\n        },\n        drawStatBorder: async (style: CanvasTextStyle) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                globalScale,\n                style,\n            );\n            ctx.resetTransform();\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            const { ctx: nameBackgroundCtx, canvas: nameBackgroundCanvas } = createCanvas(cardWidth, topToPendulumStructure);\n            await drawAsset(nameBackgroundCtx, `background/background-name-${topLeftFrame}.png`, 0, 0);\n            const {\n                canvas: dyedLeftNameCanvas,\n                ctx: dyedLeftNameCtx\n            } = dyeCanvas(nameBackgroundCanvas, dyeList[0]);\n            if (topLeftFrame !== topRightFrame || dyeList[1] !== '') {\n                const nameRightCanvas = await applyAlphaMask(\n                    `background/background-name-${topRightFrame}.png`,\n                    await MaskPromise.name,\n                    cardWidth,\n                    topToPendulumStructure,\n                );\n                const dyedRightNameCanvas = dyeCanvas(nameRightCanvas, dyeList[1]).canvas;\n                dyedLeftNameCtx.drawImage(dyedRightNameCanvas, 0, 0);\n            }\n            ctx.globalAlpha = opacityName / 100;\n            ctx.drawImage(dyedLeftNameCanvas, 0, 0);\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n\n            const { ctx: effectBackgroundCtx, canvas: effectBackgroundCanvas } = createCanvas();\n            if (withPendulum) {\n                await drawAssetWithSize(\n                    effectBackgroundCtx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                    0, 0 + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                );\n            } else {\n                await drawAsset(\n                    effectBackgroundCtx,\n                    `background/background-text-${resolvedEffectBackground}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY,\n                );\n            }\n            const dyedEffectBackgroundCanvas = dyeCanvas(effectBackgroundCanvas, dyeList[4]).canvas;\n            ctx.globalAlpha = opacityText / 100;\n            ctx.drawImage(dyedEffectBackgroundCanvas, 0, 0);\n\n            if (withPendulum) {\n                const { ctx: pendulumEffectBackgroundCtx, canvas: pendulumEffectBackgroundCanvas } = createCanvas();\n                const {\n                    exceptionFrameType = frameType,\n                    exceptionPendulumBoxOffsetHeight = 0,\n                } = PendulumSizeMapException[pendulumSize][resolvedPendulumEffectBackground] ?? {};\n                await drawAssetWithSize(\n                    pendulumEffectBackgroundCtx,\n                    `background/background-${exceptionFrameType}-${resolvedPendulumEffectBackground}.png`,\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\n                    pendulumBoxWidth, pendulumBoxHeight,\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\n                );\n                const dyedPendulumEffectBackgroundCanvas = dyeCanvas(pendulumEffectBackgroundCanvas, dyeList[5]).canvas;\n                ctx.globalAlpha = opacityPendulum / 100;\n                ctx.drawImage(dyedPendulumEffectBackgroundCanvas, 0, 0);\n            }\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n            ctx.resetTransform();\n            return;\n        },\n        drawNameBorder: async () => {\n            if (nameBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\n                }\n                ctx.resetTransform();\n            } else {\n                Promise.resolve();\n            }\n            return;\n        },\n        drawArtBorder: async () => {\n            if (artBorder && ctx) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\n            if (!ctx) return;\n            /** We create a new canvas for easier manipulation. */\n            const { canvas: pendulumBorderCanvas, ctx: pendulumBorderCtx } = createCanvas();\n            await drawAssetWithSize(\n                pendulumBorderCtx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                    + `-${foilType}`\n                    + '-artless'\n                    + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\n                    + '.png',\n                30, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                0, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            await drawAssetWithSize(\n                pendulumBorderCtx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                    + `-${foilType}`\n                    + '-artless'\n                    + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\n                    + '.png',\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                pendulumFrameWidth / 2, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            if (artBorder) {\n                /**\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\n                 */\n                pendulumBorderCtx.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\n                await drawAsset(\n                    pendulumBorderCtx,\n                    `frame-pendulum/border-pendulum-${pendulumSize}`\n                        + `-${foilType}`\n                        + '.png',\n                    30, topToPendulumStructureFrame,\n                );\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\n            ctx.resetTransform();\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (!hasFoil && bottomLeftFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n        drawCardBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n            ctx.resetTransform();\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n            ctx.resetTransform();\n        },\n        drawEffectBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n            ctx.resetTransform();\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if ((artBorder || nameBorder) && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'name',\n                    async type => {\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                    },\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n                ctx.resetTransform();\n            }\n        },\n        drawArtFinish: async (\n            artCtx = ctx,\n        ) => {\n            if (!applyArtFinish || !artCtx) return;\n            artCtx.scale(globalScale, globalScale);\n            await loopArtFinish(\n                artCtx,\n                'art',\n                async (finishType, pendulumSuffix) => {\n                    return await drawAssetWithSize(\n                        artCtx,\n                        `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\n                        artFinishX, artFinishY,\n                        artFrameWidth, artFrameWidth / artRatio,\n                    );\n                },\n                pendulumSize,\n            );\n            artCtx.resetTransform();\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async (\n            artCtx = ctx,\n        ) => {\n            if (!artCtx) return;\n            artCtx.scale(globalScale, globalScale);\n            await loopFinish(\n                artCtx,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        artCtx,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n            artCtx.resetTransform();\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(\n                    ctx,\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\n                    0, 0,\n                ),\n            );\n            ctx.resetTransform();\n        },\n        drawBorderPendulumFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => {\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0 + cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                        cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                }\n            );\n            ctx.resetTransform();\n        },\n        drawFrameFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawFrameBackgroundFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n            ctx.resetTransform();\n        },\n        drawCardBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n            ctx.resetTransform();\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { setTextStyle } from '../canvas-util';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    canvas: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _trueBaseline: number,\n    _width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        cloneNode: HTMLCanvasElement | null | undefined,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n        globalScale: number,\n    },\n) => {\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\n    const edge = _edge * globalScale;\n    const trueBaseline = _trueBaseline * globalScale;\n    const width = _width * globalScale;\n    const cloneCtx = cloneNode?.getContext('2d');\n\n    if (!(ctx && cloneCtx && value)) return;\n    const {\n        embossPitch,\n        embossYaw,\n        embossThickness,\n        fillStyle,\n        font,\n        gradientAngle,\n        gradientColor,\n        hasEmboss,\n        hasGradient,\n        hasOutline,\n        hasShadow,\n        headTextFillStyle,\n        lineColor,\n        lineOffsetX,\n        lineOffsetY,\n        lineWidth,\n        shadowBlur,\n        shadowColor,\n        shadowOffsetX,\n        shadowOffsetY,\n        pattern,\n    } = { ...getDefaultNameStyle(), ...style };\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n\n    ctx.textAlign = 'left';\n    const fontData = scaleFontData({\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n        headTextFillStyle,\n    }, globalScale);\n    const fontGetter = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: fontGetter,\n    };\n    const quoteConvertedValue = normalizeCardText(\n        value,\n        format,\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n    );\n\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n    const crudeTokenList = format === 'ocg'\n        ? [quoteConvertedValue]\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n    const fontGetterForWidthCalculating = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const normalStyle = fontGetterForWidthCalculating.getFont();\n    const symbolStyle = fontGetterForWidthCalculating\n        .setSize(cur => cur * fontData.symbolFontRatio)\n        .setStyle('small-caps')\n        .setFamily(fontData.symbolFont)\n        .getFont();\n    let maxAscent = 0;\n    let maxDescent = 0;\n    crudeTokenList.forEach((cur, index) => {\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n    }, 0);\n\n    ctx.font = normalStyle;\n    /** Calculate fitting ratio like normal */\n    let actualLineWidth = 0;\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [quoteConvertedValue],\n                format, textData,\n                width,\n                globalScale,\n            });\n\n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n\n    ctx.scale(xRatio, yRatio);\n    /** Calculate gradient and offset based on card's frame. */\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\n    const tokenList = tokenizeText(quoteConvertedValue);\n    const gradient = actualLineWidth > 0 && hasGradient\n        ? getNameGradient(\n            ctx,\n            gradientAngle,\n            parsePalette(gradientColor),\n            edge,\n            actualLineWidth,\n            trueBaseline,\n            maxAscent, maxDescent,\n        )\n        : undefined;\n\n    /**\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\n     * \n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\n     */\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\n    let resetEmbossStroke = () => {};\n    if (thickenEmboss) {\n        resetEmbossStroke = setTextStyle({\n            ctx,\n            lineWidth: embossThickness,\n            lineColor: fillStyle,\n            lineColorGradient: gradient,\n            globalScale,\n            useDefault: false,\n        });\n    }\n    ctx.fillStyle = gradient ?? fillStyle;\n    const { tokenEdge } = drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        option: { drawHeadText: false },\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n        },\n    });\n    resetEmbossStroke();\n\n    /** \n     * Second iteration: Draw pattern, we follow these steps.\n     *  * We create a second, temporary canvas node.\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\n     */\n    if (patternImage) {\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const patternContext = patternCanvas.getContext('2d');\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n        patternContext.scale(globalScale, globalScale);\n        await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\n        await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\n        patternContext.globalCompositeOperation = patternBlendMode;\n        patternContext.resetTransform();\n        await drawAssetWithSize(\n            patternContext, `finish-name/${patternImage}.png`,\n            edge, trueBaseline - maxAscent,\n            width,\n            maxAscent + maxDescent,\n        );\n        ctx.globalCompositeOperation = 'source-in';\n        ctx.drawImage(patternCanvas, 0, 0);\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.scale(xRatio, yRatio);\n    }\n\n    /** Third iteration: Apply emboss effect */\n    if (hasEmboss) {\n        const affectedWidthExtraPadding = 10;\n        const embossedImageData = applyEmboss({\n            inputCanvas: canvas,\n            lightPitch: embossPitch,\n            lightYaw: embossYaw,\n            minIntensity: -0.9,\n            maxIntensity: 0.9,\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\n        });\n        ctx.putImageData(embossedImageData, 0, 0);\n    }\n\n    /**\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\n     * \n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\n     * */\n    if (hasOutline) {\n        const resetStroke = setTextStyle({\n            ctx,\n            lineWidth: lineWidth + embossThickness,\n            lineColor,\n            globalScale,\n            useDefault: false,\n        });\n        ctx.globalCompositeOperation = 'destination-over';\n        drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            format,\n            globalScale,\n            option: { drawHeadText: false },\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.lineJoin = 'round';\n                ctx.strokeText(\n                    letter,\n                    scaledEdge + lineOffsetX,\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                );\n            },\n        });\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n        resetStroke();\n    }\n\n    /**\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\n     */\n    if (hasShadow) {\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const shadowContext = shadowCanvas.getContext('2d');\n        const resetShadow = setTextStyle({\n            ctx: shadowContext,\n            x: shadowOffsetX,\n            y: shadowOffsetY,\n            shadowColor: shadowColor,\n            blur: shadowBlur,\n            globalScale,\n            useDefault: false,\n        });\n        ctx.scale(1 / xRatio, 1 / yRatio);\n        shadowContext.drawImage(canvas, 0, 0);\n        ctx.globalCompositeOperation = 'destination-over';\n        ctx.drawImage(shadowCanvas, 0, 0);\n        ctx.globalCompositeOperation = 'source-over';\n        resetShadow();\n    }\n\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\n    drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: () => {},\n    });\n\n    const defaultTextStyle = getDefaultNameStyle();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.fillStyle = defaultTextStyle.fillStyle;\n    ctx.lineJoin = 'miter';\n    ctx.globalCompositeOperation = 'source-over';\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\n    smaller: 0,\n    normal: 1,\n    large: 2,\n    highPendulumNormal: 1,\n    highPendulumSmaller: 0,\n};\nexport const drawTypeAbilityText = ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: TypeAbilityCoordinateType,\n    furiganaHelper: boolean,\n    globalScale: number,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = scaleCoordinateData(\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\n        globalScale,\n    );\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\n    const fontData = {\n        ...scaledBaseFontData,\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\n    };\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n                globalScale,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nconst {\n    finishTypeCardWidth,\n    width: CanvasWidth,\n    iconHeight,\n    iconWidth,\n} = CanvasConst;\nexport const drawTypeAbility = async ({\n    ctx,\n    globalScale,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n    loopIconFinish,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: TypeAbilityCoordinateType,\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n        globalScale,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -5 : -1;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        const {\n            canvas: iconCanvas,\n            ctx: iconCtx,\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n        await drawAssetWithSize(\n            iconCtx,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\n            () => iconWidth * globalScale,\n            () => iconHeight * globalScale,\n        );\n        if (loopIconFinish) {\n            const {\n                canvas: iconFinishCanvas,\n                ctx: iconFinishCtx,\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n            iconFinishCtx.drawImage(iconCanvas, 0, 0);\n            await loopIconFinish(\n                iconFinishCtx,\n                'art',\n                async (finishType) => {\n                    return await drawAsset(\n                        iconFinishCtx,\n                        `finish/finish-typeart-${finishType}.png`,\n                        (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\n                    );\n                },\n            );\n            iconCtx.globalCompositeOperation = 'source-in';\n            iconCtx.drawImage(iconFinishCanvas, 0, 0);\n            ctx.drawImage(iconCanvas, 0, 0);\n        } else {\n            ctx.drawImage(iconCanvas, 0, 0);\n        }\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    _fontSize: number,\n    globalScale: number,\n) => {\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    if (ctx && value) {\n        const fontSize = _fontSize * globalScale;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const exceptionDigitWidthRatio = 0.8;\n        const digitList = `${value}`.split('');\n        let totalWidth = 0;\n\n        digitList.forEach(digit => {\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\n        });\n        let accLeft = edge - totalWidth / 2;\n\n        digitList.forEach(digit => {\n            ctx.fillText(\n                digit,\n                digit === '1' ? accLeft + 1 * globalScale : accLeft,\n                baseline + fontSize,\n            );\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\n        });\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    edge = 99,\n    baseline = 1150.93,\n    baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n        globalScale: number,\n    } = {\n        globalScale: 1,\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const { stroke = false, textStyle, globalScale } = option ?? {};\n    const actualEdge = edge * globalScale;\n    const actualBaseline = baseline * globalScale;\n    const actualBaselineOffset = baselineOffset * globalScale;\n    const resetStyle = setTextStyle({\n        ctx,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4 * globalScale;\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\n\n    let left = actualEdge;\n    ctx.fillText('1', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText('1', left, actualBaseline);\n    left += ctx.measureText('1').width - 2 * globalScale;\n\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText('st', left, actualBaseline - superTextOffset + actualBaselineOffset);\n    if (stroke) ctx.strokeText('st', left, actualBaseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText(' Edition', left, actualBaseline + actualBaselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, actualBaseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    ctx.scale(1, 0.98);\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const numberOffset = -1;\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const statWidth = 73.97 * globalScale;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${36.18 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.scale(1, 1.29);\n        ctx.font = ` ${34 * globalScale}px MatrixBoldSmallCaps`;\n        ctx.fillText(value, edge + statWidth, numberOffset + baseline / 1.29);\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = `${36.18 * globalScale}px matrix`;\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, numberOffset + baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = `${34 * globalScale}px MatrixBoldSmallCaps`;\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.scale(1, 1.29);\n                    ctx.fillText('?', nextEdge / condenseRatio, numberOffset + baseline / 1.29);\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        globalScale: number,\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n    baseDrawLinkArrowMap,\n    baseDrawLinkMapFoil,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinateMap,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n    PendulumNormalFontData,\n    PendulumSizeMap,\n    PendulumSize,\n    HALF_SCALE_WIDTH_OFFSET,\n} from 'src/model';\nimport {\n    checkDiplayLinkRating,\n    checkLightFooter,\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    createCanvas,\n    generateLayer,\n    resolveFrameStyle,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    finishTypeCardHeight,\n    stickerX,\n    stickerY,\n    stickerSize,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n    globalScale: number,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    } = canvasMap;\n    const {\n        format,\n        hasBackground, backgroundType,\n        frame,\n        foil, finish, artFinish, otherFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumRightFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\n        leftFrame, rightFrame,\n        dyeList,\n        atk, def, linkMap, linkRating,\n        attribute,\n        cardIcon, subFamily, star, starAlignment,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n        flag,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        typeAbility: {\n            name: 'typeAbility',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const effectBackground = effectStyle.background;\n    const pendulumEffectBackground = pendulumStyle.background;\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = checkLightFooter(bottomFrame);\n    const {\n        bottomRightFrame,\n    } = resolveFrameStyle(\n        {\n            frame,\n            topLeftFrame: leftFrame,\n            topRightFrame: rightFrame,\n            bottomLeftFrame: pendulumFrame,\n            bottomRightFrame: pendulumRightFrame,\n            effectBackground: effectBackground,\n            pendulumEffectBackground: pendulumEffectBackground,\n        },\n        isPendulum,\n    );\n    const lightRightFooter = checkLightFooter(bottomRightFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const [\n        showDefAndLinkFlag,\n        linkRatingDisplayMode,\n    ] = flag;\n\n    /** One special case where we do not show link rating */\n    const isLinkST = !isPendulum && !isMonster && isLink && !(atk || def);\n    const showLinkRating = checkDiplayLinkRating(linkRatingDisplayMode, isLink) && !isLinkST;\n    const showDefAndLink = showLinkRating && showDefAndLinkFlag;\n    const statInEffect = !!(atk || def)\n        || showLinkRating\n        || !!(isPendulum && setId);\n    const typeInEffect = normalizedTypeAbility.length > 0\n        ? cardIcon === 'auto'\n            ? (isMonster || isSpeedSkill)\n            : cardIcon !== 'st'\n        : false;\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\n    const {\n        isInitializing,\n        imageChangeCount,\n        language,\n        globalScale,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n    const [, iconFinish, stickerFinish] = otherFinish;\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (\n                ctx: CanvasRenderingContext2D,\n                x: number, y: number,\n                w: number, h: number,\n                customFill?: string,\n            ) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground\n                            ? (customFill ?? baseFill)\n                            : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                globalScale,\n                format,\n                frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\n                dyeList,\n                effectBackground, pendulumEffectBackground,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                pendulumFrameTypeMap: {\n                    red: withRedScale ? 'normal' : 'scaleless',\n                    blue: withBlueScale ? 'normal' : 'scaleless',\n                },\n                otherFinish,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Fill color background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(ctx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n\n            /** artOnCard canvas ensure the art is drawn correct size and position on the actual card, overlay for art is applied here */\n            const {\n                canvas: artOnCardCanvas,\n                ctx: artOnCardCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            if (artworkCanvas && artOnCardCtx) drawCardArt(artOnCardCtx);\n            await drawArtFinish(artOnCardCtx);\n            await drawArtOverlayFinish(artOnCardCtx);\n\n            /** Combine background and artwork together, overlay for background is applied here */\n            const {\n                canvas: combinedArtCanvas,\n                ctx: combinedArtCtx,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            await fillBaseColor(combinedArtCtx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n            if (backgroundCanvas && combinedArtCtx) await drawBackground(combinedArtCtx, hasArtBorder);\n            if (!boundless) combinedArtCtx.drawImage(artOnCardCanvas, 0, 0);\n\n            /** @summary Draw the overall layout */\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            ctx.drawImage(combinedArtCanvas, 0, 0);\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. */\n            if (isPendulum && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n                ctx.drawImage(\n                    combinedArtCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n                \n                /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will be placed on top of the art border. The extended card image is still below name (text only), level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (isLink && !isPendulum) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n\n                const {\n                    artX,\n                    artY,\n                    artWidth,\n                    ratio,\n                } = getArtCanvasCoordinate(isPendulum, opacity, 'full', pendulumSize);\n                ctx.drawImage(\n                    artOnCardCanvas,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                    globalScale * artX, globalScale * artY,\n                    globalScale * artWidth, globalScale * artWidth / ratio,\n                );\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil);\n                    await drawBorderPendulumFinish();\n                } else {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder({\n                color: '#000000',\n                ...resolvedStatTextStyle,\n            });\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            \n            if (showLinkRating && statInEffect) {\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n                const normalizedLinkRating = typeof linkRating === 'string' && linkRating.length > 0\n                    ? linkRating\n                    : `${(Array.isArray(linkMap) ? linkMap.length : 0)}`;\n                await drawLinkRatingText(frameCanvasRef.current, normalizedLinkRating, resolvedStatTextStyle, globalScale);\n                resetStyle();\n            }\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                globalScale,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        artworkCanvasRef,\n        attribute,\n        backgroundCanvasRef,\n        backgroundType,\n        cardIcon,\n        dyeList,\n        effectBackground,\n        finish,\n        foil,\n        format,\n        frame,\n        frameCanvasRef,\n        hasBackground,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        leftFrame,\n        levelStyle,\n        lightFooter,\n        linkMap,\n        linkRating,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        otherFinish,\n        pendulumEffectBackground,\n        pendulumFrame,\n        pendulumRightFrame,\n        pendulumSize,\n        resolvedOtherEffectTextStyle,\n        resolvedStatTextStyle,\n        rightFrame,\n        showLinkRating,\n        star,\n        starAlignment,\n        statInEffect,\n        withBlueScale,\n        withRedScale,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW PENDULUM SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\n        }\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\n\n            if (!clearCanvas(ctx) || !cloneNode) return;\n\n            await drawName(\n                nameCanvasRef.current,\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\n            );\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n        // const hasAtk = !!atk;\n        const hasDef = showLinkRating\n            ? !!def && showDefAndLink\n            : !!def;\n        const hasLink = showLinkRating;\n        if (atk) {\n            const offset = (hasDef ? 168.75 : 0) + (hasLink ? 168.75 : 0);\n            drawStatText(ctx, 'ATK', 600.85 - offset, 1106, globalScale);\n            drawStat(ctx, atk.trim(), 677.574 - offset, 1106.5, globalScale);\n        }\n        if (def && (!showLinkRating || showDefAndLink)) {\n            const offset = hasLink ? 168.75 : 0;\n            drawStatText(ctx, 'DEF', 600.85 - offset, 1106, globalScale);\n            drawStat(ctx, def.trim(), 673.865 - offset, 1106.5, globalScale);\n        }\n        resetStyle();\n    }, [readyToDraw, globalScale, atk, def, showLinkRating, isMonster, showDefAndLink, resolvedStatTextStyle, statCanvasRef, statInEffect]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                globalScale,\n                isLink, isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        globalScale,\n        format,\n        isLink,\n        isPendulum,\n        lightRightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n        if (!clearCanvas(ctx)) return;\n\n        const isNumberPassword = /^[0-9]*$/.test(password);\n        const mayOffset = isNumberPassword && isPendulum && isLink;\n        const willOffset = mayOffset;\n        const { rightEdge } = drawPasswordText({\n            ctx,\n            globalScale,\n            value: password,\n            lightFooter,\n            alignment: 'left',\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\n            format,\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\n            textStyle: resolvedOtherEffectTextStyle,\n            fontLevel: !isNumberPassword ? 1 : 0\n        });\n        if (isFirstEdition) {\n            const willDraw = isPendulum\n                ? isNumberPassword ? true : false\n                : true;\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? isLink ? 151 : 89\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 871\n                : 1150.93;\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 0\n                : isSpeedSkill ? -2 : -1;\n\n            if (willDraw) draw1stEdition(\n                ctx,\n                left,\n                bottom,\n                bottomOffset,\n                {\n                    globalScale,\n                    textStyle: {\n                        color: lightFooter ? '#ffffff' : '#000000',\n                        ...resolvedOtherEffectTextStyle,\n                    }\n                },\n            );\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter: lightRightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n                globalScale,\n            });\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    globalScale,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        lightRightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            const ctx = stickerCanvasRef.current?.getContext('2d');\n            if (!clearCanvas(ctx)) return;\n            const {\n                canvas: stickerCanvas,\n                ctx: stickerContext,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            await drawSticker({\n                ctx: stickerContext,\n                sticker,\n                globalScale,\n                x: stickerX,\n                y: stickerY,\n            });\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\n            if (normalizedStickerFinish !== 'normal') {\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\n                const {\n                    canvas: stickerFinishCanvas,\n                    ctx: stickerFinishContext,\n                } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n                stickerFinishContext.drawImage(stickerCanvas, 0, 0);\n                stickerFinishContext.scale(globalScale, globalScale);\n                await loopStickerFinish(\n                    stickerFinishContext,\n                    'art',\n                    async (finishType) => {\n                        return await drawAsset(\n                            stickerFinishContext,\n                            `finish/finish-typeart-${finishType}.png`,\n                            stickerX - finishTypeCardWidth + stickerSize, stickerY - finishTypeCardHeight + stickerSize,\n                        );\n                    },\n                );\n                stickerContext.globalCompositeOperation = 'source-in';\n                stickerContext.drawImage(stickerFinishCanvas, 0, 0);\n                ctx.drawImage(stickerCanvas, 0, 0);\n            } else {\n                ctx.drawImage(stickerCanvas, 0, 0);\n            }\n        };\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.typeAbility.rerun += 1;\n        drawingPipeline.current.typeAbility.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\n            const customizeEffectStyle = effectTextStyle[0];\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\n            const useItalic = customizeEffectStyle\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\n                : isNormal;\n            const effectIndexSize = drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                useItalic,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    useItalic,\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                },\n            });\n            const normalizedIconFinish = iconFinish ?? 'normal';\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\n            await drawTypeAbility({\n                ctx: typeCtx,\n                globalScale,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : (isPendulum && pendulumSize === 'large')\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n                loopIconFinish,\n            });\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        format,\n        frame,\n        isPendulum,\n        pendulumSize,\n        furiganaHelper,\n        iconFinish,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { upSize, fontStyle } = pendulumStyle ?? {};\n            const customPendulumStyle = pendulumTextStyle[0];\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\n            const fontDataKey = `${format}-${pendulumSize}`;\n            const coordinateList = PendulumEffectCoordinateMap\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\n                [pendulumSize];\n            /** Account for half scaleless frame */\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\n                ? coordinateList\n                : coordinateList.map(({\n                    trueEdge, trueWidth, ...rest\n                }) => ({\n                    ...rest,\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                    trueWidth: trueWidth\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                }));\n\n            drawEffect({\n                ctx,\n                content: pendulumEffect,\n                isNormal: false,\n                useItalic: useItalic,\n                fontData: (useItalic\n                    ? PendulumNormalFontData\n                    : PendulumEffectFontData)[fontDataKey],\n                fontDataKey,\n                textStyle: resolvedPendulumEffectTextStyle,\n                sizeList: modifiedCoordinateList,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                }\n            });\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        condenseTolerant,\n        format,\n        isPendulum,\n        withRedScale,\n        withBlueScale,\n        pendulumSize,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            if (isLink) {\n                const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n                const {\n                    artBorder: keepArtBorder,\n                    body: opacityBody,\n                    boundless,\n                } = normalizedOpacity;\n                const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless || !hasArtBorder);\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal');\n            }\n\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n            ctx.resetTransform();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        finishCanvasRef,\n        loopFinish,\n        name,\n        isLink,\n        isPendulum,\n        linkMap,\n        opacity,\n        boundless,\n        foil,\n        resolvedStatTextStyle,\n        statInEffect,\n        frameCanvasRef,\n    ]);\n\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (_exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        // isRelevant: () => boolean,\n    }) => {\n        // const {\n        //     isRelevant,\n        //     pendulumSize,\n        //     isPendulum = false,\n        //     opacity,\n        // } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n\n        if (exportCanvas && exportCtx) {\n            clearCanvas(exportCtx);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxRef.current?.draw(exportCanvas);\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\n                exportCanvas,\n                0,\n                0,\n                exportCanvas.width,\n                exportCanvas.height,\n                0,\n                0,\n                CanvasWidth,\n                CanvasHeight,\n            );\n        }\n    }, [\n        language,\n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n        previewCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n    lineWidth?: number,\n    lineColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = ({\n    ctx,\n    globalScale,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    edgeOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    fontLevel,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    edgeOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    fontLevel: number,\n}) => {\n    if (!clearCanvas(ctx)) return {\n        rightEdge: 0,\n    };\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                    globalScale,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left'\n            ? trueEdge + edgeOffset\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        rightEdge: result.tokenEdge,\n    };\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    globalScale,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    globalScale,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { useCallback } from 'react';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst notificationLocalStorageKey = 'ygocarder-notification';\nexport type NotificationMemory = {\n    condenseReminder: boolean,\n    versionReminder: string,\n    faqReminder: string,\n    feedbackReminder: boolean,\n};\nexport type NotificationStore = {\n    memory: NotificationMemory,\n    updateNotification: <Key extends keyof NotificationMemory>(\n        key: Key,\n        value: NotificationMemory[Key],\n    ) => void,\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\n};\nexport const useNotificationMemory = create<NotificationStore>((set) => {\n    const {\n        condenseReminder,\n        versionReminder,\n        faqReminder,\n        feedbackReminder,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useNotificationMemory: Error when getting cached notification', e);\n            return {};\n        }\n    })();\n\n    return {\n        memory: {\n            feedbackReminder: typeof feedbackReminder === 'boolean' ? feedbackReminder : false,\n            faqReminder: typeof faqReminder !== 'string' ? '' : faqReminder,\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\n        },\n        updateNotification: (key, value) => {\n            set(currentStore => {\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        },\n        updateNotificationMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\n    const {\n        targetMemory,\n        updateNotification,\n    } = useNotificationMemory(useShallow(({\n        memory,\n        updateNotification,\n    }) => ({\n        targetMemory: memory[key],\n        updateNotification,\n    })));\n\n    const updateTargetNotification = useCallback(\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\n        [key, updateNotification],\n    );\n\n    return [targetMemory, updateTargetNotification] as const;\n};","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\nimport styled from 'styled-components';\n\n/** The container must contain this class to spread inner styling to angle picker component */\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\nconst AnglePickerContainer = styled.div`\n    .ap {\n        background-color: var(--color-heavy);\n        .apc {\n            width: 8px;\n        }\n        .aph {\n            width: 8px;\n            height: 8px;\n        }\n    }\n    .ai {\n        margin: 0;\n        margin-top: var(--spacing-sm);\n        background: var(--main-slider);\n        justify-content: space-between;\n        line-height: 1.4;\n        span {\n            background: var(--main-secondary);\n            padding-left: var(--spacing);\n            padding-right: var(--spacing);\n            &:hover {\n                background: var(--sub-secondary);\n            }\n        }\n        span,\n        input {\n            color: var(--color-heavy);\n        }\n    }\n`;\n\nexport type CircularAnglePicker = AnglePicker & {\n    children?: React.ReactChild,\n};\nexport const CircularAnglePicker = ({\n    children,\n    ...rest\n}: CircularAnglePicker) => {\n    return <AnglePickerContainer className=\"angle-picker-container\">\n        {children}\n        <AnglePicker {...rest} />\n    </AnglePickerContainer>;\n};","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\n\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    cursor: pointer;\n    display: inline-block;\n`;\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span<{ $freeSize: boolean, $size: 'sm' | 'md' }>`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    ${({ $freeSize, $size }) => $freeSize\n        ? 'padding: 0 var(--spacing-xxs);'\n        : $size === 'sm' ? 'width: 18px;' : 'width: 24px;'\n    };\n    ${({ $size }) => $size === 'sm'\n        ? `\n            height: 18px;\n            font-size: var(--fs-sm);\n        `\n        : `\n            height: 24px;\n            font-size: var(--fs);\n        `}\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    size?: 'sm' | 'md',\n    Icon?: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    size = 'md',\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            $size={size}\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n            $freeSize={!Icon}\n        >\n            <>\n                {Icon && <Icon {...iconProps} />}{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    align-items: center;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import styled from 'styled-components';\n\nexport const ColorBlock = styled.div<{ $static?: boolean, $empty?: boolean }>`\n    height: 17px;\n    width: 17px;\n    cursor: pointer;\n    position: relative;\n    outline: none;\n    box-shadow: 0 0 1px 1px var(--main-level-3);\n    border-radius: var(--br);\n    ${({ $static }) => $static\n        ? `\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        `\n        : ''}\n    ${({ $empty }) => $empty\n        ? `\n            background-color: var(--sub-level-4);\n            background-image: var(--gradient-diagonal-stripe);\n        `\n        : ''}\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n`;","import { Popover } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;\n\nexport const StyledMarkdown = styled.div`\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-3);\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    text-shadow: var(--ts);\n    p {\n        white-space: pre-line;\n    }\n    ul {\n        padding-inline-start: var(--spacing-2xl);\n        margin-block-end: 0;\n        li {\n            line-height: 1.5;\n        }\n    }\n    :last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\n    max-width: 550px;\n    border-radius: var(--br-lg);\n    border: var(--bw) solid var(--sub-level-1);\n`;\n\nexport const InternalPopover = ({\n    content,\n    children,\n    ...rest\n}: React.ComponentProps<typeof Popover>) => {\n    if (content) {\n        return <Popover content={content} {...rest}>{children}</Popover>;\n    }\n    return <>{children}</>;\n};\n\nexport const CardActionButton = styled.button`\n    --overlay-size: 36px;\n    background: var(--main-primary);\n    border-width: 0;\n    border-style: solid;\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing-sm);\n    line-height: 1;\n    font-size: var(--fs-xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-1);\n    /* display: none; */\n    &:not(:disabled) {\n        cursor: pointer;\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n    &:disabled {\n        cursor: not-allowed;\n        filter: opacity(0.5);\n    }\n`;\n\nexport const SolidLabel = styled.div`\n    display: inline-flex;\n    column-gap: var(--spacing-xs);\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    border-radius: var(--br);\n    box-shadow: var(--bs-input);\n    .ant-checkbox-wrapper {\n        transform: translateY(-1px); // Alignment\n    }\n`;\nexport const CombinedSliderContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 57px 39px 6px;\n    &.inactive {\n        .slider-label,\n        .ant-slider,\n        .slider-padding {\n            background-color: var(--main-level-3);\n        }\n    }\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        border-right: none;\n        border-radius: var(--br) 0 0 var(--br);\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n`;\n\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    display: inline-block;\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;\n\nconst ResolutionLabelContainer = styled.div<{ $warning: boolean }>`\n    display: grid;\n    grid-template-columns: 3em max-content 3em;\n    gap: var(--spacing-xs);\n    .left-part {\n        text-align: right;\n    }\n    .right-part {\n        text-align: left;\n    }\n    ${({ $warning }) => $warning\n        ? `\n            color: var(--main-warning);\n        `\n        : ''}\n`;\nexport type ResolutionLabel = {\n    warning?: boolean,\n    width: number,\n    height: number,\n}\nexport const ResolutionLabel = ({ width, height, warning }: ResolutionLabel) => {\n    return <ResolutionLabelContainer $warning={warning}>\n        <span className=\"left-part\">{width}</span>\n        <span>×</span>\n        <span className=\"right-part\">{height}</span>\n    </ResolutionLabelContainer>;\n};\n\nexport * from './color';","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { RadioTrain } from '../input-train';\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n    .list-option {\n        margin-bottom: var(--spacing-xs);\n    }\n    .resolution-list {\n        &.radio-train {\n            .ant-radio-button-wrapper:first-child {\n                border-radius: var(--br) var(--br) 0 0;\n            }\n            .ant-radio-button-wrapper:last-child {\n                border-radius: 0 0 var(--br) var(--br);\n            }\n        }\n        .radio-train-input-group {\n            display: inline-grid;\n            flex: 0 1 auto;\n            .ant-radio-button-wrapper {\n                border-left-width: 1.02px;\n                &:before {\n                    content: none;\n                }\n            }\n        }\n    }\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        exportFormat,\n        resolution,\n        allowHotkey,\n        reduceMotionColor,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\n                    <RadioTrain\n                        className=\"resolution-list\"\n                        value={`${resolution[0]}x${resolution[1]}`}\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\n                            value: `${width}x${height}`,\n                            label: scale > 1\n                                ? <Popover\n                                    overlayClassName=\"explanation-overlay\"\n                                    placement=\"left\"\n                                    content={<StyledPopMarkdown>\n                                        {language['setting.option.resolution.warning']}\n                                    </StyledPopMarkdown>}\n                                >\n                                    <ResolutionLabel width={width} height={height} warning={true} />\n                                </Popover>\n                                : <ResolutionLabel width={width} height={height} />,\n                        }))}\n                        onChange={value => {\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\n\n                            if (resolutionValue) {\n                                updateSetting({\n                                    resolution: resolutionValue.settingValue,\n                                    globalScale: resolutionValue.scale,\n                                });\n                            }\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\n                    <RadioTrain\n                        value={exportFormat}\n                        optionList={ExportFormatList}\n                        onChange={value => {\n                            updateSetting({ exportFormat: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import styled, { css, keyframes } from 'styled-components';\n\nconst titlShaking = keyframes`\n    0% { transform: rotate(0deg); }\n    3% { transform: rotate(5deg); }\n    6% { transform: rotate(0eg); }\n    9% { transform: rotate(-5deg); }\n    12% { transform: rotate(0deg); }\n    100% { transform: rotate(0deg); }\n`;\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\n    text-align: center;\n    border: var(--bw) solid var(--main-level-3);\n    background-color: var(--main-level-1);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    cursor: pointer;\n    box-shadow: 0 0 2px 1px #222222 inset;\n    transition: background-color 250ms linear;\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\n    ${({ $animating }) => $animating\n        ? `\n            border: var(--bw) solid var(--sub-level-1);\n            background: var(--main-warning);\n            color: var(--color-contrast);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background-color: var(--main-level-3);\n    }\n`;\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\n    box-shadow: none;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    &.js-highlight {\n        background: var(--main-info);\n        text-shadow: none;\n        box-shadow: 0 0 2px 0 #333333;\n    }\n    ${({ $animating }) => $animating\n        ? `\n            background: var(--main-info);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background: var(--sub-info);\n    }\n`;\n\nexport const QuoteContainer = styled.div`\n    white-space: pre-line;\n    label {\n        font-weight: bold;\n        font-style: italic;\n        &:after {\n            content: \":\";\n        }\n    }\n    .question {\n        margin-left: var(--spacing);\n    }\n    .answer {\n        margin: var(--spacing) 0;\n        margin-bottom: var(--spacing-lg);\n    }\n    &:last-child {\n        .answer {\n            margin-bottom: 0;\n        }\n    }\n`;","import { Popover } from 'antd';\nimport { memo, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { StyledPopMarkdown } from '../atom';\nimport { useNotification } from 'src/service';\nimport { VersionLogButtonLabel } from './styled';\n\nconst LogSentence = styled.li`\n    text-align: center;\n    .content {\n        text-align: left;\n    }\n    a {\n        display: inline-block;\n    }\n    img {\n        display: block;\n        max-width: 400px;\n        max-height: 300px;\n        margin: auto;\n        box-shadow: var(--bs-1);\n        margin-top: var(--spacing-xs);\n    }\n`;\n\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\nconst VersionLogStore = (() => {\n    let isReady = false;\n    let versionLog: VersionLog = [];\n\n    return {\n        getLog: async () => {\n            if (isReady) return versionLog;\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/log/version.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            try {\n                const responseLog = await response.json();\n                versionLog = responseLog;\n                isReady = true;\n\n                return versionLog;\n            } catch (e) {\n                console.error(e);\n            }\n            return [];\n        }\n    };\n})();\nexport const VersionLog = () => {\n    const [log, setLog] = useState<VersionLog>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const log = await VersionLogStore.getLog();\n\n            setLoading(false);\n            setLog(log);\n        })();\n    }, []);\n\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\n    if (loading) return <div>Loading changelog...</div>;\n    return <div>\n        {log.map(({ logList, version }, index) => {\n            return <div key={`${version}-${index}`} className=\"log-section\">\n                <b>{version}</b><br />\n                <ul>\n                    {/* Using index as key here is safe as the component is stateless */}\n                    {logList.map(({ content, image }, index) => {\n                        return <LogSentence key={index}>\n                            <div className=\"content\">\n                                {content}\n                            </div>\n                            {image && <a target=\"_blank\" rel=\"noreferrer\" href={image} title=\"Click to open in new tab\">\n                                <img src={image} alt={`version-${version}-illust`} />\n                            </a>}\n                        </LogSentence>;\n                    })}\n                </ul>\n            </div>;\n        })}\n    </div>;\n};\n\nconst compareSemver = (a: string, b: string): boolean => {\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\n    \n    if (majorA !== majorB) {\n      return majorA > majorB;\n    }\n    \n    if (minorA !== minorB) {\n      return minorA > minorB;\n    }\n    \n    return patchA > patchB;\n};\n\nconst StyledVersionLog = styled(StyledPopMarkdown)`\n    overflow: auto;\n    width: 550px;\n    max-height: 300px;\n    width: 550px;\n    .log-section + .log-section {\n        margin-top: var(--spacing);\n    }\n`;\nexport const VersionLogButton = memo(() => {\n    const [animating, setAnimating] = useState(false);\n    const [\n        version,\n        setMemoizedVersion,\n    ] = useNotification('versionReminder');\n\n    useEffect(() => {\n        if (version) {\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\n            const memoizedSemver = version;\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\n\n            if (compareSemver(currentSemver, memoizedSemver)) {\n                setAnimating(true);\n                setTimeout(() => {\n                    setAnimating(false);\n                }, 8000);\n            }\n        }\n    }, [setMemoizedVersion, version]);\n\n    return <Popover\n        placement=\"bottom\"\n        content={<StyledVersionLog>\n            <VersionLog />\n        </StyledVersionLog>}\n    >\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\n        </VersionLogButtonLabel>\n    </Popover>;\n});","import { Modal, notification, Tabs } from 'antd';\nimport { FaqButtonLabel, QuoteContainer } from './styled';\nimport { useNotification } from 'src/service';\nimport React, { useEffect, useState } from 'react';\n\nexport const FAD_BUTTON_ID = 'faq-button';\n\ntype Quote = {\n    author?: string,\n    question: string,\n    children: React.ReactNode,\n}\nconst Quote = ({\n    author,\n    question,\n    children,\n}: Quote) => {\n    return <QuoteContainer>\n        <blockquote>\n            {author && <label>{author}</label>}\n            <div className=\"question\">{question}</div>\n        </blockquote>\n        <div className=\"answer\">{children}</div>\n    </QuoteContainer>;\n};\n\nexport const QuestionAndFeedback = () => {\n    const [visible, setVisible] = useState(false);\n    const [animating, setAnimating] = useState(false);\n    const [faqReminder, setMemoizedReminder] = useNotification('faqReminder');\n    const [feedbackReminder, setFeedbackReminder] = useNotification('feedbackReminder');\n\n    useEffect(() => {\n        const currentReminder = '12/06/2025';\n        if (faqReminder !== currentReminder) {\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(currentReminder);\n\n            setAnimating(true);\n            setTimeout(() => {\n                setAnimating(false);\n            }, 8000);\n        }\n    }, [setMemoizedReminder, faqReminder]);\n\n    useEffect(() => {\n        if (feedbackReminder !== true) {\n            setFeedbackReminder(true);\n            setAnimating(true);\n            notification.info({\n                message: 'Feedback Reminder',\n                description: 'If you have any feedback or suggestion, please check the FAQ button first to see if your feedback has been addressed.',\n                duration: 10,\n                onClose: () => {\n                    setAnimating(false);;\n                }\n            });\n        }\n    }, [feedbackReminder, setFeedbackReminder]);\n\n    return <>\n        <FaqButtonLabel id={FAD_BUTTON_ID} $animating={animating} onClick={() => setVisible(cur => !cur)}>\n            {'FAQ'}\n        </FaqButtonLabel>\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\n            <Tabs>\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\n                    <div><i>Solved feedbacks are removed.</i></div>\n                    <br />\n                    {[\n                        {\n                            author: 'Phan Trí Dĩ at Jun 11, 2025',\n                            question: 'Hi, firstly, I want to thanks to your hardwork for making a wonderful website, very appreciate your work. There\\'s some K9 card with a special hash sign. It get a bit smaller when I use it. I wondering if you can fix it. Thank you very much.',\n                            answer: 'Hi there. There are two parts of the problem here:\\nThe first thing is the hash sign, which is not a bug. This design has been used on many cards in the past, for example \"Hi-Speedroid Glider #2\", and there is no sign that it would be different this time.\\nThe second thing is the letter \"Ø\", which currently only appear on the OCG card, as Lupus itself is not yet revealed for TCG, we doesn\\'t know if the TCG would keep this letter or not.',\n                        },\n                        {\n                            author: 'Anonymous User at Jun 06, 2025',\n                            question: 'When using the Link Arrows on a Pendulum card, the Link Rating disappears',\n                            answer: 'It should be fixed by now',\n                        },\n                        {\n                            author: 'Shanaya User at Jun 04, 2025',\n                            question: 'I would like to request another artwork effect like this, like the effect of the attached picture its a secret rare effect',\n                            answer: 'I have added foil 9, this is my best and final attempt, sorry if it does not match your need.',\n                        },\n                        {\n                            author: 'Yugiohfann at Jun 03, 2025',\n                            question: 'Please fix the ATK/DEF font text, the numbers are higher than the ATK/DEF text.',\n                        },\n                        {\n                            author: 'Anonymous User at Jun 03, 2025',\n                            question: 'Small adjustment for size and style of card stats (ATK, DEF). Can you bring back the old size and style of card stats. Now the stats are higher than the ATK and DEF text.',\n                            answer: 'Can you provide a sample image so I can see the difference? I cannot take action blindly wihout any reference.',\n                        },\n                        {\n                            author: 'Anonymous User at Jun 02, 2025',\n                            question: 'please can you add sizing selection in card name? please? thank you!',\n                            answer: 'Can you provide a sample image of the old card? I would like to take a look to see if it is possible to implement it or not.',\n                        },\n                        {\n                            author: 'Cardmaker_01',\n                            question: 'Hello, the Xyz cards have black font in Set ID and Copyright, making it invisible to Xyz cards. Attached screenshot is an example. Can you please fix those fields to white font again? tysm and more power to you :)',\n                            answer: 'It should be fixed by now, thanks for your feedback.'\n                        },\n                        {\n                            author: 'galaxy dragon',\n                            question: 'Can you add a little space on the edge of the spell and trap card? when it is full of text. Thank you.',\n                            answer: 'I can\\'t quite understand what you mean, can you be more specific, or provide a sample image?',\n                        },\n                        {\n                            author: 'Anonymous User at May 27, 2025',\n                            question: 'Hello, can you add a selection of sizes in card title? because the old card and new card have different card title alignment, the old card seems to appear the title is more stretch than the new maybe because of the card size of the old card. can you fix it pls? maybe add some choices of card title alignments?\\nor maybe size? THANK YOU SO MUCH!!',\n                            answer: 'Do you have any sample image of the old card? I would like to see the difference between the two so I can decide that if it is possible or not.',\n                        },\n                        {\n                            author: 'ATK/DEF at May 26, 2025',\n                            question: 'The ATK/DEF text and values seem to have different sizes than usual. Also the ? seems to be in a different format to how it appears in TCG/OCG',\n                            answer: 'I have made a bit adjustment for font size and font family of stats text.',\n                        },\n                        {\n                            author: 'Maya at May 23, 2025',\n                            question: 'I\\'d like to make a request, is it possible to put a SPEED DUEL watermark in EVERY card types in the description area like the Speed Skill type when it is set to speed duel? thank you so much. Appreciate your lovely cardmaker',\n                            answer: 'I will try, but this is pretty hard to do to be honest, don\\'t keep your hope up.',\n                        },\n                        {\n                            author: 'Shanaya at May 22, 2025',\n                            question: 'Can you put something rainbow effect on the Finish in number 3?',\n                            answer: 'I have added art finish type 8, which is a mix between type 3 and 6, you may try that out.',\n                        },\n                    ].map(({ author, question, answer }, index) => {\n                        return <Quote key={index} author={author} question={question}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\n                    {[\n                        {\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\n                        },\n                    ].map(({ question, answer }, index) => {\n                        return <Quote key={index} question={question}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n            </Tabs>\n        </Modal>\n    </>;\n};","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage } from 'src/service';\nimport { Radio, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\nimport { VersionLogButton } from './version-log';\nimport { StyledPopMarkdown } from '../atom';\nimport { FAD_BUTTON_ID, QuestionAndFeedback } from './faq';\nimport './app-header.scss';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\n                    <span\n                        className=\"bug-report\"\n                        onMouseOver={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.add('js-highlight');\n                        }}\n                        onMouseOut={() => {\n                            document.getElementById(FAD_BUTTON_ID)?.classList.remove('js-highlight');\n                        }}\n                    >\n                        <div id=\"sentry-bug-report\">\n                            {language['contributor.bug-report.tooltip']}\n                        </div>\n                    </span>\n                </Tooltip>\n                <QuestionAndFeedback />\n                <VersionLogButton />\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<StyledPopMarkdown className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </StyledPopMarkdown>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasPanel = () => {\n    const language = useLanguage();\n\n    return <StyledPopMarkdown className=\"disclaimer\">\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\n    </StyledPopMarkdown>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<TaintedCanvasPanel />}\n    />;\n};","import { Button, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { StyledCode } from '../atom';\nimport './formatting-guide.scss';\n\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n    h2 {\n        margin-top: var(--spacing);\n    }\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['guide.format.close']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-6.label']}</h2>\n                {language['guide.format.section-6.content'](\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'justified non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'justified non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import React from 'react';\nimport { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n    &:focus {\n        background-color: var(--main-level-3);\n    }\n    &:focus-visible {\n        background-color: var(--main-level-3);\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    id,\n    tabIndex,\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n    onClick,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & {\n    id?: string,\n    tabIndex?: number,\n    className?: string,\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\n}) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        id={id}\n        tabIndex={tabIndex}\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n        onClick={onClick}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","\nimport { Input } from 'antd';\nimport { useColorPicker } from 'src/service';\nimport { getContrastColor } from 'src/util';\nimport styled from 'styled-components';\nimport { ColorBlock } from '../atom';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        gap: 3px; // Alignment\n        padding-left: 3px; // Alignment\n        input {\n            width: 58px; // Alignment\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\n\nexport type InlineColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nexport const InlineColorPicker = ({\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                const dotColor = getContrastColor(rgb);\n\n                return <ColorBlock key={hex}\n                    className=\"color-block\"\n                    title={hex}\n                    style={{ backgroundColor: hex }}\n                    onClick={() => onChange?.(hex)}\n                >\n                    {color.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </ColorBlock>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <ColorBlock $static style={{ backgroundColor: color.hex }} />\n            <Input\n                size=\"small\"\n                value={inputText}\n                onChange={e => {\n                    setColor(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};","import { Input } from 'antd';\nimport { CustomPicker, InjectedColorProps } from 'react-color';\nimport { Saturation } from 'react-color/lib/components/common';\nimport { UseColorPicker, useColorPicker } from 'src/service';\nimport { getContrastColor } from 'src/util';\nimport styled from 'styled-components';\nimport { ColorBlock } from '../atom';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { IconButton } from '../icon-button';\n\nconst SaturationBoardContainer = styled.div`\n    position: relative;\n    border-radius: var(--br);\n    > div,\n    .saturation-white,\n    .saturation-black {\n        border-radius: var(--br);\n    }\n`;\n\ntype UnlinkedSaturationBoard = InjectedColorProps;\nconst UnlinkedSaturationBoard = ({\n    onChange,\n    ...props\n}: UnlinkedSaturationBoard) => {\n    return <SaturationBoardContainer>\n        <Saturation\n            {...props}\n            onChange={color => {\n                onChange?.(color);\n            }}\n        />\n    </SaturationBoardContainer>;\n};\nconst SaturationBoard = CustomPicker(UnlinkedSaturationBoard);\n\nconst HorizontalSketchColorList = [\n    { hex: '#B80000', rgb: [184, 0, 0] },\n    { hex: '#EB9694', rgb: [235, 150, 148] },\n    { hex: '#DB3E00', rgb: [219, 62, 0] },\n    { hex: '#FAD0C3', rgb: [250, 208, 195] },\n    { hex: '#FCCB00', rgb: [252, 203, 0] },\n    { hex: '#FEF3BD', rgb: [254, 243, 189] },\n    { hex: '#008B02', rgb: [0, 139, 2] },\n    { hex: '#C1E1C5', rgb: [193, 225, 197] },\n    { hex: '#006B76', rgb: [0, 107, 118] },\n    { hex: '#BEDADC', rgb: [190, 218, 220] },\n    { hex: '#1273DE', rgb: [18, 115, 222] },\n    { hex: '#C4DEF6', rgb: [196, 222, 246] },\n    { hex: '#004DCF', rgb: [0, 77, 207] },\n    { hex: '#BED3F3', rgb: [190, 211, 243] },\n    { hex: '#5300EB', rgb: [83, 0, 235] },\n    { hex: '#D4C4FB', rgb: [212, 196, 251] },\n];\n\nconst HorizontalSketchPickerContainer = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 3.5rem 5rem max-content 1fr;\n    gap: var(--spacing-sm);\n    .color-input {\n        .color-state {\n            display: flex;\n            margin-bottom: var(--spacing-xs);\n        }\n        ${ColorBlock} {\n            display: inline-block;\n            flex: 1;\n            border: var(--bw) solid var(--sub-level-2);\n            height: 18px;\n        }\n    }\n    .color-list {\n        display: grid;\n        grid-template-columns: repeat(${HorizontalSketchColorList.length / 4}, max-content);\n        border-radius: var(--br);\n        overflow: hidden;\n        ${ColorBlock} {\n            height: 15px;\n            width: 15px;\n            box-shadow: none;\n            border-radius: 0;\n        }\n    }\n`;\nexport type HorizontalSketchPicker = {\n    children?: React.ReactNode,\n} & UseColorPicker;\nexport const HorizontalSketchPicker = ({\n    children,\n    onChange,\n    value,\n}: HorizontalSketchPicker) => {\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\n    const noColor = inputText === '';\n\n    return <HorizontalSketchPickerContainer className=\"horizontal-sketch-picker\">\n        <div className=\"input-label\">\n            {children}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-state\">\n                <ColorBlock\n                    $empty={noColor}\n                    style={noColor ? {} : { backgroundColor: color.hex }}\n                />\n                <IconButton\n                    size=\"sm\"\n                    Icon={CloseOutlined}\n                    onClick={() => {\n                        onChange('');\n                    }}\n                />\n            </div>\n            <Input\n                size=\"small\"\n                value={inputText}\n                onChange={e => {\n                    setColor(e.target.value);\n                }}\n            />\n        </div>\n        <div className=\"color-list\">\n            {HorizontalSketchColorList.map(({ hex, rgb }) => {\n                const dotColor = getContrastColor(rgb);\n\n                return <ColorBlock key={hex}\n                    className=\"color-block\"\n                    title={hex}\n                    style={{ backgroundColor: hex }}\n                    onClick={() => onChange?.(hex)}\n                >\n                    {color.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </ColorBlock>;\n            })}\n        </div>\n        <SaturationBoard color={color.hex} onChange={({ hex }) => setColor(hex)} />\n    </HorizontalSketchPickerContainer>;\n};","import { Modal } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasConst } from 'src/model';\nimport {\n    TransformWrapper,\n    TransformComponent,\n    ReactZoomPanPinchContentRef,\n} from 'react-zoom-pan-pinch';\nimport styled from 'styled-components';\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { CardActionButton } from '../atom';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nconst StyledLightboxContainer = styled.div`\n    width: ${CanvasWidth}px;\n    height: ${CanvasHeight}px;\n    overflow: hidden;\n    position: relative;\n    line-height: 0;\n    .card-lightbox-control {\n        position: absolute;\n        z-index: 1;\n        top: var(--spacing);\n        right: var(--spacing);\n        user-select: none;\n        text-align: right;\n        .action-list {\n            display: inline-flex;\n            gap: var(--spacing-xs);\n        }\n        .control-info {\n            background-color: var(--main-level-1);\n            padding: var(--spacing-xs);\n            margin-top: var(--spacing-xs);\n            border-radius: var(--br);\n            border: var(--bw) solid var(--sub-level-1);\n            line-height: 1;\n            box-shadow: var(--bs-1);\n        }\n    }\n    .card-lightbox-content {\n        cursor: grab;\n    }\n`;\n\nconst MAX_ZOOM = 4;\nconst Controls = ({\n    zoomIn,\n    zoomOut,\n    resetTransform,\n    setTransform,\n    scale,\n    globalScale,\n    width,\n    height,\n}: ReactZoomPanPinchContentRef & {\n    scale: number,\n    globalScale: number,\n    width: number,\n    height: number,\n}) => {\n    return <div className=\"control-container\">\n        <div className=\"action-list\">\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\n                zoomIn();\n            }}>\n                <ZoomInOutlined />\n            </CardActionButton>\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\n                zoomOut();\n            }}>\n                <ZoomOutOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                resetTransform();\n            }}>\n                <FullscreenExitOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                setTransform(\n                    -Math.max(0, width - CanvasWidth) / 2,\n                    -Math.max(0, height - CanvasHeight) / 2,\n                    1,\n                );\n            }}>\n                <FullscreenOutlined />\n            </CardActionButton>\n        </div>\n        <div className=\"control-info\">\n            {scale && <>×{\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\n            }</>}&nbsp;({width} × {height})\n        </div>\n    </div>;\n};\n\nexport type Lightbox = {\n    globalScale: number,\n};\nexport type LightboxRef = {\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\n    draw: (targetCanvas: HTMLCanvasElement) => void,\n    refresh: () => void,\n    getCanvasKey: () => number,\n};\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\n    globalScale,\n}, ref) => {\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [canvasKey, setCanvasKey] = useState(0);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\n    const [scale, setScale] = useState(() => 1 / globalScale);\n\n    useImperativeHandle(ref, () => ({\n        setVisible: setLightboxVisible,\n        draw: targetCanvas => {\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\n                targetCanvas,\n                0,\n                0,\n            );\n        },\n        refresh: () => setCanvasKey(cnt => cnt + 1),\n        getCanvasKey: () => canvasKey,\n    }));\n\n    useEffect(() => {\n        lightboxRef.current?.resetTransform();\n    }, [globalScale]);\n\n    return <Modal\n        width={`${CanvasWidth + 15 * 2}px`}\n        wrapClassName=\"card-lightbox-overlay\"\n        visible={lightboxVisible}\n        forceRender={true}\n        onCancel={() => setLightboxVisible(false)}\n        footer={null}\n    >\n        <StyledLightboxContainer\n            className=\"card-lightbox-container\"\n        >\n            <TransformWrapper ref={lightboxRef}\n                initialScale={1 / globalScale}\n                initialPositionX={0}\n                initialPositionY={0}\n                minScale={1 / globalScale}\n                maxScale={MAX_ZOOM}\n                onTransformed={ref => {\n                    setScale(ref.state.scale);\n                }}\n            >\n                {({ ...utils }) => {\n                    return <>\n                        <div\n                            className=\"card-lightbox-control\"\n                        >\n                            <Controls\n                                {...utils}\n                                scale={scale}\n                                globalScale={globalScale}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </div>\n                        <TransformComponent\n                            wrapperClass=\"card-lightbox-content\"\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\n                        >\n                            <canvas key={canvasKey + 0.1}\n                                id=\"lightbox-canvas\"\n                                ref={lightboxCanvasRef}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </TransformComponent>\n                    </>;\n                }}\n            </TransformWrapper>\n        </StyledLightboxContainer>\n    </Modal>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst LINK_MARKER_HALF_SIZE = 13;\nexport const LINK_MARKER_PICKER_WIDTH = 3 * 2 * LINK_MARKER_HALF_SIZE + 5 * 2; // 5 = --spacing-xs\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: ${LINK_MARKER_HALF_SIZE}px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    display: inline-block;\n    .title {\n        line-height: 1;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkerPicker = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkerPicker = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkerPicker) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-picker', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import { Menu, Popover } from 'antd';\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\nimport { useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-setting {\n        background-color: var(--main-active);\n    }\n`;\nexport type ResolutionPicker = {\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ResolutionPicker = ({\n    onChange,\n    ...rest\n}: ResolutionPicker) => {\n    const language = useLanguage();\n    const {\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.resolution.label']}\n        </StyledDownloadDropdownLabel>\n        {ResolutionList.map(({ width, height, label, scale }) => {\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        resolution: [width, height],\n                        globalScale: scale,\n                    });\n                    onChange?.([width, height], scale);\n                }}\n            >\n                {scale > 1\n                    ? <Popover\n                        overlayClassName=\"explanation-overlay\"\n                        placement=\"left\"\n                        content={<StyledPopMarkdown>\n                            {language['setting.option.resolution.warning']}\n                        </StyledPopMarkdown>}\n                    >\n                        <ResolutionLabel width={width} height={height} warning={true} />\n                    </Popover>\n                    : <ResolutionLabel width={width} height={height} />}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};\n\nexport type ExportFormatPicker = {\n    onChange?: (nextFormat: ExportFormat) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ExportFormatPicker = ({\n    onChange,\n    ...rest\n}: ExportFormatPicker) => {\n    const language = useLanguage();\n    const {\n        exportFormat,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, exportFormat },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        exportFormat,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.export-format.label']}\n        </StyledDownloadDropdownLabel>\n        {ExportFormatList.map(({ value, label }) => {\n            return <StyledDownloadDropdownOption key={label}\n                className={value === exportFormat ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        exportFormat: value,\n                    });\n                    onChange?.(value);\n                }}\n            >\n                {label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\nexport const isCropEqual = (cropL: Partial<ReactCrop.Crop>, cropR: Partial<ReactCrop.Crop>) => {\n    const { aspect: aspectL, height: heightL, unit: unitL, width: widthL, x: xL, y: yL } = cropL;\n    const { aspect: aspectR, height: heightR, unit: unitR, width: widthR, x: xR, y: yR } = cropR;\n    if (Math.abs(widthL - widthR) > 0.01) return false;\n    if (Math.abs(heightL - heightR) > 0.01) return false;\n    if (Math.abs(xL - xR) > 0.01) return false;\n    if (Math.abs(yL - yR) > 0.01) return false;\n    if (Math.abs(aspectL - aspectR) > 0.01) return false;\n    if (unitL !== unitR) return false;\n    return true;\n};\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / 375;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: (crossorigin?: string) => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const targetFile = e.target.files[0];\n            const maxFileSize = 4;\n\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\n                setLoading(true);\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    if (typeof reader.result === 'string') {\n                        setCrossOrigin('anonymous');\n                        setInternalSource(reader.result);\n                        setSourceType('offline');\n                        setInputMode('offline');\n                        onSourceChange('offline', reader.result);\n                        setLoading(false);\n                    }\n                });\n                reader.readAsDataURL(targetFile);\n            } else {\n                onMaxSizeExceeded(maxFileSize);\n            }\n        } else alert(language['image-cropper.not-found-warning']);\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded(crossorigin);\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [crossorigin, onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setCrossOrigin('anonymous');\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setCrossOrigin('anonymous');\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={`card-image-cropper ${className}`}>\n            <div className=\"card-image-source-input\">\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        setCrossOrigin('anonymous');\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                    // setLoading(true);\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Tooltip\n                                title={<div className=\"image-info\">\n                                    {language['image-cropper.online-tip']}\n                                </div>}\n                            >\n                                <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                    {language['image-cropper.source.online.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                            <Tooltip\n                                title={<div className=\"image-warning\">\n                                    {language['image-cropper.offline-warning']}\n                                </div>}\n                            >\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={applyOfflineSource}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                    </div>\n                </div>\n                {children}\n            </div>\n            {beforeCropper}\n            <div className=\"card-cropper\" onKeyDown={() => {\n                /** Nudge selection also count as user interaction */\n                setInteracted(true);\n            }}>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <Tooltip\n                        placement=\"left\"\n                        overlay={forceFit\n                            ? language['image-cropper.button.use-crop.tooltip']\n                            : language['image-cropper.button.force-fit.tooltip']}\n                    >\n                        <div\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                            onClick={() => {\n                                setInteracted(true);\n                                onForceFitChange(!forceFit);\n                            }}\n                        >\n                            <FullscreenOutlined />\n                        </div>\n                    </Tooltip>\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { width, x } = cur.completed ?? {};\n\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    x: (100 - width) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { height, y } = cur.completed ?? {};\n\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    y: (100 - height) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                </div>}\n                {((!hasImage || (error && crossorigin === undefined)) && !isLoading) && <Empty\n                    description={language['image-cropper.not-found-warning']}\n                    image={null}\n                />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        if (!receivingCanvas) {\n                            pendingCrop.current = {\n                                source: '',\n                                crop: null,\n                            };\n                            setLoading(false);\n                            setError('No receiving canvas');\n                            onTainted();\n                        }\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            pendingCrop.current = {\n                                source: '',\n                                crop: null,\n                            };\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded(crossorigin);\n                            setLoading(false);\n                            setError('Image not found');\n                        } else {\n                            setCrossOrigin(undefined);\n                            onTainted();\n                        }\n                        if (crossorigin === undefined) {\n                            setLoading(false);\n                            setError('Tainted canvas');\n                        }\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdownLabel = styled.div`\n    color: var(--color);\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    padding: 0 var(--spacing);\n    padding-bottom: var(--spacing-xs);\n    line-height: 1;\n    cursor: default;\n    &:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './angle-picker';\nexport * from './app-header';\nexport * from './atom';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './icon-button';\nexport * from './inline-color-picker';\nexport * from './inline-sketch-picker';\nexport * from './input-train';\nexport * from './lightbox';\nexport * from './link-marker';\nexport * from './setting';\nexport * from './setting-panel';\nexport type { ImageCropperRef } from './image-cropper';\nexport { ImageCropper } from './image-cropper';\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { GatewayOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\nimport { ResolutionPicker } from 'src/component';\n\nexport const ResolutionButton = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    border-left: var(--bw) solid var(--sub-secondary);\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    color: var(--color);\n    cursor: pointer;\n    .anticon {\n        font-size: var(--fs-2xl);\n        margin-left: 0;\n    }\n    .resolution-overlay {\n        position: absolute;\n        left: 50%;\n        bottom: 3px; // Alignment\n        font-size: var(--fs-xs);\n        text-align: center;\n        transform: translateX(-50%);\n    }\n    .resolution-icon {\n        transform: translateY(-5px); // Alignment\n    }\n`;\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    globalScale: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    globalScale,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey, resolution,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n            globalScale,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n            >\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                    <GatewayOutlined className=\"resolution-icon\" />\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\n                </ResolutionButton>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport copy from 'copy-to-clipboard';\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        padding-bottom: var(--spacing-sm);\n        .icon {\n            font-size: var(--fs-4xl);\n        }\n        &.export-download-image {\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\n            border-bottom: var(--bw) solid var(--sub-secondary);\n            &:disabled {\n                border-bottom: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        gap: var(--spacing-lg);\n        align-items: center;\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        &.mode_other {\n            grid-template-columns: 1fr 1fr;\n        }\n        button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            width: 100%;\n            height: 100%;\n        }\n        > div {\n            height: 100%;\n        }\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .resolution-picker {\n        background-color: var(--main-level-4);\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\n        padding: var(--spacing-xs);\n        line-height: 1;\n        text-align: center;\n        border: var(--bw) solid transparent;\n        cursor: pointer;\n    }\n    .export-input-raw {\n        grid-column: 1 / -1;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n    withText?: boolean,\n    disabled: boolean,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n    disabled,\n    withText,\n}: CardDataCopyButton) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledCardDataCopyButton\n        disabled={disabled}\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay\n            ? <div className=\"copiable-overlay\">\n                {withText\n                    ? <>Copied&nbsp;<CheckOutlined /></>\n                    : <CheckOutlined />}\n                </div>\n            : null}\n        {children}\n    </StyledCardDataCopyButton>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    tainted: boolean,\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    tainted,\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey,\n        resolution,\n    })));\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            width={600}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\n                        <div>\n                            <StyledActionIconButton\n                                disabled={tainted && mode === 'other'}\n                                onClick={() => {\n                                    const blob = new Blob([data], { type: 'application/json' });\n                                    downloadBlob(\n                                        normalizeCardName(name),\n                                        blob,\n                                        'application/json',\n                                    );\n                                }}\n                            >\n                                <div className=\"icon\"><DownloadOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.download-button.label']}\n                                </div>\n                            </StyledActionIconButton>\n                        </div>\n                    </InternalPopover>\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['prompt.export.offline-warning.message']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={internalCardData.ygocarder.data}\n                                withText\n                            >\n                                <div className=\"icon\"><CopyOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.copy-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    {mode === 'ygocarder' && <InternalPopover\n                        placement=\"bottom\"\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['image-cropper.offline-warning']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={window.location.href}\n                                withText\n                            >\n                                <div className=\"icon\"><LinkOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.share-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    <div>\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\n                            <div>\n                                <StyledActionIconButton\n                                    disabled={tainted}\n                                    className=\"export-download-image\"\n                                    onClick={onRequireDownload}\n                                >\n                                    <div className=\"icon\"><FileImageOutlined /></div>\n                                    <div className=\"label\">\n                                        {language['button.export-modal.save-button.label']}\n                                    </div>\n                                </StyledActionIconButton>\n                            </div>\n                        </InternalPopover>\n                        <Dropdown overlay={<ResolutionPicker />}>\n                            <div className=\"resolution-picker\">\n                                {resolution[0]} × {resolution[1]}\n                            </div>\n                        </Dropdown>\n                    </div>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                        rows={5}\n                    />}\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['button.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown \n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport {\n    isYgoprodeckImage,\n    // uploadToImgur,\n} from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 * \n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    // try {\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\n                    //     if (imgurResponse.status !== 200) {\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\n                    //     }\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\n                    // } catch (e) {\n                    //     /** Failing the upload process does not terminate the import process */\n                    //     console.error('Upload error:', e);\n                    //     notification.error({\n                    //         message: language['prompt.import.imgur.message'],\n                    //         description: language['prompt.import.imgur.description'],\n                    //     });\n                    // }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['button.import.label']}\n            className=\"global-overlay\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl-E / ⌘-E</div>\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['button.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n    PendulumSizeMap,\n    OtherFinishTypeMap,\n    ExtraAttributeList,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\n    label: labelKey ? dictionary[labelKey] : label,\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\n    value,\n}));\n\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n    label: dictionary[labelKey],\n    value,\n}));\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative, supportFormat }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n                />\n            </Tooltip>,\n        value: name,\n        isCreative,\n        supportFormat,\n    }))\n    .filter(({ isCreative, supportFormat }) => (isCreative === false || isCreative === showCreativeOption) && supportFormat.includes(format));\n\nexport const getExtraAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => ExtraAttributeList\n    .map(({ name, nameKey, isCreative, supportFormat }) => ({\n        label: <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n        value: name,\n        isCreative,\n        supportFormat,\n    }))\n    .filter(({ isCreative, supportFormat }) => (isCreative === false || isCreative === showCreativeOption) && supportFormat.includes(format));\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);\n\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation, StyledPopMarkdown } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '★',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                '∅',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<StyledPopMarkdown>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </StyledPopMarkdown>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n};\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n            </CircularAnglePicker>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import { StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={8} xmin={-8}\n                ymax={8} ymin={-8}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {widthLabel}:&nbsp;<GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { InputNumber } from 'antd';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\nimport styled from 'styled-components';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport { getDefaultNameStyle } from 'src/model';\n\nconst MaterialColor = styled.div<{ $color: string }>`\n    border: var(--bw) solid var(--sub-level-2);\n    display: inline-block;\n    width: 2rem;\n    height: 1em;\n    border-radius: var(--br-sm);\n    cursor: pointer;\n    ${({ $color }) => `background-color: ${$color};`}\n`;\nconst EmbossControlContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: max-content max-content;\n    color: var(--color);\n    .emboss-control-title {\n        grid-column: -1 / 1;\n        font-size: var(--fs-sm);\n        text-align: center;\n        padding: var(--spacing-sm);\n        padding-bottom: 0;\n    }\n    .emboss-control-left h2 {\n        padding: var(--spacing-sm) 0;\n    }\n    .angle-picker-container {\n        text-align: center;\n    }\n    .emboss-control-right {\n        padding: var(--spacing-sm) 0;\n    }\n    .emboss-control-left {\n        padding: var(--spacing-sm);\n        padding-top: 0;\n    }\n    .slider-label {\n        padding: 0;\n        border: none;\n    }\n    .vertical-angle-control {\n        grid-template-columns: max-content 60px 85px 12px;\n    }\n    .reset-button {\n        cursor: pointer;\n        &:hover {\n            color: var(--color-heavy);\n        }\n    }\n    .navigate-button {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n    .thickness-row {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        column-gap: var(--spacing-sm);\n        align-items: center;\n        .ant-slider {\n            height: unset;\n            margin-top: var(--spacing-xs);\n            margin-bottom: var(--spacing-xs);\n        }\n    }\n`;\n\nconst VECTOR_VALUE_EPSILON = 0.01;\nconst DEFAULT_PITCH = 90;\nconst DEFAULT_YAW = 90;\nfunction hexToRgb(hex: string) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    return (result\n        ? [\n            parseInt(result[1], 16),\n            parseInt(result[2], 16),\n            parseInt(result[3], 16)\n        ]\n        : [0, 0, 0]) as [number, number, number];\n  }\n\nexport type EmbossControllerRef = {\n    setValue: (value: {\n        color?: string,\n        pitch?: number,\n        yaw?: number,\n        thickness?: number,\n    }) => void,\n};\nexport type EmbossController = {\n    defaultPitch?: number,\n    defaultYaw?: number,\n    defaultThickness?: number,\n    materialColor?: string,\n    children?: React.ReactNode,\n    language: LanguageDataDictionary,\n    onColorTabNavigate: () => void,\n    onChange: (value: {\n        lightColorVec: [number, number, number],\n        lightAngleVec: [number, number, number],\n        yaw: number,\n        pitch: number,\n        thickness: number,\n    }) => void,\n};\nconst defaultValue = getDefaultNameStyle();\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\n    defaultPitch = defaultValue.embossPitch,\n    defaultYaw = defaultValue.embossYaw,\n    defaultThickness = defaultValue.embossThickness,\n    materialColor,\n    children,\n    language,\n    onColorTabNavigate,\n    onChange,\n}, ref) => {\n    const [requestUpdate, internalId] = useRefresh();\n    const [color, setColor] = useState('#ffffff');\n    const [thickness, setThickness] = useState(defaultThickness);\n    const [angle, setAngle] = useState(defaultYaw);\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\n    const currentThickness = useRef(defaultThickness);\n    /** Currently we only allow pure white light to avoid confusion for user. */\n    const [allowPickColor] = useState(false);\n\n    useEffect(() => {\n        let relevant = true;\n        if (internalId) setTimeout(() => {\n            if (relevant) {\n                const nextAngle = angleToVector(angle, verticalAngle);\n                const nextColor = hexToRgb(color);\n\n                if (\n                    nextColor[0] !== currentColorVec.current[0]\n                    || nextColor[1] !== currentColorVec.current[1]\n                    || nextColor[2] !== currentColorVec.current[2]\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\n                    || thickness !== currentThickness.current\n                ) {\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\n                }\n                currentColorVec.current = nextColor;\n                currentAngleVec.current = nextAngle;\n                currentThickness.current = thickness;\n            }\n        }, 150);\n\n        return () => {\n            relevant = false;\n        };\n    }, [internalId, color, angle, verticalAngle, thickness]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ color, pitch, yaw, thickness }) => {\n            if (color) setColor(color);\n            if (pitch) setVerticalAngle(pitch);\n            if (yaw) setAngle(yaw);\n            if (typeof thickness === 'number') setAngle(thickness);\n        }\n    }));\n\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\n        <div className=\"emboss-control-title\">\n            {children}\n        </div>\n        <div className=\"emboss-control-left\">\n            <h2>\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\n                    className=\"material-color\"\n                    onClick={onColorTabNavigate}\n                    $color={materialColor}\n                />\n            </h2>\n            {language['input.name-style.emboss.color.alert'](<span key=\"color-navigate\" className=\"navigate-button\" onClick={onColorTabNavigate}>\n                {language['input.name-style.color.label']}\n            </span>)}\n            <h2 className=\"thickness-row\">\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\n                <GuardedSlider\n                    value={thickness}\n                    min={0}\n                    max={4}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setThickness(value);\n                            requestUpdate();\n                        }\n                    }}\n                />\n            </h2>\n            <h2>\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\n                    className=\"reset-button\"\n                    onClick={() => {\n                        setVerticalAngle(DEFAULT_PITCH);\n                        requestUpdate();\n                    }}\n                />\n            </h2>\n            <CombinedSliderContainer className=\"vertical-angle-control\">\n                <div className=\"slider-label\" />\n                <InputNumber\n                    size=\"small\"\n                    min={-90}\n                    max={90}\n                    onChange={value => {\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\n                        requestUpdate();\n                    }}\n                    value={verticalAngle}\n                />\n                <GuardedSlider\n                    min={-90}\n                    max={90}\n                    value={verticalAngle}\n                    onChange={value => {\n                        setVerticalAngle(value);\n                        requestUpdate();\n                    }}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\n                className=\"reset-button\"\n                onClick={() => {\n                    setAngle(DEFAULT_YAW);\n                    requestUpdate();\n                }}\n            /></h2>\n            <div className=\"horizontal-angle-contorl\">\n                <CircularAnglePicker\n                    angle={angle}\n                    size={120}\n                    setAngle={angle => {\n                        setAngle(angle);\n                        requestUpdate();\n                    }}\n                />\n            </div>\n        </div>\n        {allowPickColor && <div className=\"emboss-control-right\">\n            <h2>Light color</h2>\n            <ChromePicker\n                styles={{\n                    default: {\n                        picker: {\n                            color: '#000000',\n                            background: 'var(--main-level-3)',\n                            boxShadow: 'none',\n                        },\n                        body: {\n                            padding: 'var(--spacing) var(--spacing)',\n                        }\n                    },\n                }}\n                disableAlpha={true}\n                color={color}\n                onChange={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n                onChangeComplete={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n            />\n        </div>}\n    </EmbossControlContainer>;\n});","import { useEffect, useState } from 'react';\nimport { ChromePicker, CompactPicker } from 'react-color';\nimport { DefaultColorList } from 'src/model';\nimport styled from 'styled-components';\n\nconst TextColorPickerContainer = styled.div`\n    .chrome-picker {\n        /** Target color format swapper in picker's body */\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\n            display: none !important;\n        }\n    }\n`;\nexport type TextColorPicker = {\n    color: string,\n    onChange: (color: string) => void,\n};\nexport const TextColorPicker = ({\n    color,\n    onChange,\n}: TextColorPicker) => {\n    const [internalColor, setInternalColor] = useState(color);\n\n    useEffect(() => {\n        setInternalColor(color);\n    }, [color]);\n\n    return <TextColorPickerContainer>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                        padding: 'var(--spacing-sm) var(--spacing)',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    },\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onChange(color.hex);\n            }}\n        />\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => {\n                onChange(color.hex);\n            }}\n        />\n    </TextColorPickerContainer>;\n};","import { Checkbox, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown, PopoverButton } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPatternOption,\n} from './style-picker.styled';\nimport { useLanguage, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\nimport { TextColorPicker } from './text-color-picker';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        requestUpdateCustomStyle();\n    }, [requestUpdateCustomStyle]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n                embossPitch, embossYaw, embossThickness,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n            embossControllerRef.current?.setValue({\n                pitch: embossPitch,\n                yaw: embossYaw,\n                thickness: embossThickness,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        hasEmboss, embossPitch, embossYaw, embossThickness,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n\n    const colorPickerButtonId = 'color-picker';\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <TextColorPicker\n                                        color={fillStyle}\n                                        onChange={hexColor => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            id={colorPickerButtonId}\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom}\n                            className=\"picker-dropdown color-picker-dropdown\"\n                        >\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\n                            {language['input.name-style.font.label']}\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className=\"custom-style-picker\">\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.emboss.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\n                                    language={language}\n                                    defaultPitch={embossPitch}\n                                    defaultYaw={embossYaw}\n                                    defaultThickness={embossThickness}\n                                    materialColor={fillStyle}\n                                    onColorTabNavigate={() => {\n                                        document.getElementById(colorPickerButtonId)?.click();\n                                    }}\n                                    onChange={({ thickness, yaw, pitch }) => {\n                                        setValue(cur => ({ ...cur,\n                                            embossPitch: pitch,\n                                            embossYaw: yaw,\n                                            embossThickness: thickness,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                >\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\n                                </EmbossController>}\n                            </div>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasEmboss}\n                            className=\"picker-dropdown emboss-picker-dropdown\"\n                        >\n                            {language['input.name-style.emboss.label']}\n                        </PopoverButton>\n                    </Popover>}\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrainRef = {\n    changeFrame: (frameValue: number | string) => void,\n};\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n    onPasswordChange: (value: string) => void,\n    onStatChange: (atk: string, def: string, linkRating: string) => void,\n};\nexport const FrameTrain = forwardRef<FrameTrainRef, FrameTrain>(({\n    onSTFrameChange,\n    onPasswordChange,\n    onStatChange,\n}, ref) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                attribute,\n                format,\n                password,\n                star,\n                atk,\n                def,\n                linkRating,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const nextTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            const nextPassword = nextFrame === 'token'\n                ? passwordSentenceMap[format]\n                : password;\n            const nextAtk = willRemoveStat ? '' : (atk === '' ? '0' : atk);\n            const nextDef = willRemoveStat ? '' : (def === '' ? '0' : def);\n            const nextLinkRating = willRemoveStat ? '' : linkRating;\n            const nextStar = nextFrame === 'token'\n                ? 0\n                : star;\n\n            onPasswordChange(nextPassword);\n            if (willBecomeST) {\n                onSTFrameChange(nextTypeAbility);\n            }\n            onStatChange(nextAtk, nextDef, nextLinkRating);\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: nextFrame === 'token'\n                    ? NO_ATTRIBUTE\n                    : willBecomeST\n                        ? `${nextFrame}`.toUpperCase()\n                        : attribute,\n                star: nextStar,\n                typeAbility: nextTypeAbility,\n                password: nextPassword,\n                atk: nextAtk,\n                def: nextDef,\n                linkRating: nextLinkRating,\n            };\n        });\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\n\n    useImperativeHandle(ref, () => ({\n        changeFrame,\n    }));\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n});","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\nimport { Tooltip } from 'antd';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props, tooltip } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n                const children = <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n\n                return tooltip\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\n                    : children;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: 375px;\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum, pendulumSize,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain, SolidLabel } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .art-frame {\n        span {\n            padding: 0;\n        }\n    }\n    div.ant-slider {\n        .ant-slider-handle {\n            height: 19px;\n            top: 8px;\n            border-radius: 0;\n            width: 10px;\n        }\n        .ant-slider-step,\n        .ant-slider-track,\n        .ant-slider-rail {\n            height: 10px;\n        }\n    }\n    .card-opacity-slider {\n        flex: 0 1 auto;\n        .ant-slider {\n            padding-top: 8px;\n        }\n    }\n    .background-label {\n        cursor: pointer;\n        &:hover {\n            .background-preview {\n                box-shadow: 0 0 2px 0 #222222;\n            }\n        }\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        text-align: center;\n        user-select: none;\n        .background-preview-callback-passer {\n            width: 100%;\n            height: 100%;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .layout-picker-panel {\n            margin-top: var(--spacing);\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .background-type-picker {\n            .radio-train-input-group {\n                display: grid;\n            }\n            .ant-radio-button-wrapper {\n                border-left: var(--bw) solid var(--sub-level-1);\n            }\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background,\n            backgroundData,\n            backgroundSource,\n            backgroundType,\n            hasBackground,\n            isPendulum,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <SolidLabel className=\"background-label\">\n                <Checkbox\n                    className=\"art-frame\"\n                    onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                    checked={opacity.boundless}\n                >\n                    &nbsp;{language['input.opacity.boundless.label']}\n                </Checkbox>\n            </SolidLabel>\n        </Tooltip>\n        <Popover\n            visible={backgroundInputVisible}\n            destroyTooltipOnHide={false}\n            trigger={['click']}\n            onVisibleChange={setBackgroundInputVisible}\n            overlayClassName={[\n                'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                backgroundInputVisible ? 'picker-visible' : '',\n                backgroundInputHidden ? 'picker-hidden' : '',\n            ].join(' ')}\n            content={<div className=\"overlay-event-absorber\">\n                <StyledBaseFillPickerContainer\n                    className={[\n                        'custom-style-picker',\n                        noBackground ? 'overlay-no-background-image' : ''\n                    ].join(' ')}\n                >\n                    <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                        <Checkbox\n                            checked={hasBackground}\n                            onChange={e => {\n                                changeHasBackground(e);\n                            }}\n                        >{language['input.background.toggle-label']}</Checkbox>\n                        <br />\n                        <i>{language['input.background.description']}</i>\n                    </h3>\n                    <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                        <BackgroundInputGroup\n                            ref={backgroundInputRef}\n                            receivingCanvas={receivingCanvas}\n                            onSourceLoaded={onSourceLoaded}\n                            onTainted={onTainted}\n                            onCropChange={onCropChange}\n                            backgroundColor={opacity.baseFill}\n                        >\n                            <div className=\"layout-picker-panel\">\n                                <div className=\"layout-picker-subpanel color-section\">\n                                    <h2>{language['input.background-color.label']}</h2>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={opacity.baseFill}\n                                        onChangeComplete={color => {\n                                            setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                        }}\n                                    />\n                                </div>\n                                {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                    <h2>{language['input.background-type.label']}</h2>\n                                    <RadioTrain\n                                        className=\"background-type-picker\"\n                                        onChange={changeBackgroundType}\n                                        optionList={getBackgroundTypeList({\n                                            fit: language['input.background-type.fit.label'],\n                                            full: language['input.background-type.full.label'],\n                                            frame: language['input.background-type.frame.label'],\n                                        })}\n                                        value={backgroundType}\n                                    />\n                                </div>}\n                            </div>\n                        </BackgroundInputGroup>\n                    </div>\n                </StyledBaseFillPickerContainer>\n            </div>}\n            placement=\"bottom\"\n        >\n            <SolidLabel className=\"background-label\">\n                <div\n                    className=\"background-preview\"\n                    style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                >\n                    {hasBackground\n                        ? background || backgroundData\n                            ? <img\n                                className=\"background-image-preview\"\n                                src={backgroundSource === 'online'\n                                    ? background\n                                    : backgroundData}\n                                alt=\"Background\"\n                            />\n                            : null\n                        : <BorderOuterOutlined className=\"no-background-icon\" />}\n                </div>\n                {language['input.background.label']}\n            </SolidLabel>\n        </Popover>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <CombinedSliderContainer key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <SolidLabel className=\"slider-label\">\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </SolidLabel>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { Input, Popover } from 'antd';\nimport { RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { getCardIconFromFrame } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeList, IconTypeMap } from 'src/model';\n\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 7rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    })));\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const autoIconType = getCardIconFromFrame(frame);\n    const iconTypeData = cardIcon === 'auto'\n        ? IconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\n        : IconTypeMap[cardIcon];\n    const iconDropdownText = language[iconTypeData.labelKey];\n    const IconDropdownLabel = showCreativeOption\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledIconDropdown>\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\n                    return <StyledDropdown.Option key={value}\n                        className={value === cardIcon ? 'menu-active' : ''}\n                        onClick={() => changeCardIcon(value)}\n                    >\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                    </StyledDropdown.Option>;\n                })}\n            </StyledIconDropdown>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return cardIcon === 'auto' && autoIconType === 'none'\n        ? showCreativeOption\n            ? <RadioTrain\n                className=\"fill-input-train\"\n                value={cardIcon}\n                onChange={changeCardIcon}\n                optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\n                    return {\n                        label: icon ?? <CloseCircleOutlined />,\n                        value,\n                        tooltipProps: {\n                            title: language[fullLabelKey],\n                        },\n                    };\n                })}\n            >\n                {DropdownChildren}\n            </RadioTrain>\n            : null\n        : iconTypeData.value === 'st'\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                {DropdownChildren}\n            </RadioTrain>\n            : <StyledCheckboxStarTrain\n                className=\"checkbox-star-train\"\n                value={star}\n                onChange={changeStar}\n                optionList={StarButtonList}\n                strict={true}\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                    <Input\n                        className=\"custom-star-input\"\n                        value={typeof star === 'number' ? '' : star}\n                        allowClear\n                        onChange={changeStar}\n                        placeholder={language['input.icon-type.custom.placeholder']}\n                    />\n                    <RadioTrain\n                        value={starAlignment}\n                        onChange={changeStarAlignment}\n                        optionList={[\n                            {\n                                value: 'auto',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                                label: <CloseCircleOutlined />,\n                            },\n                            {\n                                value: 'left',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                                label: <AlignLeftOutlined />,\n                            },\n                            {\n                                value: 'center',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                                label: <AlignCenterOutlined />,\n                            },\n                            {\n                                value: 'right',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                                label: <AlignRightOutlined />,\n                            },\n                        ]}\n                    />\n                </div>}\n            >\n                {DropdownChildren}\n            </StyledCheckboxStarTrain>;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    holdingShift: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': {\n            if (holdingShift) {\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 4 : 5;\n            } else {\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 2 : 3;\n            }\n            break;\n        }\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`card-textarea ${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        autoSize={{\n            minRows: 9,\n        }}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    position: relative;\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 480px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .inline-input {\n        margin-bottom: var(--spacing-xs);\n    }\n    .checkbox-disabled {\n        .ant-checkbox {\n            display: none;\n        }\n        visibility: hidden; // Avoid collapsing\n    }\n    .frame-part-name {\n        position: absolute;\n        padding: 0 var(--spacing);\n        top: calc(-1 * var(--spacing-xs));\n        right: calc(-1 * var(--spacing-xs));\n        border-radius: 0 0 0 var(--br-lg);\n        background-color: var(--main-level-4);\n        border-left: var(--bw) solid var(--sub-level-4);\n        border-bottom: var(--bw) solid var(--sub-level-4);\n        &:empty {\n            display: none;\n        }\n    }\n    .horizontal-sketch-picker {\n        margin-top: var(--spacing);\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { checkDiplayLinkRating, randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Checkbox, Dropdown, Menu, Tooltip } from 'antd';\nimport { copyrightMap, FlagIndexMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\nconst StyledLinkRatingInputContainer = styled(StyledInputLabelWithButton)`\n    .auto-link-rating-input {\n        margin-left: var(--spacing-sm);\n    }\n    .auto-link-rating {\n        display: inline-block;\n        width: 1.5rem;\n        height: 1.5rem;\n        line-height: 1;\n        text-align: center;\n        padding: var(--spacing-xs);\n        background: var(--main-level-4);\n        border-radius: var(--br-lg);\n        font-family: 'RoGSanSrfStd-Bd';\n        box-shadow: var(--bs-button);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string, linkRating?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isLink,\n        linkRating,\n        autoLinkRating,\n        showDefAndLink,\n        linkRatingDisplayMode,\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format, flag, isLink, linkRating, linkMap },\n        getUpdater,\n    }) => ({\n        linkRating,\n        autoLinkRating: linkMap.length,\n        isLink,\n        sticker,\n        format,\n        showDefAndLink: flag[FlagIndexMap['showDefAndLink']] === 1,\n        linkRatingDisplayMode: flag[FlagIndexMap['linkRating']],\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n    const linkRatingInputRef = useRef<CardTextInputRef>(null);\n\n    const showAtkInput = true;\n    const showLinkInput = checkDiplayLinkRating(linkRatingDisplayMode, isLink);\n    const showDefInput = showLinkInput\n        ? showDefAndLink\n        : true;\n    const showPadding = [showAtkInput, showDefInput, showLinkInput].filter(entry => entry === true).length % 2 === 1;\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeLinkRating = useMemo(() => getUpdater('linkRating', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def, linkRating }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n            if (typeof linkRating === 'string') linkRatingInputRef.current?.setValue(linkRating);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            {showAtkInput && <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />}\n            {showDefInput && <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />}\n            {showPadding && <div />}\n            {showLinkInput && <CardTextInput ref={linkRatingInputRef}\n                id=\"link\"\n                addonBefore={<StyledLinkRatingInputContainer className=\"input-label-with-button\">\n                    <div className=\"input-label\">{language['input.link.label']}</div>\n                    <Tooltip title={language['input.link.auto.tooltip']}>\n                        <div className=\"auto-link-rating-input\">\n                            {(typeof linkRating === 'string' && linkRating.length > 0)\n                                ? <Checkbox\n                                    onChange={e => {\n                                        if (e.target.checked) {\n                                            changeLinkRating('');\n                                            linkRatingInputRef.current.setValue('');\n                                        }\n                                    }}\n                                />\n                                : <div className=\"auto-link-rating\">\n                                    {isLink ? autoLinkRating : '-'}\n                                </div>}\n                        </div>\n                    </Tooltip>\n                </StyledLinkRatingInputContainer>}\n                defaultValue={`${useCard.getState().card.linkRating}`}\n                onChange={changeLinkRating}\n                onTakePicker={onTakePicker}\n                placeholder={language['input.link.custom.placeholder']}\n            />}\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                        <IconButton\n                            onClick={() => {}}\n                            Icon={UnorderedListOutlined}\n                        />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\nimport {\n    ImageCropper,\n    ImageCropperRef,\n    LINK_MARKER_PICKER_WIDTH,\n    LinkMarkerPicker,\n    RadioTrain,\n    StyledDropdown,\n    StyledDropdownLabel,\n} from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\nimport styled from 'styled-components';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { notification, Popover } from 'antd';\nimport { mergeClass } from 'src/util';\n\nconst LinkPickerContainer = styled.div<{ $hover: boolean }>`\n    position: relative;\n    ${({ $hover }) => $hover\n        ? `\n            .link-marker-picker {\n                position: absolute;\n                top: 0;\n                left: 0;\n            }\n        `\n        : ''}\n`;\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    text-align: left;\n    .ant-input-group-addon {\n        flex: 0 0 auto;\n        text-align: left;\n    }\n    .radio-train-input-group {\n        flex: 1;\n    }\n    .ant-radio-button-wrapper {\n        padding: 0 var(--spacing-xs);\n    }\n`;\nconst FinishLabel = styled(StyledDropdown.Option)`\n    display: grid;\n    grid-template-columns: 30px 1fr;\n    column-gap: var(--spacing-xs);\n    .tag {\n        background: var(--sub-level-2);\n        color: var(--color-contrast);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    &.default {\n        .tag {\n            background: var(--sub-level-4);\n        }\n    }\n`;\n\ntype OtherFinishPicker = {\n    finishValueList: [art: string, ...OtherFinish],\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\n    language: LanguageDataDictionary,\n    showCreativeOption: boolean,\n};\nconst OtherFinishPicker = ({\n    finishValueList,\n    changeFinish,\n    language,\n    showCreativeOption,\n}: OtherFinishPicker) => {\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\n    /** Be careful, we use added order here, so latest foil target is highest index. */\n    const valueMap = {\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[1],\n        [OtherFinishTypeMap['background'].key]: finishValueList[4],\n        [OtherFinishTypeMap['icon'].key]: finishValueList[2],\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[3],\n        [OtherFinishTypeMap['art'].key]: finishValueList[0],\n    };\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\n\n    const IconDropdownLabel = showCreativeOption\n        ? <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined />\n        </>\n        : <>\n            <label>{language['input.finish.label']}:</label>&nbsp;\n            {language[OtherFinishTypeMap[selectedType].labelKey]}\n        </>;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledDropdown.Container>\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\n                {finishList.map(({ label, value }) => {\n                    return <FinishLabel key={value}\n                        className={mergeClass(\n                            valueMap[value] === 'normal' ? 'default' : '',\n                            selectedType === value ? 'menu-active' : '',\n                        )}\n                        onClick={() => {\n                            setSelectedType(value);\n                        }}\n                    >\n                        <div className=\"value\">\n                            <div className=\"tag\">{valueMap[value] === 'normal' ? 'Auto' : valueMap[value]}</div>\n                        </div>\n                        <div className=\"label\">{label}</div>\n                    </FinishLabel>;\n                })}\n            </StyledDropdown.Container>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n\n    return <StyledImageRadioTrain\n        className=\"art-finish-checkbox fill-input-train\"\n        value={valueMap[selectedType]}\n        onChange={value => {\n            const nextValueMap = { ...valueMap };\n            nextValueMap[selectedType] = `${value}`;\n\n            changeFinish(nextValueMap);\n        }}\n        optionList={ArtFinishButtonList}\n    >\n        {IconDropdown}\n    </StyledImageRadioTrain>;\n};\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    showCreativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    showCreativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish, otherFinish,\n            linkMap,\n            isPendulum, pendulumSize,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <OtherFinishPicker\n                finishValueList={[artFinish, ...otherFinish]}\n                changeFinish={finishMap => {\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\n                    changeOtherFinish([\n                        finishMap[OtherFinishTypeMap['attribute'].key],\n                        finishMap[OtherFinishTypeMap['icon'].key],\n                        finishMap[OtherFinishTypeMap['sticker'].key],\n                        finishMap[OtherFinishTypeMap['background'].key],\n                    ]);\n                }}\n                language={language}\n                showCreativeOption={showCreativeOption}\n            />\n            : null\n        }\n    >\n        <LinkPickerContainer\n            className=\"link-picker-container\"\n            style={{ minWidth: LINK_MARKER_PICKER_WIDTH }}\n            $hover={showExtraDecorativeOption}\n        >\n            <LinkMarkerPicker key={`link-${JSON.stringify(linkMap)}`}\n                active={isLink === true}\n                defaultValue={linkMap}\n                onChange={changeLinkMap}\n                onStatusChange={changeLinkStatus}\n            />\n        </LinkPickerContainer>\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { Checkbox } from 'antd';\nimport { RadioTrain } from 'src/component';\nimport {\n    CardFlag,\n    FlagInfoList,\n    LINK_RATING_ALWAYS_AUTO,\n    LINK_RATING_ALWAYS_HIDE,\n    LINK_RATING_ALWAYS_SHOW,\n} from 'src/model';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst FrameBehaviorSettingPanelContainer = styled.div`\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border-top: var(--bw) solid var(--sub-level-3);\n    > * + * {\n        margin-top: var(--spacing-sm);\n    }\n    .link-rating-behavior-panel {\n        .radio-train-input-group {\n            flex: 0 0 auto;\n            margin-right: var(--spacing-sm);\n        }\n        label {\n            flex: 1 1 auto;\n            text-align: left;\n            font-size: var(--fs);\n            color: var(--color);\n        }\n    }\n`;\n\nexport type FrameBehaviorSettingPanel = {\n    \n};\nexport const FrameBehaviorSettingPanel = () => {\n    const language = useLanguage();\n    const {\n        flag,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        flag,\n        setCard,\n        getUpdater,\n    })));\n\n    const updateFlag = (value: number, index: number) => setCard(currentCard => {\n        const nextFlagList: CardFlag = [...currentCard.flag];\n        nextFlagList[index] = value;\n\n        return {\n            ...currentCard,\n            flag: nextFlagList,\n        };\n    });\n\n    return <FrameBehaviorSettingPanelContainer>\n        {flag.map((entry, index) => {\n            const { labelKey, type } = FlagInfoList[index] ?? {};\n\n            if (type === 'checkbox') {\n                return <div key={labelKey}>\n                    <Checkbox\n                        checked={entry !== 0}\n                        onChange={e => {\n                            const value = e.target.checked ? 1 : 0;\n\n                            updateFlag(value, index);\n                        }}\n                    >{language[labelKey]}</Checkbox>\n                </div>;\n            }\n            if (type === 'link-rating-behavior') {\n                return <RadioTrain key={labelKey}\n                    className=\"link-rating-behavior-panel\"\n                    onChange={(value) => updateFlag(Number(value), index)}\n                    optionList={[\n                        { label: language['input.flag.link-rating-behavior.auto'], value: LINK_RATING_ALWAYS_AUTO },\n                        { label: language['input.flag.link-rating-behavior.show'], value: LINK_RATING_ALWAYS_SHOW },\n                        { label: language['input.flag.link-rating-behavior.hide'], value: LINK_RATING_ALWAYS_HIDE },\n                    ]}\n                    value={entry}\n                    suffix={<label>\n                        {language[labelKey]}\n                    </label>}\n                />;\n            }\n            return null;\n        })}\n    </FrameBehaviorSettingPanelContainer>;\n};","import { getNavigationProps, mergeClass, resolveFrameStyle } from 'src/util';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { getFrameButtonList } from '../const';\nimport { Button, Checkbox } from 'antd';\nimport { FrameInfoBlock, HorizontalSketchPicker, RadioTrain } from 'src/component';\nimport styled from 'styled-components';\nimport { CanvasConst, DyeIndexMap, FrameDyeList, FrameInfoMap, FramePositionMap, getDefaultDyeList } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\nconst FrameLayoutContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    column-gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    ${StyledPendulumFrameContainer} {\n        border: none;\n        box-shadow: none;\n        padding: 0;\n    }\n    .visual-preview-container {\n        color: var(--color-heavy);\n        width: 110px; // Alignment\n        text-align: center;\n        label {\n            padding-bottom: var(--spacing-xs);\n        }\n        .frame-info-block {\n\t\t\theight: 30px; // Alignment\n\t\t\tline-height: 28px; // Alignment with border 1px\n            border: var(--bw) solid var(--sub-level-1);\n            background-color: var(--main-level-1);\n            margin-bottom: var(--spacing-xs);\n            cursor: pointer;\n            .frame-info-block-label {\n                padding: 0 var(--spacing-xs);\n            }\n            &.active {\n                border: var(--bw) dashed var(--main-level-2);\n            }\n            &:hover {\n                border: var(--bw) solid var(--main-level-2);\n            }\n        }\n    }\n`;\nconst CardLayoutContainer = styled.div<{ $width: number, $height: number, $hoverable: boolean }>`\n    /** Ensure even width */\n    --layout-width: ${props => Math.round(props.$width / 2) * 2}px;\n    --layout-height: ${props => props.$height}px;\n    display: inline-block;\n    width: var(--layout-width);\n    height: var(--layout-height);\n    box-shadow: 0 0 2px 0 #202020;\n    position: relative;\n    background: var(--main-level-2);\n    button {\n        border: none;\n    }\n    .overlay-patch {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n    }\n    .dye-patch {\n        position: absolute;\n        z-index: 1;\n        top: 10%;\n        left: 50%;\n        min-width: 6px;\n        min-height: 6px;\n        width: ${props => props.$width / 6}px;\n        height: ${props => props.$width / 6}px;\n        border-radius: var(--br-lg);\n        transform: translateX(-50%);\n    }\n    .card-layout {\n        position: absolute;\n        cursor: pointer;\n        padding: 0;\n        &.unmodified .overlay-patch {\n            background: var(--gradient-diagonal-stripe);\n        }\n    }\n    .partial-layout {\n        background-clip: padding-box;\n        ${props => props.$hoverable\n            ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) dashed var(--main-level-2);\n                }\n            `\n            : ''}\n    }\n    .float-layout {\n        ${props => props.$hoverable\n            ? `\n                border: var(--bw) solid var(--main-level-1);\n                &.active {\n                    border: var(--bw) dashed var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n                &:hover {\n                    border: var(--bw) solid var(--main-level-2);\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\n                }\n            `\n            : ''}\n    }\n    /** For Zarc's gradient */\n    .partial-layout {\n        background-size: 200%;\n    }\n    .top-left {\n        width: 50%; height: 50%;\n        top: 0; left: 0;\n    }\n    .top-right {\n        width: 50%; height: 50%;\n        top: 0; left: 50%;\n        background-position-x: 100%;\n    }\n    .bottom-left {\n        width: 50%; height: 50%;\n        top: 50%; left: 0;\n    }\n    .bottom-right {\n        width: 50%; height: 50%;\n        top: 50%; left: 50%;\n        background-position-x: 100%;\n    }\n    /** Background width is slightly reduced to help active bottom frames easier */\n    .effect-background {\n        width: 80%;\n        height: 20%;\n        bottom: 5%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n    .pendulum-effect-background {\n        width: 80%;\n        height: 13%;\n        bottom: 28%;\n        left: 10%;\n        background-size: 125%;\n        background-position-x: 50%;\n    }\n`;\n\nexport type CardLayoutPreview = {\n    tabIndex?: number,\n    width: number,\n    height: number,\n    baseLayoutState?: Record<string, string | undefined>,\n    resolvedLayoutState: Record<string, string | undefined>,\n    isPendulum: boolean,\n    activeLayout?: string,\n    dyeList: string[],\n    onClick?: (key: string) => void,\n};\nexport const CardLayoutPreview = ({\n    tabIndex = 0,\n    width,\n    height,\n    baseLayoutState,\n    resolvedLayoutState,\n    isPendulum,\n    activeLayout,\n    dyeList,\n    onClick,\n}: CardLayoutPreview) => {\n    return <CardLayoutContainer $width={width} $height={height} $hoverable={!!onClick}>\n        {[\n            { key: 'topLeftFrame', className: 'card-layout partial-layout top-left' },\n            { key: 'topRightFrame', className: 'card-layout partial-layout top-right' },\n            { key: 'bottomLeftFrame', className: 'card-layout partial-layout bottom-left' },\n            { key: 'bottomRightFrame', className: 'card-layout partial-layout bottom-right' },\n            { key: 'effectBackground', className: 'card-layout float-layout effect-background' },\n            { key: 'pendulumEffectBackground', className: 'card-layout float-layout pendulum-effect-background' },\n        ].map(({ className, key }) => {\n            const frame = resolvedLayoutState[key];\n            const dyeIndex = DyeIndexMap[key];\n            const dyeColor = dyeIndex == null ? undefined : dyeList[DyeIndexMap[key]];\n\n            if (!frame) return null;\n            if (!isPendulum && key === 'pendulumEffectBackground') return null;\n            const {\n                labelBackgroundColor,\n                labelBackgroundImage,\n            } = FrameInfoMap[frame];\n            return <button key={key}\n                {...tabIndex < 0 ? {} : { tabIndex }}\n                className={mergeClass(\n                    className,\n                    key === activeLayout ? 'active' : '',\n                    baseLayoutState?.[key] === 'auto' ? 'unmodified' : '',\n                )}\n                onClick={() => onClick?.(key)}\n                style={labelBackgroundImage\n                    ? { backgroundImage: labelBackgroundImage }\n                    : { backgroundColor: labelBackgroundColor }\n                }\n            >\n                <div\n                    className=\"overlay-patch\"\n                    style={dyeColor\n                        ? {\n                            boxShadow: `0 0 0 ${Math.round(width / 16)}px ${dyeColor} inset`,\n                        }\n                        : {}}\n                />\n            </button>;\n        })}\n    </CardLayoutContainer>;\n};\n\ntype FramelayoutSettingPanelRef = {\n    focus: () => void,\n};\nexport type FramelayoutSettingPanel = {\n    isPendulum: boolean,\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onFrameChange: (frame: string) => void,\n    onCancel: () => void,\n};\nexport const FrameLayoutSettingPanel = forwardRef<FramelayoutSettingPanelRef, FramelayoutSettingPanel>(({\n    frameList,\n    onFrameChange,\n    onCancel,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        dyeList,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            frame,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            dyeList,\n            effectStyle,\n            pendulumStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        dyeList,\n        setCard,\n        getUpdater,\n    })));\n    const recentCustomPendulumFrame = useRef({\n        topLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        topRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        bottomRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        effectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n        pendulumEffectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\n    });\n    const [focus, setFocus] = useState(0);\n    const [activeLayout, setActiveLayout] = useState('frame');\n    const frameLayoutMainId = 'frame-layout-main';\n\n    useEffect(() => {\n        /** Avoid confusion */\n        if (activeLayout === 'pendulumEffectBackground' && !isPendulum) setActiveLayout('frame');\n    }, [activeLayout, isPendulum]);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => document.getElementById(frameLayoutMainId)?.focus(),\n    }));\n\n    const changeBottomLeftFrame = useMemo(() => getUpdater('pendulumFrame'), [getUpdater]);\n    const changeBottomRightFrame = useMemo(() => getUpdater('pendulumRightFrame'), [getUpdater]);\n    const changeTopLeftFrame = useMemo(() => getUpdater('leftFrame'), [getUpdater]);\n    const changeTopRightFrame = useMemo(() => getUpdater('rightFrame'), [getUpdater]);\n    const changeEffectBackground = (background: string) => setCard(currentCard => {\n        const nextEffectStyle = { ...currentCard.effectStyle };\n        nextEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            effectStyle: nextEffectStyle,\n        };\n    });\n    const changePendulumEffectBackground = (background: string) => setCard(currentCard => {\n        const nextPendulumEffectStyle = { ...currentCard.pendulumStyle };\n        nextPendulumEffectStyle.background = background;\n\n        return {\n            ...currentCard,\n            pendulumStyle: nextPendulumEffectStyle,\n        };\n    });\n    const changeDyeList = useMemo(() => getUpdater('dyeList'), [getUpdater]);\n    const changeDye = (color: string, name: string) => setCard(currentCard => {\n        const position = DyeIndexMap[name];\n\n        if (typeof position !== 'number') return currentCard;\n        const nextDyeList = [...currentCard.dyeList] as FrameDyeList;\n        nextDyeList[position] = color;\n\n        return {\n            ...currentCard,\n            dyeList: nextDyeList,\n        };\n    });\n    const changeLayout = (layoutValue: string) => {\n        if (activeLayout === 'bottomLeftFrame') changeBottomLeftFrame(layoutValue);\n        if (activeLayout === 'bottomRightFrame') changeBottomRightFrame(layoutValue);\n        if (activeLayout === 'topLeftFrame') changeTopLeftFrame(layoutValue);\n        if (activeLayout === 'topRightFrame') changeTopRightFrame(layoutValue);\n        if (activeLayout === 'effectBackground') changeEffectBackground(layoutValue);\n        if (activeLayout === 'pendulumEffectBackground') changePendulumEffectBackground(layoutValue);\n    };\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const activeFrame = layoutState[activeLayout];\n    const resolvedLayoutStyle = resolveFrameStyle(layoutState, isPendulum);\n    const dyeColor = DyeIndexMap[activeLayout];\n    return <FrameLayoutContainer>\n        <div className=\"visual-preview-container\">\n            <label>{language['input.advanced-frame.main.label']}</label>\n            <FrameInfoBlock\n                id={frameLayoutMainId}\n                tabIndex={0}\n                className={activeLayout === 'frame' ? 'active' : ''}\n                {...FrameInfoMap[frame]}\n                onClick={() => setActiveLayout('frame')}\n            />\n            <label>{language['input.advanced-frame.detailed.label']}</label>\n            <CardLayoutPreview\n                width={Math.round(width / 20) * 2}\n                height={Math.round(height / 20) * 2}\n                isPendulum={isPendulum}\n                baseLayoutState={layoutState}\n                resolvedLayoutState={resolvedLayoutStyle}\n                activeLayout={activeLayout}\n                onClick={key => setActiveLayout(key)}\n                dyeList={dyeList}\n            />\n            <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    changeBottomLeftFrame('auto');\n                    changeBottomRightFrame('auto');\n                    changeTopLeftFrame('auto');\n                    changeTopRightFrame('auto');\n                    changeEffectBackground('auto');\n                    changePendulumEffectBackground('auto');\n                    changeDyeList(getDefaultDyeList());\n                }}\n            >\n                {language['button.reset.label']}\n            </Button>\n        </div>\n        <div>\n            <StyledPendulumFrameContainer\n                className=\"pendulum-frame-picker\"\n                {...getNavigationProps({\n                    stopPropagation: true,\n                    optionLength: frameList.length,\n                    setFocus,\n                    onTrigger: () => {\n                        if (focus >= 0) changeLayout(frameList[focus].value);\n                    },\n                    onCancel,\n                })}\n            >\n                <div className=\"frame-part-name\">\n                    {language[FramePositionMap[activeLayout]?.labelKey]}\n                </div>\n                <Checkbox\n                    className={mergeClass('inline-input', activeLayout === 'frame' ? 'checkbox-disabled' : '')}\n                    checked={activeFrame === 'auto'}\n                    disabled={activeLayout === 'frame'}\n                    onChange={e => {\n                        changeLayout(e.target.checked ? 'auto' : (recentCustomPendulumFrame.current[activeLayout] ?? 'auto'));\n                    }}\n                >{language['input.frame.auto']}</Checkbox>\n                <RadioTrain\n                    className=\"frame-radio\"\n                    value={activeFrame}\n                    onChange={value => {\n                        if (activeLayout === 'frame') onFrameChange(value);\n                        else changeLayout(value);\n                    }}\n                    optionList={frameList}\n                />\n                {typeof dyeColor === 'number' && <HorizontalSketchPicker\n                    value={dyeList[dyeColor]}\n                    onChange={color => {\n                        if (color !== dyeList[dyeColor]) changeDye(color, activeLayout);\n                    }}\n                >\n                    {language['input.advanced-frame.dye']}\n                </HorizontalSketchPicker>}\n            </StyledPendulumFrameContainer>\n        </div>\n    </FrameLayoutContainer>;\n});\n\nexport * from './frame-behavior-setting-panel';","import { Checkbox, Input, Popover } from 'antd';\nimport { InternalPopover, PopoverButton, StyledDropdown, StyledPopMarkdown } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CanvasConst, DEFAULT_PENDULUM_SIZE, FlagInfoList, PendulumSizeMap } from 'src/model';\nimport { CaretDownOutlined, ApartmentOutlined } from '@ant-design/icons';\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\nimport styled from 'styled-components';\nimport { resolveFrameStyle } from 'src/util';\nimport { CardLayoutPreview, FrameBehaviorSettingPanel, FramelayoutSettingPanel, FrameLayoutSettingPanel } from '../frame-setting-panel';\n\nconst {\n    width,\n    height,\n} = CanvasConst;\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-4);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n    .card-layout-preview-container {\n        line-height: 0;\n        border: var(--bw) solid var(--sub-level-1);\n        overflow: hidden;\n    }\n    .anticon {\n        align-content: center;\n        padding: 0 var(--spacing-xs);\n        border: var(--bw) solid var(--sub-level-1);\n        border-left: none;\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .pendulum-option {\n        display: grid;\n        grid-template-columns: var(--width-label) 1fr;\n        align-items: center;\n        .pendulum-frame-input,\n        .pendulum-checkbox {\n            flex: 0 0 auto;\n        }\n        .mirror-scale {\n            /** Alignment **/\n            line-height: 32px;\n            align-items: center;\n        }\n    }\n    .joined-row {\n        position: relative;\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            /** Alignment **/\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing);\n        }\n        .pendulum-size {\n            display: inline-block;\n            line-height: 1.15; // Alignment\n            margin-right: var(--spacing);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    softMode: boolean,\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n}\n& Pick<CardTextInput, 'onTakePicker'>\n& Pick<FramelayoutSettingPanel, 'onFrameChange'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    softMode,\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n    onFrameChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        effectBackground, pendulumEffectBackground,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        dyeList,\n        flag,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            frame,\n            leftFrame, rightFrame,\n            pendulumFrame, pendulumRightFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n            effectStyle,\n            pendulumStyle,\n            dyeList,\n            flag,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        frame,\n        leftFrame, rightFrame,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n        dyeList,\n        flag,\n        setCard,\n        getUpdater,\n    })));\n    const {\n        mirrorPendulumScale,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { mirrorPendulumScale },\n        updateSetting,\n    }) => ({\n        mirrorPendulumScale,\n        updateSetting,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n        };\n    });\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const layoutState = {\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground,\n        pendulumEffectBackground,\n    };\n    const advanceLayoutPreviewHeight = 30; // Alignment with frame input\n    const flagList = flag\n        .map((entry, index) => {\n            const target = FlagInfoList[index];\n\n            if (entry !== 0 && target) return <li key={target.labelKey}>\n                {target.displayKey(language, entry)}\n            </li>;\n            return null;\n        })\n        .filter(entry => entry != null);\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            <div className=\"pendulum-option-container\">\n                {showCreativeOption && <Popover\n                    visible={frameDropdownVisible}\n                    onVisibleChange={setFrameDropdownVisibleVisible}\n                    trigger={['click']}\n                    placement=\"bottom\"\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\n                    content={<div className=\"overlay-event-absorber\">\n                        <FrameLayoutSettingPanel ref={bottomFrameOptionGridRef}\n                            isPendulum={isPendulum}\n                            frameList={frameList}\n                            pendulumFrame={pendulumFrame}\n                            onFrameChange={onFrameChange}\n                            onCancel={() => {\n                                setFrameDropdownVisibleVisible(false);\n                                containerRef.current?.focus();\n                            }}\n                        />\n                        <FrameBehaviorSettingPanel />\n                    </div>}\n                >\n                    <StyledPendulumFrameInputContainer ref={containerRef}\n                        className=\"pendulum-frame-input\"\n                        tabIndex={0}\n                        onKeyDown={e => {\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                                setFrameDropdownVisibleVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    bottomFrameOptionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        }}\n                    >\n                        <span className=\"pendulum-frame-label\">\n                            {language['input.advanced-frame.label']}\n                        </span>\n                        <div className=\"card-layout-preview-container\">\n                            <CardLayoutPreview\n                                width={Math.round(advanceLayoutPreviewHeight * width / height)}\n                                height={advanceLayoutPreviewHeight}\n                                isPendulum={isPendulum}\n                                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\n                                tabIndex={-1}\n                                dyeList={dyeList}\n                            />\n                        </div>\n                        {flagList.length > 0\n                            ? <InternalPopover\n                                content={<StyledPopMarkdown>\n                                    {language['input.flag.effective.label']}\n                                    <ul>{flagList}</ul>\n                                </StyledPopMarkdown>}\n                            >\n                                <ApartmentOutlined />\n                            </InternalPopover>\n                            : null}\n                        <CaretDownOutlined />\n                    </StyledPendulumFrameInputContainer>\n                </Popover>}\n                {(isPendulum && showCreativeOption) && <div className=\"pendulum-size\">\n                    <Popover key=\"color-picker\"\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {pendulumSizeList.map(({ value, label }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={pendulumSize === value ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            onPendulumSizeChange(value);\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={softMode}\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\n                        >\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\n                        </PopoverButton>\n                    </Popover>\n                </div>}\n                {(isPendulum && showCreativeOption)\n                    && <Checkbox\n                        className=\"mirror-scale\"\n                        onChange={e => {\n                            const willMirror = e.target.checked;\n\n                            updateSetting({ mirrorPendulumScale: willMirror });\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\n                        }}\n                        checked={mirrorPendulumScale}\n                    >\n                        {language['input.mirror-scale.label']}\n                    </Checkbox>}\n            </div>\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    allowClear\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (mirrorPendulumScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    allowClear\n                    onChange={e => {\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    autoSize={{\n                        minRows: 5,\n                    }}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst StyledPostPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr max-content;\n    grid-template-areas:\n        \"type-input input-helper\"\n        \"condense-input help-button\";\n    gap: var(--spacing-sm);\n    align-items: center;\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .input-kanji-helper {\n        grid-area: input-helper;\n    }\n    .type-ability-input {\n        grid-area: type-input;\n    }\n    .condense-input {\n        grid-area: condense-input;\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n    &.variant-tcg {\n        .type-ability-input {\n            grid-column: span 2;\n        }\n    }\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: { typeAbility?: string[] }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ typeAbility }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon].value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\n        <CardTextInput ref={typeAbilityInputRef}\n            addonBefore={language[typeLabel]}\n            id=\"type-ability\"\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n            onChange={changeTypeAbility}\n            onTakePicker={onTakePicker}\n        />\n        {isOCG && <Tooltip\n            overlay={language['input.furigana-helper.tooltip']}\n            overlayClassName=\"long-tooltip-overlay\"\n        >\n            <Checkbox\n                className=\"input-kanji-helper\"\n                onChange={toggleFuriganaHelper}\n                checked={furiganaHelper}\n            >\n                {language['input.furigana-helper.label']}\n            </Checkbox>\n        </Tooltip>}\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\n            optionList={CondenseThresholdButtonList}\n        >\n            <span>\n                {language['input.condense.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\n                />\n            </span>\n        </RadioTrain>\n        <FormattingHelpDrawer />\n    </StyledPostPendulumInputContainer>;\n});","import { Checkbox, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { InlineColorPicker, RadioTrain } from 'src/component';\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker,\n        h2.font-style-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\n                                <h2 className=\"font-style-picker\">\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={fontStyle}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    IconButton,\n    RadioTrain,\n    StandaloneLabel,\n    StyledPopMarkdown,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getAttributeList,\n    getFinishList,\n    FormatButtonList,\n    getExtraAttributeList,\n} from './const';\nimport { ClearOutlined, DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain, FrameTrainRef } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledInputLabelWithButton,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        attribute,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isPendulum,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    })));\n    const { setting, updateSetting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor, showExtraAttribute } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const frameTrainRef = useRef<FrameTrainRef>(null);\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n    const extraAttributeList = useMemo(() => getExtraAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n    const finishList = useMemo(() => getFinishList(language), [language]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={finishList}\n            >\n                <StyledInputLabelWithButton className=\"finish-checkbox-label\">\n                    <div className=\"input-label\">{language['input.finish.label']}</div>\n                    <IconButton\n                        onClick={() => onFinishChange([])}\n                        Icon={ClearOutlined}\n                        tooltipProps={{\n                            title: language['input.other-finish.reset.tooltip'],\n                        }}\n                    />\n                </StyledInputLabelWithButton>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain ref={frameTrainRef}\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\n            onStatChange={(atk, def, linkRating) => footerInputGroupRef.current?.setValue({ atk, def, linkRating })}\n        />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <RadioTrain\n                    className=\"fill-input-train span-input-train attribute-input\"\n                    value={attribute}\n                    onChange={changeAttribute}\n                    optionList={attributeList}\n                    suffix={!showExtraAttribute && showExtraDecorativeOption\n                        ? <IconButton\n                            onClick={() => updateSetting({ showExtraAttribute: true })}\n                            Icon={DoubleRightOutlined}\n                            tooltipProps={{ overlay: language['button.more.label'] }}\n                        />\n                        : null}\n                >\n                    <span>{language['input.attribute.label']}</span>\n                </RadioTrain>\n                {(showExtraDecorativeOption && showExtraAttribute) && <RadioTrain\n                    className=\"fill-input-train extra-attribute-input\"\n                    value={attribute}\n                    onChange={changeAttribute}\n                    optionList={extraAttributeList}\n                    suffix={showExtraDecorativeOption && showExtraAttribute\n                        ? <IconButton\n                            onClick={() => updateSetting({ showExtraAttribute: false })}\n                            Icon={DoubleLeftOutlined}\n                            tooltipProps={{ overlay: language['button.less.label'] }}\n                        />\n                        : null}\n                >\n                    &nbsp;\n                </RadioTrain>}\n\n                {(isPendulum || showCreativeOption)\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\n                        showCreativeOption={showCreativeOption}\n                        showExtraDecorativeOption={showExtraDecorativeOption}\n                        softMode={reduceMotionColor}\n                        onTakePicker={setPickerTarget}\n                        onFrameChange={frame => frameTrainRef.current.changeFrame(frame)}\n                    />}\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showCreativeOption={showCreativeOption}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    DEFAULT_BASE_FILL_COLOR,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkOffsetList,\n    LinkPendulumIndentList,\n    LinkPendulumOffsetList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName, resolveFrameStyle } from 'src/util';\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 50%;\n            height: 50%;\n            position: absolute;\n            &.top-left-frame {\n                top: 0;\n                left: 0;\n            }\n            &.top-right-frame {\n                top: 0;\n                left: 50%;\n            }\n            &.bottom-left-frame {\n                top: 50%;\n                left: 0;\n            }\n            &.bottom-right-frame {\n                top: 50%;\n                left: 50%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            left: 21px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #222222;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    language,\n    onDuplicate,\n    onSelect,\n    onDelete,\n    // onDownload,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artData,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundData,\n        backgroundFit,\n        backgroundSource,\n        backgroundType,\n        cardIcon,\n        def,\n        format,\n        frame,\n        leftFrame, rightFrame,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        opacity,\n        pendulumFrame, pendulumRightFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n        effectStyle,\n        pendulumStyle,\n    } = card;\n    const {\n        topLeftFrame,\n        topRightFrame,\n        bottomLeftFrame,\n        bottomRightFrame,\n    } = resolveFrameStyle({\n        frame,\n        topLeftFrame: leftFrame,\n        topRightFrame: rightFrame,\n        bottomLeftFrame: pendulumFrame,\n        bottomRightFrame: pendulumRightFrame,\n        effectBackground: effectStyle.background,\n        pendulumEffectBackground: pendulumStyle.background,\n    }, isPendulum);\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedCardArt = artSource === 'offline'\n        ? !art\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\n            : artData\n        : art;\n    const normalizedBackgroundArt = backgroundSource === 'offline'\n        ? !background\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\n            : backgroundData\n        : background;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onSelect(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame top-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[topRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[topRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-left-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomLeftFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomLeftFrame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-right-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[bottomRightFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[bottomRightFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={normalizedBackgroundArt}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\n\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\n                    )}\n                    style={{\n                        top: isPendulum ? 16 : 19,\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\n                    }}\n                />;\n            })}\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\n                </Tooltip> */}\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\n        }px) translateY(${\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\n        }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\n\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        position: absolute;\n        width: 100%;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n}\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        language,\n        list,\n        onDelete,\n        onDownload,\n        onDuplicate,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        language={language}\n        onDuplicate={onDuplicate}\n        onSelect={onSelect}\n        onDownload={onDownload}\n        onDelete={onDelete}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    })));\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onSelect(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onSelect, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            onDuplicate: duplicateCard,\n                            onSelect: onSelect,\n                            onDownload: onDownload,\n                            onDelete: deleteAndReselect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { CheckOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledCode } from 'src/component/atom';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    CondenseTolerantMap,\n    ExtraAttributeList,\n    FinishMap,\n    frameList,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PendulumSizeList,\n    PresetNameStyleMap,\n    StickerList,\n} from 'src/model';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport copy from 'copy-to-clipboard';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\n        padding: 0;\n        padding-left: 24px;\n        .ant-collapse-arrow {\n            top: 5px;\n            left: 0;\n        }\n    }\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n        padding: var(--spacing-sm) 0 0 0;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\ntype CopiableCode = {\n    data: string,\n    children?: React.ReactNode,\n}\nconst CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledMono\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\n        {children}\n    </StyledMono>;\n};\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tr>\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\n                            </tr>\n                            {[\n                                {\n                                    field: 'Format',\n                                    value: <div>\n                                        {[\n                                            'tcg',\n                                            'ocg',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Frame',\n                                    altField: 'Bottom Frame',\n                                    value: <div>\n                                        {frameList\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Attribute',\n                                    value: <div>\n                                        {[...AttributeList, ...ExtraAttributeList]\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Spell/Trap Icon',\n                                    value: <div>\n                                        {IconList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Sticker',\n                                    value: <div>\n                                        {StickerList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Foil',\n                                    value: <div>\n                                        {getFoilList()\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Finish',\n                                    value: <div>\n                                        {Object.values(FinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        <div>{language['manager.template.description.joinable']}</div>\n                                    </div>\n                                },\n                                {\n                                    field: 'Art Finish',\n                                    value: <div>\n                                        {Object.values(ArtFinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Type',\n                                    value: <div>\n                                        {[\n                                            'number',\n                                            'text',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Alignment',\n                                    value: <div>\n                                        {[\n                                            'left',\n                                            'center',\n                                            'right',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Icon Type',\n                                    value: <div>\n                                        {IconTypeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Background Type',\n                                    value: <div>\n                                        {getBackgroundTypeList()\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Condense Rate',\n                                    value: <div>\n                                        {Object.keys(CondenseTolerantMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style Type',\n                                    value: <div>\n                                        {[\n                                            'predefined',\n                                            'custom',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Font',\n                                    value: <div>\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                    </div>,\n                                },\n                                {\n                                    field: 'Name Style - Preset',\n                                    value: <div>\n                                        {Object.keys(PresetNameStyleMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Pattern',\n                                    value: <div>\n                                        {PatternList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Pendulum Size',\n                                    value: <div>\n                                        {PendulumSizeList\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                    </div>\n                                },\n                            ].map(({\n                                field,\n                                altField,\n                                value,\n                            }) => {\n                                return <tr key={field}>\n                                    <td>\n                                        <StyledMono>{field}</StyledMono>\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                    </td>\n                                    <td>{value}</td>\n                                </tr>;\n                            })}\n                        </table>\n                    </Panel>\n                </Collapse>\n                \n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const exportFormat = useSetting(state => state.setting.exportFormat);\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const [savingFile, setSavingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                setSavingFile(true);\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    try {\n                                        const {\n                                            error,\n                                            value: csvdata,\n                                        } = cardListToCsv(useCardList.getState().cardList);\n\n                                        if (error) {\n                                            let errorMessage = '';\n                                            let errorDescription = '';\n                                            switch (error) {\n                                                case 'offline-data': {\n                                                    errorMessage = language['error.export.offline-data.message'];\n                                                    errorDescription = language['error.export.offline-data.description'];\n                                                    break;\n                                                }\n                                            }\n\n                                            if (errorMessage || errorDescription) {\n                                                notification.error({\n                                                    message: errorMessage,\n                                                    description: errorDescription,\n                                                });\n                                            }\n                                        }\n                                        switch (exportFormat) {\n                                            case 'xlsx': {\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\n                                                break;\n                                            }\n                                            default: {\n                                                downloadBlob(\n                                                    useCardList.getState().listName,\n                                                    new Blob([csvdata], { type: 'text/csv' }),\n                                                    'text/csv',\n                                                );\n                                            }\n                                        }\n                                        changeEditStatus('download');\n                                    } catch (e) {}\n                                }\n                                setSavingFile(false);\n                            }}\n                        >\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\n\n                                            /** Assume data from only the very first sheet */\n                                            /** 65001 codepage allow display unicode characters such as japanese */\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setListName(fileName);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onSelect={activeCard}\n                onDownload={onDownload}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\nimport { CardActionButton } from './component';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .save-button-tainted {\n        .alert-label {\n            flex: 1;\n            padding-top: var(--spacing-px);\n        }\n        .resolution-option {\n            position: relative;\n            border: none;\n            border-radius: var(--br-lg);\n            background: var(--main-primary);\n        }\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n            border-left: var(--bw) solid var(--sub-level-3);\n        }\n    }\n`;\n\nexport const CardPreviewContainer = styled.div`\n    position: relative;\n    display: block;\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\n    margin: var(--spacing);\n    margin-top: 0;\n    .reset-button,\n    .lightbox-button {\n        display: none;\n    }\n    #preview-canvas {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\n            scale(var(--resize-ratio))\n            translateZ(0);\n        &.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n    }\n`;\nexport const CardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled(CardActionButton)`\n    position: absolute;\n    z-index: 101;\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    InternalCard,\n    CanvasConst,\n    Card,\n    getDefaultCard,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n    ResolutionButton,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCardList,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { Dropdown, notification, Tooltip } from 'antd';\nimport { Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\nimport {\n    CardPreviewContainer,\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    CardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+b', 'command+b'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n        globalScale,\n        resolution,\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale, resolution } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n        globalScale,\n        resolution,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const [isInitializing, setInitializing] = useState(true);\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const [managerVisible, setManagerVisible] = useState(false);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<LightboxRef>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'StoneSerif-Italic',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const exportCardInList = useCallback((card: InternalCard) => {\n        const { id, ...exportableCard } = card;\n\n        exportData(undefined, false, exportableCard);\n    }, [exportData]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\n        if (crossorigin === 'anonymous') {\n            setTainted(false);\n            lightboxRef.current?.refresh();\n        }\n        setImageChangeCount(cnt => cnt + 1);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${\n                        process.env.PUBLIC_URL\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasHeight * globalScale}px`,\n                        '--card-width': `${CanvasWidth * globalScale}px`,\n                        '--global-scale': `${globalScale}`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                            <div className=\"imexport\">\n                                <ExportPanel ref={exportPanelRef}\n                                    tainted={isTainted}\n                                    artworkCanvas={artworkCanvasRef.current}\n                                    onRequireExportData={exportData}\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\n                                    onClose={forceRefocus}\n                                />\n                                <div />\n                                <ImportPanel ref={importPanelRef}\n                                    onImport={treatNewCard}\n                                    onClose={forceRefocus}\n                                    allowHotkey={allowHotkey}\n                                    language={language}\n                                />\n                            </div>\n                            <BatchConverter language={language} />\n                            <DownloadButton ref={downloadButtonRef}\n                                canvasMap={canvasMap}\n                                imageChangeCount={imageChangeCount}\n                                isTainted={isTainted}\n                                isInitializing={isInitializing}\n                                globalScale={globalScale}\n                                onDownloadError={alertDownloadError}\n                            />\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\n                                <div className=\"alert-label\">\n                                    {language['alert.download.tainted-first-line']}<br />\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\n                                </div>\n                                <Dropdown\n                                    className=\"save-button-dropdown\"\n                                    placement=\"bottomRight\"\n                                    overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n                                >\n                                    <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                                        <GatewayOutlined className=\"resolution-icon\" />\n                                        <span className=\"resolution-overlay\">{resolution[1]}</span>\n                                    </ResolutionButton>\n                                </Dropdown>\n                            </div>}\n                        </StyledDataButtonPanelContainer>\n                        <CardPreviewContainer className=\"card-preview-container\">\n                            <Tooltip title={language['button.reset.tooltip']}>\n                                <ResetButton\n                                    className=\"reset-button\"\n                                    onClick={() => {\n                                        const consent = window.confirm(language['prompt.reset.message']);\n\n                                        if (consent) {\n                                            const { setCard, card } = useCard.getState();\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\n                                            const contextualDefaultCardData = card.format === 'tcg'\n                                                ? defaultCard\n                                                : changeCardFormat(defaultCard, 'ocg');\n\n                                            setCard(contextualDefaultCardData, true);\n                                            setImageChangeCount(cnt => cnt + 1);\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                        }\n                                    }}\n                                >\n                                    <ClearOutlined />\n                                </ResetButton>\n                            </Tooltip>\n                            <Tooltip title={<div className=\"center\">\n                                {language['button.full-size.label']}\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\n                            </div>}>\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                    <ZoomInOutlined />\n                                </LightboxButton>\n                            </Tooltip>\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\n                             */}\n                            <canvas\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\n                                id=\"preview-canvas\"\n                                ref={previewCanvasRef}\n                                width={CanvasWidth}\n                                height={CanvasHeight}\n                            />\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\n                                <canvas\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\n                                    id=\"export-canvas\"\n                                    ref={exportCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                </div>\n                                <canvas id=\"frameCanvas\"\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\n                                    ref={frameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"nameCanvas\"\n                                    ref={nameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={148 * globalScale}\n                                />\n                                <canvas id=\"cardIconCanvas\"\n                                    ref={cardIconCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={222 * globalScale}\n                                />\n                                <canvas id=\"pendulumScaleCanvas\"\n                                    ref={pendulumScaleCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={920 * globalScale}\n                                />\n                                <canvas id=\"pendulumEffectCanvas\"\n                                    ref={pendulumEffectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={920 * globalScale}\n                                />\n                                <canvas id=\"typeCanvas\"\n                                    ref={typeCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"effectCanvas\"\n                                    ref={effectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"statCanvas\"\n                                    ref={statCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"setIdCanvas\"\n                                    ref={setIdCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"passwordCanvas\"\n                                    ref={passwordCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"creatorCanvas\"\n                                    ref={creatorCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"stickerCanvas\"\n                                    ref={stickerCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"finishCanvas\"\n                                    ref={finishCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={artworkCanvasRef}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={backgroundCanvasRef}\n                                />\n                            </CardCanvasGroupContainer>\n                        </CardPreviewContainer>\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onDownload={exportCardInList}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Lightbox\n                    ref={lightboxRef}\n                    globalScale={globalScale}\n                />\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}