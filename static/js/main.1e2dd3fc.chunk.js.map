{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-compatible.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/navigation.ts","util/index.tsx","component/loading/index.tsx","component/icon-button/index.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card.ts","service/use-setting.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/creator.ts","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/explanation/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/setting/index.tsx","component/app-header/index.tsx","component/index.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/index.tsx","util/hook.ts","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/radio-train.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/canvas-panel/styled.tsx","page/canvas-panel/batch-converter.tsx","page/canvas-panel/download-button.tsx","service/use-card-export.ts","page/canvas-panel/import-button.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["CanvasConst","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","_getDefaultCardOpacit","_objectSpread","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","label","NO_ICON","IconList","_jsx","CloseCircleOutlined","value","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","PresetNameStyleList","Object","values","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","DefaultFontSizeData","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontDeviation","DefaultFontData","DefaultEffectFontData","alphabetFont","furiganaFont","headTextHeightRatio","ordinalFont","symbolFont","symbolFontRatio","headTextGapRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","EffectFontData","bulletSymbolWidth","fontSize","lineHeight","lineCount","TCGVanillaTypeStatFontList","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","labelKey","fontData","letterDeviationMap","i","yOffset","yRatio","ì","í","î","ï","ĩ","ī","ĭ","į","ǐ","ȉ","ȋ","ɨ","ɩ","ᵹ","ᵼ","ᶖ","ḭ","ḯ","ỉ","ị","I","Ì","Í","Î","Ï","Ĩ","Ī","Ĭ","Į","İ","Ɩ","Ɨ","Ǐ","Ȉ","Ȋ","Ḭ","Ḯ","Ỉ","Ị","Arial","weight","OCG","headTextOverflow","headTextBold","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","ocgToTCGTermMap","_ocgToTCGTermMap","_defineProperty","tcgToOCGTermMap","entries","_cur","_slicedToArray","ocgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","labelBackgroundColorList","labelBackgroundImage","concat","join","frameList","arrowPositionList","top","left","width","height","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","frame","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","externalInfo","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","checkXyz","card","checkLink","checkMonster","checkSpeedSkill","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","resolveNameStyle","_ref","_PresetNameStyleMap$f","isSpeedSkill","lightHeader","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","strokeStyle","foilStyle","frameStyle","JSONUncrush","e","n","substring","length","split","_step","_iterator","_createForOfIteratorHelper","s","done","r","pop","err","f","JSONCrushSwap","arguments","undefined","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","Array","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","clone","kanjiHelper","normalizedCardName","replaceAll","console","error","normalizedCardEffect","downloadBlob","blob","link","document","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","checkYgoCarderCard","object","checkCompactYgoCarderCard","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","_cur2","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","zarc","reverseFrameMap","_cur3","reverseRarityMap","rarityMap","_cur4","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","_objectWithoutProperties","isPartial","result","level","icon","serial","copyright","id","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","Math","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","_ref$defaultWeight","defaultWeight","_ref$defaultStyle","defaultStyle","_ref$defaultSize","defaultSize","_ref$defaultFamily","defaultFamily","style","size","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","this","setStyle","nextStyle","setSize","nextSize","calculatedSize","setFamily","nextFamily","stringifyPalette","palette","offset","parsePalette","stringifiedPalette","index","_entry$split","_entry$split2","getNavigationProps","debug","optionLength","_ref$stopPropagation","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","floor","random","insertUrlParam","history","pushState","searchParams","URLSearchParams","location","search","set","newurl","protocol","host","pathname","toString","path","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","_pureHex$","_pureHex$2","_pureHex$slice","pureHex","rgbaList","parseInt","slice","isNaN","isMobileDevice","a","check","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledLoadingFullViewContainer","styled","div","_templateObject","Loading","Spin","FullView","className","children","StyledIconButtonContainer","span","IconButton","Icon","onClick","iconProps","tooltipProps","containerProps","_ref2","customOnClick","restContainerProps","Tooltip","title","_jsxs","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","_termMap$entry","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","author1","author2","artist1","artist2","artist3","artist4","maxAmount","settingIcon","openTag","closeTag","hotkey","hotkeyAlternative","separator","scaleType","dictionary","useI18N","create","get","defaultLanguageName","url","initialParam","defaultLanguageFromURL","delete","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguageMetadata","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","languageMetadataMap","wrap","_context","prev","next","fetch","process","headers","sent","json","Error","isMetadataReady","t0","eng","stop","apply","loadLanguage","_callee2","languageName","_languageMap$eng","languageData","processedLanguage","_context2","abrupt","_x","changeLanguage","_ref3","_callee3","nextMeta","_context3","languageInfo","language","setItem","isLoading","_x2","isInitiating","initiate","_initiate","_callee4","_context4","loadDefaultLanguage","_loadDefaultLanguage","_callee5","_context5","useLanguage","_ref4","getLanguage","getState","decodeCard","cardData","decodedCard","_cardMakerToYgoCarder","data","pendulumBoxSize","useImageData","startsWith","levelAsNumber","toLowerCase","namePreset","trim","cardMakerToYgoCarderData","isPartialCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","getUpdater","_VariantConfigMap$var","valueTransform","_get","returnFunction","current","_e$target","target","variantConfig","useSetting","_window$localStorage$","cachedStore","resolution","allowHotkey","reduceMotionColor","showCreativeOption","showExtraDecorativeOption","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","CanvasHeight","CanvasWidth","drawMarker","ctx","_ref$color","_ref$offset","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","option","_ref2$stroke","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","_ref3$stroke","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","instructionList","_iterator2","_step2","_step2$value","_step2$value$blendMod","_step2$value$opacity","Promise","resolve","globalCompositeOperation","globalAlpha","t1","_x3","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","_ref5","_ref5$x","_ref5$y","_ref5$blur","blur","_ref5$color","_ref5$shadowColor","imageCacheMap","drawFrom","source","sx","sy","_args","_imageCacheMap$source","ready","normalizedX","normalizedY","drawImage","_imageCacheMap$source2","imageCached","cache","Image","src","addEventListener","once","drawAsset","_args2","_x4","drawFromWithSize","dw","dh","_imageCacheMap$source3","normalizedW","normalizedH","_imageCacheMap$source4","_x5","_x6","_x7","_x8","_x9","_x10","drawAssetWithSize","_x11","_x12","_x13","_x14","_x15","_x16","drawWithColor","canvas","sw","sh","dx","dy","cloneCanvasStyle","clonedCanvas","clonedCtx","rgbaColor","imageRasterData","resetStyle","imageDataWithShadow","imageRasterDataWithShadow","combinedLayerData","combinedLayerRasterData","pixelCnt","destinationAlpha","getContext","willReadFrequently","getImageData","putImageData","_x17","_x18","_x19","_x20","_x21","_x22","_x23","_x24","getLetterWidth","_boxSpacingRatioMap$l2","letter","_ref$isLastOfLine","isLastOfLine","_ref$metricMethod","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundWidth","actualBoundingBoxLeft","actualBoundingBoxRight","kerningScaleRatio","_boxSpacingRatioMap$l","spacingRatio","offsetRatio","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_ref3$deviation","deviation","letterMetric","textDrawer","_ref4$metric","_ref4$offsetRatio","_ref5$yOffset","deviationYOffset","_ref5$yRatio","letterWidth","scaledBoundingWidth","_ref6","scaledBaseline","scaledEdge","boundingOffset","externalOffset","scale","tokenizeText","keepControlCharacter","regex","getTextWorker","fontSizeData","fontController","_fontSizeData$ordinal","_fontSizeData$headTex","_fontData$numberFont","_fontData$numberFontR","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","PI","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","_ref$previousTokenGap","previousTokenGap","_ref$letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","_fontData$headTextGap","_fontData$headTextOve","_fontSizeData$iconSym","_fontSizeData$largeSy","defaultGap","_getTextWorker","currentRightGap","offsetable","leftMostGap","fragmentList","cnt","isLeftmostFragment","fragment","fragmentWidth","_fragment$replaceAll$","_fragment$replaceAll$2","rubyType","_fragment$replaceAll$3","_analyzeHeadText","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","createLineList","paragraphList","_ref$additionalLineCo","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","baseXRatio","scaledWidth","tokenList","addedLineCount","wordList","currentLineWidth","currentGap","unCompressedFlag","_analyzeToken","tokenWidth","line","push","isLast","actualLineWidth","_analyzeToken2","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","_getLetterWidth","drawLine","_ref$spaceWidth","spaceWidth","_ref$yRatio","_ref$debug","_fontData$headTextBol","_fontData$headTextHei","_fontData$letterDevia","_fontSizeData$capital","_fontSizeData$letterS","_fontSizeData$squareB","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","_analyzeToken3","isNextTokenOffsetable","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","round","normalizeCardText","_ref$multiline","multiline","_ref$furiganaHelper","_ref$dictionaryType","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawCreatorText","_CreatorCoordinateMap","_fontSizeData$offsetY","_ref$baselineOffset","baselineOffset","lightFooter","internalEffectiveMedian","_loop","fontGetter","internalTextData","internalTrueWidth","_createLineList","leftEdge","getEffectFontAndCoordinate","isNormal","statInEffect","typeInEffect","coordinateKey","fontDataKey","sizeList","drawEffect","_CondenseTolerantMap$","_fullLineList$length","content","_ref2$isNormal","_ref2$fontData","textStyle","_ref2$sizeList","_ref2$condenseToleran","effectSizeLevel","normalizedContent","tolerancePerSentence","_splitEffect","_flavorConditionRegex","materialReplacement","material","effectText","fullLineList","wholeLineRegex","_wholeLineRegex$exec","_wholeLineRegex$exec2","exec","effectFlavorCondition","flavorConditionRegex","potentialFlavorConditionText","splitEffect","_sizeList$effectSizeL","_tolerancePerSentence","trueWidthStart","trueBaselineStart","lineListWithRatio","fullLineListWithRatio","_toConsumableArray","_analyzeLine","totalContentWidth","lineSpaceCount","expectedSpaceWidth","analyzeLine","drawStarContent","_ref$starAlignment","onStarDraw","normalizedStarCount","resetShadow","_offset","all","coordinate","starWidth","drawSticker","drawPredefinedMark","_ref7","isLink","bordered","_coordinate","drawLimitedEditionMark","_ref9","_ref8","widthOffset","drawLinkRatingText","_ref10","_callee6","_cloneCanvasStyle$col","_context6","topToPendulumStructure","pendulumStructureHeight","leftToPendulumStructure","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","pendulumSize","isXyz","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","_getArtCanvasCoordina","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","_getArtCanvasCoordina2","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","drawFrame","_drawFrame","drawCardArt","drawBackground","boundary","backgroundWidth","backgroundHeight","_getArtCanvasCoordina3","redrawCoordination","_redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","_drawAttribute","drawStar","_drawStar","normalizedCardIcon","_onStarDraw","drawPendulumScaleIcon","_drawPendulumScaleIcon","drawLinkArrowMap","_drawLinkArrowMap","_callee8","_context8","_callee7","_arrowPositionList","isActive","baseLink","activeLink","_context7","drawStatBorder","_drawStatBorder","_callee9","_context9","drawNameBackground","_drawNameBackground","_callee10","_context10","drawEffectBackground","_drawEffectBackground","_callee11","withPendulum","_args11","_context11","effectBoxX","drawFrameBorder","_drawFrameBorder","_callee12","_context12","drawNameBorder","_drawNameBorder","_callee13","_context13","drawArtBorder","_drawArtBorder","_callee14","artFrameSource","_context14","drawPendulumBorder","_drawPendulumBorder","_callee15","foilType","_context15","drawEffectBorder","_drawEffectBorder","_callee16","_context16","drawCardBorder","_drawCardBorder","_callee17","_context17","drawArtBorderFoil","_drawArtBorderFoil","_callee18","_context18","drawEffectBorderFoil","_drawEffectBorderFoil","_callee19","_context19","drawLinkMapFoil","_drawLinkMapFoil","_callee20","withBorder","_args20","_context20","drawNameFinish","_drawNameFinish","_callee22","_context22","_callee21","_context21","drawAttributeFinish","_drawAttributeFinish","_callee24","_context24","_callee23","_context23","drawArtFinish","_drawArtFinish","_callee26","_context26","_callee25","_context25","drawArtOverlayFinish","_drawArtOverlayFinish","_callee28","_context28","_callee27","_context27","drawArtBorderFinish","_drawArtBorderFinish","_callee30","_context30","_callee29","_context29","drawPendulumArtBorderFinish","_drawPendulumArtBorderFinish","_callee31","_context31","drawBorderPendulumFinish","_drawBorderPendulumFinish","_callee33","_context33","_callee32","_context32","drawFrameFinish","_drawFrameFinish","_callee35","_context35","_ref11","_callee34","_context34","drawFrameBackgroundFinish","_drawFrameBackgroundFinish","_callee37","_context37","_ref12","_callee36","_context36","drawOverlayFinish","_drawOverlayFinish","_callee39","_context39","_ref13","_callee38","overlayType","_context38","drawCardBorderFinish","_drawCardBorderFinish","_callee41","_context41","_ref14","_callee40","_context40","getNameGradient","angleAsDegree","colorStopList","contentWidth","maxAscent","maxDescent","baseKAF","quarterSlot","KAF","originHeight","cx","cy","AD","sqrt","pow","FDA","asin","AF","sin","AL","FL","cos","offsetX","topX","topY","botX","botY","gradient","createLinearGradient","addColorStop","drawName","cloneNode","cloneCtx","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","_getDefaultNameStyle$","hasDefaultOutline","patternBlendMode","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","defaultTextStyle","textMetric","actualBoundingBoxAscent","actualBoundingBoxDescent","lineJoin","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","_ref2$edgeAlignment","drawTypeAbility","isMonster","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","_drawTypeAbilityText","_iconPositionList$","naturalWidth","drawScale","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","drawCanvasRef","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxCanvasRef","drawingPipeline","useRef","rerun","instructor","overlay","checkNormal","_opacity$body","requireShadow","_useMemo","useMemo","levelColor","levelStyle","_effectTextStyle","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","resolvedEffectTextStyle","_pendulumTextStyle","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","resolvedPendulumEffectTextStyle","_typeTextStyle","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","resolvedTypeTextStyle","_statTextStyle","customStatText","statTextFillStyle","statHasShadow","statTextShadow","resolvedStatTextStyle","prepareStyle","normalizedSubFamily","toUpperCase","normalizedTypeAbility","isInitializing","imageChangeCount","_props$pendulumSize","readyToDraw","useEffect","_frameCanvasRef$curre","_resolvedStatTextStyl","fillBaseColor","hasArtBorder","_getLayoutDrawFunctio","artHeight","_calculateCardArtRedr","_calculateCardArtRedr2","_destinationX","_destinationY","_destinationWidth","_destinationHeight","w","h","fillRect","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_statCanvasRef$curren","_setIdCanvasRef$curre","withShadow","spacing","xOffset","drawSetId","_passwordCanvasRef$cu","endOfPassword","_PasswordCoordinateMa","isNumberPassword","drawPasswordText","_ref$stroke","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","_stickerCanvasRef$cur","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","effectIndexSize","_pendulumEffectCanvas","_finishCanvasRef$curr","drawHistory","onExport","useCallback","exportProps","_exportProps$isPendul","canvasRef","exportCtx","generateLayer","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","canvasLayer","delayQueue","setTimeout","toBlob","layer","onload","revokeObjectURL","onerror","sort","l","catch","close","normalizeCrop","crop","cropWidth","cropHeight","_crop$x","_crop$y","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","isRatioAcceptable","abs","ImageCropper","forwardRef","forwardedRef","backgroundColor","forceFit","defaultSourceType","_ref$defaultInternalS","defaultInternalSource","_ref$defaultExternalS","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","_ref$onSourceLoaded","onSourceLoaded","_ref$onSourceChange","onSourceChange","_ref$onCropChange","onCropChange","_ref$onTainted","onTainted","_ref$onMaxSizeExceede","onMaxSizeExceeded","_ref$onForceFitChange","onForceFitChange","normalizedDefaultSource","fileInputRef","_useState","useState","crossorigin","_useState3","_useState4","redrawSignal","setRedrawSignal","_useState5","_useState6","sourceType","setSourceType","_useState7","_useState8","inputMode","setInputMode","_useState9","_useState10","internalSource","setInternalSource","_useState11","_useState12","setLoading","_useState13","_useState14","setError","_useState15","_useState16","externalSource","setExternalSource","imgRef","_useState17","completed","_useState18","setCrop","_useState19","_useState20","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","fitCropData","newValue","useImperativeHandle","hasImage","forceSource","cropInfo","isDownloadable","DownloadOutlined","previewUrl","anchor","click","generateDownload","Radio","Group","onChange","Button","checked","Input","placeholder","maxLength","allowClear","ref","accept","files","targetFile","maxFileSize","reader","FileReader","readAsDataURL","alert","_fileInputRef$current","setValue","Checkbox","Empty","ReactCrop","disabled","imageStyle","backgroundImage","onImageLoaded","onImageError","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","LinkMarkChooser","_ref$defaultValue","defaultValue","_ref$onChange","_useState2","choosenArrow","setChoosenArrow","rotateMap","literalChoosenArrow","normalizedIndex","newMap","Explanation","overlayClassName","restIconProps","Popover","ExclamationCircleOutlined","StyledCode","StyledContainer","_templateObject2","StyledImageSection","_templateObject3","StyledImageWithCaptionContainer","_templateObject4","ImageWithCaption","caption","alt","FormattingHelpDrawer","modalOpen","setDrawerOpen","_Fragment","Drawer","footer","visible","onClose","SettingFilled","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","$softMode","css","SettingButton","_useSetting","trigger","placement","Affiliation","_process$env$REACT_AP","rel","GithubFilled","StyledAppSettingContainer","AppHeader","_useI18N","BugOutlined","TaintedCanvasWarning","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","IconTypeMap","fullLabelKey","IconTypeList","StickerButtonList","CondenseThresholdButtonList","_ref10$","StyledCharPickerContainer","CharPicker","_ref$targetId","targetId","_ref$onPick","onPick","internalOnPick","inputTarget","getElementById","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","_ref2$palette","externalPalette","_ref2$angle","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","setPalette","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","relevant","_pickerRef$current2","targetColor","find","Number","AnglePicker","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","_pickerRef$current4","nextId","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","_templateObject5","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","Slider","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","setType","_useRefresh","setCnt","useRefresh","_useRefresh2","customStyleSignal","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","shadowPickeRef","outlinePickeRef","_shadowPickeRef$curre","_outlinePickeRef$curr","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","_optionGridRef$curren","onVisibleChange","_document$getElementB","_PresetNameStyleMap$k","CaretDownOutlined","fontValue","InputTrainStyle","TrainGridStyle","StyledRadioTrainContainer","RadioTrain","activeValue","optionList","suffix","_ref$strict","internalRef","_internalRef$current","isChecked","StyledFrameTrain","FrameTrain","onSTFrameChange","_useCard","useShallow","changeFrame","frameValue","currentCard","nextFrame","isST","newTypeAbility","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","_ref2$card","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","status","changeBackgroundCrop","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","fit","full","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","isDarkSynchro","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","Set","resolveHotkey","allowNewLine","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","TextArea","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","normalizedValue","externalSetValue","getPickerRef","autoComplete","spellCheck","ev","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","has","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","rows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","SyncOutlined","Dropdown","arrow","Menu","domEvent","Item","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","_ref3$card","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","_ref$value","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","TextStylePicker","styleList","_value","custom","shadow","applyStyle","applyShadow","shadowValue","_value2","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","_postPendulumInputGro3","StyledActionIconButton","button","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","okButtonProps","onOk","convertedFileList","zipObject","zipBlob","file","reject","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","JSZip","generateAsync","ArrowRightOutlined","multiple","fileFromInput","nextFileList","item","CloseOutlined","curList","RetweetOutlined","StyledDownloadDropdownLabel","StyledDownloadDropdownOption","StyledDownloadButton","DownloadButton","isTainted","onDownloadError","_ref2$setting","exportRef","currentPipeline","pipelineRunning","isDownloading","setDownloading","onDownloadComplete","onSave","pendingSave","drawCanvas","cloneCanvas","drawCanvasContext","cloneCanvasContext","classList","saveBeforeReload","removeEventListener","confirmReload","_process$env$REACT_AP2","_document$getElementB2","_document$getElementB3","_document$getElementB4","_document$getElementB5","_document$getElementB6","setAttribute","isRelevant","add","_document$querySelect2","queuingSize","useCardExport","MenuOutlined","ImportButton","importData","ygoCarderImportInputRef","_ygoCarderImportInput","UploadOutlined","StyledDataButtonPanelContainer","StyledCardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","_templateObject6","LightboxButton","_templateObject7","ResetButton","_templateObject8","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_ref$setting","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","canvasKey","setCanvasKey","lightboxVisible","setLightboxVisible","cardInputRef","downloadButtonRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_drawCanvasRef$curren","WebFont","load","families","urls","retrievedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","retrieveSavedCard","fontinactive","fvd","inactive","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","styleContent","setStyleContent","ocgReady","loadAttempt","useOCGFont","_drawCanvasRef$curren2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","Sentry","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","beforeSend","event","exception","event_id","eventId","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","directData","prompt","_cardInputRef$current","_decodeCard","mergeData","_cardInputRef$current2","_decodeCard2","exportData","_cardInputRef$current3","converter","_converter","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","rerenderCardImage","markTaintedImage","HotKeys","keyMap","handlers","onDrop","confirm","_cardInputRef$current4","_useCard$getState","defaultCard","contextualDefaultCardData","ClearOutlined","ZoomInOutlined","onContextMenu","wrapClassName","forceRender","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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,SACdC,SAAU,OACVF,UAAW,MCxFNa,EAAqB,CAC9B,CACIC,UAAW,2BACXC,SAAU,8FAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,gCAGLG,EAAoBL,EAAmBM,QAAO,SAACC,EAAKC,GAE7D,OADAD,EAAIC,EAAIP,WAAaO,EACdD,IACR,ICpiCGE,EAA8C,CAAC,CAAEnC,UAAW,UAAW3D,QAAS,IAChF+F,EAA8C,CAChD,CAAEpC,UAAW,UAAW3D,QAAS,KACjC,CAAE2D,UAAW,WAAY3D,QAAS,MAUzBgG,EAA+C,CACxDpC,MAAO,CACH9C,MAAO,QACPL,MAAO,IACPwF,mBAAoB,IAExBpC,MAAO,CACH/C,MAAO,QACPL,MAAO,IACPwF,mBAAoB,IAExBnC,MAAO,CACHhD,MAAO,QACPL,MAAO,IACPwF,mBAAoB,CAChB,cAAeH,EACf,aAAcA,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,UAAaA,EACb,MAASA,IAGjB/B,MAAO,CACHjD,MAAO,QACPL,MAAO,IACPwF,mBAAoB,IAExBjC,MAAO,CACHlD,MAAO,QACPL,MAAO,IACPwF,mBAAoB,IAExB/B,MAAO,CACHpD,MAAO,QACPL,MAAO,IACPwF,mBAAoB,IAExB9B,MAAO,CACHrD,MAAO,QACPL,MAAO,IACPwF,mBAAoB,CAChB,gBAAiB,CAAC,CAAEtC,UAAW,SAAU3D,QAAS,MAAS,CAAE2D,UAAW,cAAe3D,QAAS,SAGxGoE,MAAO,CACHtD,MAAO,QACPL,MAAO,IACPwF,mBAAoB,CAChB,aAAcF,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,MAASA,EACT,mBAAoBA,EACpB,KAAQA,EACR,KAAQA,IAGhB1B,MAAO,CACHvD,MAAO,QACPL,MAAO,IACPwF,mBAAoB,CAChB,gBAAiB,CAAC,CAAEtC,UAAW,SAAU3D,QAAS,SAKjDkG,EAAkD,CAC3DtC,MAAO,CACH9C,MAAO,QACPL,MAAO,IACPwF,mBAAoB,CAChBE,IAAK,CAAC,MAGdtC,MAAO,CACH/C,MAAO,QACPL,MAAO,IACPwF,mBAAoB,CAChBE,IAAK,CACD,CAAEnG,QAAS,IAAM2D,UAAW,UAC5B,CAAE3D,QAAS,IAAM2D,UAAW,eAC5B,CAAE3D,QAAS,IAAM2D,UAAW,eAIxCG,MAAO,CACHhD,MAAO,QACPL,MAAO,IACPwF,mBAAoB,CAChBE,IAAK,CAAC,CAAEnG,QAAS,IAAM2D,UAAW,eAAiB,CAAE3D,QAAS,IAAM2D,UAAW,eAGvFI,MAAO,CACHjD,MAAO,QACPL,MAAO,IACPwF,mBAAoB,CAChBE,IAAK,CAAC,CAAEnG,QAAS,IAAM2D,UAAW,eAAiB,CAAE3D,QAAS,GAAK2D,UAAW,eAGtFK,MAAO,CACHlD,MAAO,QACPL,MAAO,IACPwF,mBAAoB,CAChBE,IAAK,CAAC,CAAEnG,QAAS,IAAM2D,UAAW,eAAiB,CAAE3D,QAAS,GAAK2D,UAAW,eAGtFO,MAAO,CACHpD,MAAO,QACPL,MAAO,IACPwF,mBAAoB,CAChBE,IAAK,CAAC,CAAEnG,QAAS,IAAM2D,UAAW,eAAiB,CAAE3D,QAAS,GAAK2D,UAAW,eAGtFQ,MAAO,CACHrD,MAAO,QACPL,MAAO,IACPwF,mBAAoB,CAChBE,IAAK,CAAC,OCpGLC,EAAsB,CAC/BC,mBAAoB,EACpBC,kBAAmB,KACnBC,gBAAiB,GACjBC,iBAAkB,KAClBC,cAAe,EACfC,QAAS,EACTC,oBAAqB,EACrBC,iBAAkB,EAAI,IACtBC,mBAAoB,GAQXC,EACA,EADAA,EAED,EA4BCC,EACY,GADZA,EAES,SAFTA,GAGK,EAHLA,EAIS,OAQhBC,EAAwB,CAC1BC,aAAc,0BACdC,aAAc,2BACdZ,kBAAmB,GACnBa,oBAAqB,KACrBC,YAAa,sBACbC,WAAY,SACZC,gBAAiB,EACjBC,iBAAkB,GAEhBC,EAAkCrH,wBAAA,GACjC6G,GAAqB,IACxBhF,KAAM,aACNmF,oBAAqB,IACrBM,UAAW,MACXC,SAAU,KAEDC,EAAkCxH,wBAAA,GACxC6G,GAAqB,IACxBhF,KAAM,wBACNmF,oBAAqB,IACrBM,UAAW,MACXC,SAAU,KAERE,EAAkCzH,wBAAA,GACjC6G,GAAqB,IACxBhF,KAAM,0BACNyF,UAAW,MACXI,aAAc,UACdH,SAAU,KAGDI,EAA2C,CACpD,IAAK3H,wBAAA,GACEqH,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,MAAOC,UAAW,OAGhF,WAAU/H,wBAAA,GACHqH,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,MAG9E,gBAAe/H,wBAAA,GACRqH,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,GAAMC,WAAY,GAAMC,UAAW,OAG9E,WAAU/H,wBAAA,GACHqH,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,MAG9E,IAAK/H,wBAAA,GACEyH,GAAwB,IAC3BF,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,GAAIC,WAAY,GAAIC,UAAW,GAClE,CAAEH,kBAAmB,GAAIC,SAAU,GAAIC,WAAY,GAAIC,UAAW,MAG1E,WAAU/H,wBAAA,GACHyH,GAAwB,IAC3BF,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,MAG/E,gBAAe/H,wBAAA,GACRyH,GAAwB,IAC3BF,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,MAG/E,WAAU/H,wBAAA,GACHyH,GAAwB,IAC3BF,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,OAKtEC,EAA6B,CACtC,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,GAAMC,UAAW,KAG9DE,GAAmD,CAC5DvD,IAAG1E,wBAAA,GACIqH,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,MAG/EhD,IAAG/E,wBAAA,GACIyH,GAAwB,IAC3BF,SAAU,CACN,CACIK,kBAAmB,GACnBC,SAAU,MACVC,WAAY,KACZ3B,kBAAmB,GACnB4B,UAAW,OAOdG,GAAoE,CAC7EC,WAAY,CACR,EAAK,IACL,EAAK,IACL,EAAK,KAETC,OAAQ,CACJ,EAAK,IACL,EAAK,IACL,EAAK,KAETC,MAAO,CACH,EAAK,IACL,EAAK,IACL,EAAK,KAETC,UAAW,CACP,EAAK,IACL,EAAK,IACL,EAAK,KAETC,QAAS,CACL,EAAK,IACL,EAAK,IACL,EAAK,MCnOAC,GAAqE,CAC9EC,QAAS,CACL9H,MAAO,UACP+H,SAAU,qCACVC,SAAU,CACN7B,aAAc,yBACdjF,KAAM,yBACNkF,aAAc,2BACdE,YAAa,sBACbK,UAAW,MACXJ,WAAY,SACZC,gBAAiB,KACjBH,oBAAqB,IACrBO,SAAU,CAAC,CACPK,kBAAmB,GACnBC,SAAU,KACV1B,kBAAmB,IACnBG,cAAe,KACfyB,UAAW,EACXD,WAAY,KACZvB,QAAS,IAEbqC,mBAAoB,CAChBC,EAAG,CAAEC,QAAS,EAAGC,OAAQ,MACzBC,OAAG,CAAEF,QAAS,EAAGC,OAAQ,MACzBE,OAAG,CAAEH,QAAS,EAAGC,OAAQ,MACzBG,OAAG,CAAEJ,QAAS,EAAGC,OAAQ,MACzBI,OAAG,CAAEL,QAAS,EAAGC,OAAQ,MACzBK,SAAG,CAAEN,QAAS,EAAGC,OAAQ,MACzBM,SAAG,CAAEP,QAAS,EAAGC,OAAQ,MACzBO,SAAG,CAAER,QAAS,EAAGC,OAAQ,MACzBQ,SAAG,CAAET,QAAS,EAAGC,OAAQ,MACzBS,SAAG,CAAEV,QAAS,EAAGC,OAAQ,MACzBU,SAAG,CAAEX,QAAS,EAAGC,OAAQ,MACzBW,SAAG,CAAEZ,QAAS,EAAGC,OAAQ,MACzBY,SAAG,CAAEb,QAAS,EAAGC,OAAQ,MACzBa,SAAG,CAAEd,QAAS,EAAGC,OAAQ,MACzBc,SAAG,CAAEf,QAAS,EAAGC,OAAQ,MACzBe,SAAG,CAAEhB,QAAS,EAAGC,OAAQ,MACzBgB,SAAG,CAAEjB,QAAS,EAAGC,OAAQ,MACzBiB,SAAG,CAAElB,QAAS,EAAGC,OAAQ,MACzBkB,SAAG,CAAEnB,QAAS,EAAGC,OAAQ,MACzBmB,SAAG,CAAEpB,QAAS,EAAGC,OAAQ,MACzBoB,SAAG,CAAErB,QAAS,EAAGC,OAAQ,MACzBqB,EAAG,CAAEtB,QAAS,EAAGC,OAAQ,OACzBsB,OAAG,CAAEvB,QAAS,EAAGC,OAAQ,OACzBuB,OAAG,CAAExB,QAAS,EAAGC,OAAQ,OACzBwB,OAAG,CAAEzB,QAAS,EAAGC,OAAQ,OACzByB,OAAG,CAAE1B,QAAS,EAAGC,OAAQ,OACzB0B,SAAG,CAAE3B,QAAS,EAAGC,OAAQ,OACzB2B,SAAG,CAAE5B,QAAS,EAAGC,OAAQ,OACzB4B,SAAG,CAAE7B,QAAS,EAAGC,OAAQ,OACzB6B,SAAG,CAAE9B,QAAS,EAAGC,OAAQ,OACzB8B,SAAG,CAAE/B,QAAS,EAAGC,OAAQ,OACzB+B,SAAG,CAAEhC,QAAS,EAAGC,OAAQ,OACzBgC,SAAG,CAAEjC,QAAS,EAAGC,OAAQ,OACzBiC,SAAG,CAAElC,QAAS,EAAGC,OAAQ,OACzBkC,SAAG,CAAEnC,QAAS,EAAGC,OAAQ,OACzBmC,SAAG,CAAEpC,QAAS,EAAGC,OAAQ,OACzBoC,SAAG,CAAErC,QAAS,EAAGC,OAAQ,OACzBqC,SAAG,CAAEtC,QAAS,EAAGC,OAAQ,OACzBsC,SAAG,CAAEvC,QAAS,EAAGC,OAAQ,OACzBuC,SAAG,CAAExC,QAAS,EAAGC,OAAQ,UAIrCwC,MAAO,CACH5K,MAAO,QACP+H,SAAU,mCACVC,SAAU,CACN7B,aAAc,QACdjF,KAAM,QACNkF,aAAc,2BACdE,YAAa,sBACbK,UAAW,MACXJ,WAAY,SACZC,gBAAiB,KACjBH,oBAAqB,KACrBwE,OAAQ,OACRjE,SAAU,CAAC,CACPK,kBAAmB,MACnBC,SAAU,GACV1B,kBAAmB,IACnBG,eAAgB,IAChByB,UAAW,EACXD,WAAY,GACZvB,QAAS,MAIrBkF,IAAK,CACD9K,MAAO,MACP+H,SAAU,iCACVC,SAAU,CACN7B,aAAc,0BACdjF,KAAM,0BACNkF,aAAc,2BACdC,oBAAqB,KACrB0E,iBAAkB,WAClBC,cAAc,EACdjE,aAAc,OACdkE,WAAY,oBACZC,gBAAiB,EACjB5E,YAAa,sBACbC,WAAY,SACZC,gBAAiB,KACjBG,UAAW,MACXC,SAAU,CAAC,CACPK,kBAAmB,MACnBC,SAAU,GACV1B,kBAAmB,KACnBC,gBAAiB,EACjBE,eAAgB,IAChByB,UAAW,EACXD,WAAY,GACZvB,QAAS,OCvEZuF,GAA4C,CACrDpH,IAlDwC,CACxC7C,KAAM,sBACNiF,aAAc,sBACdI,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbF,aAAc,2BACdO,UAAW,MACXC,SAAU,CACN,CACIhB,SAAU,EACVqB,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACXzB,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIuB,kBAAmB,MACnBC,SAAU,GACVC,WAAY,GACZC,UAAW,EACXzB,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,QAyB1BtB,IArBwC,CACxClD,KAAM,oBACNiF,aAAc,oBACdI,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbF,aAAc,2BACdW,aAAc,UACdJ,UAAW,MACXC,SAAU,CAAC,CACPK,kBAAmB,GACnBC,SAAU,GACVvB,cAAe,IACfwB,WAAY,KACZC,UAAW,EACX5B,kBAAmB,EACnB4F,kBAAmB,QAsEdC,GAA6C,CACtDtH,IA/DyC,CACzC7C,KAAM,sBACNiF,aAAc,sBACdI,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbF,aAAc,2BACdO,UAAW,MACXC,SAAU,CACN,CACIK,kBAAmB,MACnBC,SAAU,OACVC,WAAY,OACZC,UAAW,EACXzB,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIuB,kBAAmB,MACnBC,SAAU,GACVC,WAAY,GACZC,UAAW,EACXzB,cAAe,EACfH,kBAAmB,GACnBE,iBAAkB,KAClBE,QAAS,KAsCjBxB,IAlCyC,CACzClD,KAAM,oBACNiF,aAAc,oBACd8E,WAAY,sBACZ1E,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbF,aAAc,2BACdO,UAAW,MACXI,aAAc,WACdH,SAAU,CACN,CACIK,kBAAmB,MACnBC,SAAU,OACVC,WAAY,OACZC,UAAW,EACXzB,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIuB,kBAAmB,MACnBC,SAAU,GACV1B,kBAAmB,EACnBE,iBAAkB,KAClB0B,UAAW,EACXD,WAAY,KACZtB,mBAAoB,EACpBC,iBAAkB,SASjBwF,GAAmC,CAC5CpK,KAAM,yBACNiF,aAAc,yBACdI,WAAY,SACZC,gBAAiB,GACjBF,YAAa,yBACbF,aAAc,2BACdO,UAAW,MACXC,SAAU,CACN,CACIK,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACXmE,gBAAiB,GACjBhG,mBAAoB,IACpBI,cAAe,IACfH,kBAAmB,IAEvB,CACIyB,kBAAmB,KACnBC,SAAU,MACVC,WAAY,MACZC,UAAW,EACXmE,gBAAiB,GACjBhG,mBAAoB,IACpBI,eAAgB,IAChBH,kBAAmB,IAEvB,CACIyB,kBAAmB,KACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACXmE,gBAAiB,GAEjBhG,mBAAoB,OACpBQ,mBAAoB,OACpBJ,eAAgB,IAChBH,kBAAmB,MAIlBgG,GAAmC,CAC5CtK,KAAM,0BACNiF,aAAc,0BACdI,WAAY,SACZC,gBAAiB,GACjBH,oBAAqB,KACrBC,YAAa,sBACbF,aAAc,2BACdO,UAAW,MACXC,SAAU,CACN,CACIK,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACXmE,gBAAiB,GACjB/F,kBAAmB,IAEvB,CACIyB,kBAAmB,KACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACXmE,gBAAiB,GACjB/F,kBAAmB,IAEvB,CACIyB,kBAAmB,KACnBC,SAAU,GACVC,WAAY,GACZC,UAAW,EACXmE,gBAAiB,GACjB/F,kBAAmB,IACnBC,gBAAiB,EACjBE,eAAgB,IAChBI,mBAAoB,W,SCxMnB0F,GAA4C,CACrrtD,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,UAICC,GAAe,CACxBxH,IAAK,CACD,+HACA,wGACA,wDAEJL,IAAK,CACD,kDACA,4BACA,oCAKK8H,IAAuCC,EAAA,CAEhD,eAAM,OACN,eAAM,QACN,2BAAQ,gBACR,2BAAQ,cACR,uCAAU,UACV,qBAAO,WACP,2BAAQ,eACR,iCAAS,SACT,qBAAO,QACP,qBAAO,QACP,eAAM,OACN,6CAAW,SACX,2BAAQ,WACR,qBAAO,SACP,qBAAO,UACP,qBAAO,QACP,uCAAU,UACV,eAAM,OACN,2BAAQ,UACR,qBAAO,OACP,qBAAO,cACP,iCAAS,cACT,eAAM,UACN,qBAAO,UACP,qBAAO,eACP,qBAAO,OACP,uCAAU,SACV,uCAAU,SACV,iCAAS,oBACT,6CAAW,cACX,iCAAS,iBACT,yDAAa,gBAEb,iCAAS,UACT,iCAAS,aACT,2BAAQ,YACR,iCAAS,SAET,eAAM,SACN,eAAM,SACN,eAAM,SACN,uCAAU,SACV,eAAM,SACN,2BAAQ,UACR,iCAAS,MACT,uCAAU,WACV,qBAAO,OACP,iCAAS,UACT,2BAAQ,QACR,2BAAQ,iBACR,2EAAgB,eAEhB,iCAAS,QACT,2BAAQ,SACR,2BAAQ,OACR,2BAAQ,OACR,iCAAS,SACT,2BAAQ,SAAOC,aAAAD,EAEdF,GAAaxH,IAAI,GAAKwH,GAAa7H,IAAI,IAAEgI,aAAAD,EACzCF,GAAaxH,IAAI,GAAKwH,GAAa7H,IAAI,IAAEgI,aAAAD,EACzCF,GAAaxH,IAAI,GAAKwH,GAAa7H,IAAI,IAAEgI,aAAAD,EAE1C,6CAAgB,SAAOC,aAAAD,EAAC,gmCAAD,qTAAAC,aAAAD,EAIvB,+GAAsB,uCAAqCC,aAAAD,EAE3D,gQAA+C,gFAA8EA,GAEpHE,GAAkBxJ,OAAOyJ,QAAQJ,IAAiBhH,QAAO,SAACC,EAAKC,GAAS,IAADmH,EAAAC,YACrDpH,EAAG,GAAvBqH,EAAOF,EAAA,GAGd,OAFApH,EADuBoH,EAAA,IACRE,EAERtH,IACR,CAEC,oFAAgF,kQCxUvEuH,GAA0C,CACnD,OAAU,CACNxO,KAAM,SACN2B,QAAS,qBACT8M,WAAY,UACZC,QAAS,SACTC,qBAAsB,WAE1B,OAAU,CACN3O,KAAM,SACN2B,QAAS,qBACT8M,WAAY,UACZC,QAAS,SACTC,qBAAsB,WAE1B,OAAU,CACN3O,KAAM,SACN2B,QAAS,qBACT8M,WAAY,UACZC,QAAS,SACTC,qBAAsB,WAE1B,QAAW,CACP3O,KAAM,UACN2B,QAAS,sBACT8M,WAAY,OACZC,QAAS,SACTC,qBAAsB,WAE1B,IAAO,CACH3O,KAAM,MACN2B,QAAS,kBACT8M,WAAY,UACZC,QAAS,SACTC,qBAAsB,WAE1B,KAAQ,CACJ3O,KAAM,OACN2B,QAAS,mBACT8M,WAAY,UACZC,QAAS,SACTC,qBAAsB,WAE1B,OAAU,CACN3O,KAAM,SACN2B,QAAS,qBACT8M,WAAY,UACZC,QAAS,SACTC,qBAAsB,WAE1B,MAAS,CACL3O,KAAM,QACN2B,QAAS,oBACT8M,WAAY,UACZC,QAAS,SACTC,qBAAsB,WAE1B,KAAQ,CACJ3O,KAAM,OACN2B,QAAS,mBACT8M,WAAY,UACZC,QAAS,SACTC,qBAAsB,WAE1B,MAAS,CACL3O,KAAM,QACN2B,QAAS,oBACT8M,WAAY,UACZC,QAAS,SACTC,qBAAsB,WAE1B,eAAgB,CACZ3O,KAAM,eACN2B,QAAS,2BACT8M,WAAY,UACZC,QAAS,YACTC,qBAAsB,WAE1B,QAAW,CACP3O,KAAM,UACN2B,QAAS,sBACT8M,WAAY,UACZC,QAAS,YACTC,qBAAsB,WAE1B,OAAU,CACN3O,KAAM,SACN2B,QAAS,qBACT8M,WAAY,UACZC,QAAS,YACTC,qBAAsB,WAE1B,GAAM,CACF3O,KAAM,KACN2B,QAAS,iBACT8M,WAAY,OACZC,QAAS,YACTC,qBAAsB,WAE1B,OAAU,CACN3O,KAAM,SACN2B,QAAS,qBACT8M,WAAY,UACZC,QAAS,YACTC,qBAAsB,WAE1B,KAAQ,CACJ3O,KAAM,OACN2B,QAAS,mBACT8M,WAAY,UACZC,QAAS,YACTC,qBAAsB,WAE1B,MAAS,CACL3O,KAAM,QACN2B,QAAS,oBACT8M,WAAY,UACZC,QAAS,YACTC,qBAAsB,WAE1B,YAAa,CACT3O,KAAM,YACN2B,QAAS,wBACT8M,WAAY,UACZC,QAAS,YACTC,qBAAsB,WAE1B,cAAe,CACX3O,KAAM,cACN2B,QAAS,0BACT8M,WAAY,UACZC,QAAS,YACTC,qBAAsB,WAE1B,KAAQ,CACJ3O,KAAM,OACN2B,QAAS,mBACT8M,WAAY,OACZC,QAAS,YACTE,yBAA0B,CACtB,qBACA,qBACA,sBACA,iBAEJC,qBAAqB,0BAADC,OAA4B,CAC5C,yBACA,yBACA,yBACA,0BACA,0BACA,qBACFC,KAAK,MAAK,OAGPC,GAAYrK,OAAOC,OAAO4J,ICpK1BS,GAAoB,CAC7B,CAAEC,IAAK,IAAKC,KAAM,GAAIC,MAAO,IAAKC,OAAQ,KAC1C,CAAEH,IAAK,IAAKC,KAAM,IAAKC,MAAO,IAAKC,OAAQ,IAC3C,CAAEH,IAAK,IAAKC,KAAM,IAAKC,MAAO,IAAKC,OAAQ,KAC3C,CAAEH,IAAK,IAAKC,KAAM,GAAIC,MAAO,GAAIC,OAAQ,KACzC,CAAEH,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,GACrC,CAAEH,IAAK,IAAKC,KAAM,IAAKC,MAAO,GAAIC,OAAQ,KAC1C,CAAEH,IAAK,IAAKC,KAAM,GAAIC,MAAO,IAAKC,OAAQ,KAC1C,CAAEH,IAAK,IAAKC,KAAM,IAAKC,MAAO,IAAKC,OAAQ,IAC3C,CAAEH,IAAK,IAAKC,KAAM,IAAKC,MAAO,IAAKC,OAAQ,MCJlCC,GAAqB,IAAIC,OADD,sBAIxBC,GAA2B,IAAID,OADP,wBAGxBE,GAAoB,8IACpBC,GAAiB,IAAIH,OAAOE,IAE5BE,GAAqB,IAAIJ,OAAO,cAADT,OAAeW,GAAiB,QAK/DG,GAAe,SACfC,GAAgB,SAChBC,GAAe,SACfC,GAAgB,SAChBC,GAAwB,SACxBC,GAAsB,SAEtBC,GAAqB,IAAIX,OAAO,IAADT,OAAK,CAC7Cc,GACAC,GACAC,GACAC,GACAC,GACAC,IACFlB,KAAK,IAAG,iBAAiB,KAEdoB,GAA2B,GAAArB,OAAMc,GAAY,KAAAd,OAAIe,IACjDO,GAA0B,IAAIb,OAAOY,IAGrCE,GAAuB,kGAAAvB,OAAqGc,GAAY,oBAAAd,OAAmBe,GAAa,WAKxKS,GAAuB,IAAIf,OAAO,IAADT,OADX,iBACmC,MAEzDyB,GAAyB7J,EAAmB8J,KAAI,SAAAC,GAAK,IAAAC,EAAA,OAAmB,QAAnBA,EAAID,EAAM5J,iBAAS,IAAA6J,IAAID,EAAM9J,aAAWoI,KAAK,KAClG4B,GAAkB,IAAA7B,OAAOyB,GAAsB,eAE/CK,GAAwB,iRACxBC,GAAe,IAAItB,OAAO,IAADT,OAAK8B,GAAqB,MAGnDE,GAAwB,KAAAhC,OAAQ8B,GAAqB,8LAMrDG,GAAuB,IAAIxB,OADD,yBAI1ByB,GAAmB,IAAIzB,OADD,gCAGtB0B,GAAiB,IAAI1B,OAAO,mBAC5B2B,GAAc,IAAI3B,OAAO,SAEzB4B,GAAgB,icAEhBC,GAAgB,ydAEhBC,GAAc,IAAI9B,OAAO,YACzB+B,GAAe,IAAI/B,OAAO,YAC1BgC,GAAe,IAAIhC,OAAO,YAG1BiC,GAA+B,IAAIjC,OAAO,IAADT,OADT,SACkD,MAGlF2C,GAAyB,IAAIlC,OAAO,IAADT,OADX,eAC4C,MAGpE4C,GAAwB,IAAInC,OAAO,IAADT,OADV,SAC2C,MAEnE6C,GAAuC,CAChD,UAAM,GACN,UAAM,GACN,SAAK,EACL,SAAK,EACL,SAAK,EACL,IAAK,IACL,KAAM,KAEGC,GAAiD,CAC1D,UAAM,GACN,UAAM,KAEGC,GAAgD,CACzD,IAAK,KACL,IAAK,MAEIC,GAAuC,CAChD,MAAO,MAEEC,GAAiD,GAEjDC,GAAgD,CACzD,KAAM,IAMGC,GAAmB,SAACC,GAAc,MAAgB,QAAXA,EAAmB,EAAI,GAK9DC,GAAa,YAIbC,GAAmB,UAGnBC,IAAuB,KCrHvBC,GAAiB,WAAH,MAAU,CACjCC,QAAS,EACTL,OAAQ,MACRM,MAAO,SACPC,KAAM,SACNpR,QAASzB,IACT8S,OAAQ,GACRC,UAAW,SACX3S,KAAM,QACN4S,cAAe,OACfC,UXfsC,CACtCxP,KAAM,UACNN,UAAW,UACX+P,kBAAmB,UACnB9O,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,QWFTsQ,UAAW,QACXC,UAAWjR,EACXkR,SAAU,OACVC,KAAM,EACNC,cAAe,OACf3L,IAAK,kCACL4L,QAAS,GACTC,QAAQ,EACRC,UAAW,SACXC,QAAS,CACLC,EAAG,EACHC,EAAG,EACHrE,MAAO,IACPC,OAAQ,KACRqE,KAAM,IACNC,OAAQ,GAEZC,eAAe,EACfC,WAAY,GACZC,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClB1S,eAAgB,MAChB2S,eAAgB,CACZT,EAAG,EACHC,EAAG,EACHrE,MAAO,IACPC,OAAQ,KACRqE,KAAM,IACNC,OAAQ,GAEZO,QAAS,CACL,IACA,IACA,IACA,KAEJ9S,YAAY,EACZ+S,cAAe,OACfC,eAAgB,+EAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,YAAa,CACT,QACA,SACA,UAEJC,YAAa,CACTC,iBAAkB,UAEtBC,OAAO,oTAEPC,MAAO,aACPC,IAAK,OACLC,IAAK,OACLC,SAAU,WACVC,QAAS,QACTC,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EACdC,QAAS,kDACTC,gBAAgB,EAChBC,cXpDgD,EAChD,EACA,WACA,EACA,WWiDAC,cXrDgD,EAChD,EACA,WACA,EACA,WWkDAC,gBXtDgD,EAChD,EACA,WACA,EACA,WWmDAC,kBXvDgD,EAChD,EACA,WACA,EACA,WWqDAC,aAAc,KAELC,GAAe,WAAH,MAAgB,CACrCrD,QAAS,EACTL,OAAQ,MACRM,MAAO,SACPC,KAAM,SACNpR,QAASzB,IACT8S,OAAQ,GACRC,UAAW,SACX3S,KAAM,GACN4S,cAAe,OACfC,UXjGsC,CACtCxP,KAAM,UACNN,UAAW,UACX+P,kBAAmB,UACnB9O,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,QWgFTsQ,UAAW,QACXC,UAAWjR,EACXkR,SAAU,OACVC,KAAM,EACNC,cAAe,OACf3L,IAAK,kCACL4L,QAAS,GACTE,UAAW,SACXD,QAAQ,EACRE,QAAS,CACLC,EAAG,EACHC,EAAG,EACHrE,MAAO,IACPC,OAAQ,KACRqE,KAAM,IACNC,OAAQ,GAEZC,eAAe,EACfC,WAAY,GACZC,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClB1S,eAAgB,MAChB2S,eAAgB,CACZT,EAAG,EACHC,EAAG,EACHrE,MAAO,IACPC,OAAQ,KACRqE,KAAM,IACNC,OAAQ,GAEZO,QAAS,GACT9S,YAAY,EACZ+S,cAAe,OACfC,eAAgB,GAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,YAAa,GACbC,YAAa,CACTC,iBAAkB,UAEtBC,OAAQ,GACRC,MAAO,GACPC,IAAK,IACLC,IAAK,IACLC,SAAU,GACVC,QAAS,aACTC,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EAEdC,QAAS,GACTC,gBAAgB,EAChBC,cX7HgD,EAChD,EACA,WACA,EACA,WW0HAC,cX9HgD,EAChD,EACA,WACA,EACA,WW2HAC,gBX/HgD,EAChD,EACA,WACA,EACA,WW4HAC,kBXhIgD,EAChD,EACA,WACA,EACA,WW6HAC,aAAc,KAGLE,GAAc,CACvB,CACIhV,KAAM,OACNiV,QAAS,YACThU,MAAO,OACPoI,SAAU,2BACV6L,WAAY,oCAEhB,CACIlV,KAAM,OACNiV,QAAS,aACThU,MAAO,OACPoI,SAAU,2BACV6L,WAAY,qCAEhB,CACIlV,KAAM,WACNiB,MAAO,WACPoI,SAAU,+BACV6L,WAAY,MAEhB,CACIlV,KAAM,OACNiB,MAAO,SACPoI,SAAU,6BACV6L,WAAY,OAIPC,GAAmB,CAC5B,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,WClM9CC,GAAW,SAACC,GACrB,MAAsB,QAAfA,EAAK1D,OAKH2D,GAAY,SAACD,GACtB,MAAsB,SAAfA,EAAK1D,OAAoB4D,GAAaF,IAEpCG,GAAkB,SAACH,GAC5B,MAAsB,gBAAfA,EAAK1D,QAA4B4D,GAAaF,IAE5CE,GAAe,SAACF,GACzB,MAAsB,UAAfA,EAAK1D,OAAoC,SAAf0D,EAAK1D,OAAmC,gBAAf0D,EAAK1D,OAMtD8D,GAAuB,SAAC9D,GACjC,MAAc,UAAVA,GAA+B,SAAVA,EAAyB,KACpC,QAAVA,EAAwB,OACd,iBAAVA,EAAiC,iBACvB,gBAAVA,EAAgC,OAC7B,SAGE+D,GAAmB,SAAC/D,GAC7B,OAAQ4D,GAAa,CAAE5D,WAAYgE,GAAgBhE,IAG1CgE,GAAkB,SAAChE,GAC5B,MAAO,CAAC,OAAQ,MAAO,eAAgB,cAAe,QAAS,OAAQ,UAAUiE,SAASjE,IAGjFkE,GAAmB,SAAHC,GAYtB,IAADC,EAXF1E,EAAMyE,EAANzE,OACAM,EAAKmE,EAALnE,MACAK,EAAS8D,EAAT9D,UACAD,EAAa+D,EAAb/D,cACAH,EAAIkE,EAAJlE,KASA,GAAsB,WAAlBG,EACA,OAAOC,EAGX,IAAMgE,EAAeR,GAAgB,CAAE7D,UACjCsE,EAAcP,GAAiB/D,GAEjCuE,EAAiB,UACN,QAAX7E,IAAkB6E,EAAiB,OACnCF,GAA2B,QAAX3E,IAAkB6E,EAAiB,SAGvD,IAAIC,EAAkB,CAClBjU,UAAW+T,EAAc,UAAY,UACrChE,kBAAmBgE,EAAc,UAAY,WAEjD,GAAsB,eAAlBlE,EAAgC,CAAC,IAADqE,EAAAC,EAC1BC,EAAe3V,YAAA,GAAQkB,EAAmC,QAAjBuU,EAACpE,EAAU/P,cAAM,IAAAmU,IAAI,WAAW9U,OAK/E,OAJKO,EAAyC,QAAvBwU,EAACC,EAAgBrU,cAAM,IAAAoU,IAAI,WAAW/U,MAAMkB,OAC/D8T,EAAgB9T,KAAO0T,GAG3BvV,wBAAA,GACOwV,GACAG,GAIX,IAAIC,EAAoBP,EAClB,CACEtU,YAAY,EACZW,UAAW,EACXmU,YAAa,QAEf,GAEAC,EAAqB,WAAT7E,GAAkD,QAAjCmE,EAAGlU,EAAmB+P,GAAMtQ,aAAK,IAAAyU,IAAS,GACvEW,EAAuB,SAAV/E,EAAmB9P,EAAmB8B,UAAUrC,MAAQ,GAG3E,OAAAX,gDAAA,CACI6B,KAAM0T,GACHC,GACAI,GACAE,GACAC,I,mBC/FgnCC,GAAY,SAAAC,GAAI,IAAIC,GAAGD,EAAEA,EAAEE,UAAU,EAAEF,EAAEG,OAAO,IAAIC,MAAM,QAAK,GAAGJ,EAAEC,EAAE,GAAG,EAAEA,EAAEE,OAAO,CAACF,EAAEA,EAAE,GAAG,IAAcI,EAAdC,EAAAC,aAAaN,GAAC,IAAd,IAAAK,EAAAE,MAAAH,EAAAC,EAAAL,KAAAQ,MAAA,KAAQC,EAACL,EAAA3V,MAAMsV,GAAGA,EAAEA,EAAEI,MAAMM,IAAIpJ,KAAK0I,EAAEW,QAAM,MAAAC,GAAAN,EAAAN,EAAAY,GAAA,QAAAN,EAAAO,KAAC,OAAOC,GAAcd,EAAE,IAAIc,GAAc,SAACd,GAAS,IAAPC,EAACc,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAC,EAAWL,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,OAAOO,EAAE,SAACjB,EAAEC,GAAC,OAAGD,EAAEkB,QAAQ,IAAIpJ,OAAO,GAADT,QAAK4I,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,GAAE,KAAA5I,QAAK4I,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,IAAK,MAAK,SAAAD,GAAC,OAAEA,IAAIC,EAAE,GAAGA,EAAE,GAAGA,EAAE,OAAI,GAAGA,EAAE,IAAIA,EAAE,EAAEA,EAAES,EAAEP,SAASF,EAAED,EAAEiB,EAAEjB,EAAEU,EAAET,SAAS,IAAIA,EAAES,EAAEP,OAAOF,KAAKD,EAAEiB,EAAEjB,EAAEU,EAAET,IAAI,OAAOD,GCuHlkDmB,GAAmBpX,wBAAA,GAvH+D,CACpF+Q,QAAS,KACTL,OAAQ,KACRM,MAAO,KACPC,KAAM,KACNpR,QAAS,CACLwX,QAAS,KACThZ,KAAM,OACNC,SAAU,OACVE,KAAM,OACND,KAAM,OACNK,UAAW,OAEX0Y,SAAU,OACV5Y,UAAW,OACXC,WAAY,OACZF,SAAU,QAEdyS,OAAQ,KACRlL,IAAK,KACL4L,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXX,UAAW,MACXY,QAAS,CACLsF,QAAS,MACTrF,EAAG,MACHC,EAAG,MACHrE,MAAO,MACPC,OAAQ,MACRqE,KAAM,MACNC,OAAQ,OAEZC,cAAe,MACfC,WAAY,KACZE,cAAe,KACfD,eAAgB,MAChBE,iBAAkB,MAClB1S,eAAgB,MAChB2S,eAAgB,CACZ4E,QAAS,MACTrF,EAAG,MACHC,EAAG,MACHrE,MAAO,MACPC,OAAQ,MACRqE,KAAM,MACNC,OAAQ,OAEZ3T,KAAM,KACN4S,cAAe,MACf4B,YAAa,CACTqE,QAAS,KACTpE,iBAAkB,QAEtB5B,UAAW,CACPgG,QAAS,KACTxV,KAAM,OACNN,UAAW,OACX+P,kBAAmB,QACnB9O,YAAa,OACbC,cAAe,QACfC,cAAe,QACfC,WAAY,OACZ3B,UAAW,OACXW,UAAW,OACXD,UAAW,OACXoB,YAAa,QACbhB,YAAa,QACbf,WAAY,OACZkB,cAAe,OACfC,cAAe,OACfpB,YAAa,OACbQ,OAAQ,OACRL,QAAS,QAEbsQ,UAAW,KACXC,UAAW,KACXE,KAAM,KACNC,cAAe,KACfF,SAAU,KACViB,QAAS,KACT9S,WAAY,KACZ+S,cAAe,KACfC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBC,YAAa,KACbG,OAAQ,KACRC,MAAO,KACPC,IAAK,MACLC,IAAK,MACLC,SAAU,KACVC,QAAS,MACTC,eAAgB,MAChBC,YAAa,MACbE,mBAAoB,MACpBD,iBAAkB,MAClBE,aAAc,MACdC,QAAS,KACTC,eAAgB,KAChBG,gBAAiB,MACjBC,kBAAmB,MACnBH,cAAe,MACfC,cAAe,MACfG,aAAc,OAEgB,CAC9BoD,SAAU,KACVC,QAAS,KACTC,YAAa,CACTJ,QAAS,MACTrF,EAAG,MACHC,EAAG,MACHrE,MAAO,MACPC,OAAQ,MACRqE,KAAM,MACNC,OAAQ,SAQHuF,GAAmB,SAAnBA,EACThD,GAEE,IADFiD,EAA+BX,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAGI,GAE5BQ,EAAqC,GACrCC,EAAc7X,YAAA,GAAQ0U,GAkB5B,OAhBAvR,OAAO2U,KAAKD,GAAgBE,SAAQ,SAAAC,GAChC,IAAMC,EAAaJ,EAAeG,GAElC,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBC,MAAMC,QAAQF,GAMrE,CACH,IAAMG,EAAcT,EAAWK,GAEJ,kBAAhBI,IAA0BR,EAAcQ,GAAeH,OATmB,CAAC,IAADI,EAC/EC,EAA6B,QAAvBD,EAAGV,EAAWK,UAAS,IAAAK,OAAA,EAApBA,EAAsBhB,QAEjCiB,IACAV,EAAcU,GAAUZ,EAAiBO,EAAYN,EAAWK,SASrEJ,GAGEW,GAAqB,SAArBA,EACTX,GAEE,IADFD,EAA+BX,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAGI,GAE5B3X,EAAgC,GAgBtC,OAfA0D,OAAO2U,KAAKH,GAAYI,SAAQ,SAAAS,GAC5B,IAAMC,EAAad,EAAWa,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBP,MAAMC,QAAQM,GAOvC,MAA7Bb,EAAca,KACdhZ,EAAS+Y,GAAWZ,EAAca,QAR+C,CACrF,IAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYpB,QAE5BqB,GAAed,EAAcc,KAC7BjZ,EAAS+Y,GAAWD,EAAmBX,EAAcc,GAAcf,EAAWa,SAQnF/Y,GAEEkZ,GAAiC,SAAjCA,EACTf,GAEE,IADFD,EAA+BX,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAGI,GAE5BwB,EAAmD,kBAAlBhB,EACjCiB,KAAKC,MAAM9C,GAAY+C,mBAAmBnB,KAC1CA,EAEAnY,EAAgC,GAgBtC,OAfA0D,OAAO2U,KAAKH,GAAYI,SAAQ,SAAAS,GAC5B,IAAMC,EAAad,EAAWa,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBP,MAAMC,QAAQM,GAO7B,MAAvCG,EAAwBH,KACxBhZ,EAAS+Y,GAAWI,EAAwBH,QARqC,CACrF,IAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYpB,QAE5BqB,GAAeE,EAAwBF,KACvCjZ,EAAS+Y,GAAWG,EAA+BC,EAAwBF,GAAcf,EAAWa,SAQzG/Y,GAoBEuZ,GAAkB,SAACtE,GAAgE,IAADuE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAApCC,EAAQvC,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG5C,KAC5DoF,EAAYxZ,wBAAA,GACXuZ,GACAE,aAAM/E,IA2Db,OAxDgC,MAA5B8E,EAAaxG,cACbwG,EAAaxG,YAAWhT,YAAA,GACjBoU,KAAepB,cAIE,MAAxBwG,EAAazI,UAAiByI,EAAazI,QAAU,GAC9B,MAAvByI,EAAa9I,SAAgB8I,EAAa9I,OAAS,OACrB,MAA9B8I,EAAa7G,gBAAuB6G,EAAa7G,cAAgB,QAC1C,MAAvB6G,EAAatI,SAAgBsI,EAAatI,OAAS,IAEzB,MAA1BsI,EAAarI,YAAmBqI,EAAarI,UAAY,UACxDqI,EAAqBhC,UAAY9C,EAAK1O,MAAKwT,EAAaxT,IAAOwT,EAAqBhC,gBACjFgC,EAAqBhC,QAExBgC,EAAqB/B,cAAgB/C,EAAK3C,UAASyH,EAAazH,QAAWyH,EAAqB/B,oBAC7F+B,EAAqB/B,YAII,MAAZ,QAAjBwB,EAACO,EAAaxT,WAAG,IAAAiT,IAAI,MAAYO,EAAaxT,IAAM,IACnB,MAAZ,QAArBkT,EAACM,EAAa5H,eAAO,IAAAsH,IAAI,MAAYM,EAAa5H,QAAU,IACzB,MAAZ,QAAvBuH,EAACK,EAAa1H,iBAAS,IAAAqH,IAAI,MAAYK,EAAa1H,UAAY,UACzC,MAAvB0H,EAAa3H,SAAgB2H,EAAa3H,QAAS,GAED,mBAA1C2H,EAAa3Z,QAAgByX,UAA4D,MAAlCkC,EAAa3Z,QAAQjB,YACpF4a,EAAa3Z,QAAQjB,WAAc4a,EAAa3Z,QAAgByX,gBACxDkC,EAAa3Z,QAAgByX,UAEzCkC,EAAa3Z,QAAOG,wBAAA,GAAQ5B,KAA4Bob,EAAa3Z,SAE7B,MAAZ,QAAxBuZ,EAACI,EAAanH,kBAAU,IAAA+G,IAAI,MAAYI,EAAanH,WAAa,IAC1B,MAAZ,QAA5BgH,EAACG,EAAalH,sBAAc,IAAA+G,IAAI,MAAYG,EAAalH,eAAiB,IAChC,MAAZ,QAA9BgH,EAACE,EAAahH,wBAAgB,IAAA8G,IAAI,MAAYE,EAAahH,iBAAmB,UAChD,MAA9BgH,EAAajH,gBAAuBiH,EAAajH,eAAgB,GACnC,MAA9BiH,EAAapH,gBACToH,EAAanH,YAAcmH,EAAalH,gBAAkBkH,EAAa3Z,QAAQpB,YAEnF+a,EAAapH,eAAgB,GAG5BoH,EAAqBE,cAAgBhF,EAAKZ,iBAAgB0F,EAAa1F,eAAkB0F,EAAqBE,oBAC3GF,EAAqBE,iBACOzC,IAAhCuC,EAAa1F,iBAA8B0F,EAAa1F,gBAAiB,GAExE0F,EAAqBjC,WAAa7C,EAAKpB,WAAUkG,EAAalG,SAAYkG,EAAqBjC,iBAC5FiC,EAAqBjC,SAExBiC,EAAavF,kBAAiBuF,EAAavF,gBdpPA,EAChD,EACA,WACA,EACA,YciPKuF,EAAatF,oBAAmBsF,EAAatF,kBdrPF,EAChD,EACA,WACA,EACA,YckPKsF,EAAaxF,gBAAewF,EAAaxF,cdtPE,EAChD,EACA,WACA,EACA,YcmPKwF,EAAazF,gBAAeyF,EAAazF,cdvPE,EAChD,EACA,WACA,EACA,YcoP6C,qBAAlCyF,EAAa9F,mBAAkC8F,EAAa9F,kBAAmB,GACjD,qBAA9B8F,EAAa5F,eAA8B4F,EAAa5F,cAAe,GAC7E4F,EAAa7H,gBAAe6H,EAAa7H,cAAgB,QAEvD6H,G,SC1REG,GAAqB,SAACnb,GAC/B,IACI,OAAOA,EAAKob,WAAW,4BAA6B,MACtD,MAAO3D,GAEL,OADA4D,QAAQC,MAAM7D,GACPzX,IAGFub,GAAuB,SAAC7G,GACjC,IACI,OAAOA,EAAO0G,WAAW,4BAA6B,MACxD,MAAO3D,GAEL,OADA4D,QAAQC,MAAM7D,GACP/C,ICXF8G,GAAe,SAACxb,EAAcyb,EAAY5a,GACnD,IAAM6a,EAAOC,SAASC,cAAc,KAEpCF,EAAKG,SAAW7b,EAChB0b,EAAKI,KAAOC,OAAOC,IAAIC,gBAAgBR,GACvCC,EAAKQ,QAAQC,YAAc,CAACtb,EAAM6a,EAAKG,SAAUH,EAAKI,MAAM/M,KAAK,KAEjE,IAAMqN,EAAgB,IAAIC,WAAW,QAAS,CAC1CC,KAAMP,OACNQ,SAAS,EACTC,YAAY,IAGhBd,EAAKe,cAAcL,GACnBV,EAAKgB,UCHIC,GAAqB,SAACC,GAC/B,IAEI,MAAO,mBAAoBA,GACpB,gBAAiBA,GACjB,UAAWA,EACpB,MAAOnF,GAEL,OADA4D,QAAQC,MAAM7D,IACP,IAGFoF,GAA4B,SAACD,GACtC,IACI,MAAO,QAASA,GACT,OAAQA,GACR,OAAQA,EACjB,MAAOnF,GAEL,OADA4D,QAAQC,MAAM7D,IACP,IAITqF,GAAmC5O,aAAA,CACrC6O,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,UACPpb,EAAU,QAETqb,GAAqBzY,OAAOyJ,QAAQ0O,IAAa9V,QAA+B,SAACC,EAAKC,GAAS,IAADmH,EAAAC,YAChEpH,EAAG,GAA5BmW,EAAWhP,EAAA,GAGlB,OAFApH,EAD4BoH,EAAA,IACZgP,EAETpW,IACR,IAEGqW,GAAuC,CACzCC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,UAENC,GAAsBrZ,OAAOyJ,QAAQkP,IAActW,QAA+B,SAACC,EAAKC,GAAS,IAAD+W,EAAA3P,YAClEpH,EAAG,GAA5BmW,EAAWY,EAAA,GAGlB,OAFAhX,EAD4BgX,EAAA,IACZZ,EAETpW,IACR,IAEGiX,GAAmC,CACrC5d,OAAQ,SACRoU,OAAQ,SACRyJ,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACL5C,KAAM,OACN6C,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,eAAgB,eAChBC,KAAM,QACN,cAAe,SAEbC,GAAkBha,OAAOyJ,QAAQ8P,IAAUlX,QAA+B,SAACC,EAAKC,GAAS,IAAD0X,EAAAtQ,YAC1DpH,EAAG,GAA5BmW,EAAWuB,EAAA,GAGlB,OAFA3X,EAD4B2X,EAAA,IACZvB,EAETpW,IACR,IAEG4X,GAA0G,CAC5G,OAAU,CACNjc,IAAK,IAET,KAAQ,CACJA,IAAK,SACL7C,KAAM,QAEV,OAAU,CACN6C,IAAK,wBACL7C,KAAM,iBACN4S,UAAW,SAEf,MAAS,CACL/P,IAAK,eACL7C,KAAM,QACN4S,UAAW,SAEf,QAAW,CACP/P,IAAK,uBACL7C,KAAM,WACN4S,UAAW,QACXD,OAAQ,CAAC,WAGXoM,GAAYna,OAAOyJ,QAAQyQ,IAAkB7X,QAA+B,SAACC,EAAKC,GAAS,IAAD6X,EAAAzQ,YAC3DpH,EAAG,GAA7B8X,EAASD,EAAA,GAGhB,OAFA9X,EAD6B8X,EAAA,GACbnc,KAAOoc,EAEhB/X,IACR,IAWUgY,GAA2B,SACpC/I,EACAgJ,GACkD,IAE9Clf,EAyBAkW,EAzBAlW,KACAkT,EAwBAgD,EAxBAhD,KACAqB,EAuBA2B,EAvBA3B,YACAvB,EAsBAkD,EAtBAlD,UACA0B,EAqBAwB,EArBAxB,OACAE,EAoBAsB,EApBAtB,IACAC,EAmBAqB,EAnBArB,IACArN,EAkBA0O,EAlBA1O,IACA4L,EAiBA8C,EAjBA9C,QACAE,EAgBA4C,EAhBA5C,UACAwB,EAeAoB,EAfApB,SACAO,EAcAa,EAdAb,QACAtC,EAaAmD,EAbAnD,UACA4B,EAYAuB,EAZAvB,MACAP,EAWA8B,EAXA9B,eACAE,EAUA4B,EAVA5B,kBACAD,EASA6B,EATA7B,iBACAjT,EAQA8U,EARA9U,WACA8S,EAOAgC,EAPAhC,QACA1B,EAMA0D,EANA1D,MACAmD,EAKAO,EALAP,aACA9C,EAIAqD,EAJArD,UACAD,EAGAsD,EAHAtD,cACAD,EAEAuD,EAFAvD,UACAD,EACAwD,EADAxD,OAEEyM,EAAiBhE,GAAmBnb,GACpCof,EAAmB7D,GAAqB7G,GACxC2K,EAA2B9D,GAAqBnH,GAChDkL,EAAiBxC,GAAY9J,GAC7BuM,EAAsBjC,GAAavK,GACnCyM,EAAkBtB,GAAS1L,GAC3BiN,EAAqC,eAAlB7M,EACnBkM,GACE,CACIjM,EAAU/P,OACV6P,EACAD,EAAO3D,KAAK,MACdA,KAAK,MAET,SAAS4H,EACmC,OAAZhB,QAAY,IAAZA,IAAgB,GAA9C7V,EAAQ6W,EAAR7W,SAAU4f,EAAM/I,EAAN+I,OAAWC,EAAIC,aAAAjJ,EAAA,uBAsDjC,MAAO,CACHkJ,UArDY7f,IAASmf,GAClBzK,IAAW0K,GACXhL,IAAmBiL,QACA5G,IAAnB6G,QACwB7G,IAAxB8G,QACoB9G,IAApB+G,QACqB/G,IAArBgH,EAgDHK,OA/CQte,YAAA,CACR+Q,QAAS,QACTvS,KAAMmf,EACNY,MAAM,GAADjR,OAAKoE,GACVrS,KAAM0T,EAAYxF,KAAK,KACvBiR,KAAoB,OAAdV,QAAc,IAAdA,IAAkB,GACxB5K,OAAQ0K,EACRxK,MACAC,MACAoL,OAAQnL,EACRoL,UAAW7K,EACXtC,UAA8B,OAAnBwM,QAAmB,IAAnBA,IAAuB,OAClCY,GAAIxL,EACJ7U,SAAQ0B,YAAA,CACJ4e,QAAShf,EACTsT,OAAQ2K,EACRgB,KAAM/L,EACNgM,IAAKjM,EACLkM,QAAS,SACTC,gBAAgB,GACb1gB,GAEP2gB,QAAS,SACT/E,KAAM,CACFgF,UAASxM,EAAQuC,SAAS,KAC1BkK,YAAWzM,EAAQuC,SAAS,KAC5BmK,WAAU1M,EAAQuC,SAAS,KAC3BoK,aAAY3M,EAAQuC,SAAS,KAC7BqK,cAAa5M,EAAQuC,SAAS,KAC9BsK,aAAY7M,EAAQuC,SAAS,KAC7BuK,eAAc9M,EAAQuC,SAAS,KAC/BwK,cAAa/M,EAAQuC,SAAS,MAElCyK,OAAuB,OAAf1B,QAAe,IAAfA,IAAmB,SAC3Be,QAAS,SACTb,OAAwB,OAAhBD,QAAgB,IAAhBA,IAAoBC,EAE5B7c,MAAOqc,EACDA,EAAOiC,UAAU,cACH,YAAd7N,EACIF,EACA5L,GACPmY,KCrOLyB,GAA0B,IA4BnBC,GAAkB,WAA+D,IAA9DC,EAAY9I,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAG+I,EAAY/I,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG4I,GACzDI,EAAMF,EACNG,EAAMF,EACNG,EAASD,EACTE,EAAgBD,EAChBE,EAAe,GACfC,EAAY,IACZC,EAA0B,GAExBC,EAAgB,WAQlB,OAPkB,IAAdF,EAAiBnP,KAEjBgP,GAAUG,EAEVH,GADAG,GAAaC,GAIVE,KAAKR,IAAIE,EAAQD,IAGtBQ,EAAa,WAIf,OAFAL,GAAgB,EADhBF,GAAUG,GAMRK,EAAQ,WAA6C,IAA5CZ,EAAY9I,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAGgJ,EAAKD,EAAY/I,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAGiJ,EAC9CD,EAAMF,EACNG,EAAMF,EACNG,EAASH,EACTK,EAAe,GACfC,EAAY,IACZF,EAAgBJ,GAGdY,EAAY,WAAH,OAAST,GAClBU,EAAY,SAACC,GAAiB,OAAKX,EAASW,GAE5CC,EAAmB,WAAH,IAAIC,EAAW/J,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAGkJ,EAAM,OAAKC,EAAgBY,GAC7DC,EAAmB,WAAH,OAASb,GACzBc,EAAqB,WAGvB,OADAb,GAAgB,EADhBF,EAASC,GAKPe,EAAkB,WAAH,OAASd,GACxBlP,EAAS,WAAH,OAASkP,GAAgB,GAErC,MAAO,CACHM,QACAD,aACAF,gBACArP,SACAyP,YACAC,YACAE,mBACAE,mBACAC,qBACAC,oBAIKC,GAAW,SACpBC,GAKA,IAHE,IADFtB,EAAY9I,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAEXqK,EAAkBzB,GAChB0B,EAAYzB,KACXyB,EAAUJ,mBAAqB,GAAG,CACrC,GAAII,EAAUJ,mBAAqB,EAAG,CAElC,IAAMK,EAAcD,EAAUX,YAE9BU,EAAkBE,EAClB,MAEA,IAAMC,EAAUJ,EAAOE,EAAUX,aAEjC,IAAKa,GAAWF,EAAUX,YAAc,EAEpCW,EAAUb,iBACP,CAEH,GAAIa,EAAUX,cAAgBf,GAAyB,MAClDyB,EAAkBC,EAAUf,iBAQ7C,IAAMkB,EAAejB,KAAKP,IAAIH,EAAcU,KAAKR,IAAIqB,EAAiBzB,KAEtE,OADI6B,IAAiBJ,GAAiBD,EAAOK,GACtCA,GC1HEC,GAAmB,SAACC,GAKd,IAADxM,EAML,OAALwM,QAAK,IAALA,IAAS,GAAEC,EAAAzM,EAJX0M,qBAAa,IAAAD,EAAG,GAAEA,EAAAE,EAAA3M,EAClB4M,oBAAY,IAAAD,EAAG,GAAEA,EAAAE,EAAA7M,EACjB8M,mBAAW,IAAAD,EAAG,OAAMA,EAAAE,EAAA/M,EACpBgN,qBAAa,IAAAD,EAAG,QAAOA,EAEvB1W,EAASqW,EACTO,EAAQL,EACRM,EAA6C,kBAAhBJ,EAAwB,GAAA3U,OAAM2U,EAAW,MAAOA,EAC7EK,EAAsC,kBAAhBL,EAA2BA,EAAcM,WAAWN,EAAYrI,WAAW,KAAM,KACvG4I,EAASL,EAEb,MAAO,CACHM,QAAS,oBAAAnV,OAAS,CAAC8U,EAAO5W,EAAQ6W,EAAMG,GAAQE,QAAO,SAAAC,GAAI,MAAa,KAATA,KAAapV,KAAK,KAAI,YACrFqV,YAAa,iBAAO,CAAER,QAAOC,OAAMG,SAAQF,eAAc9W,WACzDqX,UAAS,SAACC,GAEN,OADAtX,EAASsX,EACFC,MAEXC,SAAQ,SAACC,GAEL,OADAb,EAAQa,EACDF,MAEXG,QAAO,SAACC,GACJ,IAAMC,EAAqC,oBAAbD,EACxBA,EAASb,GACTa,EAON,OANAd,EAAiC,kBAAnBe,EAA2B,GAAA9V,OAChC8V,EAAc,MACjBA,EACNd,EAAyC,kBAAnBc,EAChBA,EACAb,WAAWa,EAAexJ,WAAW,KAAM,KAC1CmJ,MAEXM,UAAS,SAACC,GAEN,OADAd,EAASc,EACFP,QCxCNQ,GAAmB,SAACC,GAAsB,OAAa,OAAPA,QAAO,IAAPA,IAAW,IACnExU,KAAI,SAAAmG,GAAA,IAAG/U,EAAK+U,EAAL/U,MAAOqjB,EAAMtO,EAANsO,OAAM,SAAAnW,OAAUmW,EAAM,KAAAnW,OAAIlN,MAASmN,KAAK,MAC9CmW,GAAe,SAAfA,EAAgBC,GAA2B,OAAmBA,EACrEA,EAAmBtN,MAAM,KACtBrH,KAAI,SAACC,EAAO2U,GAAW,IAADC,EACK5U,EAAMoH,MAAM,KAAIyN,EAAAhX,YAAA+W,EAAA,GAAjCJ,EAAMK,EAAA,GAEb,MAAO,CAAE1jB,MAFW0jB,EAAA,GAEJL,SAAQ9E,GAAIiF,EAAQ,MAE1CF,EpBGa,4CqBjBNK,GAAqB,SAAH5O,GAgBxB,IAfH6O,EAAK7O,EAAL6O,MACAC,EAAY9O,EAAZ8O,aAAYC,EAAA/O,EACZgP,uBAAe,IAAAD,GAAQA,EACvBE,EAAQjP,EAARiP,SACAC,EAASlP,EAATkP,UACAC,EAAQnP,EAARmP,SACAC,EAAUpP,EAAVoP,WAUA,MAAO,CACHC,SAAU,EACVC,QAAS,WACDT,GAAOnK,QAAQ6K,KAAK,mBAAoBV,GAC5CI,EAAS,IAEbO,OAAQ,WACAX,GAAOnK,QAAQ6K,KAAK,kBAAmBV,GAC3CI,GAAU,IAEdQ,UAAW,SAAC3O,GACJkO,GAAiBlO,EAAEkO,kBACnBH,GAAOnK,QAAQ6K,KAAK,qBAAsBV,EAAO/N,EAAE7U,MAC/B,KAAV,OAAVmjB,QAAU,IAAVA,OAAU,EAAVA,EAAatO,MACH,eAAVA,EAAE7U,KAAkC,cAAV6U,EAAE7U,KAC5B6U,EAAE4O,iBACFT,GAAS,SAAA1e,GAAG,OAAI8a,KAAKP,IAAI,EAAGgE,EAAeve,EAAM,GAAKue,MAEvC,cAAVhO,EAAE7U,KAAiC,YAAV6U,EAAE7U,KAChC6U,EAAE4O,iBACFT,GAAS,SAAA1e,GAAG,OAAI8a,KAAKP,IAAI,EAAGgE,EAAeve,EAAM,GAAKue,MAEvC,UAAVhO,EAAE7U,KAA6B,MAAV6U,EAAE7U,IAC5BijB,IAEe,WAAVpO,EAAE7U,MACC,OAARkjB,QAAQ,IAARA,YC3CHQ,GAAkB,WAG3B,IAHoF,IAAxDC,EAAO/N,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,6BAA8BZ,EAAMY,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACzEsH,EAAS,GACP0G,EAAmBD,EAAQ3O,OACxBvN,EAAI,EAAGA,EAAIuN,EAAQvN,IACxByV,GAAUyG,EAAQE,OAAOzE,KAAK0E,MAAM1E,KAAK2E,SAAWH,IAExD,OAAO1G,GAoBJ,SAAS8G,GAAehkB,EAAaT,GACxC,GAAI4Z,OAAO8K,QAAQC,UAAW,CAC1B,IAAIC,EAAe,IAAIC,gBAAgBjL,OAAOkL,SAASC,QACvDH,EAAaI,IAAIvkB,EAAKT,GACtB,IAAIilB,EAASrL,OAAOkL,SAASI,SACvB,KACAtL,OAAOkL,SAASK,KAChBvL,OAAOkL,SAASM,SAChB,IACAR,EAAaS,WACnBzL,OAAO8K,QAAQC,UAAU,CAAEW,KAAML,GAAU,GAAIA,IAIhD,IAAMM,GAAe,WAA4C,IAADC,EAA1CC,EAAQpP,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,2BACS,QAA7CmP,EAAAhM,SAASkM,cAA2BD,UAAS,IAAAD,GAA7CA,EAA+CG,SAGtCC,GAAgB,qCAChBC,GAAY,SAACC,GAAmC,IAAtBC,IAAS1P,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,KAAAA,UAAA,GAC5C,IACI,IAGkD2P,EAAAC,EAQAC,EAX5CC,EAAUL,EAAItP,QAAQ,IAAK,IAC7B4P,EAAW,CAAC,EAAG,EAAG,EAAG,GAEzB,GAAuB,IAAnBD,EAAQ1Q,QAAmC,IAAnB0Q,EAAQ1Q,OAChC2Q,EAAW,CACPC,SAAS,GAAD1Z,OAAIwZ,EAAQ,IAAExZ,OAAGwZ,EAAQ,IAAM,IACvCE,SAAS,GAAD1Z,OAAIwZ,EAAQ,IAAExZ,OAAGwZ,EAAQ,IAAM,IACvCE,SAAS,GAAD1Z,OAAIwZ,EAAQ,IAAExZ,OAAGwZ,EAAQ,IAAM,IACvCE,SAAS,GAAD1Z,OAAc,QAAdqZ,EAAIG,EAAQ,UAAE,IAAAH,IAAI,KAAGrZ,OAAa,QAAbsZ,EAAGE,EAAQ,UAAE,IAAAF,IAAI,KAAO,KAG7D,GAAuB,IAAnBE,EAAQ1Q,QAAmC,IAAnB0Q,EAAQ1Q,OAChC2Q,EAAW,CACPC,SAASF,EAAQG,MAAM,EAAG,GAAI,IAC9BD,SAASF,EAAQG,MAAM,EAAG,GAAI,IAC9BD,SAASF,EAAQG,MAAM,EAAG,GAAI,IAC9BD,SAA4B,QAApBH,EAACC,EAAQG,MAAM,EAAG,UAAE,IAAAJ,IAAI,KAAM,KAI9C,OAAOE,EAAS/X,KAAI,SAAAC,GAAK,OAAIiY,MAAMjY,GAAS,IAAMA,KAAOgY,MAAM,EAAGP,EAAY,EAAI,GACpF,MAAOzQ,GACL,MAAO,CAAC,EAAG,EAAG,EAAG,GAAGgR,MAAM,EAAGP,EAAY,EAAI,KAKxCS,GAAiB,WAC1B,IACUC,EADNC,GAAQ,EAKZ,OAJUD,EACNE,UAAUC,WACPD,UAAUE,QACTjN,OAAekN,OAHP,2TAA2TC,KAAKN,IAAI,4hDAA4hDM,KAAKN,EAAEO,OAAO,EAAE,OAAKN,GAAQ,GAIt4DA,GAGJ,SAASO,KAA8D,IAAD,IAAAC,EAAA7Q,UAAAZ,OAA/C0R,EAAI,IAAA5P,MAAA2P,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA/Q,UAAA+Q,GAC9B,OAAOD,EAAKpF,OAAOsF,SAASza,KAAK,K,qaCjFrC,IAAM0a,GAAiCC,KAAOC,IAAGC,MAapCC,GAAU,WACnB,OAAO5nB,cAAC6nB,KAAI,K,0dAEhBD,GAAQE,SAAW,WACf,OAAO9nB,cAACwnB,GAA8B,CAACO,UAAU,mBAAkBC,SAC/DhoB,cAAC6nB,KAAI,CAACjG,KAAK,aCfZ,IAAMqG,GAA4BR,KAAOS,KAAIP,MAyBvCQ,GAAa,SAAHzT,GAOJ,IANf0T,EAAI1T,EAAJ0T,KACAJ,EAAQtT,EAARsT,SACAK,EAAO3T,EAAP2T,QACAC,EAAS5T,EAAT4T,UACAC,EAAY7T,EAAZ6T,aACAC,EAAc9T,EAAd8T,eAAcC,EAEgF,OAAdD,QAAc,IAAdA,IAAkB,GAA1FT,EAASU,EAATV,UAAoBW,EAAaD,EAAtBJ,QAAwBlE,EAASsE,EAATtE,UAAcwE,EAAkBhL,aAAA8K,EAAA,qCAE3E,OAAOzoB,cAAC4oB,KAAOrpB,wBAAA,CAACspB,MAAO,MAAUN,GAAY,IAAAP,SACzCc,eAACb,GAAyB1oB,wBAAA,CACtBwkB,SAAU,GACN4E,GAAkB,IACtBN,QAAS,SAAA7S,GACE,OAAP6S,QAAO,IAAPA,OACa,OAAbK,QAAa,IAAbA,KAAgBlT,IAEpB2O,UAAW,SAAA3O,GACE,OAAT2O,QAAS,IAATA,KAAY3O,GACE,UAAVA,EAAE7U,MACK,OAAP0nB,QAAO,IAAPA,SAGRN,UAAW,CAAC,cAAwB,OAATA,QAAS,IAATA,IAAa,IAAIjb,KAAK,KAAKkb,SAAA,CAEtDhoB,cAACooB,EAAI7oB,YAAA,GAAK+oB,IAAcN,UCvDvBe,GAAmB,SAAC9U,EAAY+U,GAAgC,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAEpEjW,EASAa,EATAb,QACAX,EAQAwB,EARAxB,OACAxC,EAOAgE,EAPAhE,OACA8C,EAMAkB,EANAlB,eACAhV,EAKAkW,EALAlW,KACA8U,EAIAoB,EAJApB,SACAV,EAGA8B,EAHA9B,eACAO,EAEAuB,EAFAvB,MACAJ,EACA2B,EADA3B,YAGJ,GAAIrC,IAAW+Y,EAAc,OAAO/U,EAEpC,IAAMqV,EAA2B,QAAjBN,EAAyB9c,GAAkBH,GACrDwd,EAA6B,QAAjBP,GAA0B,MAAM/B,KAAKvU,GACjDA,EAAMgE,QAAQ,MAAO,OACJ,QAAjBsS,GAA0B,MAAM/B,KAAKvU,GACjCA,EAAMgE,QAAQ,MAAO,OACrBhE,EAEV,OAAAnT,wBAAA,GACO0U,GAAI,IACPlW,KAAmB,QAAfkrB,EAAEK,EAAQvrB,UAAK,IAAAkrB,IAAIlrB,EACvBkS,OAAQ+Y,EACRvW,OAAuB,QAAjByW,EAAEI,EAAQ7W,UAAO,IAAAyW,IAAIzW,EAC3BN,eAAuC,QAAzBgX,EAAEG,EAAQnX,UAAe,IAAAgX,IAAIhX,EAC3CG,YAAaA,EAAY/D,KAAI,SAAAC,GAAK,IAAAgb,EAAA,OAAkB,QAAlBA,EAAIF,EAAQ9a,UAAM,IAAAgb,IAAIhb,KACxD4E,QAAyB,QAAlBgW,EAAEE,EAAQlW,UAAQ,IAAAgW,IAAIhW,EAC7BP,SAA2B,QAAnBwW,EAAEC,EAAQzW,UAAS,IAAAwW,IAAIxW,EAC/BH,MAAO6W,EACPxW,eAAiC,QAAjBiW,GAAiCjW,K,0FCT5C0W,GAAkB,SAACC,GAA0F,IAAxDC,EAA6CpT,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACxGqT,EAAuBrqB,wBAAA,GACtBoqB,GACAD,EAAgBG,eAEjBC,EAAqB,SAACtb,GAAmB,IAADub,EAC1C,OAAqC,QAArCA,EAAOH,EAAwBpb,UAAM,IAAAub,IAAI,IAEvCC,EAAoB,SAACC,EAAkBC,GACzC,IAAMC,EAAa,IAAI7c,OAAO,OAADT,OAAQnK,OAAO2U,KAAK6S,GAASpd,KAAK,KAAI,SAE7Dsd,EAAiBH,EAASrU,MAAMuU,GAEtC,OAAOnqB,cAACqqB,IAAMC,SAAQ,CAAAtC,SACjBoC,EAAe7b,KAAI,SAACC,EAAO2U,GACxB,OAAIA,EAAQ,IAAM,EAAUnjB,cAACqqB,IAAMC,SAAQ,CAAAtC,SAA4BxZ,GAAK,GAAA3B,OAAxB2B,EAAK,KAAA3B,OAAIsW,IACtD+G,EAAQ1b,OAHKyb,IAO1BM,EAAwB,CAC1B,sBAAuB,SAACC,GACpB,OAAOV,EAAmB,uBAAuB3Q,WAAW,eAAgBqR,IAEhF,sBAAuB,SAACA,GACpB,OAAOV,EAAmB,uBAAuB3Q,WAAW,eAAgBqR,IAEhF,6BAA8B,SAACC,GAC3B,OAAOX,EAAmB,8BAA8B3Q,WAAW,aAAa,GAADtM,OAAK4d,KAExF,gCAAiC,SAACC,GAC9B,OAAOV,EACHF,EAAmB,iCACnB,CAAEY,cAGV,gCAAiC,SAACC,EAA0BC,GACxD,OAAOZ,EACHF,EAAmB,iCACnB,CAAEa,UAASC,aAGnB,6BAA8B,SAC1BC,EACAC,EACAC,EACAC,GAEA,OAAOhB,EACHF,EAAmB,8BACnB,CAAEe,UAASC,UAASC,UAASC,aAGrC,iCAAkC,SAC9BC,GAEA,OAAOjB,EACHF,EAAmB,kCACnB,CAAEmB,eAGV,4BAA6B,SAACC,GAC1B,OAAOlB,EACHF,EAAmB,6BACnB,CAAEoB,iBAGV,iCAAkC,SAC9BC,EACAC,EACAC,EACAC,GAEA,OAAOtB,EACHF,EAAmB,kCACnB,CAAEqB,UAASC,WAAUC,SAAQC,uBAGrC,iCAAkC,SAC9BH,EACAC,EACAC,EACAC,GAEA,OAAOtB,EACHF,EAAmB,kCACnB,CAAEqB,UAASC,WAAUC,SAAQC,uBAGrC,iCAAkC,SAC9BC,EACAF,EACAC,GAEA,OAAOtB,EACHF,EAAmB,kCACnB,CAAEyB,YAAWF,SAAQC,uBAG7B,iCAAkC,SAC9BC,EACAF,EACAC,GAEA,OAAOtB,EACHF,EAAmB,kCACnB,CAAEyB,YAAWF,SAAQC,uBAG7B,iCAAkC,SAC9BH,EACAC,EACAC,EACAC,GAEA,OAAOtB,EACHF,EAAmB,kCACnB,CAAEqB,UAASC,WAAUC,SAAQC,uBAGrC,oBAAqB,SACjBE,GAEA,OAAOxB,EACHF,EAAmB,qBACnB,CAAE0B,gBAKd,OAAAjsB,wBAAA,GACOmqB,GAAe,IAClBG,cAAeD,EACf6B,WAAUlsB,wBAAA,GACHqqB,GACAW,MC1IFmB,GAAUC,mBAAkB,SAACzG,EAAK0G,GAC3C,IAAMC,EAAuB,WAEzB,IAAMC,EAAM,IAAI/R,IAAID,OAAOkL,SAASnL,MAC9BkS,EAAeD,EAAIhH,aACnBkH,EAAyBD,EAAaH,IAAI,YAIhD,GAFAG,EAAaE,OAAO,YACpBnS,OAAO8K,QAAQsH,aAAapS,OAAO8K,QAAQuH,MAAO,GAAIL,EAAIjS,MACtDmS,EAAwB,OAAOA,EAEnC,IACI,IAAMI,EAAiBtS,OAAOuS,aAAaC,QAAQ,YAEnD,OAAIF,GACG,MACT,MAAO5W,GAEL,OADA4D,QAAQC,MAAM,iDAAkD7D,GACzD,OAjBc,GAoBvB+W,EAAqD,GACrDC,EAAkB/C,GAAelqB,wBAAC,GDjCK,CAC7CxB,KAAM,UACN0uB,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,IC4B2B,IAC/BhD,cAAe,MAEbiD,EAAoB,eAAApY,EAAAqY,aAAAC,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEEC,MAAM,GAAD5gB,OACrB6gB,aAAsB,6BACzB,CACIC,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAGpB,KAAD,EARa,OAARR,EAAQG,EAAAM,KAAAN,EAAAE,KAAA,EASsDL,EAASU,OAAO,KAAD,EAAxB,GAArDT,EAAqDE,EAAAM,KAElC,CAADN,EAAAE,KAAA,cAAS,IAAIM,MAAM,qBAAoB,OAE/D5I,EAAI,CACAkI,sBACAW,iBAAiB,IAClBT,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAEHlU,QAAQC,MAAM,6EAA4EiU,EAAAU,IAC1F9I,EAAI,CACAkI,oBAAqB,CACjBa,IAAK,CACDlwB,KAAM,UACN0uB,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBkB,iBAAiB,IAClB,yBAAAT,EAAAY,UAAAhB,EAAA,mBAEV,kBAnCyB,OAAAxY,EAAAyZ,MAAA,KAAA5X,YAAA,GAoCpB6X,EAAY,eAAA3F,EAAAsE,aAAAC,KAAAC,MAAG,SAAAoB,EAAOC,GAAoB,IAAAC,EAAApB,EAAAqB,EAAAC,EAAA,OAAAzB,KAAAK,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,WACxCjB,EAAY+B,GAAc,CAADI,EAAAlB,KAAA,eAAAkB,EAAAC,OAAA,SAAS,MAAI,cAAAD,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAEfC,MAAM,GAAD5gB,OACrB6gB,aAAsB,gBAAA7gB,OAAeyhB,EAAY,SACpD,CACIX,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAGpB,KAAD,EARa,OAARR,EAAQuB,EAAAd,KAAAc,EAAAlB,KAAA,EAS8BL,EAASU,OAAO,KAAD,EAAxB,IAA7BW,EAA6BE,EAAAd,MAEjB/D,cAAc,CAAD6E,EAAAlB,KAAA,eAAS,IAAIM,MAAM,uBAAsB,QAE1B,OADxCW,EAAoBhF,GAAgB+E,EAA6B,QAAjBD,EAAEhC,EAAY0B,WAAG,IAAAM,OAAA,EAAfA,EAAiB1E,eACzE0C,EAAY+B,GAAgBG,EAAkBC,EAAAC,OAAA,SAEvCF,GAAiB,QAE0D,OAF1DC,EAAAnB,KAAA,GAAAmB,EAAAV,GAAAU,EAAA,SAExBtV,QAAQC,MAAM,gEAA+DqV,EAAAV,IAAKU,EAAAC,OAAA,SAC3E,MAAI,yBAAAD,EAAAR,UAAAG,EAAA,mBAElB,gBAvBiBO,GAAA,OAAAnG,EAAA0F,MAAA,KAAA5X,YAAA,GAwBZsY,EAAc,eAAAC,EAAA/B,aAAAC,KAAAC,MAAG,SAAA8B,EAAOT,GAAoB,IAAAU,EAAAR,EAAA,OAAAxB,KAAAK,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACW,GAAnDwB,EAAWpD,IAAMwB,oBAAoBkB,GAC7B,CAADW,EAAAzB,KAAA,eAAAyB,EAAAN,OAAA,oBAISpC,EAAY+B,GAAa,CAAAW,EAAAzB,KAAA,eAAAyB,EAAAzB,KAAA,EACnCY,EAAaE,GAAa,OAAAW,EAAAjB,GAAAiB,EAAArB,KAAAqB,EAAAzB,KAAA,gBAAAyB,EAAAjB,GAChCzB,EAAY+B,GAAc,KAAD,IAFzBE,EAAYS,EAAAjB,KAKd9I,EAAI,CACAgK,aAActD,IAAMwB,oBAAoBkB,GACxCa,SAAUX,EAAa/C,aAE3B3R,OAAOuS,aAAa+C,QAAQ,WAAYd,GACxCpJ,EAAI,CACAmK,WAAW,EACXH,aAAcF,KAGlB9J,EAAI,CACAmK,WAAW,EACXH,aAActD,IAAMwB,oBAAoBa,IACxCkB,SAAU3C,EAAgBf,aAEjC,yBAAAwD,EAAAf,UAAAa,OACJ,gBA3BmBO,GAAA,OAAAR,EAAAX,MAAA,KAAA5X,YAAA,GA6BpB,MAAO,CACH6W,oBAAqB,GACrB8B,aDhIyC,CAC7CnxB,KAAM,UACN0uB,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,GC2HJsC,SAAU3C,EAAgBf,WAC1BpS,MAAO,KACPkW,cAAc,EACdF,WAAW,EACXtB,iBAAiB,EACjByB,SAAS,WAAD,IAAAC,EAAA1C,aAAAC,KAAAC,MAAE,SAAAyC,IAAA,OAAA1C,KAAAK,MAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,OACNV,IAAuB,wBAAA6C,EAAAzB,UAAAwB,OAC1B,yBAAAD,EAAAtB,MAAA,KAAA5X,YAFQ,GAGTqZ,oBAAoB,WAAD,IAAAC,EAAA9C,aAAAC,KAAAC,MAAE,SAAA6C,IAAA,OAAA9C,KAAAK,MAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cAAAuC,EAAAvC,KAAA,EAEXY,EAAa,OAAO,KAAD,SAAA2B,EAAAvC,KAAA,EACnBqB,EAAehD,GAAqB,KAAD,EACzC3G,EAAI,CACAqK,cAAc,IACf,wBAAAQ,EAAA7B,UAAA4B,OACN,yBAAAD,EAAA1B,MAAA,KAAA5X,YAPmB,GAQpB6X,eACAS,qBAIKmB,GAAc,WAGvB,OAFiBtE,IAAQ,SAAAuE,GAAW,OAAAA,EAARd,aAInBe,GAAc,WAAH,OAASxE,GAAQyE,WAAWhB,UCjJvCiB,GAAa,SACtBC,EACAvX,GAKA,IAAIwX,EAAc3c,KACdiK,GAAY,EAChB,IAAKyS,EAAU,MAAO,CAAEzS,YAAW3J,KAAMqc,GACzC,IACI,IAAMlZ,EAAqC,kBAAbiZ,EACxBjY,KAAKC,MAAMgY,GACXA,EAEN,GAAI3V,GAAmBtD,GACnBkZ,EAAc/X,GAAgBnB,EAAgB0B,QAC3C,GAAI8B,GAA0BxD,GAAiB,CAClD,IAAMpY,EAAgC8Y,GAAmBV,GAEzDkZ,EAAc/X,GAAgBvZ,EAAU8Z,OACrC,CAAC,IAADyX,EXoMyB,SAACtc,GAAgE,ID9O7Euc,ECgPpBzyB,EAmBAkW,EAnBAlW,KACA4U,EAkBAsB,EAlBAtB,IACAC,EAiBAqB,EAjBArB,IACA9B,EAgBAmD,EAhBAnD,UACA2B,EAeAwB,EAfAxB,OACA6L,EAcArK,EAdAqK,QACAL,EAaAhK,EAbAgK,UACAF,EAYA9J,EAZA8J,KACAG,EAWAjK,EAXAiK,GACAtd,EAUAqT,EAVArT,MACAqe,EASAhL,EATAgL,OACAnB,EAQA7J,EARA6J,MACArE,EAOAxF,EAPAwF,KACA5b,EAMAoW,EANApW,SACA4f,EAKAxJ,EALAwJ,OACAO,EAIA/J,EAJA+J,OACApf,EAGAqV,EAHArV,KACA4f,EAEAvK,EAFAuK,QACAlO,EACA2D,EADA3D,QAEI+N,EAAyFxgB,EAAzFwgB,IAAKD,EAAoFvgB,EAApFugB,KAAeqS,EAAqE5yB,EAA9EygB,QAA0BC,EAAoD1gB,EAApD0gB,eAAwBpM,EAA4BtU,EAApC4U,OAAwB0L,EAAYtgB,EAAZsgB,QAC/Ed,EAAiBlC,GAAmB4C,GACpCT,EAAsBvB,GAAoBjL,GAC1CyM,EAAkBb,GAAgBuC,GAClCyR,EDxQgD,kBAA9BF,ECwQS5vB,IDxQiC4vB,EAAKG,WAAW,eCyQ5EC,EAAgBrK,SAASzI,GACzBN,EAAmBC,EAASb,GAAiBa,EAAOoT,oBAAiBra,EAEvEoH,OAA+BpH,IAAnB6G,QACe7G,IAAxB8G,QACoB9G,IAApB+G,QACqB/G,IAArBgH,EAA+BiL,EAKlB,OAAhBjL,QAAgB,IAAhBA,IAAoB,GAHpB/M,EAAMgY,EAANhY,OACAC,EAAS+X,EAAT/X,UACA5S,EAAI2qB,EAAJ3qB,KAEEgzB,EAAahzB,EAAO2C,EAAmB3C,GAA2B,KAClEgb,EAAWnF,KAmDjB,MAAO,CACHiK,YACAC,OApDcte,wBAAA,GACXuZ,GAAQ,IACXrI,OAAc,OAANA,QAAM,IAANA,IAAU,GAClB1S,OACA4S,cAAe7S,EAAO,aAAe,OACrC8S,UAAWkgB,EACLA,EAAW5wB,MjB3RiB,CACtCkB,KAAM,UACNN,UAAW,UACX+P,kBAAmB,UACnB9O,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,QiB2QLmS,MACAC,MACA9B,UAA8B,OAAnBwM,QAAmB,IAAnBA,IAAuB9d,EAClCiT,SACAW,QAAS6K,EACTlN,UAAyB,OAAdsM,QAAc,IAAdA,IAAkBvd,EAC7B4S,MAAOwL,EACP3N,MAAsB,OAAfgN,QAAe,IAAfA,IAAmB,SAC1BtM,KAAM,GAAApE,OAAG+jB,KAAoB9S,GAAS8S,GAAiB,GAAKA,EAAgB9S,EAC5ExL,YAAa1T,EAAKgX,MAAM,KAAKrH,KAAI,SAAAC,GAAK,OAAIA,EAAMuiB,UAChDxrB,IAAKmrB,EAAe,GAAK9vB,EACzBwQ,QAAQ,EACRD,QAASuf,EAAe9vB,EAAQ,GAChCyQ,UAAWqf,EAAe,UAAY,SACtChgB,UAAoB,OAATA,QAAS,IAATA,IAAa,SACxBuB,QAAS,EACa,KAAd,OAAJwH,QAAI,IAAJA,OAAI,EAAJA,EAAMgF,SAAmB,IAAM,MACX,KAAhB,OAAJhF,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,WAAqB,IAAM,MACd,KAAf,OAAJjF,QAAI,IAAJA,OAAI,EAAJA,EAAMkF,UAAoB,IAAM,MACX,KAAjB,OAAJlF,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,YAAsB,IAAM,MACZ,KAAlB,OAAJnF,QAAI,IAAJA,OAAI,EAAJA,EAAMoF,aAAuB,IAAM,MACd,KAAjB,OAAJpF,QAAI,IAAJA,OAAI,EAAJA,EAAMqF,YAAsB,IAAM,MACX,KAAnB,OAAJrF,QAAI,IAAJA,OAAI,EAAJA,EAAMsF,cAAwB,IAAM,MACd,KAAlB,OAAJtF,QAAI,IAAJA,OAAI,EAAJA,EAAMuF,aAAuB,IAAM,MACrCiD,QAAe,SAAAzT,GAAK,MAAqB,kBAAVA,KACjCrP,WAAYgf,EACZ9L,kBAAmB+L,EACnBhM,iBAAkBiM,EAClBlM,eAAgBA,EAChBU,SAAUmL,EACVtK,aAAc,CACVpD,UACAkO,UACAF,UACAb,SACA5f,SAAU,CACNygB,QAASmS,EACTlS,sBWzRyCyS,CAAyB5Z,GAAnD6Z,EAAaV,EAAxB3S,UAA0BC,EAAM0S,EAAN1S,OAClCD,EAAYqT,EACZX,EAAczS,GAEpB,MAAOrI,GACL4D,QAAQC,MAAM,cAAegX,EAAU7a,GACvC,IACI8a,EdyJyB,SACjCrc,GAEE,IACEjV,EASJ,OAPIA,EAJOuX,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,IAAAA,UAAA,GAII2B,GAA+BjE,GAEf,kBAATA,EACZmE,KAAKC,MAAMpE,GACXA,EAGHsE,GAAgBvZ,GctKDkyB,CAAsBb,GAAU,GAC9Cc,KAAalN,KAAK,CACdmN,QAASlB,KAAc,mCACvBmB,YAAanB,KAAc,yCAEjC,MAAO1a,GACL4D,QAAQC,MAAM,WAAYgX,EAAU7a,GACpC2b,KAAa9X,MAAM,CACf+X,QAASlB,KAAc,gCACvBmB,YAAanB,KAAc,uCAIvC,MAAO,CACHtS,YACA3J,KAAMqc,IA8CRgB,GAAmB,CACrBC,SAAU,CAAE3yB,KAAM,WAAqB4yB,KAAM,KAC7CC,SAAU,CAAE7yB,KAAM,WAAqB4yB,KAAM,MAWpCE,GAAU/F,mBAAkB,SAACzG,EAAK0G,GAC3C,MAAO,CACH3X,KAAM5D,KACNshB,QAAS,SAAAC,GACoC1M,EAAZ,oBAAlB0M,EAAkC,SAAA3sB,GAAG,MAAK,CAAEgP,KAAM2d,EAAc3sB,EAAIgP,QACtE,CAAEA,KAAM2d,KAErBC,WAAY,SACRlxB,GAGE,IAADmxB,EAFDC,EAAmCxb,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,SAACrW,GAAK,OAAKA,GACjDse,EAAOjI,UAAAZ,OAAA,EAAAY,UAAA,QAAAC,EAAAwb,EAEapG,IAAZ+F,EAAOK,EAAPL,QACFM,EAAiB,SAACzc,GACpBmc,GAAQ,SAAAO,GAAO,IAAAC,EAAA,OAAA5yB,wBAAA,GACR2yB,GAAO,GAAAjmB,aAAA,GACTtL,EAAMoxB,EAA4B,kBAANvc,GAA+B,kBAANA,GAAkBiC,MAAMC,QAAQlC,GAAKA,EAAK,OAADA,QAAC,IAADA,GAAS,QAAR2c,EAAD3c,EAAG4c,cAAM,IAAAD,OAAR,EAADA,EAAWjyB,aAIlH,IAAKse,EAAS,OAAOyT,EACrB,IAAMI,EAAmC,kBAAZ7T,EACE,QADkBsT,EAC3CR,GAAiB9S,UAAQ,IAAAsT,SAAItb,EAC7BgI,EAEN,IAAK6T,EAAe,OAAOJ,EAAe,IAClCT,EAAea,EAAfb,KAAM5yB,EAASyzB,EAATzzB,KAEd,MAAa,aAATA,EAA4B2yB,KAASU,EAAgBT,GAC5C,aAAT5yB,EAA4B6yB,KAASQ,EAAgBT,GAElDS,O,SC7INK,GAAa3G,mBAAqB,SAACzG,GAAS,IAADxQ,EAO/C,WACD,IAAK,IAAD6d,EACMC,EAAcpa,KAAKC,MAA4C,QAAvCka,EAACzY,OAAOuS,aAAaC,QAAQ,kBAAU,IAAAiG,IAAI,MAEzE,OAAIC,GAAsC,kBAAhBA,IAA6B/a,MAAMC,QAAQ8a,GAAqBA,EACnF,GACT,MAAOhd,GAEL,OADA4D,QAAQC,MAAM,gDAAiD7D,GACxD,IARV,GALDid,EAAU/d,EAAV+d,WACAC,EAAWhe,EAAXge,YACAC,EAAiBje,EAAjBie,kBACAC,EAAkBle,EAAlBke,mBACAC,EAAyBne,EAAzBme,0BAaJ,MAAO,CACHC,QAAS,CACLL,WAAYhb,MAAMC,QAAQ+a,IAAwC,kBAAlBA,EAAW,IAA4C,kBAAlBA,EAAW,GAC1FA,EACA,CAACh1B,EAAmBA,GAC1Bi1B,YAAoC,mBAAhBA,GAA4BA,EAChDC,kBAAgD,mBAAtBA,GAAkCA,EAC5DC,mBAAkD,mBAAvBA,GAAmCA,EAC9DC,0BAAgE,mBAA9BA,GAA0CA,GAEhFE,cAAe,SAAAC,GACX9N,GAAI,SAAA+N,GACA,IAAMC,EAA6C,oBAAzBF,EACpBA,EAAqBC,EAAaH,SAAQvzB,wBAAA,GACrC0zB,EAAaH,SAAYE,GAIpC,OAFAlZ,OAAOuS,aAAa+C,QAAQ,UAAWhX,KAAK+a,UAAUD,IAE/C,CACHJ,QAASI,WCjDbE,GAAqC31B,EAAhB41B,GAAgB51B,EAKxC61B,GAAa,SAAH5e,GAYhB,IAXH6e,EAAG7e,EAAH6e,IAAGC,EAAA9e,EACH/U,aAAK,IAAA6zB,EAL4B,UAAU9c,QAAQ,MAAM,qBAA0B,GAAhBqJ,KAAK2E,SAAgB,IAAIa,SAAS,OAK5EiO,EAAErmB,EAAKuH,EAALvH,MAAKsmB,EAAA/e,EAChCsO,cAAM,IAAAyQ,EAAG,EAACA,EACVC,EAAIhf,EAAJgf,KAAMC,EAAQjf,EAARif,SACNC,EAAMlf,EAANkf,OAQMC,EAAmBN,EAAIzyB,UAC7ByyB,EAAIzyB,UAAYnB,EAChB4zB,EAAIO,YACJP,EAAIQ,KAAKL,EAAOE,EAAQD,EAAW,EAAI5T,KAAK2E,SAAW1B,EAAQ7V,EAAQymB,EAAQ,GAE/EL,EAAIzyB,UAAY+yB,GAWPG,GAA0B,SACnCT,EACAU,EACAC,EACAR,EACAC,EACAQ,GAIA,IAAKZ,IAAQU,EAAK,OAAOP,EAAK,IAESU,GAAN,OAAND,QAAM,IAANA,IAAU,IAA7BE,cAAM,IAAAD,GAAQA,EACtBb,EAAIe,UAAY,OAChB,IAAMC,EAAWN,EAAIre,MAAM,IACvB4e,EAAUd,EAQd,OANAa,EAASjd,SAAQ,SAAAmd,GACblB,EAAImB,SAASD,EAAMD,EAASb,GACxBU,GAAQd,EAAIoB,WAAWF,EAAMD,EAASb,GAC1Ca,GAAWjB,EAAIqB,YAAYH,GAAMtnB,OAAS,EAAI+mB,GAAsB,KAGjEM,GAGEK,GAA2B,SACpCtB,EACAU,EACApuB,EACA6tB,EACAC,EACAQ,GAIA,IAAKZ,IAAQU,EAAK,OAAOP,EAAK,IAESoB,GAAN,OAANX,QAAM,IAANA,IAAU,IAA7BE,cAAM,IAAAS,GAAQA,EACtBvB,EAAIe,UAAY,QAChB,IAAMC,EAAWN,EAAIre,MAAM,IACvBmf,EAAWrB,EAQf,OANAa,EAASjd,SAAQ,SAAC0d,EAAG7R,GACjB,IAAMsR,EAAOF,EAASA,EAAS5e,OAASwN,EAAQ,GAChDoQ,EAAImB,SAASD,EAAMM,EAAUpB,GACzBU,GAAQd,EAAIoB,WAAWF,EAAMM,EAAUpB,GAC3CoB,GAAYxB,EAAIqB,YAAYH,GAAMtnB,OAAS,EAAItH,GAAiB,KAE7DkvB,GAIEE,GAAc,SACvB1B,GAGmC,IAFnCpmB,EAAKoJ,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG8c,GACRjmB,EAAMmJ,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG6c,GAET,QAAIG,IACAA,EAAI2B,UAAU,EAAG,EAAG/nB,EAAOC,IAEpB,IAMF+nB,GAAoB,SAC7B1kB,GAEE,IADF2kB,EAA4C7e,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAGnR,EAE/C,sBAAA6qB,EAAAlD,aAAAC,KAAAC,MAAO,SAAAC,EACHqG,EACAx1B,EACAs3B,GAA6C,IAAAvf,EAAAD,EAAAyf,EAAAC,EAAAC,EAAAnwB,EAAAowB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9yB,EAAA+yB,EAAA12B,EAAA,OAAA4tB,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAExC+F,GAAQ9b,MAAMC,QAAQjH,MAAWA,EAAOkF,QAAU,GAAC,CAAA2X,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAASoH,QAAQC,WAAS,OAAAlgB,EAAAC,aACzDtF,GAAM6c,EAAAC,KAAA,EAAAzX,EAAAE,IAAA,WAAAH,EAAAC,EAAAL,KAAAQ,KAAC,CAADqX,EAAAE,KAAA,SACqB,GADzC8H,EAAUzf,EAAA3V,MACXq1B,EAAoBH,EAAUE,IAChCD,IAAUD,EAAUE,GAAW,CAAAhI,EAAAE,KAAA,SAEoC,GAD3DnoB,EAAuBkwB,EAAvBlwB,qBACFowB,EAAkB13B,GAA+B,QAA3By3B,EAAGnwB,EAAmBtH,UAAK,IAAAy3B,IAAS,IAE5C7f,OAAO,CAAD2X,EAAAE,KAAA,SAAAkI,EAAA3f,aACmC0f,GAAenI,EAAAC,KAAA,GAAAmI,EAAA1f,IAAA,YAAA2f,EAAAD,EAAAjgB,KAAAQ,KAAC,CAADqX,EAAAE,KAAA,SAE1C,OAF0CoI,EAAAD,EAAAz1B,MAAA21B,EAAAD,EAA3D7yB,iBAAS,IAAA8yB,EAAG,cAAaA,EAAAC,EAAAF,EAAEx2B,eAAO,IAAA02B,EAAG,EAACA,EAC/CvC,EAAI0C,yBAA2BlzB,EAC/BwwB,EAAI2C,YAAc92B,EAAQkuB,EAAAE,KAAA,GAEpB6H,EAAOC,GAAY,KAAD,GAAAhI,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,UAAAoI,EAAAlgB,EAAA8X,EAAAU,IAAA,eAAAV,EAAAC,KAAA,GAAAmI,EAAArf,IAAAiX,EAAA7c,OAAA,YAAA6c,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAGtB6H,EAAOC,GAAY,KAAD,GAE5B/B,EAAI2C,YAAc,EAClB3C,EAAI0C,yBAA2B,cAAc,QAAA3I,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA6I,GAAA7I,EAAA,SAAAxX,EAAAN,EAAA8X,EAAA6I,IAAA,eAAA7I,EAAAC,KAAA,GAAAzX,EAAAO,IAAAiX,EAAA7c,OAAA,YAGrD8iB,EAAI2C,YAAc,EAClB3C,EAAI0C,yBAA2B,cAAc,yBAAA3I,EAAAY,UAAAhB,EAAA,uCAChD,gBAAA0B,EAAAU,EAAA8G,GAAA,OAAAnG,EAAA9B,MAAA,KAAA5X,YA5BD,IAkCE8f,GAAuB,UACvBC,GAAqB,UAEdC,GAAe,SAAHC,GASA,IARrBjD,EAAGiD,EAAHjD,IAAGkD,EAAAD,EACHjlB,SAAC,IAAAklB,EAR2B,EAQDA,EAAAC,EAAAF,EAC3BhlB,SAAC,IAAAklB,EAR2B,EAQDA,EAAAC,EAAAH,EAC3BI,YAAI,IAAAD,EARoB,EAQEA,EAAAE,EAAAL,EAC1B72B,aAAK,IAAAk3B,EAAGP,GAAkBO,EAAAC,EAAAN,EAC1Bz0B,mBAAW,IAAA+0B,EAAGT,GAAoBS,EAUlC,OANAvD,EAAItxB,cAAgBsP,EACpBgiB,EAAIvxB,cAAgBwP,EACpB+hB,EAAIrxB,WAAa00B,EACjBrD,EAAIxxB,YAAcA,EAClBwxB,EAAIzyB,UAAYnB,EAET,WACH4zB,EAAItxB,cAvBoB,EAwBxBsxB,EAAIvxB,cAvBoB,EAwBxBuxB,EAAIrxB,WAvBgB,EAwBpBqxB,EAAIxxB,YAAcs0B,GAClB9C,EAAIzyB,UAAYw1B,KClKlBS,GAKD,GAEQC,GAAQ,eAAAtiB,EAAAqY,aAAAC,KAAAC,MAAG,SAAAC,EACpBqG,EACA0D,GAAc,IAAAC,EAAAC,EAAAC,EAAA7gB,UAAA,OAAAyW,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEwC,GADtD0J,EAAkDE,EAAAzhB,OAAA,QAAAa,IAAA4gB,EAAA,GAAAA,EAAA,GAAG,EACrDD,EAAkDC,EAAAzhB,OAAA,QAAAa,IAAA4gB,EAAA,GAAAA,EAAA,GAAG,EAEhD7D,GAAkB,KAAX0D,EAAa,CAAA3J,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAAS,IAAIoH,SAAiB,SAAAC,GAAO,OAAIA,GAAQ,OAAO,cAAA1I,EAAAqB,OAAA,SAC1E,IAAIoH,SAAiB,SAAAC,GAAY,IAADqB,EAEnC,IAAqC,KAAZ,QAArBA,EAAAN,GAAcE,UAAO,IAAAI,OAAA,EAArBA,EAAuBC,OAAgB,CACvC,IAAM12B,EAAQm2B,GAAcE,GAAQr2B,MAC9B22B,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGt2B,GAC/C42B,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGv2B,GAErD2yB,EAAIkE,UAAU72B,EAAO22B,EAAaC,GAClCxB,GAAQ,OACL,CAAC,IAAD0B,EACH,GAAyB,QAAzBA,EAAIX,GAAcE,UAAO,IAAAS,OAAA,EAArBA,EAAuBre,MAEvB,YADA2c,GAAQ,GAGZ,IAAM2B,EAAcZ,GAAcE,KAAYF,GAAcE,GAAQW,OAASb,GAAcE,GAAQK,OAC7F12B,EAAQ+2B,EACRZ,GAAcE,GAAQr2B,MACtB,IAAIi3B,MAELF,IAAa/2B,EAAMk3B,IAAMpK,aAAyBuJ,GACvDr2B,EAAMm3B,iBACF,QACA,WACI,IAAMR,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGt2B,GAC/C42B,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGv2B,GAErD2yB,EAAIkE,UAAU72B,EAAO22B,EAAaC,GAClCT,GAAcE,GAAQK,OAAQ,EAC9BP,GAAcE,GAAQ5d,OAAQ,EAC9B2c,GAAQ,KAEZ,CAAEgC,MAAM,IAEZp3B,EAAMm3B,iBACF,SACA,WACIhB,GAAcE,GAAQ5d,OAAQ,EAC9B2c,GAAQ,KAEZ,CAAEgC,MAAM,IAGPL,IAAaZ,GAAcE,GAAU,CACtCr2B,MAAOA,EACP02B,OAAO,EACPje,OAAO,EACPue,OAAO,SAGjB,wBAAAtK,EAAAY,UAAAhB,OACL,gBAzDoB0B,EAAAU,GAAA,OAAA5a,EAAAyZ,MAAA,KAAA5X,YAAA,GA0DR0hB,GAAS,eAAAxP,EAAAsE,aAAAC,KAAAC,MAAG,SAAAoB,EACrBkF,EACA0D,GAAc,IAAAC,EAAAC,EAAAe,EAAA3hB,UAAA,OAAAyW,KAAAK,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAEwC,OADtD0J,EAAkDgB,EAAAviB,OAAA,QAAAa,IAAA0hB,EAAA,GAAAA,EAAA,GAAG,EACrDf,EAAkDe,EAAAviB,OAAA,QAAAa,IAAA0hB,EAAA,GAAAA,EAAA,GAAG,EAACxJ,EAAAlB,KAAA,EAEzCwJ,GACTzD,EACA,gBAAkB0D,EAClBC,EAAIC,GACN,KAAD,SAAAzI,EAAAC,OAAA,SAAAD,EAAAd,MAAA,wBAAAc,EAAAR,UAAAG,OACJ,gBAXqB+H,EAAA+B,GAAA,OAAA1P,EAAA0F,MAAA,KAAA5X,YAAA,GAaT6hB,GAAgB,eAAAtJ,EAAA/B,aAAAC,KAAAC,MAAG,SAAA8B,EAC5BwE,EACA0D,EACAC,EACAC,EACAkB,EACAC,GAAkD,OAAAtL,KAAAK,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UAE7C+F,GAAkB,KAAX0D,EAAa,CAAAhI,EAAAzB,KAAA,eAAAyB,EAAAN,OAAA,SAAS,IAAIoH,SAAiB,SAAAC,GAAO,OAAIA,GAAQ,OAAO,cAAA/G,EAAAN,OAAA,SAC1E,IAAIoH,SAAiB,SAAAC,GAAY,IAADuC,EACnC,IAAqC,KAAZ,QAArBA,EAAAxB,GAAcE,UAAO,IAAAsB,OAAA,EAArBA,EAAuBjB,OAAgB,CACvC,IAAM12B,EAAQm2B,GAAcE,GAAQr2B,MAC9B22B,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGt2B,GAC/C42B,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGv2B,GAC/C43B,EAA4B,kBAAPH,EAAkBA,EAAKA,EAAGz3B,GAC/C63B,EAA4B,kBAAPH,EAAkBA,EAAKA,EAAG13B,GAErD2yB,EAAIkE,UAAU72B,EAAO22B,EAAaC,EAAagB,EAAaC,GAC5DzC,GAAQ,OACL,CAAC,IAAD0C,EACH,GAAyB,QAAzBA,EAAI3B,GAAcE,UAAO,IAAAyB,OAAA,EAArBA,EAAuBrf,MAEvB,YADA2c,GAAQ,GAGZ,IAAM2B,EAAcZ,GAAcE,KAAYF,GAAcE,GAAQW,OAASb,GAAcE,GAAQK,OAC7F12B,EAAQ+2B,EACRZ,GAAcE,GAAQr2B,MACtB,IAAIi3B,MAELF,IAAa/2B,EAAMk3B,IAAMpK,aAAyBuJ,GACvDr2B,EAAMm3B,iBACF,QACA,WACI,IAAMR,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGt2B,GAC/C42B,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGv2B,GAC/C43B,EAA4B,kBAAPH,EAAkBA,EAAKA,EAAGz3B,GAC/C63B,EAA4B,kBAAPH,EAAkBA,EAAKA,EAAG13B,GAErD2yB,EAAIkE,UAAU72B,EAAO22B,EAAaC,EAAagB,EAAaC,GAC5D1B,GAAcE,GAAQK,OAAQ,EAC9BP,GAAcE,GAAQ5d,OAAQ,EAC9B2c,GAAQ,KAEZ,CAAEgC,MAAM,IAEZp3B,EAAMm3B,iBACF,SACA,WACIhB,GAAcE,GAAQ5d,OAAQ,EAC9B2c,GAAQ,KAEZ,CAAEgC,MAAM,IAGPL,IAAaZ,GAAcE,GAAU,CACtCr2B,MAAOA,EACP02B,OAAO,EACPje,OAAO,EACPue,OAAO,SAGjB,wBAAA3I,EAAAf,UAAAa,OACL,gBA9D4B4J,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAlK,EAAAX,MAAA,KAAA5X,YAAA,GA+DhB0iB,GAA0C,eAAAhJ,EAAAlD,aAAAC,KAAAC,MAAG,SAAAyC,EACtD6D,EACA0D,EACAC,EAAIC,EACJkB,EAAIC,GAAE,OAAAtL,KAAAK,MAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAAnC,KAAA,EAEO4K,GACT7E,EACA,gBAAkB0D,EAClBC,EAAIC,EACJkB,EAAIC,GACN,KAAD,SAAA3I,EAAAhB,OAAA,SAAAgB,EAAA/B,MAAA,wBAAA+B,EAAAzB,UAAAwB,OACJ,gBAZsDwJ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAtJ,EAAA9B,MAAA,KAAA5X,YAAA,GAc1CijB,GAAa,eAAAhD,EAAAzJ,aAAAC,KAAAC,MAAG,SAAA6C,EACzB2J,EACAxC,EACAt3B,EACA+5B,EAAYC,EACZC,EAAYC,EACZC,GAAkC,IAAAvG,EAAAwG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzN,KAAAK,MAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,OAM4C,GAJxE+F,EAAMkG,EAAOiB,WAAW,OACxBX,EAAergB,SAASC,cAAc,WAC/BxM,MAAQusB,EACrBK,EAAa3sB,OAASusB,GAChBK,EAAYD,EAAaW,WAAW,KAAM,CAAEC,oBAAoB,MAEnDpH,EAAG,CAAAxD,EAAAvC,KAAA,eAAAuC,EAAApB,OAAA,wBAAAoB,EAAAvC,KAAA,EAChByK,GAAU+B,EAAW/C,EAAQ,EAAG,GAAG,KAAD,EAQgC,OANlEgD,EAAYlU,GAAUpmB,GACtBu6B,EAAkBF,EAAUY,aAAa,EAAG,EAAGlB,EAAIC,GAAInJ,KAKvD2J,EAAa5D,GAAYh3B,YAAC,CAAEg0B,IAAKyG,GAAcF,IAAmB/J,EAAAvC,KAAA,GAClEyK,GAAU+B,EAAW/C,EAAQ,EAAG,GAAG,KAAD,GAYxC,IAXMmD,EAAsBJ,EAAUY,aAAa,EAAG,EAAGlB,EAAIC,GACvDU,EAA4BD,EAAoB5J,KACtD2J,IAGAH,EAAU9E,UAAU,EAAG,EAAGwE,EAAIC,GAC9BK,EAAUvC,UAAUgC,EAAQG,EAAIC,EAAIH,EAAIC,EAAI,EAAG,EAAGD,EAAIC,GAEhDW,EAAoBN,EAAUY,aAAa,EAAG,EAAGlB,EAAIC,GACrDY,EAA0BD,EAAkB9J,KAEzCgK,EAAW,EAAGA,EAAWD,EAAwB5kB,OAAQ6kB,GAAY,EAEtEN,EAAgBM,EAAW,GAAK,GAEhCD,EAAwBC,EAAW,GAAKP,EAAU,IAAM,EAAIC,EAAgBM,EAAW,GAAK,KAC5FD,EAAwBC,EAAW,GAAKP,EAAU,IAAM,EAAIC,EAAgBM,EAAW,GAAK,KAC5FD,EAAwBC,EAAW,GAAKP,EAAU,IAAM,EAAIC,EAAgBM,EAAW,GAAK,KAC5FD,EAAwBC,EAAW,GAAK,KAGnCH,EAA0BG,EAAW,GAAK,IACzCC,EAAmBJ,EAA0BG,EAAW,GAAK,IAEnED,EAAwBC,EAAW,IAAM,EAAIC,GAAoBF,EAAwBC,EAAW,GAC9FC,EAAmBJ,EAA0BG,EAAW,GAC9DD,EAAwBC,EAAW,IAAM,EAAIC,GAAoBF,EAAwBC,EAAW,GAC9FC,EAAmBJ,EAA0BG,EAAW,GAC9DD,EAAwBC,EAAW,IAAM,EAAIC,GAAoBF,EAAwBC,EAAW,GAC9FC,EAAmBJ,EAA0BG,EAAW,GAC9DD,EAAwBC,EAAW,GAAK,KAKhDjH,EAAIsH,aAAaP,EAAmBV,EAAIC,GAAI,yBAAA9J,EAAA7B,UAAA4B,OAC/C,gBA7DyBgL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAA7E,EAAArI,MAAA,KAAA5X,YAAA,GC1Hb+kB,GAAiB,SAAH5mB,GAgBpB,IAAD+T,EAAA8S,EAfFhI,EAAG7e,EAAH6e,IACAiI,EAAM9mB,EAAN8mB,OAAMC,EAAA/mB,EACNgnB,oBAAY,IAAAD,GAAQA,EACpBlY,EAAK7O,EAAL6O,MACA1c,EAAS6N,EAAT7N,UACA+sB,EAAMlf,EAANkf,OAAM+H,EAAAjnB,EACNzN,oBAAY,IAAA00B,EAAG,WAAUA,EAUzB,GAAIxtB,GAAwB8Y,KAAKuU,GAAS,MAAO,CAC7CruB,MAAO,EACPyuB,WAAY,GAGhB,IAAMC,EAAmC,QAAdh1B,EACrBkJ,GACAH,GACAksB,EAA0B,QAAdj1B,EACZgJ,GACAH,GACAqsB,EAAoC,QAAdl1B,EACtBiJ,GACAH,GACAqsB,EAASzI,EAAIqB,YAAY4G,GAE3BruB,EAGA6uB,EAHA7uB,MAIE8uB,EADFD,EAFAE,sBAEAF,EADAG,uBAGAC,EAAoB,EACH,SAAjBn1B,IACAm1B,EAAoB,EAAmB,GAAd,EAAIxI,IAEjC,IAQyByI,EARnBC,EAAgC,SAAjBr1B,GAA4C,YAAjBA,GAA+C,aAAjBA,EACpE,QACA,EACN20B,EAAaK,EACbM,EAEmB,QAFR9T,EAAIiT,EACbK,EAAoBP,GACpBM,EAAUN,UAAO,IAAA/S,IAAK,EAE5B,GAAkB,QAAd5hB,EAGA,MAAO,CACHsG,QACA8uB,mBACAL,WAAYzuB,EAAQ,IAL0B,QAA3BkvB,EAACR,EAAmBL,UAAO,IAAAa,IAAI,GAAKlvB,GAMvD6uB,SACAO,eAIR,IAAIC,GAA8C,QAA3BjB,EAACM,EAAmBL,UAAO,IAAAD,IAAI,GAAKpuB,GACnC,aAAjBlG,EACG,EACA8Y,KAAKR,IACK,KAARpS,EACA4S,KAAKP,IAAI,IAAOrS,EAAQmvB,GAAgBF,IAIhDK,EAAsB,EACtBrtB,GAAY6X,KAAKuU,IACjBI,EAA8B,aAAjB30B,EACPg1B,EACAA,GAAqC,YAAjBh1B,EAA6B,KAAQ,KAC/Dw1B,EAAsB,IAEjBptB,GAAa4X,KAAKuU,IACvBI,EAA8B,aAAjB30B,EAA8Bg1B,EAAmBlc,KAAKP,IAAIyc,EAA0B,IAAR9uB,GACzFqvB,EAAmB,GAEd5tB,GAAaqY,KAAKuU,GACvBI,EAA8B,aAAjB30B,EAA8Bg1B,EAAmBlc,KAAKP,IAAIyc,EAA0B,GAAR9uB,GAEpF6B,GAAeiY,KAAKuU,GACzBI,EAAazuB,EAERoC,GAA6B0X,KAAKuU,GACvCI,EAAgC,EAAnBK,EAERzsB,GAAuByX,KAAKuU,GACjCI,EAAgC,KAAnBK,GAA4BP,EtBpBJ,GsBoBmD,GAEnFxsB,GAAc+X,KAAKuU,GACxBI,EAA8B,aAAjB30B,EAA8Bg1B,EAAmBlc,KAAKP,IAAIyc,EAA0B,IAAR9uB,GAEpFgC,GAAc8X,KAAKuU,GACxBI,EAAa7b,KAAKP,IAAIyc,EAA0B,IAAR9uB,IAChB,YAAjBlG,EAA6B,KAAU,GAEzCqI,GAAa2X,KAAKuU,IACvBI,EAAazuB,EACbqvB,EAAmB,GAGnBZ,EAA8B,aAAjB30B,EAA8Bg1B,EAAmBlc,KAAKP,IAAIyc,EAA0B,IAAR9uB,GAE7FqvB,EAAoC,aAAjBv1B,EAA8B,EAAIu1B,EAErD,IAAME,EAzCY,EAyCQvvB,EAxCP,EA2CnB,OADIoW,GAAOnK,QAAQ6K,KAAK,kBAADpX,OAAmB0W,GAASiY,EAAQQ,EA3CzC,EACC,EA0C2E,IAAKU,GAC5F,CACHvvB,QACA8uB,mBACAL,WAA6B,aAAjB30B,EACNkG,EAAQsvB,EACRb,EAAgC,EAAnBY,EACnBR,SACAO,gBAaKI,GAAa,SAAH7N,GAkBhB,IAjBHyE,EAAGzE,EAAHyE,IACAI,EAAQ7E,EAAR6E,SACAD,EAAI5E,EAAJ4E,KACA8H,EAAM1M,EAAN0M,OACA5H,EAAM9E,EAAN8E,OAAMgJ,EAAA9N,EACN+N,iBAAS,IAAAD,EAAG,GAAEA,EACdE,EAAYhO,EAAZgO,aACAC,EAAUjO,EAAViO,WAAU9M,EAeM,OAAZ6M,QAAY,IAAZA,IAAgB,GAHhBlB,EAAU3L,EAAV2L,WAAUoB,EAAA/M,EACV+L,cAAM,IAAAgB,EAAGzJ,EAAIqB,YAAY4G,GAAOwB,EAAAC,EAAAhN,EAChCsM,mBAAW,IAAAU,EAAG,EAACA,EAAAzG,EAKf5C,EAAS,EAAI,GAAKiJ,EAASK,EAAA1G,EAF3BnuB,QAAS80B,OAAgB,IAAAD,EAAGh3B,EAA4Bg3B,EAAAE,EAAA5G,EACxDluB,cAAM,IAAA80B,EAAGl3B,EAA2Bk3B,EAGlCC,EAAcrB,EAAO7uB,MAAQymB,EAC7B0J,EAAsB1B,EAAaA,EAAahI,EAASyJ,EACzD1c,EAAmB,OAAVoc,QAAU,IAAVA,IAAe,SAAAQ,GAKvB,IAJHhK,EAAGgK,EAAHhK,IACAiI,EAAM+B,EAAN/B,OACAgC,EAAcD,EAAdC,eACAC,EAAUF,EAAVE,WAEAlK,EAAImB,SAAS8G,EAAQiC,EAAYD,IAG/BE,GAAkBL,EAAcC,GAAuB,EACvDK,EAAiBL,EAAsBf,EAC7ChJ,EAAIqK,MAAM,EAAGt1B,GACbqY,EAAO,CACH4S,MACAiI,SACAiC,WAAY/J,EAAOE,EAAS8J,EAAiBC,EAC7CH,gBAAiB7J,EAAWwJ,GAAoB70B,IAEpDirB,EAAIqK,MAAM,EAAG,EAAIt1B,ICjNRu1B,GAAe,SAAC//B,GAAgD,IAAlCggC,EAAoBvnB,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,IAAAA,UAAA,GACrDwnB,EAAQD,EACR,IAAIxwB,OAAO,KAADT,OAAMsD,GAAgB,QAAAtD,OAAOc,GAAY,cAAAd,OAAae,GAAa,YAC7E,IAAIN,OAAO,KAADT,OAAMsD,GAAgB,OAAAtD,OAAMc,GAAY,gBAAAd,OAAee,GAAa,WAEpF,OAAO9P,EACF8X,MAAMmoB,GACN9b,QAAO,SAAA3F,GAAK,OAAa,MAATA,GAA2B,KAAVA,MAG7B0hB,GAAgB,SACzBzK,EACArrB,EACA+1B,EACAC,GACE,IAEE92B,EAGA62B,EAHA72B,SAAQ+2B,EAGRF,EAFAj4B,wBAAgB,IAAAm4B,EAAG34B,EAAoBQ,iBAAgBm4B,EAAAC,EAEvDH,EADAv4B,yBAAiB,IAAA04B,EAAG54B,EAAoBE,kBAAiB04B,EAGzDh9B,EAOA8G,EAPA9G,KACAoF,EAMA0B,EANA1B,YACAC,EAKAyB,EALAzB,WACAC,EAIAwB,EAJAxB,gBAAe23B,EAIfn2B,EAHAiD,kBAAU,IAAAkzB,EAAGj9B,EAAIi9B,EAAAC,EAGjBp2B,EAFAkD,uBAAe,IAAAkzB,EAAG,EAACA,EACnBh4B,EACA4B,EADA5B,aAGAi4B,EAAmBL,EAAe/b,cAYlCqc,EAAmBN,EAAe/b,cAYlCsc,EAAoBP,EAAe/b,cAoBnCuc,EAAqBR,EAAe/b,cAqBpCwc,EAAuBT,EAAe/b,cAS1C,MAAO,CACHyc,gBA1EoB,WACpBL,EAAmBL,EAAe/b,cAClCoR,EAAInyB,KAAO88B,EAAetb,UAAUzX,GAAYsX,QAAQrb,EAAWgE,GAAiB4W,WAwEnE6c,oBAtEO,WACxBtL,EAAInyB,KAAO88B,EACNtb,UAAU2b,EAAiBxc,QAC3BU,QAAQ8b,EAAiB3c,MACzBI,WAmEL8c,gBAVoB,WAAoB,IAAnBC,EAASxoB,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACjCooB,EAAuBT,EAAe/b,cACtCoR,EAAInyB,KAAO88B,EAAezb,QAAQrb,EAAW23B,GAAW/c,WAQvCgd,oBANO,WACxBzL,EAAInyB,KAAO88B,EAAezb,QAAQkc,EAAqB/c,MAAMI,WAM7Did,gBAhEoB,WACpBT,EAAmBN,EAAe/b,cAClCoR,EAAInyB,KAAO88B,EAAetb,UAAUnc,GAAYgc,QAAQrb,EAAWV,GAAiBsb,WA8DnEkd,oBA5DO,WACxB3L,EAAInyB,KAAO88B,EACNtb,UAAU4b,EAAiBzc,QAC3BU,QAAQ+b,EAAiB5c,MACzBI,WAyDLmd,iBArDqB,WACrBV,EAAoBP,EAAe/b,cACnCoR,EAAInyB,KAAO88B,EAAetb,UAAUpc,GAAaic,QAAQrb,EAAWpB,GAAkBgc,WAmDpEod,qBAjDO,WACzB7L,EAAInyB,KAAO88B,EACNtb,UAAU6b,EAAkB1c,QAC5BU,QAAQgc,EAAkB7c,MAC1BI,WA8CLqd,kBAlCsB,WAAmB,IAAlBC,EAAI/oB,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,IAAAA,UAAA,GAC3BmoB,EAAqBR,EAAe/b,cACpCoR,EAAInyB,KAAO88B,EAAetb,UAAUtc,GAAc8b,UAAUkd,EAAO,OAAS,IAAI7c,QAAQrb,EAAW1B,GAAmBsc,WAgCnGud,sBA9BO,WAC1BhM,EAAInyB,KAAO88B,EACNtb,UAAU8b,EAAmB3c,QAC7BK,UAAUsc,EAAmB3zB,QAC7B0X,QAAQic,EAAmB9c,MAC3BI,WA2BLwd,qBAzCyB,WAA6B,IAA5B5L,EAAMrd,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGjO,EAAMiO,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC/Cgd,EAAIqK,MAAMhK,EAAQtrB,IAyClBm3B,WAzBe,WAAkC,IAAjCC,EAAMnpB,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGopB,EAAMppB,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAGmpB,EACrCnM,EAAIqK,MAAM8B,EAAQC,IAyBlBC,WA/Ce,WACfrM,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,IA+ChCC,aAvBiB,WAAqB,IAApBC,EAAUxpB,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC/Bgd,EAAIqK,MAAM,EAAImC,EAAY,EAAIA,MA8BzBC,GAAa,SAACzM,EAA+BG,EAAcC,EAAkBxmB,EAAe8yB,GACrG,IAAMC,GAAgB/yB,EAAQ8yB,GAAc,EAC5C1M,EAAIO,YACJP,EAAI4M,IAAIzM,EAAOwM,EAAcvM,EAAWuM,EAAe,EAAGA,EAAc,EAAG,EAAIngB,KAAKqgB,IAAI,GACxF7M,EAAI8M,OACJ9M,EAAItyB,UAAY,EAChBsyB,EAAIne,YAAc,UAClBme,EAAIc,UAmBKiM,GAAkB,SAAH5rB,GAsBrB,IArBH6rB,EAAQ7rB,EAAR6rB,SAAUC,EAAa9rB,EAAb8rB,cACVC,EAAQ/rB,EAAR+rB,SAAUC,EAAmBhsB,EAAnBgsB,oBACVC,EAAWjsB,EAAXisB,YACAh7B,EAAe+O,EAAf/O,gBACAi7B,EAAUlsB,EAAVksB,WACArd,EAAK7O,EAAL6O,MACAsd,EAAWnsB,EAAXmsB,YACAC,EAAcpsB,EAAdosB,eACAlN,EAAMlf,EAANkf,OAcMmN,EAAiC,IAApBN,EAAS9qB,OACtBqrB,EAAmBN,EAAsBF,EAAgBM,EAC3DG,EAA2Bt7B,EAC3Bu7B,EAAiB,EAEjBF,GAAoB,IAEpBC,EAA2Bt7B,EAEtBq7B,GAAoB,MAEzBC,EAA2Bt7B,GAAmB,EACxC,EACkB,EAAlBA,EAEDq7B,GAAoB,KAEzBC,EAA2Bt7B,GAAmB,GACrB,EAAnBA,EAAqB,EACH,EAAlBA,GAINu7B,EAAiB,IACjBD,EAA2Bt7B,GAAmB,GACrB,EAAnBA,EAAqB,EACH,EAAlBA,IAENk7B,GAAgBjN,EAAS,GAAKA,EAAS,KACvCqN,EAA2Bt7B,GAG/B,IAAMw7B,EAA2BT,GAAwB9M,IAAWiN,EAC9DjN,GACMsN,GAAkBL,EAAe,EAAIK,GACvCD,GAA4BR,EAAS9qB,OAAS,GAClDyrB,EAA2BL,EAAa,GAAKP,EAAgBE,GAAuBD,EAAS9qB,OAC7F0rB,EAA2Bb,EAE3Bc,EAAgC,IAApBf,EAAS5qB,QAA8B,EAAbirB,EAAiBO,EAA2BX,EAClF,SACA,eACA36B,EAA8B,WAAdy7B,EAChBL,EACAG,EACAG,EAAkC,WAAdD,EACP,EAAbV,EAAiBO,EACjBE,EACAG,EAAgBX,EAChB9gB,KAAKR,IAAIgiB,EAAmBf,GAC5Be,EACAE,EAA4B,WAAdH,GACbH,EAA2BX,GAAiB,EAC7C,EACAkB,EAAU3hB,KAAKP,IACjBmhB,EACAE,EAAc9gB,KAAKR,IAAIkiB,EAAa,GAAKA,GAY7C,OATIle,GAAOnK,QAAQ6K,KAAK,mBAADpX,OACA0W,GACnB+d,EACAz7B,EACA,IACA46B,EAAUe,EAAeD,EACzBhB,EAAUC,EACVkB,GAEG,CACHd,aACA/6B,gBACA07B,oBACAC,gBAMAF,YAKAI,UACAC,eAA8B,WAAdL,EAAyBJ,EAAiB,IAcrDU,GAAmB,SAACC,EAAiBC,GAC9C,OAAOD,GAAW,EACZC,GAAU,EACN,GACkC,EAAlC/hB,KAAKP,KAAe,EAAXqiB,EAAcC,GAC3BA,GAAU,GAC4B,EAAlC/hB,KAAKP,IAAIqiB,GAAmB,EAAVC,GAClB,GCvPDC,GAAe,SAAfA,EAAYrtB,GAuBlB,IAtBH6e,EAAG7e,EAAH6e,IACOyO,EAAQttB,EAAf4H,MAAiB2lB,EAASvtB,EAATutB,UACjBrO,EAAMlf,EAANkf,OAAMsO,EAAAxtB,EACNytB,wBAAgB,IAAAD,EAAG,EAACA,EAAAE,EAAA1tB,EACpB7O,qBAAa,IAAAu8B,EAAG58B,EAAoBK,cAAau8B,EACjDnyB,EAAMyE,EAANzE,OACAoyB,EAAQ3tB,EAAR2tB,SAiBA,IAAK9O,IAAQyO,EAAU,MAAO,CAC1BM,WAAY,EACZC,eAAgB,GAChBC,WAAY,EACZC,YAAY,EACZC,SAAU,EACVC,QAAS,GA+Cb,IA9CE,IAEEC,EAGAP,EAHAO,YACA16B,EAEAm6B,EAFAn6B,SACA26B,EACAR,EADAQ,UAGA57B,EAIAiB,EAJAjB,aAAY67B,EAIZ56B,EAHAvB,wBAAgB,IAAAm8B,EAAG38B,EAAgC28B,EAAAC,EAGnD76B,EAFA+C,wBAAgB,IAAA83B,EAAG58B,EAAgC48B,EACnDl8B,EACAqB,EADArB,UAEEo3B,EAAe/1B,EAASpB,SAAS+7B,GAEnC17B,EAQA82B,EARA92B,kBACA1B,EAOAw4B,EAPAx4B,mBACA2B,EAMA62B,EANA72B,SAAQ47B,EAMR/E,EALAxyB,uBAAe,IAAAu3B,EAAG77B,EAAiB67B,EAAAC,EAKnChF,EAJAr4B,wBAAgB,IAAAq9B,EAAGz9B,EAAoBI,iBAAgBq9B,EAAA7E,EAIvDH,EAHAt4B,uBAAe,IAAAy4B,EAAG54B,EAAoBG,gBAAey4B,EACrDn4B,EAEAg4B,EAFAh4B,mBACAqF,EACA2yB,EADA3yB,kBAEE43B,GxB6BsB,GwB7BT97B,EAA4B+7B,EAQ3CnF,GAAczK,EAAKrrB,EAAU+1B,EAAc2E,GAN3CnD,EAAU0D,EAAV1D,WAAYK,EAAYqD,EAAZrD,aACZhB,EAAeqE,EAAfrE,gBAAiBE,EAAmBmE,EAAnBnE,oBACjBK,EAAiB8D,EAAjB9D,kBAAmBE,EAAqB4D,EAArB5D,sBACnBJ,EAAgBgE,EAAhBhE,iBAAkBC,EAAoB+D,EAApB/D,qBAClBH,EAAekE,EAAflE,gBAAiBC,EAAmBiE,EAAnBjE,oBACjBN,EAAeuE,EAAfvE,gBAAiBC,EAAmBsE,EAAnBtE,oBAGf3K,EAAqB,EAAIruB,EAAgB,EAC3C08B,EAAiB,GACjBD,EAAa,EACbE,GAAa,EACbC,IAAa,EACX/G,QAA6BllB,IAAdyrB,EAEjBmB,GAAkC,OAAhBjB,QAAgB,IAAhBA,IAAoB,EAEtCkB,IAAa,EACbC,GAAc,EAEZC,GAbQvB,EAAS7oB,WAAW,IAAI7L,OAAOY,GAA6B,KAAM,IAarD0H,MAAMlI,IAAoBuU,QAAO,SAAAzT,GAAK,OAAa,MAATA,GAA2B,KAAVA,KAC7Eg1B,GAAM,EAAGA,GAAMD,GAAa5tB,OAAQ6tB,KAAO,CAChD,IAAMC,GAA6B,IAARD,GACrBE,GAAWH,GAAaC,IAG9B,GxBxHsB,WwBwHlBE,GACAN,GAAkB,EAElBd,GADsB72B,EAAkBmoB,EACVM,EAE1BuP,KACAH,GAAc,EACdf,EAAiBmB,GAAS,SAI7B,GxBtBgB,WwBsBZA,GAA4B,CACjCN,GAAkB,EAElBd,GADsBn7B,EAAoBysB,EACZM,EAE1BuP,KACAH,GAAc,EACdf,EAAiBmB,GAAS,SAI7B,GAAI,SAAMzc,KAAKyc,IAAW,CAC3BN,GAAkB,EAClBtE,EAAgBl5B,GAChB,IAAM+9B,GAAgBpQ,EAAIqB,YAAY8O,IAAUv2B,MAAQymB,EACxDoL,IACAsD,GAAcqB,GAAgBzP,EAE1BuP,KACAH,GAAc,EACdf,EAAiBmB,GAAS,SAI7B,GAAI50B,GAAqBmY,KAAKyc,IAAW,CAC1CN,GAAkB,EAClBjE,IACA,IAAMwE,GAAgBpQ,EAAIqB,YAAY8O,IAAUv2B,MAAQymB,EACxDwL,IACAkD,GAAcqB,GAAgBzP,EAE9BsO,IAAc,EACViB,KACAH,GAAc,EACdf,EAAiBmB,GAAS,SAI7B,GAAIxzB,GAAW+W,KAAKyc,IAAW,CAAC,IAADE,GACYF,GAASvqB,WAAW,OAAQ,IAAIvD,MAAM,SAAQiuB,GAAAx3B,YAAAu3B,GAAA,GAAnFrD,GAAQsD,GAAA,GAAEC,GAAQD,GAAA,GAAAE,GAAAF,GAAA,GAAEpD,QAAQ,IAAAsD,GAAG,GAAEA,GAClClD,GAA2B,OAAbiD,GAGJtD,GACZuB,EAAa,CAAExO,MAAKjX,MAAOikB,GAAU0B,YAAWrO,SAAQ/tB,gBAAes8B,iBAAkB,EAAGlyB,SAAQoyB,aADpGC,WAIJjD,IACA,IAAMqB,GAAsBD,GACvB7qB,MAAM,IACNrH,KAAI,SAAAitB,GAAM,OAAIF,GAAe,CAAE/H,MAAKiI,SAAQ30B,YAAWI,aAAc,WAAY2sB,OAAQ,IAAKgI,cAC9F72B,QAAO,SAACC,EAAKC,GAAG,OAAKD,EAAMC,IAAK,GACrCs6B,IAEoB,IAApByE,GACgD1D,GAAgB,CAC5DG,YACAC,oBAAqBA,GAAsB9M,EAC3C2M,YACAC,iBACAG,YAAauC,EAAatP,EAC1BjuB,kBACAi7B,WAAYj6B,EAAmBS,EAAWwsB,EAC1CiN,eACAC,eAAgBlN,EAChBA,OAA8B,aAArB3oB,GAAmCs1B,GAAS5qB,OAAS,EAAKoK,KAAKR,IAAI,EAAGqU,ExB/E/D,IwB+E4F,IAV/F6N,GAAWuC,GAApBtC,QAAsBF,GAAawC,GAAbxC,cAYxBE,GAA8B,IAApBjB,GAAS9qB,OACnBoK,KAAKP,IAAI0jB,EAAY1C,GAAgBpwB,IACrCqxB,GACAkB,GAAUjB,GACVgB,GAAWhB,GACX9F,GAAa7b,KAAKP,IAAIgiB,GAAehB,IACrCyD,GAAgBrC,GAAiBwB,GAAiBT,IAExDS,GAAkBV,GAClBJ,GAAc1G,GAAaqI,GAC3BzB,IAAc,EAEViB,KACAJ,IAAa,EACbC,GAAcX,GACdJ,EAAiBhC,GAAS,SAI7B,GAAI9yB,GAAewZ,KAAKyc,IAAW,CAEpC,IAAMQ,GAA6B54B,EAC7B,EAAIA,EAAoB,EACxB4oB,EACNX,EAAI1tB,cAAa,GAAAgH,QAAOq3B,GAA6B,GAAKtB,EAAYzgB,cAAcN,aAAY,MAShG,IAPA,IAAIsiB,GAAiBT,GACjBC,GAAgB,EAMM,KAAnBQ,IAAuB,CAC1B,IAAIC,GAAgBD,GAAe,GAC/BE,GAAqBF,GAAe3d,MAAM,GAC1CkW,GAAoBnJ,EAAIqB,YAAYuP,IAAgBh3B,MAAQomB,EAAIqB,YAAYyP,IAAoBl3B,MAEhGI,GAAyB0Z,KAAKmd,KAC9B3E,EAAWx5B,GACXy2B,GAAoBnJ,EAAIqB,YAAYuP,IAAgBh3B,MAAQomB,EAAIqB,YAAYyP,IAAoBl3B,MAChG2yB,EAAa75B,IAGRoH,GAAmB4Z,KAAKmd,KAC7B3E,EAAWh6B,GACXi3B,GAAoBnJ,EAAIqB,YAAYuP,IAAgBh3B,MAAQomB,EAAIqB,YAAYyP,IAAoBl3B,MAChG2yB,EAAar6B,IAGRwJ,GAAYgY,KAAKmd,KACtBxF,IACAlC,GAAoBnJ,EAAIqB,YAAYuP,IAAgBh3B,MAAQomB,EAAIqB,YAAYyP,IAAoBl3B,MAChG0xB,KAGKxwB,GAAqB4Y,KAAKmd,KAAgC,QAAdv9B,GACjDo4B,IACAvC,GAAoBnJ,EAAIqB,YAAYuP,IAAgBh3B,MAAQomB,EAAIqB,YAAYyP,IAAoBl3B,MAChG+xB,KAIAxC,GAAoBnJ,EAAIqB,YAAYuP,IAAgBh3B,MAAQomB,EAAIqB,YAAYyP,IAAoBl3B,MAEpGw2B,IAAiBjH,GACjByH,GAAiBE,GAGrB,IAAM1B,GAAU5iB,KAAKP,IAAI0jB,EAAYS,GAAgBvzB,IAC/CsyB,GAAWC,GAGjBL,GAAcqB,GAFQ/B,GAAiBwB,GAAiBT,IAGxDS,GAAkBV,GAEde,KACAH,GAAcX,GACdJ,EAAiBmB,GAAS,IAE9BnQ,EAAI1tB,cAAgB,WAGnB,GAAIwI,GAAqB4Y,KAAKyc,KAA2B,QAAd78B,EAAqB,CACjEo4B,IACA,IAAM0E,GAAgBpQ,EAAIqB,YAAY8O,IAAUv2B,MAAQ+mB,EACxDgL,IAEA,IAAMyD,GAAU5iB,KAAKP,IAAI0jB,EAAYS,GAAgBvzB,IAC/CsyB,GAAWC,GAGjBL,GAAcqB,GAFQ/B,GAAiBwB,GAAiBT,IAGxDS,GAAkBV,GAEde,KACAH,GAAcX,GACdJ,EAAiBmB,GAAS,QAG7B,CAAC,IAEIC,GADiBrI,GAAe,CAAE/H,MAAKiI,OAAQkI,GAAUhI,gBAAc70B,YAAWI,eAAc2sB,WAA9FgI,WAC2B1H,EAC7ByO,GAAU5iB,KAAKP,IAAI0jB,EAAYS,GAAgBvzB,IAC/CsyB,GAAWC,GAGjBL,GAAcqB,GAFQ/B,GAAiBwB,GAAiBT,IAGxDS,GAAkBV,IAEF,QAAXzyB,GAAgC,QAAXA,GAAoB,MAAMgX,KAAKyc,OAClB,IAAhCp0B,GAAa2X,KAAKyc,MAErBlB,IAAc,EACVgB,KAAQD,GAAa5tB,OAAS,IAAG8sB,IAAa,IAElDgB,KACAH,GAAcX,GACdJ,EAAiBmB,GAAS,IAE1Bj0B,GAAsBwX,KAAKyc,MAC3BJ,GAAc,EACdF,GAAkB,IAK9B,MAAO,CACHd,aACAE,cACAC,cACAF,iBACAG,SAAUU,GACVT,QAASW,GACTD,gBClUKiB,GAAiB,SAAH5vB,GAgBpB,IAfH6e,EAAG7e,EAAH6e,IACA9T,EAAM/K,EAAN+K,OACA8kB,EAAa7vB,EAAb6vB,cAAaC,EAAA9vB,EACb+vB,2BAAmB,IAAAD,EAAG,EAACA,EACvBr3B,EAAKuH,EAALvH,MACA8C,EAAMyE,EAANzE,OACAoyB,EAAQ3tB,EAAR2tB,SAUQn6B,EAAwBm6B,EAAxBn6B,SAAU26B,EAAcR,EAAdQ,UACVh9B,EAAkBqC,EAASpB,SAAS+7B,GAApCh9B,cACF6+B,EAAyG,GACzGC,EAAmBJ,EAAcx/B,QAAO,SAAC6/B,EAAsBC,GAWjE,IATA,IAAMC,GAAcrlB,GAAU,IAAM,IAAMA,GAAU,IAC9CslB,EAAc53B,EAAQ23B,EACtBE,EAAYnH,GAAagH,GAAM,GACjCI,EAAiB,EACjBC,EAAqB,GACrBC,EAAmB,EACnBC,EAAa,EACbC,EAAmB,EAEd7B,EAAM,EAAG5P,EAASkR,EAAYtB,EAAMwB,EAAUrvB,OAAQ6tB,IAAO,CAClE,IAAMlnB,EAAQ0oB,EAAUxB,GAClBvB,EAAY+C,EAAUxB,EAAM,GAK9BlnB,IAAUvO,IACVs3B,GAAoB,EACpBzR,EAAS,GACFtX,IAAUtO,KACjBq3B,GAAoB,EACpBzR,EAASkR,GACZ,IAAAQ,EAMGvD,GAAa,CAAExO,MAAKjX,QAAO2lB,YAAWrO,SAAQuO,iBAAkBiD,EAAYn1B,SAAQpK,gBAAew8B,aAJnGE,EAAc+C,EAAd/C,eACAD,EAAUgD,EAAVhD,WACAI,EAAQ4C,EAAR5C,SACAC,EAAO2C,EAAP3C,QASA4C,EAAajD,GAAc+C,EAAmB,EAAIP,EAAa,IAJ5C,IAARtB,GACRb,EAAU,GAA2D,EAAvD5iB,KAAKR,IzB+CC,GyB/C6BqU,EAAQ+O,GAAgB,IACrE5zB,GAAiBkY,KAAKsb,GzB+CA,EyB/CkD,GAC7E,GAGN,GAAI4C,EAAmBI,EAAaR,EAAa,CAC7C,IAAIS,EAAON,EAASp4B,KAAK,IAAIikB,OACzBsU,EAAmB,IAAGG,GAAcx3B,IACpCq3B,EAAmB,IAAGG,EAAOz3B,GAAwBy3B,GACzDH,EAAmB,EACnBX,EAAgBe,KAAK,CACjBD,OACA5kB,gBAAiBnB,EACjBimB,QAAQ,EACRC,gBAAiBR,IAEmP,IAAxQS,EAKI7D,GAAa,CAAExO,MAAKjX,QAAO2lB,YAAWrO,SAAQuO,iBAAkB,EAAGlyB,SAAQoyB,aAH3EC,EAAUsD,EAAVtD,WACAI,EAAQkD,EAARlD,SACAC,EAAOiD,EAAPjD,QAMJwC,EADiB7C,IAFDK,EAAU,GAA2D,EAAvD5iB,KAAKR,IzBwBZ,GyBxB0CqU,EAAQ+O,GAAgB,IAClF5zB,GAAiBkY,KAAKsb,GzBwBA,EyBxBkD,IAG/E6C,EAAa1C,EACbwC,EAAW,CAAC5oB,GACZ2oB,GAAkB,OAElBE,GAAoBI,EACpBH,EAAa1C,EACbwC,EAASO,KAAKnpB,GAKtB,IAAIkpB,EAAON,EAASp4B,KAAK,IAAIikB,OAW7B,OAVIsU,EAAmB,IAAGG,GAAcx3B,IACpCq3B,EAAmB,IAAGG,EAAOz3B,GAAwBy3B,GACzDH,EAAmB,EACnBX,EAAgBe,KAAK,CACjBD,OACA5kB,gBAAiBnB,EACjBimB,QAAQ,EACRC,gBAAiBR,IAGdP,EAAuBK,IAC/B,IAAyB,OAAnBR,QAAmB,IAAnBA,IAAuB,GAEhC,MAAO,CAAEC,kBAAiBC,qBCxGjBkB,GAAe,SAAHnxB,GAgClB,IA/BH6e,EAAG7e,EAAH6e,IACAnsB,EAAQsN,EAARtN,SACAssB,EAAIhf,EAAJgf,KAAMC,EAAQjf,EAARif,SACN8M,EAAQ/rB,EAAR+rB,SAAUC,EAAmBhsB,EAAnBgsB,oBACVH,EAAQ7rB,EAAR6rB,SAAUC,EAAa9rB,EAAb8rB,cACVG,EAAWjsB,EAAXisB,YACAh7B,EAAe+O,EAAf/O,gBACAY,EAAmBmO,EAAnBnO,oBACA2E,EAAYwJ,EAAZxJ,aACAvE,EAAgB+N,EAAhB/N,iBACAitB,EAAMlf,EAANkf,OACA/sB,EAAS6N,EAAT7N,UACAi/B,EAAUpxB,EAAVoxB,WACAjF,EAAWnsB,EAAXmsB,YACA51B,EAAgByJ,EAAhBzJ,iBAkBQo0B,EAAqEyG,EAArEzG,kBAAmBE,EAAkDuG,EAAlDvG,sBAAuBK,EAA2BkG,EAA3BlG,WAAYH,EAAeqG,EAAfrG,WAExDsG,EAA+C,aAArB96B,GAAmCs1B,EAAS5qB,OAAS,EAC/EoK,KAAKR,IAAI,EAAGqU,E1BoEU,I0BnEtB,EAAEoQ,EAQJ1D,GAAgB,CAChBG,WAAUC,sBACVH,WAAUC,cAAeA,EAAgB5M,EACzC+M,cAAah7B,gBAAiBA,EAAkBiuB,EAChDgN,WAAYx5B,EAAWT,EACvBk6B,cACAC,eAAgBlN,EAChBA,OAAQmS,IAbRnF,EAAUoD,EAAVpD,WACA/6B,EAAam+B,EAAbn+B,cACA07B,EAAiByC,EAAjBzC,kBACAG,EAAOsC,EAAPtC,QACAJ,EAAS0C,EAAT1C,UACAK,EAAcqC,EAAdrC,eAUEqE,EAAWzE,EAAoBf,EAAgB5M,EAErD,GAAwB,IAApB6M,EAAS9qB,OAAc,MAAO,CAC9B4rB,oBACAG,WAIJ,IAAMuE,EAAqBpF,EACrB9gB,KAAKR,IAAI,EAAGihB,EAAgB5M,EAAS2N,GACrC,EAGA2E,EAAiBrF,EACjBoF,EACCF,GAAwC,WAAdzE,EACvByE,EACApE,EAENwE,EAAczS,EAClBkM,KACIiB,GAAeqF,KACfzG,EAAWyG,EAAgB,GAC3BC,EAAczS,EAAOwS,GAGP,WAAd5E,GACA6E,GAAevF,EAEVoF,EAEME,EAAiBD,IACxBE,IAAgB3F,EAAgB5M,EAASsS,EAAiB3E,GAAqB,EAAI2E,GAFnFC,IAAgB3F,EAAgB5M,EAAS2N,GAAqB,GAKlE4E,GAAetgC,EAAgB,EAClC,IAE4BgQ,EAF5BC,EAAAC,aAEoB0qB,GAAQ,IAA7B,IAAA3qB,EAAAE,MAAAH,EAAAC,EAAAL,KAAAQ,MAA+B,CAAC,IAArBulB,EAAM3lB,EAAA3V,MAEbm/B,IAAoB,IAAA+G,EACU9K,GAAe,CAAE/H,MAAKiI,SAAQ30B,YAAWI,aAAc,WAAY2sB,OAAQ,IAAjGzmB,EAAKi5B,EAALj5B,MAAOyuB,EAAUwK,EAAVxK,WACT8B,GAAkBvwB,EAAQyuB,GAAc,EAC9C2D,IAEAF,EAAkBn0B,GAClBqoB,EAAImB,SAAS8G,EAAQ2K,EAAczI,EAAgB/J,EAAWvsB,EAAWb,GACzEg5B,IACA4G,GAAgBvK,EAAa/1B,GAChC,MAAAuQ,GAAAN,EAAAN,EAAAY,GAAA,QAAAN,EAAAO,IAMD,OALIwqB,GAAeqF,IACftG,IAEJH,EAAW7L,EAAQ,GAEZ,CACH2N,oBACAG,YC5EK2E,GAAW,SAAXA,EAAQ3xB,GAwEjB,IAlDG,IArBH6e,EAAG7e,EAAH6e,IACAyR,EAAStwB,EAATswB,UACAlhC,EAAQ4Q,EAAR5Q,SAAUD,EAAY6Q,EAAZ7Q,aAAYyiC,EAAA5xB,EACtB6xB,kBAAU,IAAAD,EAAG,EAACA,EACNxB,EAAUpwB,EAAlBkf,OAAM4S,EAAA9xB,EAAcpM,cAAM,IAAAk+B,EAAG,EAACA,EAC9BnE,EAAQ3tB,EAAR2tB,SACApyB,EAAMyE,EAANzE,OACA8sB,EAAUroB,EAAVqoB,WAAU0J,EAAA/xB,EACV6O,aAAK,IAAAkjB,GAAQA,EAeT7D,EAGAP,EAHAO,YACA16B,EAEAm6B,EAFAn6B,SACA26B,EACAR,EADAQ,UAEE5E,EAAe/1B,EAASpB,SAAS+7B,GAEnChyB,EAQA3I,EARA2I,kBAAiB61B,EAQjBx+B,EAPAgD,oBAAY,IAAAw7B,EAAGvgC,EAA4BugC,EAAAC,EAO3Cz+B,EANA3B,2BAAmB,IAAAogC,EAAGxgC,EAAmCwgC,EAAA5D,EAMzD76B,EALA+C,wBAAgB,IAAA83B,EAAG58B,EAAgC48B,EAAAD,EAKnD56B,EAJAvB,wBAAgB,IAAAm8B,EAAG38B,EAAgC28B,EACnD77B,EAGAiB,EAHAjB,aACAJ,EAEAqB,EAFArB,UAAS+/B,EAET1+B,EADAC,0BAAkB,IAAAy+B,EAAG,GAAEA,EAGvBz/B,EAUA82B,EAVA92B,kBAAiB0/B,EAUjB5I,EATAx4B,0BAAkB,IAAAohC,EAAGrhC,EAAoBC,mBAAkBohC,EAC3Dz/B,EAQA62B,EARA72B,SAAQg3B,EAQRH,EAPAt4B,uBAAe,IAAAy4B,EAAG54B,EAAoBG,gBAAey4B,EAAA4E,EAOrD/E,EANAxyB,uBAAe,IAAAu3B,EAAG77B,EAAiB67B,EAAAC,EAMnChF,EALAr4B,wBAAgB,IAAAq9B,EAAGz9B,EAAoBI,iBAAgBq9B,EAAA6D,EAKvD7I,EAJAp4B,qBAAa,IAAAihC,EAAGthC,EAAoBK,cAAaihC,EAAA3I,EAIjDF,EAHAl4B,0BAAkB,IAAAo4B,EAAG34B,EAAoBO,mBAAkBo4B,EAAA4I,GAG3D9I,EAFAh4B,2BAAkB,IAAA8gC,GAAGvhC,EAAoBS,mBAAkB8gC,GAC3Dz7B,GACA2yB,EADA3yB,kBAEEw6B,GAAa9H,GAAczK,EAAKrrB,EAAU+1B,EAAc2E,GAE1DrD,GAOAuG,GAPAvG,sBAAuBF,GAOvByG,GAPuBzG,kBACvBL,GAMA8G,GANA9G,oBAAqBF,GAMrBgH,GANqBhH,gBACrBD,GAKAiH,GALAjH,oBAAqBD,GAKrBkH,GALqBlH,gBACrBQ,GAIA0G,GAJA1G,qBAAsBD,GAItB2G,GAJsB3G,iBACtBM,GAGAqG,GAHArG,WAAYK,GAGZgG,GAHYhG,aACZb,GAEA6G,GAFA7G,gBAAiBC,GAEjB4G,GAFiB5G,oBACjBM,GACAsG,GADAtG,qBAAsBI,GACtBkG,GADsBlG,WAGpB1L,GAAqB,EAAIruB,EAAgB,EACzC8tB,GAAW9vB,EAAeyE,EAC5B65B,GAAmB,EACnB6E,GAAuE,GACvEC,GAA+B,EAC/BC,GAAYpjC,EAKPqjC,GAAW,EAAGvT,GAASkR,EAAYqC,GAAWnC,EAAUrvB,OAAQwxB,KAAY,CACjF,IAAM7qB,GAAQ0oB,EAAUmC,IAExB,GAAI7qB,KAAUvO,GAKT,GAAIuO,KAAUtO,GAAd,CA2CL,IAtCA,IAAMo5B,I3BZkB,G2BYYxT,GAC9BsP,GAAa97B,EAAWggC,GACxBnF,GAAY+C,EAAUmC,GAAW,GACjCE,GAAerC,EAAUmC,GAAW,GACpCG,GAAwB,CAC1B/T,MACAK,UACA/tB,gBACAoK,SACAoyB,YAEEkF,GAAsB,CACxBhU,MACAI,YACAC,UACAmJ,cAEEwG,GAAejnB,GAAM1G,MAAMlI,IAAoBuU,QAAO,SAAAzT,GAAK,OAAa,MAATA,GAA2B,KAAVA,KACtF82B,GAOIvD,GAAYxiC,YAAC,CACb+c,SAAO2lB,aAAWE,iBAAkBA,GAAmBvO,IAAW0T,KANlE/E,GAAc+C,GAAd/C,eACAI,GAAO2C,GAAP3C,QACU6E,GAAalC,GAAvB5C,SACY+E,GAAenC,GAA3BhD,WACAE,GAAU8C,GAAV9C,WAMEkF,GAAsB,IAAbP,IACRxE,GAAU,GAA2D,EAAvD5iB,KAAKR,I3BpDK,G2BoDwBojB,GAAU/O,IAAe,IACrE7kB,GAAiBkY,KAAKsb,I3BpDI,E2BoD8C,GAC7E,EACFoF,GAAeT,GAAYQ,GAC3BtE,GAAkBjB,GAGbyF,GAAc,EAAGA,GAAcrE,GAAa5tB,OAAQiyB,KAAe,CAAC,IAADC,GAAAC,GAClEpE,GAAWH,GAAaqE,IACxBG,GAA4C,QAAhCF,GAAGtE,GAAaqE,GAAc,UAAE,IAAAC,MAAI5F,GAChD+F,GAA4C,QAA7BF,GAAGvE,GAAa4D,GAAW,UAAE,IAAAW,MAAIT,GAGtD,GAAI/qB,KAAUvO,IAAyBuO,KAAUtO,SAE5C,G3BnLa,W2BmLT01B,GACLsD,GAAiBvB,KAAK,CAAE/R,KAAMiU,GAAc/lB,KAAMnW,EAAiBkoB,cACnEgU,IAAgBl8B,EAAkByoB,GAClCkP,GAAkB,EAClB6D,GAA+B,OAG9B,G3B7EY,W2B6ERvD,GACL9D,KACAI,GAAWzM,EAAKoU,GAAc9jC,EAAcsD,EAAmB6I,GAAiBC,IAChF03B,IAAgBxgC,EAAoB+sB,GACpCsL,GAAqB5L,GAAQtrB,GAE7B86B,GAAkB,EAClB6D,GAA+B,OAG9B,GAAI,SAAMhgB,KAAKyc,IAChB9D,KACAd,GAAgBl5B,GAChB+2B,GAAUp9B,wBAAC,GACJgoC,IAAmB,IACtB/L,OAAQkI,GACRhQ,KAAMiU,GAAe/T,GACrBD,SAAU9vB,EAAmC,KAEjD8jC,IAAgBpU,EAAIqB,YAAY8O,IAAUv2B,MAAQ+mB,GAClD8K,KACAQ,GAAqB5L,GAAQtrB,GAE7B86B,GAAkB,EAClB6D,GAA+B,OAG9B,GAAIn4B,GAAqBmY,KAAKyc,IAC/B9D,KACAT,KACAxC,GAAUp9B,wBAAC,GACJgoC,IAAmB,IACtB/L,OAAQkI,GACRhQ,KAAMiU,GAAe/T,GACrBD,SAAU9vB,EAAekC,KAE7B4hC,IAAgBpU,EAAIqB,YAAY8O,IAAUv2B,MAAQ+mB,GAClDkL,KACAI,GAAqB5L,GAAQtrB,GAE7Bq/B,IAAgBpB,EAChBnD,GAAkB,EAClB6D,GAA+B,OAG9B,GAAI/2B,GAAW+W,KAAKyc,IAAW,CAAC,IAADE,GACYF,GAASvqB,WAAW,OAAQ,IAAIvD,MAAM,SAAQiuB,GAAAx3B,YAAAu3B,GAAA,GAAnFrD,GAAQsD,GAAA,GAAEC,GAAQD,GAAA,GAAAE,GAAAF,GAAA,GAAEpD,QAAQ,IAAAsD,GAAG,GAAEA,GAClClD,GAA2B,OAAbiD,GAEAtD,GAAkBuB,GAAYxiC,YAAC,CAC/C+c,MAAOikB,GAAU0B,UAAW8F,GAC5B5F,iBAAkB,GACfmF,KAHChF,WAORjD,KACA,IAAMqB,GAAsBD,GACvB7qB,MAAM,IACNrH,KAAI,SAAAitB,GAAM,OAAIF,GAAe,CAAE/H,MAAKiI,SAAQ30B,YAAWI,aAAc,WAAY2sB,OAAQ,IAAKgI,cAC9F72B,QAAO,SAACC,EAAKC,GAAG,OAAKD,EAAMC,IAAK,GACrCs6B,KAEqG,IAArGyE,GAII1D,GAAgB,CAChBG,YACAC,uBACAH,YACAC,cAAeA,GAAgB5M,GAC/B+M,YAAauC,GACbv9B,gBAAiBA,EAAkBiuB,GACnCgN,WAAYx5B,EAAWT,EACvBk6B,eACAC,eAAgBlN,GAChBA,OAA8B,aAArB3oB,GAAmCs1B,GAAS5qB,OAAS,EAAKoK,KAAKR,IAAI,EAAGqU,G3BlJnE,I2BkJgG,IAZ5G4N,GAAawC,GAAbxC,cACSC,GAAWuC,GAApBtC,QAaEA,GAA8B,IAApBjB,GAAS9qB,OACnBoK,KAAKP,IAAI0jB,GAAY1C,GAAgB4G,IACrC3F,GACAiB,GAAWhB,GACXiB,GAAUjB,GAEVuC,GAAgBrC,GAAiBwB,GAAiBT,IAClDsF,GAAkBtF,GAAU,EAAIA,GAAUsB,GAAgB,EAAEiE,GAK9DnG,GAAYxiC,YAAC,CACb+c,MAAOyrB,GAAc9F,UAAW+F,GAChC7F,iBAAkBO,GAAW9O,IAC1B0T,KALSa,GAAqBD,GAAjC7E,WAOE+E,GAN8BF,GAAhCvF,QAM0C/O,GACxCyU,GAAiBzG,GAAiBc,GAAU0F,IAE5CE,GAAmBL,IADAvF,GAAW,EAAIA,GAAW2F,GAAiB,GAEhEE,GAAkB,EAClBC,GAA2B,EAG3BF,GAAmB,GAAKF,KAAgB,GAAKD,IAC7CI,IAAmBD,GAA8C,EAA3BvoB,KAAKP,IAAI4oB,GAAa,IAAU,EACtEI,GAA2BzoB,KAAKP,IAAI4oB,GAAa,GAAKG,IAGtDA,GAAkBN,GAEtB,IAAMQ,GAAuBd,IACtBjG,GAAU,GAAKuC,GAAiByD,IAAUA,GAASa,IACpDtB,GACNA,GAA+BuB,GAG/BnC,EAAS,CACL9S,MACAtjB,SACAoyB,WACA2C,UAAWnH,GAAa0C,IACxB18B,aAAc8vB,GACd7vB,SAAU2kC,GACV7U,UACAtrB,SACAi+B,WAAY,EACZxJ,aACAxZ,OAAO,IAIX,IAAMsQ,GAAmBN,EAAIzyB,UACvB4nC,GAAqBnV,EAAIne,YACzBuzB,GAAqBpV,EAAIxxB,YACzB6mC,GAAuBrV,EAAItxB,cAC3B4mC,GAAuBtV,EAAIvxB,cAC3B8mC,GAAoBvV,EAAIrxB,WAC1B2O,IACA0iB,EAAIzyB,UAAY+P,EAChB0iB,EAAIne,YAAc,GAClBme,EAAIxxB,YAAc,GAClBwxB,EAAItxB,cAAgB,EACpBsxB,EAAIvxB,cAAgB,EACpBuxB,EAAIrxB,WAAa,GAIrB2jC,GAAa,CACTtS,MACAnsB,WACAssB,KAJyBiU,GAAe1D,GAIZtQ,YAC5B8M,YAAUC,uBACVH,YAAUC,iBACVG,YAAauC,GACbv9B,kBACAY,sBACA2E,eACAvE,mBACAitB,UACA/sB,YACAi/B,cACAjF,eACA51B,qBAGJsoB,EAAIzyB,UAAY+yB,GAChBN,EAAIne,YAAcszB,GAClBnV,EAAIxxB,YAAc4mC,GAClBpV,EAAItxB,cAAgB2mC,GACpBrV,EAAIvxB,cAAgB6mC,GACpBtV,EAAIrxB,WAAa4mC,GAEjBnB,IAAgB5nB,KAAKP,IAAIghB,GAAgB5M,GAAQ4N,IAAiByC,GAAgBsC,EAClFnD,GAAkBV,QAGjB,GAAIj1B,GAAewZ,KAAKyc,IAAW,CACpC,IAAMQ,GAA6B54B,GAC7B,EAAIA,GAAoB,EACxB4oB,GACNX,EAAI1tB,cAAa,GAAAgH,QAAOq3B,GAA6B,GAAKtB,EAAYzgB,cAAcN,aAAY,MAgBhG,IATA,IAAMknB,GAAqBxV,EAAIqB,YAAY8O,IAAUv2B,MAAQymB,GACvD+O,GAAU5iB,KAAKP,IAAI0jB,GAAY6F,GAAqB3B,IACpD1E,GAAWC,GAKbwB,GAAiBT,GACjBsF,GAJJrB,IADsB/F,GAAiBwB,GAAiBT,IAM9B,KAAnBwB,IAAuB,CAC1B,IAAIC,GAAgBD,GAAe,GAC/BE,GAAqBF,GAAe3d,MAAM,GAC1CkW,GAAoB,EAClBuM,GAAyB1pC,wBAAA,GACxBgoC,IAAmB,IACtB1K,UAAW10B,EAAmBi8B,IAC9B5I,OAAQ4I,GACR1Q,KAAMsV,KAEV,GAAIz7B,GAAyB0Z,KAAKmd,IAC9B3E,GAAWx5B,IACXy2B,GAAoBnJ,EAAIqB,YAAYuP,IAAgBh3B,MAAQomB,EAAIqB,YAAYyP,IAAoBl3B,MAChGwvB,GAAUp9B,wBAAC,GACJ0pC,IAAyB,IAC5BvV,KAAMsV,GAAkB/iC,GACxB0tB,SAAUA,GAAW1tB,MAEzB65B,GAAa75B,SACV,GAAIoH,GAAmB4Z,KAAKmd,IAAgB,CAC/C3E,GAAWh6B,GAEX,IAAMyjC,IADNxM,GAAoBnJ,EAAIqB,YAAYuP,IAAgBh3B,MAAQomB,EAAIqB,YAAYyP,IAAoBl3B,OACtDomB,EAAIqB,YAAYwP,IAAej3B,MAAQ1H,EAC3Esa,KAAKopB,MAAMzM,IAAqB,EAAIj3B,IAAuB,EAC3D,EACNk3B,GAAUp9B,wBAAC,GACJ0pC,IAAyB,IAC5BvV,KAAMsV,GAAkBvjC,EAAqByjC,GAC7CvV,SAAUA,GAAWluB,KAEzBq6B,GAAar6B,QACNwJ,GAAYgY,KAAKmd,KACxBxF,KACAlC,GAAoBnJ,EAAIqB,YAAYuP,IAAgBh3B,MAAQomB,EAAIqB,YAAYyP,IAAoBl3B,MAChGwvB,GAAWsM,IACXpK,MACOxwB,GAAqB4Y,KAAKmd,KAAgC,QAAdv9B,GACnDo4B,KACAvC,GAAoBnJ,EAAIqB,YAAYuP,IAAgBh3B,MAAQomB,EAAIqB,YAAYyP,IAAoBl3B,MAChGwvB,GAAWsM,IACX/J,OAEAxC,GAAoBnJ,EAAIqB,YAAYuP,IAAgBh3B,MAAQomB,EAAIqB,YAAYyP,IAAoBl3B,MAChGwvB,GAAWsM,KAEfD,IAAmBtM,GAAoB9I,GACvCuQ,GAAiBE,GAGrBsD,GAAeqB,GACf5F,GAAkBV,GAClBuE,GAA+B,EAC/B1T,EAAI1tB,cAAgB,WAGnB,GAAIwI,GAAqB4Y,KAAKyc,KAA2B,QAAd78B,EAAqB,CACjE,IAAM20B,GAASkI,GACfzE,KAEA,IAAM5B,GAAc9J,EAAIqB,YAAY4G,IAAQruB,MAAQ+mB,GAAqBN,GACnE+O,GAAU5iB,KAAKP,IAAI0jB,GAAY7F,GAAc+J,IAC7C1E,GAAWC,GAGjBgF,IAFsB/F,GAAiBwB,GAAiBT,IAGxDhG,GAAUp9B,wBAAC,GAAKgoC,IAAmB,IAAE/L,UAAQ9H,KAAMiU,MACnDA,IAAgBtK,GAEhB6B,KAEAkE,GAAkBV,GAClBuE,GAA+B,MAG9B,CACD,IAAMzL,GAASkI,GACT5G,GAAexB,GAAe,CAChC/H,MACAiI,UACA30B,YACAI,eACAy0B,kBAA+BllB,IAAjBuxB,GACdnU,YAEEyJ,GAAcP,GAAalB,WAAa1H,GAAqBN,GAC7D+O,GAAU5iB,KAAKP,IAAI0jB,GAAY7F,GAAc+J,IAC7C1E,GAAWC,GAGjBgF,IAFsB/F,GAAiBwB,GAAiBT,IAGxDhG,GAAUp9B,wBAAC,GACJgoC,IAAmB,IACtB/L,UACA9H,KAAMiU,GACN9K,UAAW10B,EAAmBqzB,IAC9BsB,mBAEJ6K,IAAgBtK,IAEA,QAAXptB,GAAgC,QAAXA,GAAoB,MAAMgX,KAAKuU,OACpB,IAA9BlsB,GAAa2X,KAAKuU,MAErBmM,IAAgBpB,GAEf92B,GAAsBwX,KAAKuU,MAAS4H,GAAkBV,IAC3DuE,GAA+B,GAKvC9E,GAAmBqF,GAAgB5T,GAC/BrQ,GAAO+P,GAAW,CAAEC,MAAKI,YAAUD,KAAMwT,GAAW/5B,MAAOs6B,GAAkB7T,GAAQA,YACzFsT,IAAaO,GAAkB7T,GAAS4O,GAAa+D,EAAamB,QA9W9D9T,GAASkR,EACTvR,EAAIqK,MAAMhK,GAAQ,QANlBA,GAAS,EACTL,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAqXxC,MAAO,CACHqH,aACAF,sBChcKoC,GAAoB,SAC7BtrC,EACAmS,EACAkkB,GACE,IAakCte,EAbnCnB,EAKS,OAANyf,QAAM,IAANA,IAAU,GAAEkV,EAAA30B,EAHZ40B,iBAAS,IAAAD,GAAOA,EAAAE,EAAA70B,EAChBrB,sBAAc,IAAAk2B,GAAOA,EAAAC,EAAA90B,EACrB+0B,sBAAc,IAAAD,EAAG,WAAUA,EAEzBE,EAAsB,OAAJ5rC,QAAI,IAAJA,IAAQ,GAG5B6rC,EAAiB,GACjBC,EAA2B,QAAX35B,EACdtE,GACAC,GAAkBkK,EAAAC,aACH2zB,GAAe,IAApC,IAAA5zB,EAAAE,MAAAH,EAAAC,EAAAL,KAAAQ,MAAsC,CAAC,IAAD4zB,EAA3BrO,EAAM3lB,EAAA3V,MACbypC,GAAuC,QAAzBE,EAAID,EAAcpO,UAAO,IAAAqO,IAAIrO,GAI/C,MAAAplB,GAAAN,EAAAN,EAAAY,GAAA,QAAAN,EAAAO,IACA,IA2DwCsf,EA3DlCmU,EAAmBH,EAuBnBI,GApByBT,EACzBQ,EACGpzB,QAAQ,8BAA8B,GAAD7J,OAAKgB,GAAY,MAAAhB,OAAKiB,KAC9Dg8B,GAIDpzB,QAAQ,uBAAwB,YAChCA,QAAQ,KAAM,UACdA,QAAQ,6BAA8B,YACtCA,QAAQ,KAAM,UACdA,QAAQ,MAAO,UACfA,QAAQ,WAAO,UAEfA,QAAQ,kCAAwB,SAAAszB,GAC7B,IAAMC,EAA4Bp+B,GAAmBm+B,GAErD,OAAgC,OAAzBC,QAAyB,IAAzBA,IAA6BD,KAKvC7wB,WAAW,IAAI7L,O5BtFW,gB4BsFiB,MAAM,SAAA08B,GAAC,OAAIA,EAAE7wB,WAAW,KAAMpL,IAAuBoL,WAAW,KAAMnL,OAEjHmL,WAAW,IAAI7L,O5BrDO,Y4BqDiB,MAAM,SAAA08B,GAAC,SAAAn9B,OAAOc,IAAYd,OAAGm9B,GAACn9B,OAAGe,OAiBvEs8B,GAdsC,QAAXj6B,IAAuC,IAAnBoD,EAC/C02B,EACAA,EACG5wB,WAAW,IAAI7L,OAAOoB,GAAoB,MAAM,SAAAs7B,GAAM,IAADG,EAC5CC,EAAsD,QAAvCD,EAAGrlC,EAAkBklC,GAAGP,UAAe,IAAAU,IAAIrlC,EAAkBklC,GAAGrlC,SAErF,MAAM,GAANkI,OAAUc,IAAYd,OAAGu9B,GAAev9B,OAAGe,QASlDuL,WAAW,IAAI7L,OAAOE,GAAmB,MAAM,SAAAw8B,GAAC,SAAAn9B,OAAOc,IAAYd,OAAGm9B,GAACn9B,OAAGe,OAC1EuL,WAAW,IAAI7L,O5BtEc,4G4BsEiB,MAAM,SAAA08B,GAAC,SAAAn9B,OAAOc,IAAYd,OAAGm9B,GAACn9B,OAAGe,OAC/EuL,WAAW,IAAI7L,OAAOuB,GAA0B,MAAM,SAAAm7B,GAAC,SAAAn9B,OAAOc,IAAYd,OAAGm9B,GAACn9B,OAAGe,OACjFuL,WAAW,IAAI7L,O5BvEQ,+C4BuEiB,MAAM,SAAA08B,GAAC,SAAAn9B,OAAOc,IAAYd,OAAGm9B,GAACn9B,OAAGe,OACzEuL,WAAW,IAAI7L,O5BvES,yB4BuEiB,MAAM,SAAA08B,GAAC,SAAAn9B,OAAOc,IAAYd,OAAGm9B,GAACn9B,OAAGe,OAQ3Ey8B,EAA8B,GAC9BC,EAAe,EAAE5U,EAAA3f,aACAm0B,GAAmB,IAAxC,IAAAxU,EAAA1f,MAAA2f,EAAAD,EAAAjgB,KAAAQ,MAA0C,CAAC,IAAhCulB,EAAM7F,EAAAz1B,MACTs7B,IAAW7tB,IACU,IAAjB28B,GAAoBD,EAA4B5E,KAAKjK,GACzD8O,GAAgB,GACT9O,IAAW5tB,GAEG,KADrB08B,GAAgB,IACQD,EAA4B5E,KAAKjK,GACtD6O,EAA4B5E,KAAKjK,IAE5C,MAAAplB,GAAAsf,EAAAlgB,EAAAY,GAAA,QAAAsf,EAAArf,IASA,OARsBg0B,EAA4Bv9B,KAAK,IAClDqM,WAAW,GAADtM,OAAIiB,IAAajB,OAAGe,IAAa,GAAAf,OAAOe,IAAaf,OAAGiB,KAClEqL,WAAW,GAADtM,OAAIc,IAAYd,OAAGgB,IAAY,GAAAhB,OAAOgB,IAAYhB,OAAGc,KAC/DwL,WAAW,GAADtM,OAAIkB,IAAqBlB,OAAGe,IAAa,GAAAf,OAAOe,IAAaf,OAAGkB,KAC1EoL,WAAW,GAADtM,OAAIc,IAAYd,OAAGmB,IAAmB,GAAAnB,OAAOmB,IAAmBnB,OAAGc,KAC7EwL,WAAW,GAADtM,OAAIgB,IAAYhB,OAAGiB,IAAiB,IAC9CqL,WAAW,GAADtM,OAAIc,IAAYd,OAAGe,IAAiB,KChJ1C28B,GAAkB,SAAH71B,GAgBrB,IAAD81B,EAAAC,EAfFlX,EAAG7e,EAAH6e,IACArzB,EAAKwU,EAALxU,MACA+P,EAAMyE,EAANzE,OACAqxB,EAAS5sB,EAAT4sB,UAASoJ,EAAAh2B,EACTi2B,sBAAc,IAAAD,EAAG,EAACA,EAClBE,EAAWl2B,EAAXk2B,YACArqC,EAASmU,EAATnU,UAUA,GAAK00B,GAAY1B,GAAjB,CAEAA,EAAIzyB,UAAY8pC,EAAc,UAAY,UAC1CrX,EAAIxxB,YAAcxB,EACZqqC,EAAc,UAAY,UAC1B,UACNrX,EAAIvxB,cAAgB,EACpBuxB,EAAItxB,cAAgB,EACpBsxB,EAAIrxB,WAAa3B,EAAY,EAAI,EAgBjC,IAhBmC,IAAAkoB,EAE8C,QAF9C+hB,EAEkBjmC,EAAqB0L,UAAO,IAAAu6B,IAAIjmC,EAA0B,IAAvGT,EAAQ2kB,EAAR3kB,SAAUD,EAAY4kB,EAAZ5kB,aAAyBsJ,EAAKsb,EAAhB7kB,UAC1BsE,EAAWmD,GAAgB4E,GACzB7O,EAAS8G,EAAT9G,KACFuoC,EAAiBP,GAAkBlpC,EAAO+P,EAAQ,CAAEq5B,WAAW,EAAOj2B,gBAAgB,IAGxFgvB,EAAW,CACXQ,UAAW,EACX36B,WACA06B,YAAa3hB,MAEb0kB,EAAkB,EAClBkF,EAA0B,IAC1B5M,EAAe/1B,EAASpB,SAAS,GAAGgkC,EAAA,SAC/BjI,GACL5E,EAAe/1B,EAASpB,SAAS+7B,GACjC,IAAMkI,EAAa9pB,GAAiB,CAChCS,cAAetgB,EACfogB,YAAY,GAAD3U,OAAKoxB,EAAa72B,SAAQ,MACrCga,cAAe7gB,EAAY,OAAS,KAEpCyqC,EAAmB,CACnBnI,YACA36B,WACA06B,YAAamI,GAEbE,EAAoB,EAqBxB,GApBA1X,EAAInyB,KAAO2pC,EAAW/oB,UACtBuR,EAAIe,UAAY,OAChBuW,EAA0BnqB,IACtB,SAAAjB,GAAW,IAADyrB,EACwC5G,GAAe,CACzD/Q,MACA9T,SACA8kB,cAAe,CAACoF,GAChB15B,SAAQoyB,SAAU2I,EAClB79B,UALIw3B,EAAgBuG,EAAhBvG,iBAAkBD,EAAewG,EAAfxG,gBAQ1B,QAAIC,EAAmB,KACvBsG,EAAoBvG,EAAgB,GAAGiB,iBAChC,MAIfA,EAAkBsF,EAClB5I,EAAW2I,EACPH,GAA2B,IAAM,eAjChChI,EAAY,EAAGA,EAAY36B,EAASpB,SAAS6O,OAAQktB,IAAa,CAAzD,aAAyDiI,EAAlEjI,GAiCgC,MAIzC,IAAMjP,EAASiX,EAA0B,IAEzCtX,EAAIqK,MAAMhK,EADK,GAEf,IAAM/V,EAASwoB,GAAS,CACpB9S,MACAyR,UAAWnH,GAAa8L,GACxB/V,SAAQtrB,OALG,EAMXxE,SAAwB,SAAdw9B,EAAuBx9B,EAAYA,EAAW6hC,EAAkB/R,EAC1E/vB,aAAcA,GAAoC,QAAxB4mC,EAAIxM,EAAan4B,eAAO,IAAA2kC,IAAIjlC,EAAoBM,SAAW6kC,EACrFtI,WACApyB,SACA8sB,WAAY,SAAAjO,GAAkD,IAA/CyE,EAAGzE,EAAHyE,IAAKiI,EAAM1M,EAAN0M,OAAQiC,EAAU3O,EAAV2O,WAAYD,EAAc1O,EAAd0O,eACpCjK,EAAImB,SAAS8G,EAAQiC,EAAYD,MAKzC,OAFAjK,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEhCtgC,YAAA,CAEI4rC,SAAwB,SAAd7J,EAAuBx9B,EAAYA,EAAW6hC,EAAkB/R,GACvE/V,KCrFEutB,GAA6B,SAAH12B,GAUhC,IATHzE,EAAMyE,EAANzE,OACAo7B,EAAQ32B,EAAR22B,SACAC,EAAY52B,EAAZ42B,aACAC,EAAY72B,EAAZ62B,aAOMC,EAAgB,CAACv7B,EAAQs7B,EAAe,OAAS,GAAID,EAAe,OAAS,IAC9ErpB,QAAO,SAAAzT,GAAK,MAAc,KAAVA,KAAc1B,KAAK,KAClC2+B,EAAc,CAACx7B,EAAQs7B,EAAe,OAAS,GAAID,EAAe,OAAS,IAC5ErpB,QAAO,SAAAzT,GAAK,MAAc,KAAVA,KAAc1B,KAAK,KAEpC5E,EAAWhB,EAAeukC,GAM9B,OALIH,GAAgBC,GAAgBF,GAAuB,QAAXp7B,KAC5C/H,EAAWnB,GACFD,SAAWS,GAGjB,CACHW,WACAwjC,SAAU/nC,EAAqB6nC,KAK5BnY,GACP51B,EACSkuC,GAAa,SAAHljB,GAoBhB,IAADmjB,EAAAC,EAnBFtY,EAAG9K,EAAH8K,IACAuY,EAAOrjB,EAAPqjB,QAAOC,EAAAtjB,EACP4iB,gBAAQ,IAAAU,GAAQA,EAAAC,EAAAvjB,EAChBvgB,gBAAQ,IAAA8jC,EAAG9kC,EAAejD,IAAG+nC,EAC7BC,EAASxjB,EAATwjB,UAASC,EAAAzjB,EACTijB,gBAAQ,IAAAQ,EAAGvoC,EAAqB,YAAWuoC,EAAAC,EAAA1jB,EAC3CjW,wBAAgB,IAAA25B,EAAG,SAAQA,EAC3Bl8B,EAAMwY,EAANxY,OACAoD,EAAcoV,EAAdpV,eAYI+4B,EAAkB,EACtB,IAAK7Y,IAAQuY,EAAS,OAAOM,EAsB7B,IApBA,IAAMC,EAAoBjD,GAAkB0C,EAAQ/a,OAAQ9gB,EAAQ,CAAEoD,mBAChEi5B,EAA0D,QAAXr8B,EACV,QAD0B27B,EAC/DnkC,GAAoB+K,UAAiB,IAAAo5B,IAAInkC,GAA4B,OACrE,CACE,EAAK,IACL,EAAK,IACL,EAAK,KACP8kC,EF7DiB,SAAC95B,GAAsC,IAAD+5B,EAKzDC,EACAC,EANoCrB,EAAQ90B,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,IAAAA,UAAA,GAC5Co2B,EAAal6B,EAEbm6B,EAAe,GACbC,EAAiB,IAAIv/B,OAAO,KAADT,OAAMgB,GAAY,OAAAhB,OAAMiB,GAAa,OAAAjB,OAAMiB,GAAa,UAGzF,EAAG,CAAC,IAADg/B,EAAAC,EACCN,EAAqD,QAAlCK,EAAGD,EAAeG,KAAKL,UAAW,IAAAG,OAAA,EAA/BA,EAAkC,IACxDJ,EAA0C,QAAlCK,EAAGF,EAAeG,KAAKL,UAAW,IAAAI,OAAA,EAA/BA,EAAkC,KAE7BN,IACZG,EAAanH,KAAKiH,GAClBC,EAAaA,EAAWj2B,QAAQ+1B,EAAqB,WAEpDA,GAAuBC,GAEhC,IAAIO,EAAwB,GACtBC,EAAuB,IAAI5/B,OAAOc,GAAyB,KAC3D++B,EAAgE,QAApCX,EAAGU,EAAqBF,KAAKv6B,UAAO,IAAA+5B,OAAA,EAAjCA,EAAoC,GAMzE,OALIW,GAAgC9B,GAChC4B,EAAwBE,EACxBR,EAAaA,EAAWj2B,QAAQy2B,EAA8B,KAC3DF,EAAwB,GAExB,CACHL,eACAD,aACAM,yBEsCAG,CAAYf,EAAmBhB,GAH/BsB,EAAUJ,EAAVI,WACAM,EAAqBV,EAArBU,sBACAL,EAAYL,EAAZK,aAGEnI,GAA0C,QAApBoH,EAACe,EAAaj3B,cAAM,IAAAk2B,IAAI,IAAMoB,EAAsBt3B,OAAS,EAAI,EAAI,GAC3F4uB,EAAgBoI,EAAaA,EAAW/2B,MAAM,MAAQ,GAEpDxU,EAAmB8G,EAAnB9G,KAAM0F,EAAaoB,EAAbpB,SAEdgkC,EAAA,eAAAuC,EAAAC,EAEUrP,EAAen3B,EAASslC,GAE1BhlC,EAGA62B,EAHA72B,SACAC,EAEA42B,EAFA52B,WACAC,EACA22B,EADA32B,UAASwnB,EAMgB,QANhBue,EAMT3B,EAASU,UAAgB,IAAAiB,IAAI3B,EAASA,EAAS/1B,OAAS,GAHxD7R,EAAQgrB,EAARhrB,SACWypC,EAAcze,EAAzBlrB,UACc4pC,EAAiB1e,EAA/BjrB,aAEEsJ,EAASk+B,GAAuB,QAAXp7B,EAAoBs9B,EAAiB,EAAIA,EAE9D3K,EAAc3hB,KACpBsS,EAAInyB,KAAOwhC,EACNrgB,SAAS8oB,GAAuB,QAAXp7B,EAAmB,SAAW,IACnDmS,UAA6B,IAC7BK,QAAQrb,GACRwb,UAAUxhB,GACV4gB,UACLuR,EAAIe,UAAY,OAChB,IAAM+N,EAAW,CACbn6B,WACA26B,UAAWuJ,EACXxJ,eAGA6K,EAAkF,GAGhF7sB,EAAkBF,IACpB,SAAAjB,GAAW,IAADyrB,EACwC5G,GAAe,CACzD/Q,MACA9T,SACA8kB,gBACAE,sBACAx0B,SAAQoyB,WACRl1B,UANIu3B,EAAewG,EAAfxG,gBAAiBC,EAAgBuG,EAAhBvG,iBAUzB,OAFA8I,EAAoB/I,IAEhBC,EAAmBr9B,KAG3B,KAKE6yB,EAAa5D,GAAYh3B,YAAC,CAAEg0B,OAAQ0Y,IAE1C,KACKrrB,GAFgE,QAAlD0sB,EAAGhB,EAAqB,GAADz/B,OAAI03B,EAAc5uB,gBAAS,IAAA23B,IAAIhB,EAAqB,KAGtFF,EAAkBtlC,EAAS6O,OAAS,GAGrC,CACH4d,EAAI2B,UAAU,EAAG,EAAG7B,GAAa,MAEjC,IAAIxvB,EAAe2pC,EAAoBnmC,EAEjCqmC,EAAwBd,EAAar+B,KAAI,SAAAi3B,GAC3C,MAAO,CACHA,OACAE,QAAQ,EACR9kB,gBAAiBF,IACb,SAAAjB,GASI,QAR6B6kB,GAAe,CACxC/Q,MACA9T,SACA8kB,cAAe,CAACiB,GAChBv1B,SAAQoyB,WACRl1B,UALIw3B,iBAQe,UAkCvC,GA1BA,GAAA93B,OAAA8gC,aACOD,GAAqBC,aACrBF,IACLn2B,SAAQ,SAAA2Y,GAIH,IAHHuV,EAAIvV,EAAJuV,KACAE,EAAMzV,EAANyV,OAGM9R,EAFS3D,EAAfrP,gBAEiC,IAAKgtB,EN0J3B,SAAHnlB,GAsBpB,IANG,IAfH8K,EAAG9K,EAAH8K,IACAiS,EAAI/c,EAAJ+c,KACAr4B,EAAKsb,EAALtb,MACQ23B,EAAUrc,EAAlBmL,OACA3jB,EAAMwY,EAANxY,OACAy1B,EAAMjd,EAANid,OACArD,EAAQ5Z,EAAR4Z,SAUM2C,EAAYnH,GAAa2H,GAC3BqI,EAAoB,EACpBC,EAAiB,EACjB1I,EAAa,EAER5B,EAAM,EAAG5P,EAASkR,EAAYtB,EAAMwB,EAAUrvB,OAAQ6tB,IAAO,CAClE,IAAMlnB,EAAQ0oB,EAAUxB,GAClBvB,EAAY+C,EAAUxB,EAAM,GAElC,GAAIlnB,IAAUvO,GAIT,GAAIuO,IAAUtO,GAAd,CAGJ,IAAA43B,EAQG7D,GAAa,CAAExO,MAAKjX,QAAO2lB,YAAWrO,SAAQuO,iBAAkBiD,EAAaxR,EAAQyO,WAAUpyB,WAN/FuyB,EAAUoD,EAAVpD,WACAF,EAAUsD,EAAVtD,WACAG,EAAUmD,EAAVnD,WACAE,EAAOiD,EAAPjD,QACAD,EAAQkD,EAARlD,SACAH,EAAcqD,EAAdrD,eASJ6C,EAAa1C,EAAW9O,EACxBia,GAAqBvL,EAAa1O,IANrB,IAAR4P,GAAab,EAAU,GAA2D,EAAvD5iB,KAAKR,IxBjRN,GwBiRmCojB,EAAU/O,GAAe,IAE9E,IAAR4P,GAAaz0B,GAAiBkY,KAAKsb,GxBlRH,EwBkRqD3O,EAAS,IAKnGka,GAAkBtL,GAAcC,QAA4BjsB,IAAdyrB,EAA0B,EAAI,QApBxErO,EAASkR,OAJTlR,EAAS,EA0BjB,IAAMma,EAAqBD,EAAiB,GAAK3gC,EAAQ0gC,GAAqBC,EAAiB,EAO/F,MAAO,CACH9I,YACAuB,WAReb,EACF,QAAXz1B,EACI89B,EAAqB,IAAQ,EAAIA,EACjCA,EAAqB,KAAQ,EAAIA,EACrCA,GMnNwCC,CAAY,CAAEza,MAAKiS,OAAM5R,SAAQ3jB,SAAQy1B,SAAQrD,WAAUl1B,UAArF63B,EAAS4I,EAAT5I,UAAWuB,EAAUqH,EAAVrH,WAEnBhT,EAAIqK,MAAMhK,EAlGP,GAmGHyS,GAAS,CACL9S,MACAyR,YACApR,SAAQtrB,OAtGT,EAuGCxE,WAAUD,eACV0iC,aACAlE,WACApyB,WAEJpM,GAAgBwD,EAChBksB,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,MAIhCoN,EAAsBt3B,OAAS,EAAG,CAClC,IAcMie,EAd0BlT,IAC5B,SAAAjB,GASI,QAR6B6kB,GAAe,CACxC/Q,MACA9T,SACA8kB,cAAe,CAAC0I,GAChBh9B,SAAQoyB,WACRl1B,UALIw3B,iBAQe,MAIU,IAEzCpR,EAAIqK,MAAMhK,EAlIP,GAmIHL,EAAInyB,KAAOwhC,EAAYrgB,SAAS,IAAIP,UACpC,IAAIgjB,EAAYnH,GAAaoP,GAO7BjI,EAA6B,OAAjBA,EAAU,GAChBA,EAAUxe,MAAM,GAChBwe,EACNqB,GAAS,CACL9S,MACAyR,YACApR,SAAQtrB,OAjJT,EAkJCxE,WAAUD,eACVw+B,WACApyB,WAEJpM,GAAgBwD,EAChBksB,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEpC,cA9FAuM,GAAmB,EAgGvBjS,KAzJGiS,EAAkBtlC,EAAS6O,QAAQ,cAAAm1B,IAuJlC,MAKR,OAAOsB,GCrPA/Y,GACP51B,EAESwwC,GAAe,eAAAxlB,EAAAsE,aAAAC,KAAAC,MAAG,SAAAoB,EAAA3Z,GAAA,IAAA6e,EAAAviB,EAAAlT,EAAAmT,EAAAi9B,EAAAh9B,EAAAyQ,EAAAwsB,EAAAC,EAAA9L,EAAAhB,EAAA6J,EAAAnoB,EAAAqrB,EAAAC,EAAA,OAAAthB,KAAAK,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OA6D1B,OA5DD+F,EAAG7e,EAAH6e,IACAviB,EAAQ0D,EAAR1D,SACAlT,EAAI4W,EAAJ5W,KACAmT,EAAIyD,EAAJzD,KAAIi9B,EAAAx5B,EACJxD,qBAAa,IAAAg9B,EAAG,OAAMA,EACtBvsB,EAAKjN,EAALiN,MACAwsB,EAAUz5B,EAAVy5B,WAUkB,GACG,EAIjB7L,EALc,IAEd8L,EAAsC,kBAATn9B,EAClB,KAATA,EAAc,EAAI,EACF,kBAATA,EAAoBA,EAAO,GAHnB,GAI8Cm9B,EAAsB,GACxE,IAEb9M,EAAY,QACZ,CAAC,OAAQ,kBAAkB9sB,SAASxD,KAAWswB,EAAY,QAC/DA,EAA8B,SAAlBpwB,EACNowB,EACApwB,EACFk9B,EAAsB,KAAI9M,EAAY,UAEtCxjC,GAAsB,WAAdwjC,IACR8M,EAAsB,EACtB9L,EAAa,GAIX6I,EAAyB,WAAd7J,GACVjO,GAAciP,GAAc,EACf,SAAdhB,EACI,QAAUgB,EACV,QAENtf,GAAS,GAETuQ,GAAOz1B,GAAqB,OAAbkT,IACE,GACXq9B,EAAc9X,GAAYh3B,YAAC,CAAEg0B,OAAQ5R,IAC3C4R,EAAIe,UAA0B,SAAdgN,GAAsC,UAAdA,EAClCA,EACA,OACN/N,EAAInyB,KAAI,QAAAyL,OALS,GAKU,sBACrBmW,EAAuB,WAAdse,EACT/N,EAAIqB,YAAY92B,GAAMqP,OAAS,EACjB,SAAdm0B,EArCW,GAuCP,GACV/N,EAAImB,SAAS52B,EAAMqtC,EAAWnoB,EAAQ2Q,KACtCJ,EAAIe,UAAY,OAChB+Z,KACH3f,EAAAlB,KAAA,GAEYuI,QAAQwY,IAAIZ,aAAIl2B,MAAM22B,IAC9B7/B,IAAGwe,aAAAC,KAAAC,MAAC,SAAAC,IAAA,IAAAshB,EAAA,OAAAxhB,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKA,OAHGghB,EAA+B,CAC/BrD,GAlDM,IAgDVnoB,GAAWyrB,KA1CF,KA8CRnhB,EAAAE,KAAA,EACKyK,GAAS9J,WAAC,EAAD,CAACoF,EAAI,uBAAD1mB,OAAyBmE,EAAQ,SAAAnE,OAAW2hC,IAAY,KAAD,SAAAlhB,EAAAE,KAAA,EAC7D2gB,EAAWK,GAAY,KAAD,SAAAlhB,EAAAqB,OAAA,SAAArB,EAAAM,MAAA,wBAAAN,EAAAY,UAAAhB,SAEzC,KAAD,UAAAwB,EAAAC,OAAA,SAAAD,EAAAd,MAAA,yBAAAc,EAAAR,UAAAG,OACJ,gBA1E2BO,GAAA,OAAAnG,EAAA0F,MAAA,KAAA5X,YAAA,GA4Efm4B,GAAW,eAAAlY,EAAAzJ,aAAAC,KAAAC,MAAG,SAAA8B,EAAAkB,GAAA,IAAAsD,EAAAzgB,EAAA,OAAAka,KAAAK,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAEhB,GADP+F,EAAGtD,EAAHsD,IACAzgB,EAAOmd,EAAPnd,QAKKmiB,GAAY1B,GAAK,CAADtE,EAAAzB,KAAA,eAAAyB,EAAAN,OAAA,oBAEL,eAAZ7b,EAAwB,CAAAmc,EAAAzB,KAAA,eAAAyB,EAAAN,OAAA,SAASoH,QAAQC,WAAS,cAAA/G,EAAAN,OAAA,SAC/CsJ,GAAU1E,EAAI,mBAAD1mB,OAAqBiG,EAAQ+d,cAAa,QAAQ,SAAU,WAAS,wBAAA5B,EAAAf,UAAAa,OAC5F,gBAXuBO,GAAA,OAAAkH,EAAArI,MAAA,KAAA5X,YAAA,GAcXo4B,GAAkB,eAAAC,EAAA7hB,aAAAC,KAAAC,MAAG,SAAAyC,EAAA6N,GAAA,IAAAhK,EAAA30B,EAAAO,EAAA0vC,EAAA37B,EAAAF,EAAA87B,EAAAN,EAAAO,EAAA,OAAA/hB,KAAAK,MAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,OAOtB,GANR+F,EAAGgK,EAAHhK,IACA30B,EAAI2+B,EAAJ3+B,KACAO,EAAUo+B,EAAVp+B,WACA0vC,EAAMtR,EAANsR,OACA37B,EAAkBqqB,EAAlBrqB,mBACAF,EAAWuqB,EAAXvqB,YACA87B,EAAQvR,EAARuR,SAUKvb,EAAI,CAAD5D,EAAAnC,KAAA,eAAAmC,EAAAhB,OAAA,qBAEJzb,EAAmB,CAADyc,EAAAnC,KAAA,QAKU,OAJtBghB,EAA+CrvC,EAC/C,CAAC,IAAK,KAAM,IAAK,IACjB0vC,EACI,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,GAAI,IAAK,IAAK,IAAGlf,EAAAnC,KAAA,EAEtByL,GAAiB9K,WAAC,EAAD,CAACoF,EAAI,2BAAD1mB,OAA6BjO,GAAIiO,OAAGiiC,EAAW,YAAc,GAAE,SAAAjiC,OAAW2hC,IAAY,KAAD,MAEhHx7B,EAAY,CAAD2c,EAAAnC,KAAA,SAKiB,OAJtBghB,EAA+CrvC,EAC/C,CAAC,IAAK,KAAM,MAAO,IACnB0vC,EACI,CAAC,IAAK,IAAK,MAAO,IAClB,CAAC,GAAI,IAAK,IAAK,IAAGlf,EAAAnC,KAAA,GAEtByL,GAAiB9K,WAAC,EAAD,CAACoF,EAAI,wBAAD1mB,OAA0BjO,GAAIiO,OAAGiiC,EAAW,YAAc,GAAE,SAAAjiC,OAAW2hC,IAAY,KAAD,oBAAA7e,EAAAzB,UAAAwB,OAEpH,gBArC8B0G,GAAA,OAAAwY,EAAAzgB,MAAA,KAAA5X,YAAA,GAuClBy4B,GAAsB,eAAAC,EAAAliB,aAAAC,KAAAC,MAAG,SAAA6C,EAAAof,GAAA,IAAA3b,EAAA30B,EAAAO,EAAA0vC,EAAA17B,EAAAg8B,EAAAL,EAAAN,EAAA,OAAAxhB,KAAAK,MAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,OAsBN,OArB5B+F,EAAG2b,EAAH3b,IACA30B,EAAIswC,EAAJtwC,KACAO,EAAU+vC,EAAV/vC,WACA0vC,EAAMK,EAANL,OACA17B,EAAY+7B,EAAZ/7B,aACAg8B,EAAWD,EAAXC,YACAL,EAAQI,EAARJ,SAWMN,GAAgDr7B,GAAgBhU,EAChE,CAAC,IAAK,KAAM,IAAMgwC,EAAa,IAC/BN,EACI,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,GAAI,IAAK,IAAK,IAAG9e,EAAAvC,KAAA,EAEtByL,GAAiB9K,WAAC,EAAD,CAACoF,EAAI,6BAAD1mB,OAA+BjO,GAAIiO,OAAGiiC,EAAW,YAAc,GAAE,SAAAjiC,OAAW2hC,IAAY,KAAD,mBAAAze,EAAA7B,UAAA4B,OACrH,gBAzBkCqI,GAAA,OAAA8W,EAAA9gB,MAAA,KAAA5X,YAAA,GA2BtB64B,GAAkB,eAAAC,EAAAtiB,aAAAC,KAAAC,MAAG,SAAAqiB,EAC9B7V,EACAxnB,EACA6nB,GAAiC,IAAAyV,EAAAhc,EAAA5zB,EAAA,OAAAqtB,KAAAK,MAAA,SAAAmiB,GAAA,cAAAA,EAAAjiB,KAAAiiB,EAAAhiB,MAAA,OAEG,IAA9B+F,EAAMkG,EAAOiB,WAAW,QAEjBjjB,MAAMC,QAAQzF,GAAQ,CAAAu9B,EAAAhiB,KAAA,eAAAgiB,EAAA7gB,OAAA,iBAEc,OAA3ChvB,EAA8B,QAAzB4vC,EAAGzV,EAAiBn6B,aAAK,IAAA4vC,IAAI,UAASC,EAAAhiB,KAAA,EAC3CgM,GACFC,EACA,qBACA95B,EACA,IAAK,GACL,IAAK,KACLm6B,GACF,KAAD,EAEDvG,EAAIe,UAAY,QAChBf,EAAIqK,MAAM,IAAK,GACfrK,EAAInyB,KAAO,+BACXmyB,EAAImB,SAAS,GAAD7nB,OAAIoF,EAAQ0D,QAAU,OAAQ,MAC1C4d,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCtM,EAAIe,UAAY,OAAO,yBAAAkb,EAAAthB,UAAAohB,OAC1B,gBAzB8B3W,EAAAC,EAAAC,GAAA,OAAAwW,EAAAlhB,MAAA,KAAA5X,YAAA,GCvJ3Bk5B,GAGAhyC,EAFAiyC,GAEAjyC,EADAkyC,GACAlyC,EAESmyC,GAAwB,SAAHl7B,GA4C3B,IA3CH+kB,EAAM/kB,EAAN+kB,OACAoW,EAAan7B,EAAbm7B,cACAC,EAAgBp7B,EAAhBo7B,iBACA7/B,EAAMyE,EAANzE,OACA0B,EAAa+C,EAAb/C,cACApB,EAAKmE,EAALnE,MAAOw/B,EAAWr7B,EAAXq7B,YACP1wC,EAAcqV,EAAdrV,eACA2R,EAAQ0D,EAAR1D,SACAF,EAAS4D,EAAT5D,UACAG,EAAIyD,EAAJzD,KACAT,EAAIkE,EAAJlE,KACAw/B,EAAYt7B,EAAZs7B,aACA5wC,EAAOsV,EAAPtV,QACAyvC,EAAMn6B,EAANm6B,OAAQj6B,EAAYF,EAAZE,aAAcq7B,EAAKv7B,EAALu7B,MACtB9wC,EAAUuV,EAAVvV,WACA+wC,EAAUx7B,EAAVw7B,WACAC,EAAaz7B,EAAby7B,cA4BM5c,EAAMkG,EAAOiB,WAAW,MAEf0V,EAOXhxC,EAPAnB,UACAC,EAMAkB,EANAlB,WACMmyC,EAKNjxC,EALAxB,KACM0yC,EAINlxC,EAJArB,KACUwyC,EAGVnxC,EAHAvB,SACM2yC,EAENpxC,EAFAtB,KACAK,EACAiB,EADAjB,UAASsyC,EAQTvxC,EAAuBC,EAAYC,GALnCX,EAAIgyC,EAAJhyC,KACAC,EAAI+xC,EAAJ/xC,KACAJ,EAAUmyC,EAAVnyC,WACAC,EAAUkyC,EAAVlyC,WACAC,EAAQiyC,EAARjyC,SAEEP,EAAYoyC,EAAc,GAAWD,EAErCM,EAAa,IAGbC,EAAmB,WAATngC,EACVogC,EAAkBX,GAASr7B,EAC3BrE,EACA,SACAsgC,EAAiBD,EACjBE,GAAkB3yC,GAAaF,EAE/B8yC,EAAY,CAOdC,mCAAkC,SAC9BC,EACAC,GAGD,IAFCC,EAAgB56B,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACnB66B,EAAqC76B,UAAAZ,OAAA,EAAAY,UAAA,QAAAC,EAE/B66B,EAAiC,OAAbH,QAAa,IAAbA,IAAiB9xC,EAEjCkyC,EACND,EADAzzC,KAAI2zC,EAMJryC,EAAuBC,EAAYkyC,EAAmBD,GAHtD3yC,EAAI8yC,EAAJ9yC,KACAC,EAAI6yC,EAAJ7yC,KACAF,EAAQ+yC,EAAR/yC,SAEWgzC,EAAoCP,EAA3C9jC,MAA2BskC,EAAgBR,EAAxB7jC,OACrBskC,EAAmBlzC,EAAWgzC,EAC9BG,EAAgBL,EAAc,KAC7B3B,GAA0BlxC,GAAQizC,EACnC,EACAE,EAAqBD,EAAgBD,EACrCG,EAAgBP,EAAc,KAC7B7B,GAAyB/wC,GAAQgzC,EAClC,EACAI,EAAqBD,EAAgBH,EACrCK,EAAeT,EAAc,IAC7BG,EAAe/B,GAA0BgC,EACzC,EAEAM,EAAevzC,EAAOmzC,EACtBK,EAAevzC,EAAOozC,EACtBI,EAAmB1zC,EAAgC,EAArBozC,EAC9BO,EAAoB3zC,GAAYgzC,EAAaC,GAAeN,EAAmBY,EAAeL,EAEpG,MAAO,CACHA,mBACAC,gBACAE,gBACAD,qBACAE,qBACAC,eACAC,eACAC,eACAC,mBACAC,sBAKRC,UAAU,WAAD,IAAAC,EAAAtlB,aAAAC,KAAAC,MAAE,SAAAC,IAAA,OAAAF,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACF+F,EAAI,CAADjG,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAE4B,OAApC4E,EAAI2C,YAAcma,EAAc,IAAI/iB,EAAAE,KAAA,EAC9ByK,GAAU1E,EAAI,eAAD1mB,OAAiB0D,EAAK,QAAQ,EAAG,GAAG,KAAD,SAAA+c,EAAAE,KAAA,EAChDyK,GAAU1E,EAAI,iCAAD1mB,OAAmCkjC,EAAW,QAAQ,EAAG,GAAG,KAAD,EAC9Exc,EAAI2C,YAAc,EAAE,wBAAA5I,EAAAY,UAAAhB,OACvB,yBAAAmlB,EAAAlkB,MAAA,KAAA5X,YAPS,GASV+7B,YAAa,WACT,GAAKzC,GAAkBtc,EAAvB,CAAmC,IACpBie,EAAoC3B,EAA3C1iC,MAA2BskC,EAAgB5B,EAAxBziC,OAEvBqkC,GAAe,GACnBle,EAAIkE,UACAoY,EACA,EAAG,EACH2B,EAAYC,EACZhzC,EAAMC,EACNF,EAAUA,GAAYgzC,EAAaC,MAG3Cc,eAAgB,SACZC,GAEA,GAAK1C,GAAqBvc,GAAQ5hB,EAAlC,CAAwD,IACzC8gC,EAA8C3C,EAArD3iC,MAAgCulC,EAAqB5C,EAA7B1iC,OAEhC,KAAIslC,GAAoB,GACxB,GAAiB,aAAbF,EAAJ,CAiCC,IAAAG,EAMGzzC,EACAC,EAAUI,wBAAA,GACLH,GAAO,IAAEjB,WAAW,IACzBkB,GANAZ,EAAIk0C,EAAJl0C,KACAC,EAAIi0C,EAAJj0C,KACAF,EAAQm0C,EAARn0C,SAMJ+0B,EAAIkE,UACAqY,EACA,EAAG,EACH2C,EAAiBC,EACjBj0C,EAAMC,EACNF,EAAUA,GAAYi0C,EAAkBC,QAjD5C,CACI,IAAIE,EAAqB7B,EAAUC,mCAAmClB,GAE/C,SAAnBzwC,EACAuzC,EAAqB7B,EAAUC,mCAC3BlB,EAAgBvwC,wBAAA,GACXH,GAAO,IAAExB,KAAM,SACpB4Y,EACA,QAEsB,QAAnBnX,IACPuzC,EAAqB7B,EAAUC,mCAC3BlB,EACA1wC,OACAoX,EACA,QAEP,IAAAq8B,EAOGD,EAJeE,EAAuBD,EAAtClB,cAAuDoB,EAAuBF,EAAtChB,cAC1BmB,EAAsBH,EAApCd,aACckB,EAAsBJ,EAApCb,aAAoDkB,EAAsBL,EAApCZ,aACpBkB,EAA0BN,EAA5CX,iBAAiEkB,EAA2BP,EAA9CV,kBAElD5e,EAAIkE,UACAqY,EACAgD,EAAyBC,EACzBN,EAA4C,EAA1BK,EAA6BJ,EAAmBM,EAClEC,EAAwBC,EACxBC,EAA4BC,MAsBxCC,cAAc,WAAD,IAAAC,EAAAvmB,aAAAC,KAAAC,MAAE,SAAAoB,IAAA,OAAArB,KAAAK,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EACLyK,GAAU1E,EAAI,kBAAD1mB,OAAoBoD,EAAM,KAAApD,OAAIiE,EAAU+f,cAAa,QAAQ,IAAK,IAAI,KAAD,mBAAAnC,EAAAR,UAAAG,OAC3F,yBAAAilB,EAAAnlB,MAAA,KAAA5X,YAFa,GAGdg9B,SAAS,WAAD,IAAAC,EAAAzmB,aAAAC,KAAAC,MAAE,SAAA6C,EAAArH,GAAA,IAAA9G,EAAAzQ,EAAAuiC,EAAA,OAAAzmB,KAAAK,MAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,OACiF,OADxE7L,EAAK8G,EAAL9G,MAAOzQ,EAAauX,EAAbvX,cAChBuiC,EAAkC,SAAbziC,EAAsBqD,GAAqB9D,GAASS,EAAQ+e,EAAAvC,KAAA,EACjFygB,GAAgB,CAClB1a,MACAviB,SAAUyiC,EACV31C,KAAsB,kBAATmT,EAAoBA,EAAO,KACxCA,OACAC,gBACAyQ,QACAwsB,WAAW,WAAD,IAAAuF,EAAA3mB,aAAAC,KAAAC,MAAE,SAAAyC,EAAM8e,GAAU,OAAAxhB,KAAAK,MAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,UACM,OAAvBimB,EAA2B,CAAA9jB,EAAAnC,KAAA,QAAAmC,EAAA3B,GAC5B+H,QAAQC,UAASrG,EAAAnC,KAAA,sBAAAmC,EAAAnC,KAAA,EACX0iB,EACJ3c,EACA,OAAM,eAAAzE,EAAA/B,aAAAC,KAAAC,MACN,SAAA8B,EAAMnwB,GAAI,OAAAouB,KAAAK,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAN,OAAA,SAAIsJ,GAAS9J,WAAC,EAAD,CAACoF,EAAI,iBAAD1mB,OAAmBjO,EAAI,cAAAiO,OAAA8gC,aAAgBa,MAAW,wBAAAvf,EAAAf,UAAAa,OAAA,gBAAAqH,GAAA,OAAAtH,EAAAX,MAAA,KAAA5X,YADvE,IAER,KAAD,EAAAoZ,EAAA3B,GAAA2B,EAAA/B,KAAC,KAAD,SAAA+B,EAAAhB,OAAA,SAAAgB,EAAA3B,IAAA,wBAAA2B,EAAAzB,UAAAwB,OACR,gBAAAJ,GAAA,OAAAokB,EAAAvlB,MAAA,KAAA5X,YARU,KASZ,KAAD,mBAAAwZ,EAAA7B,UAAA4B,OACL,gBAAAlB,GAAA,OAAA4kB,EAAArlB,MAAA,KAAA5X,YAnBQ,GAoBTo9B,sBAAsB,WAAD,IAAAC,EAAA7mB,aAAAC,KAAAC,MAAE,SAAAqiB,IAAA,OAAAtiB,KAAAK,MAAA,SAAAmiB,GAAA,cAAAA,EAAAjiB,KAAAiiB,EAAAhiB,MAAA,cAAAgiB,EAAAhiB,KAAA,EACbyK,GAAU1E,EAAI,iCAAD1mB,OAAmCmjC,EAAY,QAAQ,EAAG,KAAK,KAAD,mBAAAR,EAAAthB,UAAAohB,OACpF,yBAAAsE,EAAAzlB,MAAA,KAAA5X,YAFqB,GAItBs9B,iBAAiB,WAAD,IAAAC,EAAA/mB,aAAAC,KAAAC,MAAE,SAAA8mB,EAAO9hC,GAAiB,OAAA+a,KAAAK,MAAA,SAAA2mB,GAAA,cAAAA,EAAAzmB,KAAAymB,EAAAxmB,MAAA,cAAAwmB,EAAAxmB,KAAA,EAChCuI,QAAQwY,IAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxChgC,IAAG,eAAA0hB,EAAAlD,aAAAC,KAAAC,MAAC,SAAAgnB,EAAMzlC,GAAK,IAAA0lC,EAAAhnC,EAAAD,EAAAG,EAAAD,EAAAgnC,EAAAC,EAAAC,EAAA7F,EAAA,OAAAxhB,KAAAK,MAAA,SAAAinB,GAAA,cAAAA,EAAA/mB,KAAA+mB,EAAA9mB,MAAA,OAKiC,OAJrCtgB,GADIgnC,EACyBlnC,GAAkBwB,EAAQ,IAAvDtB,KAAMD,EAAGinC,EAAHjnC,IAAKG,EAAM8mC,EAAN9mC,OAAQD,EAAK+mC,EAAL/mC,MACrBgnC,EAAWliC,EAAQuC,SAAS,GAAD3H,OAAI2B,IAC/B4lC,EAAQ,sBAAAvnC,OAAyB2B,GACjC6lC,EAAU,oBAAAxnC,OAAuB2B,GACjCggC,EAAa,CAACthC,EAAMD,EAAKE,EAAOC,GAAOknC,EAAA9mB,KAAA,EAEvCyL,GAAiB9K,WAAC,EAAD,CAACoF,EAAI,GAAD1mB,OAAKunC,EAAQ,SAAAvnC,OAAQ1O,EAAY,QAAU,GAAE,SAAA0O,OAAW2hC,IAAY,KAAD,SAAA8F,EAAA9mB,KAAA,EACxFyL,GAAiB9K,WAAC,EAAD,CAACoF,EAAI,GAAD1mB,OAAKunC,EAAQ,cAAAvnC,OAAgB2hC,IAAY,KAAD,MAC/D2F,EAAS,CAADG,EAAA9mB,KAAA,gBAAA8mB,EAAA9mB,KAAA,GACFyL,GAAiB9K,WAAC,EAAD,CAACoF,EAAI,GAAD1mB,OAAKwnC,EAAU,cAAAxnC,OAAgB2hC,IAAY,KAAD,UAAA8F,EAAA3lB,OAAA,SAC9DsK,GAAiB9K,WAAC,EAAD,CAACoF,EAAI,GAAD1mB,OAAKwnC,EAAU,cAAAxnC,OAAgB2hC,KAAW,eAAA8F,EAAA3lB,OAAA,mCAAA2lB,EAAApmB,UAAA+lB,OAE7E,gBAAAtb,GAAA,OAAA1I,EAAA9B,MAAA,KAAA5X,YAbG,KAcN,KAAD,mBAAAy9B,EAAA9lB,UAAA6lB,OACJ,gBAAA5b,GAAA,OAAA2b,EAAA3lB,MAAA,KAAA5X,YAjBgB,GAkBjBg+B,eAAe,WAAD,IAAAC,EAAAznB,aAAAC,KAAAC,MAAE,SAAAwnB,EAAO90C,GAAa,OAAAqtB,KAAAK,MAAA,SAAAqnB,GAAA,cAAAA,EAAAnnB,KAAAmnB,EAAAlnB,MAAA,cAAAknB,EAAAlnB,KAAA,EAC1BgM,GACFC,EACA,8BACA95B,EACA,IAAK,GACL,EAAG,MACL,KAAD,mBAAA+0C,EAAAxmB,UAAAumB,OACJ,gBAAA7b,GAAA,OAAA4b,EAAArmB,MAAA,KAAA5X,YARc,GAYfo+B,mBAAmB,WAAD,IAAAC,EAAA7nB,aAAAC,KAAAC,MAAE,SAAA4nB,IAAA,OAAA7nB,KAAAK,MAAA,SAAAynB,GAAA,cAAAA,EAAAvnB,KAAAunB,EAAAtnB,MAAA,UACX+F,EAAI,CAADuhB,EAAAtnB,KAAA,eAAAsnB,EAAAnmB,OAAA,iBAE4B,OAApC4E,EAAI2C,YAAcoa,EAAc,IAAIwE,EAAAtnB,KAAA,EAC9ByK,GAAU1E,EAAI,8BAAD1mB,OAAgC0D,EAAK,QAAQ,EAAG,GAAG,KAAD,EACrEgjB,EAAI2C,YAAc,EAAE,wBAAA4e,EAAA5mB,UAAA2mB,OACvB,yBAAAD,EAAAzmB,MAAA,KAAA5X,YANkB,GAQnBw+B,qBAAqB,WAAD,IAAAC,EAAAjoB,aAAAC,KAAAC,MAAE,SAAAgoB,IAAA,IAAAC,EAAAC,EAAA5+B,UAAA,OAAAyW,KAAAK,MAAA,SAAA+nB,GAAA,cAAAA,EAAA7nB,KAAA6nB,EAAA5nB,MAAA,OAA2B,GAApB0nB,EAAYC,EAAAx/B,OAAA,QAAAa,IAAA2+B,EAAA,IAAAA,EAAA,GAChC5hB,EAAI,CAAD6hB,EAAA5nB,KAAA,eAAA4nB,EAAAzmB,OAAA,iBAE4B,OAApC4E,EAAI2C,YAAcsa,EAAc,IAAI4E,EAAA5nB,KAAA,EAC9ByK,GACF1E,EAAI,8BAAD1mB,OAC2BkjC,EAAW,QAzNgBsF,GAAxC3E,KA2NnB,KAAD,MACGwE,EAAa,CAADE,EAAA5nB,KAAA,SAC4B,OAAxC+F,EAAI2C,YAAcqa,EAAkB,IAAI6E,EAAA5nB,KAAA,GAClCyK,GAAU1E,EAAI,kCAAD1mB,OAAoCkjC,EAAW,QAAQ,GAAI,KAAK,KAAD,GAEtFxc,EAAI2C,YAAc,EAAE,yBAAAkf,EAAAlnB,UAAA+mB,OACvB,yBAAAD,EAAA7mB,MAAA,KAAA5X,YAdoB,GAkBrB++B,gBAAgB,WAAD,IAAAC,EAAAxoB,aAAAC,KAAAC,MAAE,SAAAuoB,IAAA,OAAAxoB,KAAAK,MAAA,SAAAooB,GAAA,cAAAA,EAAAloB,KAAAkoB,EAAAjoB,MAAA,cAAAioB,EAAA9mB,OAAA,SACNsJ,GAAU1E,EAAI,sBAAD1mB,OAAwB+jC,EAAe,QAAQ,EAAG,IAAE,wBAAA6E,EAAAvnB,UAAAsnB,OAC3E,yBAAAD,EAAApnB,MAAA,KAAA5X,YAFe,GAGhBm/B,eAAe,WAAD,IAAAC,EAAA5oB,aAAAC,KAAAC,MAAE,SAAA2oB,IAAA,OAAA5oB,KAAAK,MAAA,SAAAwoB,GAAA,cAAAA,EAAAtoB,KAAAsoB,EAAAroB,MAAA,cAAAqoB,EAAAlnB,OAAA,SACLzwB,EACD+5B,GAAU1E,EAAI,qBAAD1mB,OAAuBgkC,EAAc,QAAQ,EAAG,GAC7D9a,QAAQC,WAAS,wBAAA6f,EAAA3nB,UAAA0nB,OAC1B,yBAAAD,EAAAxnB,MAAA,KAAA5X,YAJc,GAKfu/B,cAAc,WAAD,IAAAC,EAAAhpB,aAAAC,KAAAC,MAAE,SAAA+oB,IAAA,IAAAC,EAAA,OAAAjpB,KAAAK,MAAA,SAAA6oB,GAAA,cAAAA,EAAA3oB,KAAA2oB,EAAA1oB,MAAA,WACPvvB,EAAU,CAADi4C,EAAA1oB,KAAA,QAQR,OAPGyoB,EAAiB,GAEjBA,EADAhG,GAASr7B,EACK,oBAAA/H,OAAuB0D,EAAK,QACnCs+B,GAAU,CAAC,OAAQ,QAAS,OAAQ,UAAUr6B,SAASjE,GAC7C,+BAEA,uBACpB2lC,EAAA1oB,KAAA,EACKyK,GAAU1E,EAAK0iB,EAzPF,GAAf,KAyPmD,KAAD,mBAAAC,EAAAhoB,UAAA8nB,OAE7D,yBAAAD,EAAA5nB,MAAA,KAAA5X,YAZa,GAad4/B,mBAAmB,WAAD,IAAAC,EAAArpB,aAAAC,KAAAC,MAAE,SAAAopB,EAAOp4C,EAAoBq4C,GAAc,OAAAtpB,KAAAK,MAAA,SAAAkpB,GAAA,cAAAA,EAAAhpB,KAAAgpB,EAAA/oB,MAAA,cAAA+oB,EAAA/oB,KAAA,EACnDyK,GACF1E,EACA,kCAAA1mB,OAAkCmjC,GAAY,IAAAnjC,OACxCypC,IACHr4C,EAAY,GAAK,YAClB,OACF,GAAI,KACN,KAAD,mBAAAs4C,EAAAroB,UAAAmoB,OACJ,gBAAAxd,EAAAC,GAAA,OAAAsd,EAAAjoB,MAAA,KAAA5X,YATkB,GAWnBigC,iBAAiB,WAAD,IAAAC,EAAA1pB,aAAAC,KAAAC,MAAE,SAAAypB,IAAA,OAAA1pB,KAAAK,MAAA,SAAAspB,GAAA,cAAAA,EAAAppB,KAAAopB,EAAAnpB,MAAA,UACTmjB,GAA2B,gBAAhBZ,EAA6B,CAAA4G,EAAAnpB,KAAA,eAAAmpB,EAAAnpB,KAAA,EACnCyK,GAAU1E,EAAK,sCAxQI,GAwQ+Cmd,GAAY,KAAD,EAAAiG,EAAAnpB,KAAA,sBAAAmpB,EAAAnpB,KAAA,EAE7EyK,GAAU1E,EAAK,0BA1QI,GA0QmCmd,GAAY,KAAD,mBAAAiG,EAAAzoB,UAAAwoB,OAE9E,yBAAAD,EAAAtoB,MAAA,KAAA5X,YANgB,GAOjBqgC,eAAe,WAAD,IAAAC,EAAA9pB,aAAAC,KAAAC,MAAE,SAAA6pB,IAAA,OAAA9pB,KAAAK,MAAA,SAAA0pB,GAAA,cAAAA,EAAAxpB,KAAAwpB,EAAAvpB,MAAA,cAAAupB,EAAAvpB,KAAA,EACNyK,GAAU1E,EAAI,oBAAD1mB,OAAsB8jC,EAAO,IAAA9jC,OAAO2D,GAAS,GAAE,QAAQ,EAAG,GAAG,KAAD,mBAAAumC,EAAA7oB,UAAA4oB,OAClF,yBAAAD,EAAA1oB,MAAA,KAAA5X,YAFc,GAMfygC,kBAAkB,WAAD,IAAAC,EAAAlqB,aAAAC,KAAAC,MAAE,SAAAiqB,IAAA,OAAAlqB,KAAAK,MAAA,SAAA8pB,GAAA,cAAAA,EAAA5pB,KAAA4pB,EAAA3pB,MAAA,WACXvvB,EAAU,CAADk5C,EAAA3pB,KAAA,eAAA2pB,EAAA3pB,KAAA,EAAQyK,GAAU1E,EAAI,oBAAD1mB,OAAsB2D,EAAI,QArRrC,GAAf,KAqR8E,KAAD,mBAAA2mC,EAAAjpB,UAAAgpB,OACxF,yBAAAD,EAAA9oB,MAAA,KAAA5X,YAFiB,GAGlB6gC,qBAAqB,WAAD,IAAAC,EAAAtqB,aAAAC,KAAAC,MAAE,SAAAqqB,IAAA,OAAAtqB,KAAAK,MAAA,SAAAkqB,GAAA,cAAAA,EAAAhqB,KAAAgqB,EAAA/pB,MAAA,cAAA+pB,EAAA/pB,KAAA,EACZyK,GAAU1E,EAAI,uBAAD1mB,OAAyB2D,EAAI,QAvRnB,GAuRuCkgC,GAAY,KAAD,mBAAA6G,EAAArpB,UAAAopB,OAClF,yBAAAD,EAAAlpB,MAAA,KAAA5X,YAFoB,GAGrBihC,gBAAgB,WAAD,IAAAC,EAAA1qB,aAAAC,KAAAC,MAAE,SAAAyqB,IAAA,IAAAC,EAAAC,EAAArhC,UAAA,OAAAyW,KAAAK,MAAA,SAAAwqB,GAAA,cAAAA,EAAAtqB,KAAAsqB,EAAArqB,MAAA,OAA6B,OAAtBmqB,EAAUC,EAAAjiC,OAAA,QAAAa,IAAAohC,EAAA,GAAAA,EAAA,GAAG35C,EAAS45C,EAAArqB,KAAA,EACpCyK,GAAU1E,EAAI,2BAAD1mB,OAA6B2D,GAAI3D,OAAG8qC,EAAa,GAAK,WAAU,QAAQ,EAAG,KAAK,KAAD,mBAAAE,EAAA3pB,UAAAwpB,OACrG,yBAAAD,EAAAtpB,MAAA,KAAA5X,YAFe,GAMhBuhC,eAAe,WAAD,IAAAC,EAAAhrB,aAAAC,KAAAC,MAAE,SAAA+qB,IAAA,OAAAhrB,KAAAK,MAAA,SAAA4qB,GAAA,cAAAA,EAAA1qB,KAAA0qB,EAAAzqB,MAAA,WACRvvB,IAAaC,EAAU,CAAA+5C,EAAAzqB,KAAA,eAAAyqB,EAAAzqB,KAAA,EAAQ0iB,EAC/B3c,EACA,OAAM,eAAAiD,EAAAzJ,aAAAC,KAAAC,MACN,SAAAirB,EAAMt5C,GAAI,OAAAouB,KAAAK,MAAA,SAAA8qB,GAAA,cAAAA,EAAA5qB,KAAA4qB,EAAA3qB,MAAA,cAAA2qB,EAAAxpB,OAAA,SACCsJ,GAAU1E,EAAI,iBAAD1mB,OAAmBjO,EAAI,aAAa,EAAG,IAAE,wBAAAu5C,EAAAjqB,UAAAgqB,OAChE,gBAAAnf,GAAA,OAAAvC,EAAArI,MAAA,KAAA5X,YAHK,IAIR,KAAD,mBAAA0hC,EAAA/pB,UAAA8pB,OACJ,yBAAAD,EAAA5pB,MAAA,KAAA5X,YARc,GASf6hC,oBAAoB,WAAD,IAAAC,EAAAtrB,aAAAC,KAAAC,MAAE,SAAAqrB,IAAA,OAAAtrB,KAAAK,MAAA,SAAAkrB,GAAA,cAAAA,EAAAhrB,KAAAgrB,EAAA/qB,MAAA,UACb1c,IAActR,EAAY,CAAA+4C,EAAA/qB,KAAA,eAAA+qB,EAAA/qB,KAAA,EACpB0iB,EAAW3c,EAAK,YAAW,eAAAgK,EAAAxQ,aAAAC,KAAAC,MAAE,SAAAurB,EAAM55C,GAAI,OAAAouB,KAAAK,MAAA,SAAAorB,GAAA,cAAAA,EAAAlrB,KAAAkrB,EAAAjrB,MAAA,cAAAirB,EAAA9pB,OAAA,SAAIsJ,GAAU1E,EAAI,iBAAD1mB,OAAmBjO,EAAI,kBAAkB,IAAK,KAAK,KAAF,mBAAA65C,EAAAvqB,UAAAsqB,OAAA,gBAAAxf,GAAA,OAAAuE,EAAApP,MAAA,KAAA5X,YAA9E,IAAgF,KAAD,mBAAAgiC,EAAArqB,UAAAoqB,OAEvH,yBAAAD,EAAAlqB,MAAA,KAAA5X,YAJmB,GAKpBmiC,cAAc,WAAD,IAAAC,EAAA5rB,aAAAC,KAAAC,MAAE,SAAA2rB,IAAA,OAAA5rB,KAAAK,MAAA,SAAAwrB,GAAA,cAAAA,EAAAtrB,KAAAsrB,EAAArrB,MAAA,WACPsjB,EAAe,CAAD+H,EAAArrB,KAAA,eAAAqrB,EAAArrB,KAAA,EAAQ2iB,EACtB5c,EACA,MAAK,eAAAqb,EAAA7hB,aAAAC,KAAAC,MACL,SAAA6rB,EAAMxjB,GAAU,OAAAtI,KAAAK,MAAA,SAAA0rB,GAAA,cAAAA,EAAAxrB,KAAAwrB,EAAAvrB,MAAA,cAAAurB,EAAAvrB,KAAA,EAAUyK,GACtB1E,EAAI,qBAAD1mB,OACkByoB,GAAUzoB,OAAG1N,EAAU,aAAA0N,OAAgBmjC,GAAiB,GAAE,QAC/E1xC,EAAYC,GACf,cAAAw6C,EAAApqB,OAAA,SAAAoqB,EAAAnrB,MAAA,wBAAAmrB,EAAA7qB,UAAA4qB,OAAA,gBAAA5f,GAAA,OAAA0V,EAAAzgB,MAAA,KAAA5X,YALI,IAMP,KAAD,mBAAAsiC,EAAA3qB,UAAA0qB,OACJ,yBAAAD,EAAAxqB,MAAA,KAAA5X,YAVa,GAkBdyiC,qBAAqB,WAAD,IAAAC,EAAAlsB,aAAAC,KAAAC,MAAE,SAAAisB,IAAA,OAAAlsB,KAAAK,MAAA,SAAA8rB,GAAA,cAAAA,EAAA5rB,KAAA4rB,EAAA3rB,MAAA,cAAA2rB,EAAA3rB,KAAA,EACZ0iB,EACF3c,EACA,cAAa,eAAA2b,EAAAniB,aAAAC,KAAAC,MACb,SAAAmsB,EAAMx6C,GAAI,OAAAouB,KAAAK,MAAA,SAAAgsB,GAAA,cAAAA,EAAA9rB,KAAA8rB,EAAA7rB,MAAA,cAAA6rB,EAAA1qB,OAAA,SACCsJ,GACH1E,EACA,gBAAe,IAAA1mB,OACTjO,GAAM,IAAAiO,OACNikC,EAAiB,MAAQ,SAC7B,YACC3xC,EAAU,aAAA0N,OAAgBmjC,GAAiB,IAC5C,OACF1xC,EAAYC,IACf,wBAAA86C,EAAAnrB,UAAAkrB,OACJ,gBAAAjgB,GAAA,OAAA+V,EAAA/gB,MAAA,KAAA5X,YAZY,IAaf,KAAD,mBAAA4iC,EAAAjrB,UAAAgrB,OACJ,yBAAAD,EAAA9qB,MAAA,KAAA5X,YAjBoB,GAkBrB+iC,oBAAoB,WAAD,IAAAC,EAAAxsB,aAAAC,KAAAC,MAAE,SAAAusB,IAAA,OAAAxsB,KAAAK,MAAA,SAAAosB,GAAA,cAAAA,EAAAlsB,KAAAksB,EAAAjsB,MAAA,WACbvvB,EAAU,CAADw7C,EAAAjsB,KAAA,eAAAisB,EAAAjsB,KAAA,EACH0iB,EACF3c,EACA,aAAY,eAAA0b,EAAAliB,aAAAC,KAAAC,MACZ,SAAAysB,EAAMpkB,GAAU,OAAAtI,KAAAK,MAAA,SAAAssB,GAAA,cAAAA,EAAApsB,KAAAosB,EAAAnsB,MAAA,cAAAmsB,EAAAhrB,OAAA,SAAIsJ,GAAU1E,EAAI,iBAAD1mB,OAAmByoB,EAAU,mBAAmB,EAAG,IAAE,wBAAAqkB,EAAAzrB,UAAAwrB,OAAA,gBAAAtgB,GAAA,OAAA6V,EAAA9gB,MAAA,KAAA5X,YAD1E,IAEd,KAAD,mBAAAkjC,EAAAvrB,UAAAsrB,OAER,yBAAAD,EAAAprB,MAAA,KAAA5X,YARmB,GASpBqjC,4BAA4B,WAAD,IAAAC,EAAA9sB,aAAAC,KAAAC,MAAE,SAAA6sB,IAAA,OAAA9sB,KAAAK,MAAA,SAAA0sB,GAAA,cAAAA,EAAAxsB,KAAAwsB,EAAAvsB,MAAA,WACrBvvB,EAAU,CAAD87C,EAAAvsB,KAAA,eAAAusB,EAAAvsB,KAAA,EAAQ0iB,EACjB3c,EACA,uBACA,SAAA+B,GAAU,OAAI2C,GAAU1E,EAAI,iBAAD1mB,OAAmByoB,EAAU,yBAAAzoB,OAAwBmjC,EAAY,QAAQ,EAAG,MACzG,KAAD,mBAAA+J,EAAA7rB,UAAA4rB,OACJ,yBAAAD,EAAA1rB,MAAA,KAAA5X,YAN2B,GAO5ByjC,yBAAyB,WAAD,IAAAC,EAAAltB,aAAAC,KAAAC,MAAE,SAAAitB,IAAA,OAAAltB,KAAAK,MAAA,SAAA8sB,GAAA,cAAAA,EAAA5sB,KAAA4sB,EAAA3sB,MAAA,cAAA2sB,EAAA3sB,KAAA,EAChB0iB,EACF3c,EACA,kBAAiB,eAAA8b,EAAAtiB,aAAAC,KAAAC,MACjB,SAAAmtB,EAAM9kB,GAAU,OAAAtI,KAAAK,MAAA,SAAAgtB,GAAA,cAAAA,EAAA9sB,KAAA8sB,EAAA7sB,MAAA,cAAA6sB,EAAA1rB,OAAA,SAAIsJ,GAAU1E,EAAI,iBAAD1mB,OAAmByoB,EAAU,qBAAAzoB,OAAoBmjC,EAAY,QAAQ,EAAG,IAAE,wBAAAqK,EAAAnsB,UAAAksB,OAAA,gBAAA/gB,GAAA,OAAAgW,EAAAlhB,MAAA,KAAA5X,YAD1F,IAEnB,KAAD,mBAAA4jC,EAAAjsB,UAAAgsB,OACJ,yBAAAD,EAAA9rB,MAAA,KAAA5X,YANwB,GAOzB+jC,gBAAgB,WAAD,IAAAC,EAAAxtB,aAAAC,KAAAC,MAAE,SAAAutB,IAAA,OAAAxtB,KAAAK,MAAA,SAAAotB,GAAA,cAAAA,EAAAltB,KAAAktB,EAAAjtB,MAAA,cAAAitB,EAAAjtB,KAAA,EACP0iB,EACF3c,EACA,QAAO,eAAAmnB,EAAA3tB,aAAAC,KAAAC,MACP,SAAA0tB,EAAM/7C,GAAI,OAAAouB,KAAAK,MAAA,SAAAutB,GAAA,cAAAA,EAAArtB,KAAAqtB,EAAAptB,MAAA,cAAAotB,EAAAjsB,OAAA,SACCsJ,GAAU1E,EAAI,iBAAD1mB,OAAmBjO,EAAI,UAAAiO,OAAS1N,EAAU,aAAA0N,OAAgBmjC,GAAiB,GAAE,QAAQ,EAAG,IAAE,wBAAA4K,EAAA1sB,UAAAysB,OACjH,gBAAArhB,GAAA,OAAAohB,EAAAvsB,MAAA,KAAA5X,YAHM,IAIT,KAAD,mBAAAkkC,EAAAvsB,UAAAssB,OACJ,yBAAAD,EAAApsB,MAAA,KAAA5X,YARe,GAShBskC,0BAA0B,WAAD,IAAAC,EAAA/tB,aAAAC,KAAAC,MAAE,SAAA8tB,IAAA,OAAA/tB,KAAAK,MAAA,SAAA2tB,GAAA,cAAAA,EAAAztB,KAAAytB,EAAAxtB,MAAA,cAAAwtB,EAAAxtB,KAAA,EACjB0iB,EACF3c,EACA,mBAAkB,eAAA0nB,EAAAluB,aAAAC,KAAAC,MAClB,SAAAiuB,EAAMt8C,GAAI,OAAAouB,KAAAK,MAAA,SAAA8tB,GAAA,cAAAA,EAAA5tB,KAAA4tB,EAAA3tB,MAAA,cAAA2tB,EAAAxsB,OAAA,SACCsJ,GAAU1E,EAAI,iBAAD1mB,OAAmBjO,EAAI,qBAAAiO,OAAoB1N,EAAU,aAAA0N,OAAgBmjC,GAAiB,GAAE,QAAQ,EAAG,IAAE,wBAAAmL,EAAAjtB,UAAAgtB,OAC5H,gBAAA3hB,GAAA,OAAA0hB,EAAA9sB,MAAA,KAAA5X,YAHiB,IAIpB,KAAD,mBAAAykC,EAAA9sB,UAAA6sB,OACJ,yBAAAD,EAAA3sB,MAAA,KAAA5X,YARyB,GAU1B6kC,kBAAkB,WAAD,IAAAC,EAAAtuB,aAAAC,KAAAC,MAAE,SAAAquB,IAAA,OAAAtuB,KAAAK,MAAA,SAAAkuB,GAAA,cAAAA,EAAAhuB,KAAAguB,EAAA/tB,MAAA,cAAA+tB,EAAA/tB,KAAA,EACT0iB,EAAW3c,EAAK,UAAS,eAAAioB,EAAAzuB,aAAAC,KAAAC,MAAE,SAAAwuB,EAAMC,GAAW,OAAA1uB,KAAAK,MAAA,SAAAsuB,GAAA,cAAAA,EAAApuB,KAAAouB,EAAAnuB,MAAA,cAAAmuB,EAAAhtB,OAAA,SAAIsJ,GAAU1E,EAAI,iBAAD1mB,OAAmB6uC,EAAW,gBAAgB,EAAG,IAAI,KAAF,mBAAAC,EAAAztB,UAAAutB,OAAA,gBAAA3gB,GAAA,OAAA0gB,EAAArtB,MAAA,KAAA5X,YAAvF,IAAyF,KAAD,mBAAAglC,EAAArtB,UAAAotB,OAC1H,yBAAAD,EAAAltB,MAAA,KAAA5X,YAFiB,GAGlBqlC,qBAAqB,WAAD,IAAAC,EAAA9uB,aAAAC,KAAAC,MAAE,SAAA6uB,IAAA,OAAA9uB,KAAAK,MAAA,SAAA0uB,GAAA,cAAAA,EAAAxuB,KAAAwuB,EAAAvuB,MAAA,cAAAuuB,EAAAvuB,KAAA,EACZ0iB,EAAW3c,EAAK,cAAa,eAAAyoB,EAAAjvB,aAAAC,KAAAC,MAAE,SAAAgvB,EAAMr9C,GAAI,OAAAouB,KAAAK,MAAA,SAAA6uB,GAAA,cAAAA,EAAA3uB,KAAA2uB,EAAA1uB,MAAA,cAAA0uB,EAAAvtB,OAAA,SAAIsJ,GAAU1E,EAAI,iBAAD1mB,OAAmBjO,EAAI,oBAAoB,EAAG,IAAI,KAAF,mBAAAs9C,EAAAhuB,UAAA+tB,OAAA,gBAAAlhB,GAAA,OAAAihB,EAAA7tB,MAAA,KAAA5X,YAA7E,IAA+E,KAAD,mBAAAwlC,EAAA7tB,UAAA4tB,OACpH,yBAAAD,EAAA1tB,MAAA,KAAA5X,YAFoB,IAKzB,OAAOw6B,GCvcLoL,GAAkB,SACpB5oB,EACA6oB,EACAC,EACA3oB,EACA4oB,EACA3oB,EACA4oB,EACAC,GAKA,IAAMC,EAAUL,EAAgB,IAC1BM,EAAW,GAAA7vC,OAAMkT,KAAK0E,MAAMg4B,EAAU,KACtCE,EAAMF,EAAU,GAEhBG,EAAeL,EAAYC,EAK3BK,EAAKnpB,EANS4oB,EAMY,EAC1BQ,EAAKnpB,GAAY6oB,EAAaD,GAAa,EAE7CpvC,EATgBmvC,EASKlvC,EAASwvC,EACd,MAAhBF,GAAuC,MAAhBA,IAAuBvvC,EAAQyvC,EAAcxvC,EAVpDkvC,GAiBpB,IAAMS,EAAKh9B,KAAKi9B,KAAKj9B,KAAAk9B,IAAA9vC,EAAS,GAAI,EAAI4S,KAAAk9B,IAAA7vC,EAAU,GAAI,GACpD,GAAI2vC,EAAK,EAAG,CACR,IAEMG,EAAM,IAF8B,IAA9Bn9B,KAAKo9B,KAAMhwC,EAAQ,EAAK4vC,GAAYh9B,KAAKqgB,GACnCuc,GAEZS,EAAKr9B,KAAKs9B,IAAIH,EAAM,IAAMn9B,KAAKqgB,IAAM2c,EACrCO,EAAKv9B,KAAKs9B,IAAIV,EAAM,IAAM58B,KAAKqgB,IAAMgd,EACrCG,EAAKx9B,KAAKy9B,IAAIb,EAAM,IAAM58B,KAAKqgB,IAAMgd,EACvCK,EAAUH,EACVx3C,EAAUy3C,EACM,MAAhBb,IAAuBe,EAAUF,EAAIz3C,GAAWw3C,GAChC,MAAhBZ,IAAuBe,GAAWH,EAAIx3C,GAAWy3C,GACjC,MAAhBb,IAAuBe,GAAWF,EAAIz3C,EAAUw3C,GAEpD,IAAMI,EAAOb,EAAKY,EACZE,EAAOb,EAAKh3C,EACZ83C,EAAOf,EAAKY,EACZI,EAAOf,EAAKh3C,EASZg4C,EAAWvqB,EAAIwqB,qBAAqBL,EAAMC,EAAMC,EAAMC,GAG5D,OAFAxB,EAAc/kC,SAAQ,SAAA5C,GAAA,IAAG/U,EAAK+U,EAAL/U,MAAOqjB,EAAMtO,EAANsO,OAAM,OAAO86B,EAASE,aAAal8B,WAAWkB,GAASrjB,MAEhFm+C,IAQFG,GAAQ,eAAAx1B,EAAAsE,aAAAC,KAAAC,MAAG,SAAAC,EACpBqG,EACArzB,EACAwzB,EACA7vB,EACAsJ,EACAwU,EACAwS,GAMC,IAAAvf,EAAA3E,EAAAiuC,EAAA3tC,EAAA8C,EAAA8qC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAn9C,EAAAN,EAAA+P,EAAA3O,EAAA3B,EAAAwB,EAAAE,EAAAD,EAAAw8C,EAAAt9C,EAAAD,EAAAI,EAAAgB,EAAAhC,EAAAmB,EAAAC,EAAAjB,EAAAsuB,EAAAhsB,EAAA27C,EAAAn+C,EAAA4H,EAAA6iC,EAAA1I,EAAAqc,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvC,EAAAC,EAAA7W,EAAAkF,EAAAjX,GAAAtrB,GAAAxC,GAAAk/B,GAAA8Y,GAAAiB,GAAA,OAAA/xB,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAG4C,GADrC5Y,EAA2Duf,EAA3Dvf,aAAc3E,EAA6CkkB,EAA7ClkB,OAAQiuC,EAAqC/pB,EAArC+pB,UAAW3tC,EAA0B4jB,EAA1B5jB,MAAO8C,EAAmB8gB,EAAnB9gB,eAC1C8qC,EAAoB,OAATD,QAAS,IAATA,OAAS,EAATA,EAAWxjB,WAAW,QACnCnH,GAAO4qB,GAAYj+C,GAAK,CAAAotB,EAAAE,KAAA,SAoIxB,GApIwB+wB,EAAAh/C,wBAAA,G3CrGU,CACtC6B,KAAM,UACNN,UAAW,UACX+P,kBAAmB,UACnB9O,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,S2CsG8BmhB,GAjB/BvgB,EAAIm9C,EAAJn9C,KACAN,EAASy9C,EAATz9C,UACA+P,EAAiB0tC,EAAjB1tC,kBACA3O,EAAUq8C,EAAVr8C,WACA3B,EAASg+C,EAATh+C,UACAwB,EAAWw8C,EAAXx8C,YACAE,EAAas8C,EAAbt8C,cACAD,EAAau8C,EAAbv8C,cACYw8C,EAAiBD,EAA7Bj+C,WACAY,EAASq9C,EAATr9C,UACAD,EAASs9C,EAATt9C,UACAI,EAAWk9C,EAAXl9C,YACAgB,EAAWk8C,EAAXl8C,YACAhC,EAAWk+C,EAAXl+C,YACAmB,EAAa+8C,EAAb/8C,cACAC,EAAa88C,EAAb98C,cACAjB,EAAO+9C,EAAP/9C,QAAOsuB,EAEoE,QAFpEsvB,EAE2Cx7C,EAAkB,OAAPpC,QAAO,IAAPA,IAAW,WAAG,IAAA49C,IAAI,GAA3Et7C,EAAYgsB,EAAZhsB,aAAyB27C,EAAgB3vB,EAA3B/rB,UAChBzC,EAAak+C,EAEnBjrB,EAAIe,UAAY,OACZ/zB,IACAgzB,EAAIxxB,YAAcA,EAClBwxB,EAAIvxB,cAAgBA,EACpBuxB,EAAItxB,cAAgBA,EACpBsxB,EAAIrxB,WAAaA,GAEjBs8C,IACAjrB,EAAItyB,UAAYA,EAChBsyB,EAAIne,YAAclU,GAEhBgH,EAAQ3I,wBAAA,IAC+C,QAAtD8+C,EAACt2C,GAAgB3G,UAAqC,IAAAi9C,IAAIt2C,GAAgBC,SAASE,UAAQ,IAC9F2I,sBAEEk6B,EAAa9pB,GAAiB,CAChCS,cAAexZ,EAAS9G,KACxBogB,YAAatZ,EAASpB,SAAS,GAAGM,SAClCga,cAAelZ,EAAS6C,SAEtBs3B,EAAW,CACbQ,UAAW,EACX36B,WACA06B,YAAamI,GAEX2T,EAAsBtV,GACxBlpC,EACA+P,EACA,CAAEq5B,WAAW,EAAOj2B,iBAAgBo2B,eAAgB,iBAIlDkV,EAA4B,QAAX1uC,EACjB,CAACyuC,GACDA,EAAoB9oC,MAAM,IAAItI,OAAO,MAADT,OjCvHf,mEiCuHyC,MAAM,MACpE+xC,EAAgC39B,GAAiB,CACnDS,cAAexZ,EAAS9G,KACxBogB,YAAatZ,EAASpB,SAAS,GAAGM,SAClCga,cAAelZ,EAAS6C,SAEtB8zC,EAAcD,EAA8B58B,UAC5C88B,EAAcF,EACfn8B,SAAQ,SAAAxd,GAAG,OAAIA,EAAMiD,EAASxB,mBAC9B6b,SAAS,cACTK,UAAU1a,EAASzB,YACnBub,UACDu6B,EAAY,EACZC,EAAa,EACjBmC,EAAernC,SAAQ,SAACrS,EAAKke,GACzBoQ,EAAInyB,KAAO+hB,EAAQ,IAAM,EAAI07B,EAAcC,EAE3C,IAAME,EAAazrB,EAAIqB,YAAY3vB,EAAIkU,WAAWlL,GAAoB,KACtEsuC,EAAYx8B,KAAKP,IAAI+8B,EAAWyC,EAAWC,yBAC3CzC,EAAaz8B,KAAKP,IAAIg9B,EAAYwC,EAAWE,4BAC9C,GAEH3rB,EAAInyB,KAAOy9C,EAEPlZ,EAAkB,EAChBkF,EAA0BnqB,IAC5B,SAAAjB,GAAW,IAADyrB,EACwC5G,GAAe,CACzD/Q,MACA9T,SACA8kB,cAAe,CAACma,GAChBzuC,SAAQoyB,WACRl1B,UALIw3B,EAAgBuG,EAAhBvG,iBAAkBD,EAAewG,EAAfxG,gBAQ1B,QAAIC,EAAmB,KACvBgB,EAAkBjB,EAAgB,GAAGiB,iBAC9B,MAGT/R,GAASiX,EAA0B,IACnCviC,GAAS,EAEfirB,EAAIqK,MAAMhK,GAAQtrB,IAGZxC,GAAsC,QAA/Bw4C,EAAGp2C,EAASpB,SAAS,GAAGhB,eAAO,IAAAw4C,IAAI94C,EAAoBM,QAC9Dk/B,GAAYnH,GAAa6gB,GACzBZ,GAAWnY,EAAkB,GAAKtlC,EAClC87C,GACE5oB,EACA/xB,EACAyhB,GAAaxhB,GACbiyB,EACAiS,EACA9hC,EACA04C,EAAWC,QAEbhmC,EAIN+c,EAAIzyB,UAAoB,OAARg9C,SAAQ,IAARA,MAAYh9C,EAC5BulC,GAAS,CACL9S,MACAyR,aACApR,UAAQtrB,UACRxE,SAAU4vB,EAAM7vB,eAChBw+B,WACApyB,SACA8sB,WAAY,SAAA9M,GAAkD,IAA/CsD,EAAGtD,EAAHsD,IAAKiI,EAAMvL,EAANuL,OAAQiC,EAAUxN,EAAVwN,WAAYD,EAAcvN,EAAduN,eACpCjK,EAAImB,SAAS8G,EAAQiC,EAAYD,GAAkB5oB,EAAe9O,GAAU,QAShFhD,IAAgBo7C,EAAS,CAAA5wB,EAAAE,KAAA,SAEzB,OADA+F,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCvS,EAAAE,KAAA,GACMyK,GAAUkmB,EAAS,eAADtxC,OAAiB0D,EAAK,QAAQ,EAAG,GAAG,KAAD,UAAA+c,EAAAE,KAAA,GACrDyK,GAAUkmB,EAAS,8BAADtxC,OAAgC0D,EAAK,QAAQ,EAAG,GAAG,KAAD,GACrB,OAArD4tC,EAASloB,yBAA2BwoB,EAAiBnxB,EAAAE,KAAA,GAC/CyL,GACFklB,EAAS,eAADtxC,OAAiB/J,EAAY,QACrC4wB,EAAM7vB,EAAe04C,EACrBpvC,EACAovC,EAAYC,GACd,KAAD,GACDjpB,EAAI0C,yBAA2B,YAC/B1C,EAAIkE,UAAUymB,EAAW,EAAG,GAC5B3qB,EAAIqK,MAAMhK,GAAQtrB,IAClBirB,EAAI0C,yBAA2B,cAM/BoQ,GAAS,CACL9S,MACAyR,aACApR,UAAQtrB,UACRxE,SAAU4vB,EAAM7vB,eAChBw+B,WACApyB,SACA8sB,WAAY,eACb,QAIHz8B,IACAizB,EAAI0C,yBAA2B,mBAC/BoQ,GAAS,CACL9S,MACAyR,aACApR,UAAQtrB,UACRxE,SAAU4vB,EAAM7vB,eAChBw+B,WACApyB,SACA8sB,WAAY,SAAAvG,GAAkD,IAA/CjD,EAAGiD,EAAHjD,IAAKiI,EAAMhF,EAANgF,OAAQiC,EAAUjH,EAAViH,WAAYD,EAAchH,EAAdgH,eACpCjK,EAAI4rB,SAAW,QACf5rB,EAAIoB,WACA6G,EACAiC,EAAap8B,EACbm8B,EAAiBn7B,GAAeuS,EAAe9O,GAAU,QAKzEytB,EAAI0C,yBAA2B,cAC/B1C,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAE1Bkf,G3CrS4B,CACtC39C,KAAM,UACNN,UAAW,UACX+P,kBAAmB,UACnB9O,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,Q2CoRL+yB,EAAIzyB,UAAYi+C,GAAiBj+C,UACjCyyB,EAAIxxB,YAAcg9C,GAAiBh9C,YACnCwxB,EAAIvxB,cAAgB+8C,GAAiB/8C,cACrCuxB,EAAItxB,cAAgB88C,GAAiB98C,cACrCsxB,EAAIrxB,WAAa68C,GAAiB78C,WAClCqxB,EAAItyB,UAAY89C,GAAiB99C,UACjCsyB,EAAIne,YAAc2pC,GAAiB79C,UACnCqyB,EAAI4rB,SAAW,QACf5rB,EAAI0C,yBAA2B,cAAc,yBAAA3I,EAAAY,UAAAhB,OAEpD,gBA5NoB0B,EAAAU,EAAA8G,EAAA+B,EAAAQ,EAAAC,EAAAC,GAAA,OAAApQ,EAAA0F,MAAA,KAAA5X,YAAA,GC3Ef6oC,GAAkC,CACpCl7C,MAAO,EACPC,OAAQ,EACRC,MAAO,GAEEi7C,GAAsB,SAAH3qC,GAczB,IAAD4qC,EAAAC,EAbFhsB,EAAG7e,EAAH6e,IACArzB,EAAKwU,EAALxU,MACA+P,EAAMyE,EAANzE,OACAhJ,EAAYyN,EAAZzN,aACA2a,EAAIlN,EAAJkN,KACAvO,EAAcqB,EAAdrB,eAAcoV,EAc8B,QAd9B62B,EAcsB,QAdtBC,EAcVv7C,EAAyBiM,UAAO,IAAAsvC,OAAA,EAAhCA,EAAmC39B,UAAK,IAAA09B,IAAIt7C,EAA8B,IAAU,OAACw7C,EAAA/2B,EAJrFpkB,qBAAa,IAAAm7C,EAAG,OAAMA,EACtB17C,EAAQ2kB,EAAR3kB,SACAD,EAAY4kB,EAAZ5kB,aACWsJ,EAAKsb,EAAhB7kB,UAEEsE,EtCwK6D,CACnEjE,IAAKuH,GACLlH,IAAKoH,IsC1KqCuE,GACtChJ,IAAciB,EAASjB,aAAeA,GAAa,IAC/C7F,EAAS8G,EAAT9G,KACFyhC,EAAYuc,GAAQx9B,GACpBqc,EAAe/1B,EAASpB,SAAS+7B,GACjCkI,EAAa9pB,GAAiB,CAChCS,cAAetgB,EACfogB,YAAY,GAAD3U,OAAKoxB,EAAa72B,SAAQ,QAEnCi7B,EAAW,CACbQ,YACA36B,WACA06B,YAAamI,GAEbpF,EAAkB,EAEtBpS,EAAInyB,KAAO2pC,EAAW/oB,UACtBuR,EAAIe,UAAY,OAChB,IAAMqV,EAAiBP,GAAkBlpC,EAAO+P,EAAQ,CAAEq5B,WAAW,EAAOj2B,mBAgBtEugB,EAf0BlT,IAC5B,SAAAjB,GAAW,IAADyrB,EACwC5G,GAAe,CACzD/Q,MACA9T,SACA8kB,cAAe,CAACoF,GAChB15B,SAAQoyB,WACRl1B,UALIw3B,EAAgBuG,EAAhBvG,iBAAkBD,EAAewG,EAAfxG,gBAQ1B,QAAIC,EAAmB,KACvBgB,EAAkBjB,EAAgB,GAAGiB,iBAC9B,MAG0B,IAEzCpS,EAAIqK,MAAMhK,EADK,GAEf,IAAM/V,EAASwoB,GAAS,CACpB9S,MACAyR,UAAWnH,GAAa8L,GACxB/V,SAAQtrB,OALG,EAMXxE,SAA4B,SAAlBO,EAA2BP,EAAYA,EAAW6hC,EAAkB/R,EAC9E/vB,eACAw+B,WACApyB,SACA8sB,WAAY,SAAAjO,GAAkD,IAA/CyE,EAAGzE,EAAHyE,IAAKiI,EAAM1M,EAAN0M,OAAQiC,EAAU3O,EAAV2O,WAAYD,EAAc1O,EAAd0O,eACpCjK,EAAImB,SAAS8G,EAAQiC,EAAYD,MAKzC,OAFAjK,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEhCtgC,wBAAA,GACOse,GAAM,IACT+V,YAIK6rB,GAAe,eAAAjpB,EAAAzJ,aAAAC,KAAAC,MAAG,SAAAC,EAAA+C,GAAA,IAAAsD,EAAAjhB,EAAAvB,EAAAd,EAAAM,EAAAqR,EAAA89B,EAAAzT,EAAA54B,EAAAssC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7lB,EAAA8lB,EAAAjZ,EAAApT,EAAA9tB,EAAA23C,EAAAyC,EAAAxsB,EAAAC,EAAA,OAAA3G,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASb,GARd+F,EAAGtD,EAAHsD,IACAjhB,EAAW2d,EAAX3d,YACAvB,EAASkf,EAATlf,UACAd,EAAMggB,EAANhgB,OACAM,EAAK0f,EAAL1f,MACAqR,EAAIqO,EAAJrO,KACA89B,EAASzvB,EAATyvB,UACAzT,EAAShc,EAATgc,UACA54B,EAAc4c,EAAd5c,eAYK4hB,GAAY1B,GAAK,CAADjG,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAYZ,GAVHgxB,EAAsBrtC,EAAYqD,OAAS,EAE3CkqC,EAAsBvtC,IADtBstC,EAAe7uC,IAAcjR,GAAoB,UAAT8hB,GlCpHpB,SkCsHa,IACjCk+B,EAA4BH,EACjB,QAAX1vC,EACa,UAAT2R,EAAgB,gBAAA/U,OACNgzC,EAAmB,qBAAAhzC,OACrBgzC,EAAmB,KAAG,SAAAhzC,OAC1BgzC,EAAmB,UAC3B,GACDF,EAAoB,CAADryB,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAmBgB,GAhBlCoxB,EAAmBxrC,GAAgBhE,KAAW6D,GAAgB,CAAE7D,WAAqB,UAATqR,EAC5E,UACA,UACAo+B,EAAezgD,YAAA,CAAKI,MAAOogD,GAAqB9T,GAChD9R,EAAa5D,GAAYh3B,YAAC,CAAEg0B,OAAQysB,IAAkBC,EACvBZ,GAAoB,CACrD9rB,MACAtjB,SACA2R,OACA1hB,MAAO4/C,EACP74C,aAAey4C,OAAwBlpC,EAAZ,UAC3BnD,mBANI2zB,EAAgBiZ,EAAhBjZ,iBAAkBpT,EAAMqsB,EAANrsB,OAQ1BuG,IAEIr0B,EAAqB,QAAXmK,GAAoB,EAAI,EAClCwtC,EAAqB,QAAXxtC,GAAoB,EAAI,GAElC2vC,EAAa,CAADtyB,EAAAE,KAAA,SACU,OADV0yB,EACelZ,EAAiB,GAApCtT,EAAIwsB,EAAJxsB,KAAMC,EAAQusB,EAARvsB,SAAQrG,EAAAE,KAAA,GAChByL,GACF1F,EAAI,uBAAD1mB,OACoBkE,EAAU8f,cAAa,SAC9C,SAAAjwB,GAAK,OAAI8yB,EAA4B,KAArB9yB,EAAMu/C,aAAuBvsB,EAAS6pB,KACtD,SAAA78C,GAAK,OAAI+yB,EAAgC,GAArB/yB,EAAMu/C,aAAqBr6C,KAC/C,SAAAlF,GAAK,OAAIA,EAAMu/C,gBACf,SAAAv/C,GAAK,OAAIA,EAAMu/C,gBACjB,KAAD,GAAA7yB,EAAAE,KAAA,kCAAAF,EAAAY,UAAAhB,OAgBR,gBAhF2B0B,GAAA,OAAA4H,EAAArI,MAAA,KAAA5X,YAAA,GC5Ff6pC,GAAY,SACrB7sB,EACArzB,EACAwzB,EACAC,GAEA,GAAIJ,GAAOrzB,EAAO,CAEdqzB,EAAInyB,KAAI,GAAAyL,OADS,KACK,0BACtB0mB,EAAIe,UAAY,OAEhB,IACM+rB,EAAY,GAAAxzC,OAAG3M,GAAQ0V,MAAM,IAC/B0sB,EAAa,EAEjB+d,EAAU/oC,SAAQ,SAAAgpC,GACdhe,GAAc/O,EAAIqB,YAAY0rB,GAAOnzC,OAAmB,MAAVmzC,EAL1B,IAK4D,MAEpF,IAAIC,EAAU7sB,EAAO4O,EAAa,EAElC+d,EAAU/oC,SAAQ,SAAAgpC,GACd/sB,EAAImB,SAAS4rB,EAAiB,MAAVA,EAAgBC,EAAU,EAAIA,EAAS5sB,EAd9C,MAeb4sB,GAAWhtB,EAAIqB,YAAY0rB,GAAOnzC,OAAmB,MAAVmzC,EAXvB,IAWyD,QAiC5EE,GAAe,SACxBjtB,EACArzB,EACAwzB,EACAC,GAEA,GAAKJ,EAAL,CAEAA,EAAIqK,MAAM,EAAG,KACbrK,EAAInyB,KAAO,2BACX,IAAMq/C,EAAiBzsB,GAAwBT,EAAKrzB,EAAO,KAAOwzB,EAAMC,EAAW,KACnFJ,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCtM,EAAIqK,MAAM,EAAG,MACbrK,EAAInyB,KAAO,2BACX4yB,GAAwBT,EAAK,IAAK,IAAMktB,EAAiB,EAAG9sB,EAAW,MACvEJ,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,KAIvB6gB,GAAW,SACpBntB,EACArzB,EACAwzB,EACAC,GAEA,GAAKJ,GAAgB,MAATrzB,EAAZ,CAEA,IAAMygD,EAAY,MAClB,GAAc,WAAVzgD,EACAqzB,EAAIe,UAAY,QAChBf,EAAInyB,KAAO,mBACXmyB,EAAImB,SAASx0B,EAAOwzB,EAAOitB,EAAWhtB,QAE1C,GAAc,MAAVzzB,EACAqzB,EAAIe,UAAY,QAChBf,EAAInyB,KAAO,mBACXmyB,EAAImB,SAASx0B,EAAOwzB,EAAOitB,EAAWhtB,OACnC,CACHJ,EAAIe,UAAY,OAChB,IAAMssB,EAAgB,GAAA/zC,OAAG3M,GAAQ0V,MAAM,KAEnC0sB,EAAase,EAAc77C,QAAO,SAACwoB,EAAMsX,EAAM1hB,GAC/CoQ,EAAInyB,KAAO,2BACX,IAAIy/C,EAAYtzB,EAAOgG,EAAIqB,YAAYiQ,GAAM13B,MAO7C,OALIgW,EAAQy9B,EAAcjrC,OAAS,IAC/B4d,EAAInyB,KAAO,cACXy/C,GAAattB,EAAIqB,YAAY,KAAKznB,OAG/B0zC,IACR,GAEH,GAAIve,EAAa,EAAG,CAChB,IAAMwe,EAAgB/gC,KAAKR,IAAIohC,EAAYre,EAAY,GAEvD/O,EAAIqK,MAAMkjB,EAAe,GACzBF,EAAc77C,QAAO,SAACwoB,EAAMwzB,EAAG59B,EAAO69B,GAClC,IAAMC,EAAUD,EAAIA,EAAIrrC,OAAS,EAAIwN,GACjC+9B,EAAW3zB,EAWf,OAVAgG,EAAInyB,KAAO,2BACX8/C,GAAY3tB,EAAIqB,YAAYqsB,GAAS9zC,MAAQ2zC,EAC7CvtB,EAAImB,SAASusB,EAASC,EAAWJ,EAAentB,GAE5CxQ,EAAQy9B,EAAcjrC,OAAS,IAC/B4d,EAAInyB,KAAO,mBACX8/C,GAAY3tB,EAAIqB,YAAY,KAAKznB,MAAQ2zC,EACzCvtB,EAAImB,SAAS,IAAKwsB,EAAWJ,EAAentB,IAGzCutB,IACRxtB,EAAOitB,GACVptB,EAAIqK,MAAM,EAAIkjB,EAAe,OC7E7B1tB,GAER31B,EADO41B,GACP51B,EAgBS0jD,GAAsB,SAACt0B,EAAiBu0B,EAA+BlgC,GAAuB,IAEnGjN,EACAyd,KADAzd,KAGAotC,EAiBAD,EAjBAC,cACAC,EAgBAF,EAhBAE,iBACAC,EAeAH,EAfAG,oBACAC,EAcAJ,EAdAI,eACAC,EAaAL,EAbAK,iBACAC,EAYAN,EAZAM,gBACAC,EAWAP,EAXAO,cACAC,EAUAR,EAVAQ,kBACAC,EASAT,EATAS,wBACAC,EAQAV,EARAU,uBACAC,EAOAX,EAPAW,eACAC,EAMAZ,EANAY,cACAC,EAKAb,EALAa,iBACAC,EAIAd,EAJAc,kBACAC,EAGAf,EAHAe,cACAC,EAEAhB,EAFAgB,gBACAC,EACAjB,EADAiB,kBAGApyC,EAiBAgE,EAjBAhE,OACA0B,EAgBAsC,EAhBAtC,cAAetS,EAgBf4U,EAhBe5U,eACfkR,EAeA0D,EAfA1D,MAAOC,EAePyD,EAfOzD,KAAMC,EAebwD,EAfaxD,OAAQC,EAerBuD,EAfqBvD,UAAWtR,EAehC6U,EAfgC7U,QAChCrB,EAcAkW,EAdAlW,KAAM6S,EAcNqD,EAdMrD,UAAWD,EAcjBsD,EAdiBtD,cACjB6C,EAaAS,EAbAT,gBAAiBC,EAajBQ,EAbiBR,kBAAmBF,EAapCU,EAboCV,cAAeD,EAanDW,EAbmDX,cACnDb,EAYAwB,EAZAxB,OACAF,EAWA0B,EAXA1B,YACAD,EAUA2B,EAVA3B,YACAnT,GASA8U,EATA9U,WAAY+S,GASZ+B,EATY/B,cAAeC,GAS3B8B,EAT2B9B,eAAgBE,GAS3C4B,EAT2C5B,kBAAmBD,GAS9D6B,EAT8D7B,iBAC9DO,GAQAsB,EARAtB,IAAKC,GAQLqB,EARKrB,IAAKX,GAQVgC,EARUhC,QACVnB,GAOAmD,EAPAnD,UACAE,GAMAiD,EANAjD,SAAUD,GAMVkD,EANUlD,UAAWE,GAMrBgD,EANqBhD,KAAMC,GAM3B+C,EAN2B/C,cAC3BwB,GAKAuB,EALAvB,MACAG,GAIAoB,EAJApB,SAAUO,GAIVa,EAJUb,QAASN,GAInBmB,EAJmBnB,QACnBK,GAGAc,EAHAd,aACAJ,GAEAkB,EAFAlB,eAAgBG,GAEhBe,EAFgBf,mBAAoBF,GAEpCiB,EAFoCjB,YAAaC,GAEjDgB,EAFiDhB,iBACjDI,GACAY,EADAZ,eAGEivC,GAAkBC,iBAAwC,CAC5DhyC,MAAO,CACHxS,KAAM,QACN6uB,MAAO,EACP41B,MAAO,EACPC,WAAY,kBAAM1sB,QAAQC,YAE9BllB,UAAW,CACP/S,KAAM,YACN6uB,MAAO,EACP41B,MAAO,EACPC,WAAY,kBAAM1sB,QAAQC,YAE9BljB,QAAS,CACL/U,KAAM,UACN6uB,MAAO,EACP41B,MAAO,EACPC,WAAY,kBAAM1sB,QAAQC,YAE9B5iB,QAAS,CACLrV,KAAM,UACN6uB,MAAO,EACP41B,MAAO,EACPC,WAAY,kBAAM1sB,QAAQC,YAE9Bj4B,KAAM,CACFA,KAAM,OACN6uB,MAAO,EACP41B,MAAO,EACPC,WAAY,kBAAM1sB,QAAQC,YAE9B1jB,YAAa,CACTvU,KAAM,cACN6uB,MAAO,EACP41B,MAAO,EACPC,WAAY,kBAAM1sB,QAAQC,YAE9B0sB,QAAS,CACL3kD,KAAM,UACN6uB,MAAO,EACP41B,MAAO,EACPC,WAAY,kBAAM1sB,QAAQC,cAI5B+Z,GAAgC,SAAlB79B,GACd/S,GACI,QACAoR,EACJ2B,GAEAM,GAA8B,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAaC,iBAEhC64B,GlCpKiB,SAACp3B,GACxB,MAAsB,WAAfA,EAAK1D,OAAsB4D,GAAaF,GkCmK9B0uC,CAAY1uC,GACvBg8B,GAAQj8B,GAASC,GACjB46B,GAAS36B,GAAUD,GACnByrC,GAAYvrC,GAAaF,GACzBW,GAAeR,GAAgBH,GAAM2uC,GAETxjD,EAA1BxB,aAAI,IAAAglD,GAAG,IAAGA,GAAEzkD,GAAciB,EAAdjB,UACd0kD,MAAmBjlD,GAAO,IAAMO,IAChCysC,GAAc,CAAC,MAAO,eAAgB,cAAe,QAAS,OAAQ,UAAUp2B,SAASu7B,IACzFl7B,GAAcP,GAAiB/D,GAAOuyC,GAOxCC,mBAAQ,WACR,OC7KoB,SAAHruC,GACVA,EAAXk2B,YAeG,IAdH/1B,EAAWH,EAAXG,YACAguC,EAAanuC,EAAbmuC,cACArvC,EAAekB,EAAflB,gBACAC,EAAiBiB,EAAjBjB,kBACAH,EAAaoB,EAAbpB,cACAC,EAAamB,EAAbnB,cAUMyvC,EAAa,CAAErjD,MAAOkV,EAAc,UAAY,WAChDouC,EAAaJ,EAAatjD,YAAA,CAExBq3B,KAAM,EACNplB,EAAG,EACHzP,YAAa8S,EAAc,UAAY,WACpCmuC,GAELA,EAAWE,EAAA72C,YAEkEmH,EAAe,GAA3F2vC,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAAEG,EAAeH,EAAA,GAAEI,EAAgBJ,EAAA,GACzEK,EAA2CJ,EAAgB5jD,wBAAA,GAErD8jD,EAAkB,CAAE7xC,EAAG,EAAGolB,KAAM,EAAG70B,YAAauhD,GAAqB,IAAI,GAAF,CAC3E3jD,MAAOyjD,IAET,GAAGI,EAAAn3C,YAE0GoH,EAAiB,GAA7HgwC,EAAwBD,EAAA,GAAEE,EAA2BF,EAAA,GAAEG,EAAuBH,EAAA,GAAEI,EAAwBJ,EAAA,GACzGK,EAAmDJ,EAAwBlkD,wBAAA,GAErEokD,EAA0B,CAAEnyC,EAAG,EAAGolB,KAAM,EAAG70B,YAAa6hD,GAA6B,IAAI,GAAF,CAC3FjkD,MAAO+jD,IAET,GAAGI,EAAAz3C,YAEkEkH,EAAa,GAAjFwwC,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAAEG,EAAaH,EAAA,GAAEI,EAAcJ,EAAA,GACjEK,EAAyCJ,EAAcxkD,wBAAA,GAEjD0kD,EAAgB,CAAEzyC,EAAG,EAAGolB,KAAM,EAAG70B,YAAamiD,GAAmB,IAAI,GAAF,CACvEvkD,MAAOqkD,IAET,GAAGI,EAAA/3C,YAEkEiH,EAAa,GAAjF+wC,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAAEG,EAAaH,EAAA,GAAEI,EAAcJ,EAAA,GAQvE,MAAO,CACHnB,aACAM,0BACAM,kCACAM,wBACAM,sBAZ2CJ,EAAc9kD,wBAAA,GAEjDglD,EAAgB,CAAE/yC,EAAG,EAAGolB,KAAM,EAAG70B,YAAayiD,GAAmB,IAAI,GAAF,CACvE7kD,MAAO2kD,IAET,IDoHKI,CAAa,CAChB9Z,eACA/1B,eACAguC,iBACArvC,kBACAC,oBACAH,gBACAC,oBAEL,CACCq3B,GACA/1B,GACAguC,GACArvC,EACAC,EACAH,EACAC,IAtBA0vC,GAAUH,GAAVG,WACAM,GAAuBT,GAAvBS,wBACAM,GAA+Bf,GAA/Be,gCACAY,GAAqB3B,GAArB2B,sBACAN,GAAqBrB,GAArBqB,sBAqBEQ,GAAsB5zC,GAAU6zC,cAChCC,GAAwBvyC,EAAY/D,KAAI,SAAAzQ,GAAI,OAAIA,EAAKizB,UAAQjkB,KAAgB,QAAXmD,EAAmB,SAAM,KAC3Fq7B,GAAkC,SAAlBp5B,IAA4B/S,MACzCwT,IAAOC,IAAQi8B,IAAU58B,GAAQ0D,QACpC+pC,GACAnU,GAA4B,SAAbv6B,GACf0uC,IAAa9qC,GACA,OAAb5D,IAAqB69B,GAGvBiW,GAIA5jC,EAJA4jC,eACAC,GAGA7jC,EAHA6jC,iBAAgBC,GAGhB9jC,EAFA8uB,qBAAY,IAAAgV,GAAG,SAAQA,GACvB71B,GACAjO,EADAiO,SAEE81B,GAAcp4B,IAA6B,IAAnBi4B,GAExB5U,GAAa6S,mBAAQ,kBAAM5tB,GAAkB1kB,EAAQrL,KAAY,CAACqL,IAClE0/B,GAAgB4S,mBAAQ,kBAAM5tB,GAAkB,CAACzkB,GAAYpL,KAAe,CAACoL,IAGnFw0C,qBAAU,WAAO,IAADC,EACZ,GAAKF,GAAL,CACA,IAAM1xB,EAA4B,QAAzB4xB,EAAG3D,EAAetvB,eAAO,IAAAizB,OAAA,EAAtBA,EAAwBzqB,WAAW,MACzCmV,EAAgByR,EAAiBpvB,QACjC4d,EAAmByR,EAAoBrvB,QAE7CowB,GAAgBpwB,QAAQ3hB,MAAMiyC,OAAS,EACvCF,GAAgBpwB,QAAQ3hB,MAAMkyC,WAAU11B,aAAAC,KAAAC,MAAG,SAAAC,IAAA,IAAAk4B,EAAA/T,EAAAjB,EAAAC,EAAAlyC,EAAAH,EAAAqnD,EAAAC,EAAAC,EAAAnT,EAAAE,EAAAC,EAAAoB,EAAAE,EAAAN,EAAAF,EAAAsB,EAAAI,EAAAO,EAAAI,EAAAI,EAAAK,EAAA6D,EAAAxD,EAAAI,EAAArC,EAAA6D,EAAApB,EAAAI,EAAAI,EAAAM,EAAAY,EAAAM,EAAAM,EAAAM,EAAAU,EAAAO,EAAAO,EAAAQ,EAAA5K,GAAAxyC,GAAAgnD,GAAAC,GAAA9T,GAAAE,GAAAE,GAAAC,GAAAC,GAAAC,GAAAC,GAAAhB,GAAAuU,GAAAC,GAAAC,GAAAC,GAAAC,GAAA3rB,GAAA,OAAAnN,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAClCg0B,EAAetvB,SAAY+C,GAAY1B,GAAI,CAAAjG,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBA4EM,OA1EhD0iB,EAAiB9xC,wBAAA,GAAQ5B,KAA4ByB,GAE5CgxC,EAIXiB,EAJApzC,UACMoyC,EAGNgB,EAHAzzC,KACAO,EAEAkzC,EAFAlzC,UACAH,EACAqzC,EADArzC,SAOEsnD,EAAejV,EAAc,GAAWD,GAJxCiV,EAAgB,SAAC9zC,EAAWC,EAAWu0C,EAAWC,GACpDzyB,EAAIzyB,UAAY6Q,EAAgB3T,EAAWN,EAC3C61B,EAAI0yB,SAAS10C,EAAGC,EAAGu0C,EAAGC,KAKZ,EAAG,EAAG3yB,GAAaD,IAAcmyB,EAuC3C3V,GAAsB,CACtBnW,OAAQ+nB,EAAetvB,QACvB2d,gBAAeC,mBACf7/B,SACAM,QAAOw/B,eACPp+B,gBACAtS,iBACAyR,aACAE,YAAUC,QACVT,OACAw/B,gBACA5wC,QAASiyC,EACTxC,UAAQj6B,gBAAcq7B,SACtB9wC,cACA+wC,cACAC,mBAnDAiC,EAASmT,EAATnT,UACAE,EAAWiT,EAAXjT,YACAC,EAAcgT,EAAdhT,eACAoB,EAAqB4R,EAArB5R,sBACAE,EAAgB0R,EAAhB1R,iBACAN,EAAQgS,EAARhS,SACAF,EAAakS,EAAblS,cAEAsB,EAAkB4Q,EAAlB5Q,mBACAI,EAAoBwQ,EAApBxQ,qBAEAO,EAAeiQ,EAAfjQ,gBACAI,EAAc6P,EAAd7P,eACAI,EAAayP,EAAbzP,cACAK,EAAkBoP,EAAlBpP,mBACA6D,EAAwBuL,EAAxBvL,yBACAxD,EAAgB+O,EAAhB/O,iBACAI,EAAc2O,EAAd3O,eACArC,EAAcgR,EAAdhR,eAEA6D,EAAmBmN,EAAnBnN,oBACApB,EAAiBuO,EAAjBvO,kBACAI,EAAoBmO,EAApBnO,qBACAI,EAAe+N,EAAf/N,gBAEAM,EAAcyN,EAAdzN,eACAY,EAAa6M,EAAb7M,cACAM,EAAoBuM,EAApBvM,qBACAM,EAAmBiM,EAAnBjM,oBACAM,EAA2B2L,EAA3B3L,4BACAU,EAAeiL,EAAfjL,gBACAO,EAAyB0K,EAAzB1K,0BACAO,EAAiBmK,EAAjBnK,kBACAQ,EAAoB2J,EAApB3J,qBAEA5K,GAAkCuU,EAAlCvU,mCAoBAlB,GAAoBvc,GAAKgf,IACzB1C,GAAiBtc,IAAQp1B,GAAWm0C,IAAchlB,EAAAE,KAAA,GAChD4kB,IAAY,KAAD,UAAA9kB,EAAAE,KAAA,GACXopB,IAAiB,KAAD,UAAAtpB,EAAAE,KAAA,GAChBouB,IAAuB,KAAD,MAGvBz8C,GAAW,CAADmuB,EAAAE,KAAA,YACNrvB,EAAU,CAADmvB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACJmnB,IAAqB,KAAD,UAAArnB,EAAAE,KAAA,GACpBunB,IAAuB,KAAD,UAAAznB,EAAAE,KAAA,GACtBgpB,IAAmB,KAAD,UAAAlpB,EAAAE,KAAA,GAElB4pB,IAAuB,KAAD,UAAA9pB,EAAAE,KAAA,GAE1BsoB,IAAgB,KAAD,UAAAxoB,EAAAE,KAAA,GACfwpB,IAAoB,KAAD,UAAA1pB,EAAAE,KAAA,GACnB8rB,IAAsB,KAAD,OAI3Bn6C,IAAe0vC,IAAW1wC,EAAS,CAAAmvB,EAAAE,KAAA,SAyBlC,OAvBGqiB,GAAiBtc,GAAOsc,EAAcziC,OAAS,IAChC5O,GAAgCqxC,EAAvC1iC,MAAyBq4C,GAAc3V,EAAtBziC,OAAMq4C,GAM3BzU,GAAmCnB,GAJnC8B,GAAa8T,GAAb9T,cAAeE,GAAa4T,GAAb5T,cACfE,GAAY0T,GAAZ1T,aACAC,GAAYyT,GAAZzT,aAAcC,GAAYwT,GAAZxT,aACdC,GAAgBuT,GAAhBvT,iBAAkBC,GAAiBsT,GAAjBtT,kBAItBkT,EACIrT,GAAcC,GACdC,GAAkBC,IAGtBI,EAAe,YACfhf,EAAIkE,UACAoY,EACA8B,GAAeE,GACfrzC,GAA2B,EAAhBmzC,GAAmB6T,GAAYzT,GAC1CC,GAAcC,GACdC,GAAkBC,KAEzB7kB,EAAAE,KAAA,GAEKmnB,IAAqB,KAAD,UAAArnB,EAAAE,KAAA,GACpBunB,GAAqB,GAAM,KAAD,UAAAznB,EAAAE,KAAA,GAI9BkrB,IAAgB,KAAD,UAAAprB,EAAAE,KAAA,GACfwrB,IAAuB,KAAD,OAGxB75C,IAAe0vC,IAAW1wC,EAAS,CAAAmvB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAC7BmmB,IAAwB,KAAD,UAAArmB,EAAAE,KAAA,GAEvB2oB,EAAmBmP,EAAc,UAAU,KAAD,UAAAh4B,EAAAE,KAAA,GAC1C2oB,EAAmBmP,EAAc90C,GAAM,KAAD,UAAA8c,EAAAE,KAAA,GACtCosB,IAA8B,KAAD,OAC/B0L,EAAa,CAADh4B,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAAQwsB,IAA2B,KAAD,MAGjD77C,EAAU,CAADmvB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACJ8sB,IAAkB,KAAD,UAAAhtB,EAAAE,KAAA,GACjBsqB,IAAiB,KAAD,OAEtBwN,EAAa,CAADh4B,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAAQqtB,IAA4B,KAAD,OAG/C18C,EAAU,CAADmvB,EAAAE,KAAA,cACLqhB,GAAO,CAADvhB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAEA8rB,IAAsB,KAAD,GAAAhsB,EAAAE,KAAA,qBACpBruB,GAAW,CAADmuB,EAAAE,KAAA,SAoBhB,GAlBK2jB,GAAmB/yC,EAA2BY,SAASL,MACvDP,EAA2BU,iBAAiBH,MAE9CkxC,GAAiBtc,GAAOsc,EAAcziC,OAAS,IAAGs4C,GAI9C1U,GACAnB,EAAatwC,oCAAA,GACR5B,KAA4ByB,GAAO,IAAExB,KAAM,IAAKO,WAAW,IAChEgzC,IALAa,GAAY0T,GAAZ1T,aAAcC,GAAYyT,GAAZzT,aACdC,GAAgBwT,GAAhBxT,iBAAkBC,GAAiBuT,GAAjBvT,kBAOtBkT,EACIrT,GAAcC,GACdC,GAAkBC,IAEtBI,EAAe,cAEf+S,EAAa,CAADh4B,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACN2oB,EAAmBmP,EAAc,UAAU,KAAD,UAAAh4B,EAAAE,KAAA,GAC1C2oB,EAAmBmP,EAAc90C,GAAM,KAAD,UAAA8c,EAAAE,KAAA,GAE1CosB,IAA8B,KAAD,UAAAtsB,EAAAE,KAAA,GAEjCmnB,IAAqB,KAAD,UAAArnB,EAAAE,KAAA,GACpBsqB,IAAiB,KAAD,UAAAxqB,EAAAE,KAAA,GAChBkoB,IAAiB,KAAD,GACkB,OAApC7F,GAAiBtc,GAAK+e,IAAchlB,EAAAE,KAAA,GAClCwrB,IAAuB,KAAD,OAGxB75C,IAAe0vC,GAAM,CAAAvhB,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,GACfunB,GAAqB,GAAM,KAAD,UAAAznB,EAAAE,KAAA,GAC1BmmB,IAAwB,KAAD,UAAArmB,EAAAE,KAAA,GACvB2oB,GAAmB,EAAO,UAAU,KAAD,UAAA7oB,EAAAE,KAAA,GACnC2oB,GAAmB,EAAO3lC,GAAM,KAAD,UAAA8c,EAAAE,KAAA,GAC/BwsB,IAA2B,KAAD,GAAA1sB,EAAAE,KAAA,0BAAAF,EAAAE,KAAA,IAE1BunB,IAAuB,KAAD,WAAAznB,EAAAE,KAAA,IACtBgpB,IAAmB,KAAD,WAAAlpB,EAAAE,KAAA,IAClB4pB,IAAuB,KAAD,WAAA9pB,EAAAE,KAAA,IAE1B8sB,IAAkB,KAAD,QAGvBhP,GAAa,CAADhe,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,IAAQ+mB,EAA0C,QAA5B6Q,EAACX,GAAsB9kD,aAAK,IAAAylD,IAAI,WAAW,KAAD,OAG3EjmD,KAAc0vC,GAAM,CAAAvhB,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,IACfqmB,EAAiB5hC,IAAS,KAAD,WAAAqb,EAAAE,KAAA,IACzBgqB,GAAgB,GAAO,KAAD,IACsC,OAA5Drd,GAAa5D,GAAYh3B,YAAC,CAAEg0B,OAAQkxB,KAAwBn3B,EAAAE,KAAA,IAC5D4hB,GAAmBoS,EAAetvB,QAAgB,OAAPjgB,SAAO,IAAPA,MAAW,GAAIwyC,IAAuB,KAAD,IACtFtqB,KAAa,gBAAA7M,EAAAE,KAAA,IAGX6lB,IAAgB,KAAD,WAAA/lB,EAAAE,KAAA,IACf4qB,IAAsB,KAAD,OACtBvJ,GAAO,CAADvhB,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,IAAQ+lB,EAAS,CAAE5xB,MAAOshC,GAAY/xC,mBAAiB,KAAD,OAC5D/S,EAAU,CAADmvB,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,IAAQkoB,IAAiB,KAAD,WAAApoB,EAAAE,KAAA,IAChC8nB,IAAkB,KAAD,WAAAhoB,EAAAE,KAAA,IACjBmhB,GAAmB,CACrBpb,MACA30B,KAAOgsC,KAAgBzrC,GAAc,QAAU,QAC/C2vC,UAAWuB,EAAc,IAAMlyC,KAAegB,GAC9C+T,sBAAoBF,eACpB67B,UAAQ1vC,gBACT,KAAD,WAAAmuB,EAAAE,KAAA,IACI4tB,IAAoB,KAAD,qBAAA9tB,EAAAY,UAAAhB,UAE9B,CACC+3B,GACA3D,EACAC,EACAC,EACAjxC,EACAN,EACA0B,EACAtS,EACAyR,GACAi/B,GACAv/B,EACAS,GACAC,GACAF,GACAkC,GACA27B,GACA1vC,GACA6T,GACA4B,GACAq7B,GACArF,GACA34B,GACAwyC,GACAtU,GACAD,GACA9wC,EACA4wC,GACA1E,GACA2X,GACA8B,KAIJG,qBAAU,WAAO,IAADgB,EACZ,GAAKjB,GAAL,CACA,IAAM1xB,EAAoC,QAAjC2yB,EAAGpE,EAAuB5vB,eAAO,IAAAg0B,OAAA,EAA9BA,EAAgCxrB,WAAW,MAElDzF,GAAY1B,IACbp0B,KACAihD,GAAU7sB,EAAsB,OAAjBlhB,SAAiB,IAAjBA,MAAqB,EAAG,KAAM,KAC7C+tC,GAAU7sB,EAAqB,OAAhBnhB,SAAgB,IAAhBA,MAAoB,EAAG,IAAO,SAElD,CAAC6yC,GAAa9lD,GAAYkT,GAAmBD,GAAkB0vC,IAGlEoD,qBAAU,WACDD,KACL3C,GAAgBpwB,QAAQn0B,KAAKykD,OAAS,EACtCF,GAAgBpwB,QAAQn0B,KAAK0kD,WAAU11B,aAAAC,KAAAC,MAAG,SAAAoB,IAAA,IAAA83B,EAAAC,EAAA7yB,EAAA2qB,EAAA,OAAAlxB,KAAAK,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAEc,GAD9C+F,EAA2B,QAAxB4yB,EAAGxE,EAAczvB,eAAO,IAAAi0B,OAAA,EAArBA,EAAuBzrB,WAAW,MACxCwjB,EAAiC,QAAxBkI,EAAGzE,EAAczvB,eAAO,IAAAk0B,OAAA,EAArBA,EAAuBlI,YAEpCjpB,GAAY1B,IAAS2qB,EAAS,CAAAxvB,EAAAlB,KAAA,eAAAkB,EAAAC,OAAA,wBAAAD,EAAAlB,KAAA,EAE7BywB,GACF1qB,EACAx1B,EACW,QAAXkS,EAAmB,GAAK,GAAI,IAC5Ba,KAActR,EACI,QAAXyQ,EAAmB,IAAM,IACd,QAAXA,EAAmB,IAAM,IAChCwE,GAAiB,CAAExE,SAAQM,QAAOK,YAAWD,gBAAeH,SAC5D,CAAEoE,gBAAc3E,SAAQiuC,YAAW3tC,QAAO8C,oBAC5C,KAAD,mBAAAqb,EAAAR,UAAAG,UAEN,CACC42B,GACAn0C,GACAN,EACAP,EACAM,EACA8C,GACAuB,GACA7W,EACA4jD,EACA/wC,EACAD,IAIJu0C,qBAAU,WAAO,IAADmB,EACZ,GAAKpB,GAAL,CACA,IAAM1xB,EAA2B,QAAxB8yB,EAAGrE,EAAc9vB,eAAO,IAAAm0B,OAAA,EAArBA,EAAuB3rB,WAAW,MAE9C,GAAKzF,GAAY1B,IAAS+X,GAA1B,CAEA,IAAMnR,EAAa5D,GAAYh3B,YAAC,CAAEg0B,OAAQkxB,KAC1CjE,GAAajtB,EAAK,MAAO,MAAQ,UACjCmtB,GAASntB,EAAK5gB,GAAK,QAAS,UACvBk8B,KACD2R,GAAajtB,EAAK,MAAO,OAAQ,UACjCmtB,GAASntB,EAAK3gB,GAAK,QAAS,WAEhCunB,QACD,CAAC8qB,GAAatyC,GAAKC,GAAKi8B,GAAQ6Q,GAAW+E,GAAuBzC,EAAe1W,KAGpF4Z,qBAAU,WAAO,IAADoB,EACZ,GAAKrB,GAAL,CACA,IAAM1xB,EAA4B,QAAzB+yB,EAAGvE,EAAe7vB,eAAO,IAAAo0B,OAAA,EAAtBA,EAAwB5rB,WAAW,MAE1CzF,GAAY1B,IDxaA,SACrBA,EACArzB,EACAi0B,GAEA,GAAKZ,EAAL,CAAiB,IAETp0B,EAAwDg1B,EAAxDh1B,WAAY0vC,EAA4C1a,EAA5C0a,OAAQ0X,EAAoCpyB,EAApCoyB,WAAYt2C,EAAwBkkB,EAAxBlkB,OAAQ26B,EAAgBzW,EAAhByW,YAC5C4b,EAAU,KACV1gD,EAAU,EACV2gD,EAAU,EACdlzB,EAAIzyB,UAAa8pC,IAAgBzrC,EAAc,UAAY,UAC3Do0B,EAAIxxB,YAAcwkD,EACZ3b,EAAc,UAAY,UAC1B,UACNrX,EAAIvxB,cAAgB,EACpBuxB,EAAItxB,cAAgB,EACpBsxB,EAAIrxB,WAAaqkD,IAAepnD,EAAa,EAAI,EACjDo0B,EAAInyB,KAAI,GAAAyL,OAAM05C,EAAa,OAAS,GAAE,6BACvB,QAAXt2C,IACAu2C,EAAU,KACV1gD,GAAW,EACX2gD,GAAW,GAGXtnD,EACA60B,GAAwBT,EAAKrzB,EAAOsmD,EAAS,MAAQC,EAAS,QAAU3gD,GACjE+oC,EACPha,GAAyBtB,EAAKrzB,EAAOsmD,EAAS,OAASC,EAAS,OAAS3gD,GAEzE+uB,GAAyBtB,EAAKrzB,EAAOsmD,EAAS,OAASC,EAAS,MAAS3gD,IC4YzE4gD,CACInzB,EACA7gB,GACA,CACIm8B,UAAQ1vC,cACRonD,WAAY1D,KAAkB1jD,GAC9B8Q,SACA26B,oBAGT,CAACqa,GAAah1C,EAAQ4+B,GAAQ1vC,GAAYyrC,GAAamX,EAAgBrvC,GAAOkC,GAAcm7B,GAAa8S,KAG5GqC,qBAAU,WAAO,IAADyB,EACZ,GAAK1B,GAAL,CACA,IAAM1xB,EAA+B,QAA5BozB,EAAG/E,EAAkB1vB,eAAO,IAAAy0B,OAAA,EAAzBA,EAA2BjsB,WAAW,MAClD,GAAKzF,GAAY1B,GAAjB,CAEA,IAAMqzB,EE1jBkB,SAAHlyC,GAgBtB,IAADmyC,EAAApc,EAfFlX,EAAG7e,EAAH6e,IACArzB,EAAKwU,EAALxU,MACA+P,EAAMyE,EAANzE,OACAqxB,EAAS5sB,EAAT4sB,UAASoJ,EAAAh2B,EACTi2B,sBAAc,IAAAD,EAAG,EAACA,EAClBE,EAAWl2B,EAAXk2B,YACArqC,EAASmU,EAATnU,UAUA,IAAK00B,GAAY1B,GAAM,OAAO,EAE9BA,EAAIzyB,UAAY8pC,EAAc,UAAY,UAC1CrX,EAAIxxB,YAAcxB,EACZqqC,EAAc,UAAY,UAC1B,UACNrX,EAAIvxB,cAAgB,EACpBuxB,EAAItxB,cAAgB,EACpBsxB,EAAIrxB,WAAa3B,EAAY,EAAI,EAiBjC,IAjBmC,IAAAkoB,EAE+C,QAF/Co+B,EAEkBriD,EAAsByL,UAAO,IAAA42C,IAAIriD,EAA2B,IAAzGV,EAAQ2kB,EAAR3kB,SAAUD,EAAY4kB,EAAZ5kB,aAAyBsJ,EAAKsb,EAAhB7kB,UAC1BkjD,EAAmB,WAAW7/B,KAAK/mB,GACnCgI,EAAWqD,GAAiB0E,GAC1B7O,EAAS8G,EAAT9G,KACFuoC,EAAiBP,GAAkBlpC,EAAO+P,EAAQ,CAAEq5B,WAAW,EAAOj2B,gBAAgB,IAGxFgvB,EAAW,CACXQ,UAAYikB,EAAuB,EAAJ,EAC/B5+C,WACA06B,YAAa3hB,MAEb0kB,EAAkB,EAClBkF,EAA0B,IAC1B5M,EAAe/1B,EAASpB,SAAS,GAAGgkC,EAAA,SAC/BjI,GACL5E,EAAe/1B,EAASpB,SAAS+7B,GACjC,IAAMkI,EAAa9pB,GAAiB,CAChCS,cAAetgB,EACfogB,YAAY,GAAD3U,OAAKoxB,EAAa72B,SAAQ,MACrCga,cAAe7gB,EAAY,OAAS,KAEpCyqC,EAAmB,CACnBnI,YACA36B,WACA06B,YAAamI,GAEbE,EAAoB,EAqBxB,GApBA1X,EAAInyB,KAAO2pC,EAAW/oB,UACtBuR,EAAIe,UAAY,OAChBuW,EAA0BnqB,IACtB,SAAAjB,GAAW,IAADyrB,EACwC5G,GAAe,CACzD/Q,MACA9T,SACA8kB,cAAe,CAACoF,GAChB15B,SAAQoyB,SAAU2I,EAClB79B,UALIw3B,EAAgBuG,EAAhBvG,iBAAkBD,EAAewG,EAAfxG,gBAQ1B,QAAIC,EAAmB,KACvBsG,EAAoBvG,EAAgB,GAAGiB,iBAChC,MAIfA,EAAkBsF,EAClB5I,EAAW2I,EACPH,GAA2B,IAAM,eAjChChI,EAAY,EAAGA,EAAY36B,EAASpB,SAAS6O,QAApC,UAAyDm1B,EAAlEjI,GAAqDA,KAqC9D,IAAMjP,EAASiX,EAA0B,IAEzCtX,EAAIqK,MAAMhK,EADK,GAEf,IAAM/V,EAASwoB,GAAS,CACpB9S,MACAyR,UAAWnH,GAAa8L,GACxB/V,SAAQtrB,OALG,EAMXxE,SAAwB,SAAdw9B,EAAuBx9B,EAAYA,EAAW6hC,EAAkB/R,EAC1E/vB,aAAcA,GAAoC,QAAxB4mC,EAAIxM,EAAan4B,eAAO,IAAA2kC,IAAIjlC,EAAoBM,SAAW6kC,EACrFtI,WACApyB,SACA8sB,WAAY,SAAAjO,GAAkD,IAA/CyE,EAAGzE,EAAHyE,IAAKiI,EAAM1M,EAAN0M,OAAQiC,EAAU3O,EAAV2O,WAAYD,EAAc1O,EAAd0O,eACpCjK,EAAImB,SAAS8G,EAAQiC,EAAYD,MAKzC,OAFAjK,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEzBhiB,EAAOqpB,UF0dY6f,CAAiB,CACnCxzB,MACArzB,MAAO2S,GACP+3B,eACAtJ,UAAW,OACXrxB,SACA1P,UAA2B,SAAhBwvC,IAA0B8S,KAEzC,GAAI9vC,GACAwgB,EAAIzyB,UAAY8pC,GAAc,UAAY,UD9iBxB,SAC1BrX,GAKE,IAJFG,EAAInd,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACPod,EAAQpd,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,QACXo0B,EAAcp0B,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACjB4d,EAAM5d,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAE8d,QAAQ,GAEnB,GAAKd,EAAL,CAAiB,IAEsByzB,GAAN,OAAN7yB,QAAM,IAANA,IAAU,IAA7BE,cAAM,IAAA2yB,GAAQA,EAChBC,EAAkB,IACxB1zB,EAAInyB,KAAO,qCAEX,IAAI8L,EAAOwmB,EACXH,EAAImB,SAAS,IAAKxnB,EAAMymB,EAAWgX,GAC/BtW,GAAQd,EAAIoB,WAAW,IAAKznB,EAAMymB,GACtCzmB,GAAQqmB,EAAIqB,YAAY,KAAKznB,MAAQ,EAErComB,EAAInyB,KAAO,sCACXmyB,EAAImB,SAAS,KAAMxnB,EAAMymB,EAAWszB,EAAkBtc,GAClDtW,GAAQd,EAAIoB,WAAW,KAAMznB,EAAMymB,EAAWszB,GAClD/5C,GAAQqmB,EAAIqB,YAAY,MAAMznB,MAE9BomB,EAAInyB,KAAO,sCACXmyB,EAAImB,SAAS,WAAYxnB,EAAMymB,EAAWgX,GACtCtW,GAAQd,EAAIoB,WAAW,WAAYznB,EAAMymB,ICgiBrCuzB,CACI3zB,EAXSpgB,KAAiBhU,GACxB0vC,GAAS,IAAM,GACf9uB,KAAKP,IAAIonC,EAAgB,OAAQ,QAAqB,QAAX32C,EAAmB,GAAK,GAC1DkD,KAAiBhU,GAC1B,IACA,QACegU,KAAiBhU,GAChC,EACAyV,IAAgB,GAAK,OAShC,CACCqwC,GACAlyC,GACAF,GACA+uC,EACAhX,GACA36B,EACA4yC,GACAhU,GACAj6B,GACAzV,GACAgU,GACA48B,KAIJmV,qBAAU,WAAO,IAADiC,EACZ,GAAKlC,GAAL,CAEA,IAAM1xB,EAA8B,QAA3B4zB,EAAG1F,EAAiBvvB,eAAO,IAAAi1B,OAAA,EAAxBA,EAA0BzsB,WAAW,MAEjD4nB,GAAgBpwB,QAAQ9e,QAAQovC,OAAS,EACzCF,GAAgBpwB,QAAQ9e,QAAQqvC,WAAU11B,aAAAC,KAAAC,MAAG,SAAA8B,IAAA,IAAAq4B,EAAA/V,EAAAhB,EAAAlyC,EAAAkpD,EAAAC,EAAAC,EAAAC,EAAA,OAAAx6B,KAAAK,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACpCyH,GAAY1B,GAAK,CAADtE,EAAAzB,KAAA,eAAAyB,EAAAN,OAAA,iBAiB4B,GAf3C0iB,EAAiB9xC,wBAAA,GAAQ5B,KAA4ByB,GAEjDixC,EAENgB,EAFAzzC,KACAO,EACAkzC,EADAlzC,UAEEkpD,EAAmB9c,GAAgB,CACrChX,IAA6B,QAA1B6zB,EAAE3F,EAAiBvvB,eAAO,IAAAk1B,OAAA,EAAxBA,EAA0B1sB,WAAW,MAC1CzqB,SACA/P,MAAOkT,GACPkuB,UAAW,QACXqJ,eAAgB/1B,IAAgB,EAAI,EACpCrU,UAAWsiD,GACXjY,iBAEE0c,EAA8B,QAAXr3C,EAAmB,IAAM,IAC5Cs3C,EAA2B,QAAXt3C,EAAmB,GAAK,IAE1CgD,GAAiB,CAADgc,EAAAzB,KAAA,gBAAAyB,EAAAzB,KAAA,GACVwhB,GAAuB,CACzBzb,MACA30B,KAAOgsC,KAAgBzrC,GAAc,QAAU,QAC/C2vC,UAAWuB,EAAc,IAAMlyC,KAAegB,GAC9C0vC,UAAQ1vC,cACRgwC,aAAwC,QAA3BqY,EAAiB,OAAhBH,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBlc,gBAAQ,IAAAqc,IAAIF,GAAoBA,EAC1DC,EACA,EACNp0C,kBACD,KAAD,oBAAA8b,EAAAf,UAAAa,UAGX,CACCk2B,GACA7xC,GACAquC,EACAC,EACAzxC,EACAkD,GACAF,GACA47B,GACA1vC,GACAyV,GACAg2B,GACAxrC,EACAyjD,KAIJqC,qBAAU,WACDD,KAEL3C,GAAgBpwB,QAAQpf,QAAQ0vC,OAAS,EACzCF,GAAgBpwB,QAAQpf,QAAQ2vC,WAAU11B,aAAAC,KAAAC,MAAG,SAAAyC,IAAA,IAAA+3B,EAAA,OAAAz6B,KAAAK,MAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAAnC,KAAA,EAC5BkhB,GAAY,CACrBnb,IAA6B,QAA1Bk0B,EAAExF,EAAiB/vB,eAAO,IAAAu1B,OAAA,EAAxBA,EAA0B/sB,WAAW,MAC1C5nB,aACD,KAAD,SAAA6c,EAAAhB,OAAA,SAAAgB,EAAA/B,MAAA,wBAAA+B,EAAAzB,UAAAwB,UAEP,CAACu1B,GAAanyC,GAASmvC,IAG1BiD,qBAAU,WAAO,IAADwC,EAAAC,EACZ,GAAK1C,GAAL,CAEA,IAAM1xB,EAA6B,QAA1Bm0B,EAAGhG,EAAgBxvB,eAAO,IAAAw1B,OAAA,EAAvBA,EAAyBhtB,WAAW,MAC1CktB,EAA+B,QAAxBD,EAAGxF,EAAcjwB,eAAO,IAAAy1B,OAAA,EAArBA,EAAuBjtB,WAAW,MAElD4nB,GAAgBpwB,QAAQ5f,YAAYkwC,OAAS,EAC7CF,GAAgBpwB,QAAQ5f,YAAYmwC,WAAU11B,aAAAC,KAAAC,MAAG,SAAA6C,IAAA,IAAA+3B,EAAA,OAAA76B,KAAAK,MAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,UACxCyH,GAAY1B,IAAS0B,GAAY2yB,GAAQ,CAAA73B,EAAAvC,KAAA,eAAAuC,EAAApB,OAAA,iBAgB5C,OAdIk5B,EAAkBlc,GAAUpsC,wBAAC,CAC/Bg0B,MACAuY,QAASr5B,EACT44B,YACA74B,oBACAvC,SACAoD,mBACG+3B,GAA2B,CAC1Bn7B,SACAq7B,gBACAC,gBACAF,eACF,IACFY,UAAWsX,MACbxzB,EAAAvC,KAAA,EACIiyB,GAAgB,CAClBlsB,IAAKq0B,EACL33C,SACAM,QACA8C,kBACAqsC,aACAzT,UAAWkY,GACXviC,KAAO2pB,GAEmB,IAApBsc,EAAwB,SAAW,QADnC,QAEN92C,UAAW4zC,GACXryC,YAAauyC,KACd,KAAD,mBAAA90B,EAAA7B,UAAA4B,UAEP,CACCm1B,GACA1Z,GACAD,GACA94B,GACAC,EACAivC,EACAzxC,EACAM,EACA8C,GACAqsC,GACArU,GACA8Y,GACAZ,GACAoB,GACAE,GACA1C,IAIJ+C,qBAAU,WAAO,IAAD4C,EACZ,GAAK7C,GAAL,CACA,IAAM1xB,EAAqC,QAAlCu0B,EAAGjG,EAAwB3vB,eAAO,IAAA41B,OAAA,EAA/BA,EAAiCptB,WAAW,MAEnDzF,GAAY1B,IACbp0B,IACAwsC,GAAW,CACPpY,MACAuY,QAAS35B,GACTk5B,UAAU,EACVnjC,SAAUV,GAAuByI,GACjCg8B,UAAW4X,GACXnY,SAAU3nC,EACVyO,oBACAvC,SACAoD,uBAGT,CAAC4xC,GAAazyC,GAAkBvC,EAAQ9Q,GAAY0iD,EAAyB1vC,GAAgBkB,GAAgBwwC,KAGhHqB,qBAAU,WAAO,IAAD6C,EACZ,GAAK9C,GAAL,CACA,IAAM1xB,EAA6B,QAA1Bw0B,EAAG3F,EAAgBlwB,eAAO,IAAA61B,OAAA,EAAvBA,EAAyBrtB,WAAW,MAEhD4nB,GAAgBpwB,QAAQwwB,QAAQF,OAAS,EACzCF,GAAgBpwB,QAAQwwB,QAAQD,WAAU11B,aAAAC,KAAAC,MAAG,SAAAqiB,IAAA,OAAAtiB,KAAAK,MAAA,SAAAmiB,GAAA,cAAAA,EAAAjiB,KAAAiiB,EAAAhiB,MAAA,UACpCyH,GAAY1B,GAAK,CAADic,EAAAhiB,KAAA,eAAAgiB,EAAA7gB,OAAA,wBAAA6gB,EAAAhiB,KAAA,EACf0iB,GACF3c,EACA,iBACA,SAAAmoB,GAAW,OAAIzjB,GAAU1E,EAAI,iBAAD1mB,OAAmB6uC,EAAW,sBAAsB,EAAG,MACrF,KAAD,mBAAAlM,EAAAthB,UAAAohB,UAEN,CAAC2V,GAAa7C,EAAiBlS,GAAYnyC,IAE9C,IAAMiqD,GAAczF,iBAA+B,IAC7C0F,GAAWC,sBAAW,eAAAtZ,EAAA7hB,aAAAC,KAAAC,MAAC,SAAAgnB,EAAOkU,GAInC,IAAAC,EAAAjpD,EAAAC,EAAAipD,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5Y,EAAAY,EAAAhyC,EAAAC,EAAAF,EAAAgzC,EAAAC,EAAA,OAAAzkB,KAAAK,MAAA,SAAAinB,GAAA,cAAAA,EAAA/mB,KAAA+mB,EAAA9mB,MAAA,OA8CK,GA9CL46B,EAKOD,EAFAhpD,kBAAU,IAAAipD,GAAQA,EAClBhpD,EACA+oD,EADA/oD,QAEEipD,EAAYhH,EAAcnvB,QAC1Bo2B,EAAqB,OAATD,QAAS,IAATA,OAAS,EAATA,EAAW3tB,WAAW,MAElC6tB,EAAgB,SAClBG,EACAJ,GAEE,IADFK,EAAkBpyC,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAErB,OAAO,IAAIwf,SAAiB,SAAAC,GACxB4yB,YAAW,WACP,GAAKF,EAAYx2B,SAAYo2B,EAEzB,IACII,EAAYx2B,QAAQ22B,QAAO,SAAArvC,GACvB,GAAKA,EACA,CACD,IAAMsS,EAAM/R,IAAIC,gBAAgBR,GAChC,GAAKsS,EACA,CACD,IAAMg9B,EAAQ,IAAIjxB,MAClBixB,EAAMhxB,IAAMhM,EACZg9B,EAAMC,OAAS,WACXT,EAAU7wB,UAAUqxB,EAAO,EAAG,GAC9B/uC,IAAIivC,gBAAgBl9B,GACpBkK,GAAQ,IAEZ8yB,EAAMG,QAAU,WACZlvC,IAAIivC,gBAAgBl9B,GACpBkK,GAAQ,SAXNA,GAAQ,QAHXA,GAAQ,MAmBzB,MAAOxgB,GACL4D,QAAQC,MAAM7D,GACdwgB,GAAQ,QAzBwBA,GAAQ,KA4BpC,GAAb2yB,QAIPN,IAAaC,EAAS,CAAAhU,EAAA9mB,KAAA,SAC2C,OAAjE86B,EAAUpzB,UAAU,EAAG,EAAGz3B,EAAmBA,GAAoB62C,EAAA9mB,KAAA,EAC3DuI,QAAQwY,IAAI7rC,OACbC,OAAO2/C,GAAgBpwB,SACvBg3B,MAAK,SAACC,EAAGjzC,GAAC,OAAKizC,EAAEv8B,MAAQ1W,EAAE0W,SAC3Bre,KAAI,SAAA2gC,GAAkC,IAA/BuT,EAAUvT,EAAVuT,WAAYD,EAAKtT,EAALsT,MAAOzkD,EAAImxC,EAAJnxC,KACvB,OACe,IAAVykD,GAAewF,GAAY91B,QAAQn0B,KAAUykD,IAC1CwF,GAAY91B,QAAQn0B,IAExBiqD,GAAY91B,QAAQn0B,GAAQykD,EAErBC,KAEJ1sB,QAAQC,cACfozB,OAAM,SAAA5zC,GACN4D,QAAQC,MAAM7D,GAEd,IAAM7U,EAAM,4BACZwwB,KAAak4B,MAAM1oD,GACnBwwB,KAAa9X,MAAM,CACf1Y,MACAywB,QAASjC,GAAS,4BAClBkC,YAAalC,GAAS,qCAE3B,KAAD,EAiBN,OAfM0gB,EAAgByR,EAAiBpvB,UAClBo2B,IAAW7X,EACKvxC,EAAuBC,EAAYC,GAA5DX,EAAIgyC,EAAJhyC,KAAMC,EAAI+xC,EAAJ/xC,KAAMF,EAAQiyC,EAARjyC,SACLgzC,EAAoC3B,EAA3C1iC,OAA2BskC,EAAgB5B,EAAxBziC,QAET,GACdk7C,EAAU7wB,UACNoY,EACA,EAAG,EACH2B,EAAYC,EACZhzC,EAAMC,EACNF,EAAUA,GAAYgzC,EAAaC,KAI/C6C,EAAA9mB,KAAA,GACM+6B,EAAc/G,EAAgB8G,EAAW,GAAG,KAAD,UAAAhU,EAAA9mB,KAAA,GAC3C+6B,EAAc5G,EAAe2G,EAAW,GAAG,KAAD,UAAAhU,EAAA9mB,KAAA,GAC1C+6B,EAAcrG,EAAmBoG,EAAW,GAAG,KAAD,UAAAhU,EAAA9mB,KAAA,GAC9C+6B,EAAczG,EAAwBwG,EAAW,GAAG,KAAD,UAAAhU,EAAA9mB,KAAA,GACnD+6B,EAAc1G,EAAyByG,EAAW,GAAG,KAAD,UAAAhU,EAAA9mB,KAAA,GACpD+6B,EAAcpG,EAAemG,EAAW,GAAG,KAAD,UAAAhU,EAAA9mB,KAAA,GAC1C+6B,EAAc7G,EAAiB4G,EAAW,GAAG,KAAD,UAAAhU,EAAA9mB,KAAA,GAC5C+6B,EAAcvG,EAAesG,EAAW,GAAG,KAAD,UAAAhU,EAAA9mB,KAAA,GAC1C+6B,EAAcxG,EAAgBuG,EAAW,GAAG,KAAD,UAAAhU,EAAA9mB,KAAA,GAC3C+6B,EAAc3G,EAAmB0G,EAAW,GAAG,KAAD,UAAAhU,EAAA9mB,KAAA,GAC9C+6B,EAAc9G,EAAkB6G,EAAW,GAAG,KAAD,UAAAhU,EAAA9mB,KAAA,GAC7C+6B,EAActG,EAAkBqG,EAAW,GAAG,KAAD,UAAAhU,EAAA9mB,KAAA,GAC7C+6B,EAAcnG,EAAiBkG,EAAW,GAAG,KAAD,GAEzB,QAAzBE,EAAAnG,EAAkBnwB,eAAO,IAAAs2B,GAAkB,QAAlBC,EAAzBD,EAA2B9tB,WAAW,aAAK,IAAA+tB,GAA3CA,EAA6ChxB,UAAU4wB,EAAW,EAAG,GAAG,yBAAA/T,EAAApmB,UAAA+lB,OAE/E,gBAAArlB,GAAA,OAAAggB,EAAAzgB,MAAA,KAAA5X,YA/G2B,GA+GzB,CACC4Y,GACAmyB,EACAY,EACAT,EACAJ,EACAK,EACAU,EACAC,EACAV,EACAC,EACAC,EACAC,EACAC,EACAP,EACAQ,EACAC,EACAE,IAGJ,MAAO,CACHG,mBACA2F,c,4CGp3BR,IAAMqB,GAAgB,SAACC,EAA+B3oD,EAAgCjC,GAClF,IAAKiC,EAAO,OAAO2oD,EAAK,IACTC,EAAsDD,EAA7Dp8C,MAA0Bs8C,EAAmCF,EAA3Cn8C,OAAMs8C,EAAqCH,EAAvBh4C,SAAC,IAAAm4C,EAAG,EAACA,EAAAC,EAAkBJ,EAAhB/3C,SAAC,IAAAm4C,EAAG,EAACA,EAG1D,GAAa,OAHwDJ,EAAT93C,KAGzC,CACf,IAEe+/B,EAAoC5wC,EAA3CuM,MAA2BskC,EAAgB7wC,EAAxBwM,OAGrBw8C,EADsBnY,EAAcD,GAJZ,GACA,IAAM,IAI4B,EAC1DqY,EAAQ9pC,KAAKR,KAAM,OAADhO,QAAC,IAADA,IAAK,GAAKq4C,EAAYpY,GACxCsY,EAAQ/pC,KAAKR,KAAM,OAAD/N,QAAC,IAADA,IAAK,GAAKo4C,EAAYnY,GACxCsY,EAAWhqC,KAAKR,KAAc,OAATiqC,QAAS,IAATA,IAAa,GAAKI,EAAYpY,GAEzD,MAAO,CACH//B,KAAM,IACNF,EAAGs4C,EAAQrY,EAAa,IACxBhgC,EAAGs4C,EAAQrY,EAAc,IACzBtkC,MAAO48C,EAAWvY,EAAa,IAC/BpkC,OAAQ28C,GAAiB,OAALprD,QAAK,IAALA,IAAS,GAAK8yC,EAAc,IAChD//B,OAAQ/S,GAIhB,GAAI4S,EAAI,EAAG,OAAAhS,wBAAA,GAAYgqD,GAAI,IAAEh4C,EAAG,IAChC,GAAIC,EAAI,EAAG,OAAAjS,wBAAA,GAAYgqD,GAAI,IAAE/3C,EAAG,IAAI,IAC5Bw4C,EAAgCppD,EAAhCopD,cAAe7J,EAAiBv/C,EAAjBu/C,aACjBhzC,EAAiB,OAATq8C,QAAS,IAATA,IAAa,EACrBp8C,EAAmB,OAAVq8C,QAAU,IAAVA,IAAc,EAEvBQ,EAAkF,KAA/DD,EAAgB7J,EAAe6J,EAAgB7J,GAClE+J,EAAoBnqC,KAAKoqC,IAAI/8C,EAAS48C,EAAgBrrD,EAAQwO,EAAQgzC,IAAiB8J,EAE7F,OAAA1qD,wBAAA,GACOgqD,GAAI,IACPh4C,EAAGA,EAAI,EAAI,EAAIA,EACfC,EAAGA,EAAI,EAAI,EAAIA,EACfpE,OAAQ88C,EACF98C,EACAD,EAAQvM,EAAMu/C,aACVxhD,EACAiC,EAAMopD,cAChBt4C,OAAQ/S,KA8BHyrD,GAAeC,sBAA0C,SAAA31C,EAmBrD41C,GAAkB,IAlB/BzhC,EAAKnU,EAALmU,MACA0hC,EAAe71C,EAAf61C,gBACAxiC,EAASrT,EAATqT,UACAyiC,EAAQ91C,EAAR81C,SACAC,EAAiB/1C,EAAjB+1C,kBAAiBC,EAAAh2C,EACjBi2C,6BAAqB,IAAAD,EAAG,GAAEA,EAAAE,EAAAl2C,EAC1Bm2C,6BAAqB,IAAAD,EAAG,GAAEA,EAC1BE,EAAep2C,EAAfo2C,gBACA9iC,EAAQtT,EAARsT,SACA+iC,EAAar2C,EAAbq2C,cACAC,EAAet2C,EAAfs2C,gBACArsD,EAAK+V,EAAL/V,MAAKssD,EAAAv2C,EACLw2C,sBAAc,IAAAD,EAAG,aAASA,EAAAE,EAAAz2C,EAC1B02C,sBAAc,IAAAD,EAAG,aAASA,EAAAE,EAAA32C,EAC1B42C,oBAAY,IAAAD,EAAG,aAASA,EAAAE,EAAA72C,EACxB82C,iBAAS,IAAAD,EAAG,aAASA,EAAAE,EAAA/2C,EACrBg3C,yBAAiB,IAAAD,EAAG,aAASA,EAAAE,EAAAj3C,EAC7Bk3C,wBAAgB,IAAAD,EAAG,aAASA,EAEtBE,EAAgD,YAAtBpB,EAC1B,UACA,SACAt7B,EAAWa,KACX87B,EAAevJ,iBAAc,MAAMwJ,EAIrCC,mBAAsD,aAFtDC,EAEkE5/C,YAAA0/C,EAAA,GADlE,GAAAG,EAEoCF,mBAAS,GAAEG,EAAA9/C,YAAA6/C,EAAA,GAA5CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAAAG,EACAN,mBAA+BH,GAAwBU,EAAAlgD,YAAAigD,EAAA,GAApFE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAAAG,EACEV,mBAA+BH,GAAwBc,EAAAtgD,YAAAqgD,EAAA,GAAlFE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAAG,EACcd,mBAASrB,GAAsBoC,EAAA1gD,YAAAygD,EAAA,GAApEE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAAAG,EACRlB,oBAAS,GAAMmB,GAAA9gD,YAAA6gD,EAAA,GAAxC79B,GAAS89B,GAAA,GAAEC,GAAUD,GAAA,GAAAE,GACFrB,mBAAc,MAAKsB,GAAAjhD,YAAAghD,GAAA,GAAtCh0C,GAAKi0C,GAAA,GAAEC,GAAQD,GAAA,GAAAE,GACsBxB,mBAASnB,GAAsB4C,GAAAphD,YAAAmhD,GAAA,GAApEE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GAClCG,GAASrL,iBAAgC,MAAMsL,GAC7B7B,mBAAS,CAC7B95B,QAAS84B,EACT8C,UAAW,OACbC,GAAA1hD,YAAAwhD,GAAA,GAHKtE,GAAIwE,GAAA,GAAEC,GAAOD,GAAA,GAIpBE,GACkCjC,mBAAkC,MAAzBhB,EAAgBv5C,MAAay8C,GAAA7hD,YAAA4hD,GAAA,GAAjEE,GAAUD,GAAA,GAAEE,GAAWF,GAAA,GAEjBG,GAET9E,GAFAr3B,QACWo8B,GACX/E,GADAuE,UA2BES,GAAchM,iBAAO,CACvBtrB,OAAQ,GACRsyB,KAAM,OAEJiF,GAAStG,uBAAY,SAACuG,GAMxB,GALArB,IAAW,GACXG,GAAS,MACTrC,IACA0C,GAAO17B,QAAUu8B,EAEbA,EAAI32B,MAAQy2B,GAAYr8B,QAAQ+E,QAAUs3B,GAAYr8B,QAAQq3B,KAAM,CACpE,IAAMmF,EAAaC,GAAUz8B,QAC7B02B,YAAW,WACP,GAAI8F,IAAeC,GAAUz8B,SAAYq8B,GAAYr8B,QAAQq3B,KAA7D,CACA,IAAMqF,EAAiBtF,GAAciF,GAAYr8B,QAAQq3B,KAAMkF,EAAK9vD,GACpEqvD,GAAQ,CACJF,UAAWc,EACX18B,QAAS08B,IAEbR,IAAY,GACZG,GAAYr8B,QAAU,CAClB+E,OAAQ,GACRsyB,KAAM,SAEX,UAEHX,YAAW,WACPoF,IAAQ,SAAA/oD,GACJ,IAAM2pD,EAAiBtF,GAAcrkD,EAAIitB,QAASu8B,EAAK9vD,GAEvD,MAAO,CACHmvD,UAAWc,EACX18B,QAAS08B,MAGjBR,IAAY,KACb,OAER,CAAClD,EAAgBvsD,IAYpBumD,qBAAU,WAAO,IAAD2J,EAAAC,EAAAC,EAAAC,EACNpuD,EAAQgtD,GAAO17B,QACrB,GAAKo8B,IAAkBxD,GAAoBlqD,EAA3C,CAAyD,IAEzCjC,EAAU2vD,GAAlB58C,OAGRo5C,EAAgBnpC,MAAMstC,UAAY,WAClC,IAAM17B,EAAMu3B,EAAgBpwB,WAAW,MACvC,GAAKnH,GAAwB,kBAAV50B,KAAsBA,GAAS,GAAlD,CAA4D,IAEpDqrD,EAAgCppD,EAAhCopD,cAAe7J,EAAiBv/C,EAAjBu/C,aACjB+O,EAAQ/O,EAAev/C,EAAMuM,MAC7BgiD,EAAQnF,EAAgBppD,EAAMwM,OAC9BgiD,EAA6B,QAArBP,EAAGP,GAAc78C,YAAI,IAAAo9C,IAAI,KACjCQ,EAAav1C,OAAOw1C,iBAE1B/7B,EAAIsM,aAAawvB,EAAY,EAAG,EAAGA,EAAY,EAAG,GAElD,IAAIE,EAAoBxvC,KAAK0E,OAA0B,QAApBqqC,EAACR,GAAcnhD,aAAK,IAAA2hD,IAAI,IAAmB,OAAbM,EAAoBF,EAAQ/O,EAAe,MACxGqP,EAAYzvC,KAAKR,IAAI4gC,EAAcoP,GACnCE,EAAqB1vC,KAAK0E,MAAM8qC,EAAoB5wD,GACpD+wD,EAAa3vC,KAAKR,IAAIyqC,EAAeyF,GACrCE,EAAkB5vC,KAAKR,IACvB4gC,EACApgC,KAAK0E,OAAsB,QAAhBsqC,EAACT,GAAc/8C,SAAC,IAAAw9C,IAAI,IAAmB,OAAbK,EAAoBF,EAAQ/O,EAAe,OAEhFyP,EAAkB7vC,KAAKR,IACvByqC,EACAjqC,KAAK0E,OAAsB,QAAhBuqC,EAACV,GAAc98C,SAAC,IAAAw9C,IAAI,IAAmB,OAAbI,EAAoBD,EAAQnF,EAAgB,OAGrF,GADAz2B,EAAIs8B,sBAAwB,SACxBL,GAAa,GAAKE,GAAc,GAApC,CAEA,IAwEOI,EAAAC,EAxEHC,OAAmDx5C,EAEvD,GAEKm5C,EAAkBH,EAAarP,GAC5ByP,EAAkBF,EAAc1F,GAEjC2F,EAAkB,GAClBC,EAAkB,GAElB7vC,KAAKoqC,KAAKoF,EAAoBC,GAAaA,GAAa,KACxDzvC,KAAKoqC,KAAKsF,EAAqBC,GAAcA,GAAc,IAQxC,WALA/wD,EAAQqrD,EAAgB7J,EAAe,QAAU,WAQnEwP,EAAkB,EAElBK,EAAc,CACVv+C,KAAM,IACNC,OAAQ/S,EACRyO,QANJsiD,GADAF,EAAYrP,GACaxhD,GAMAqrD,EAAgB,IACrC78C,MAAOqiD,EAAYrP,EAAe,IAClC5uC,EAAG,EACHC,GAPJo+C,GAAmB5F,EAAgB0F,GAAc,GAOxB1F,EAAgB,OAMzC4F,EAAkB,EAClBI,EAAc,CACVv+C,KAAM,IACNC,OAAQ/S,EACRyO,QANJsiD,EAAa1F,GAMYA,EAAgB,IACrC78C,OARJqiD,EAAYxF,EAAgBrrD,GAQLwhD,EAAe,IAClC5uC,GAPJo+C,GAAmBxP,EAAeqP,GAAa,GAOtBrP,EAAe,IACpC3uC,EAAG,IAOf,GAAIg5C,EAEsB,WADA7rD,EAAQqrD,EAAgB7J,EAAe,QAAU,UAGnEuP,GADAF,EAAYrP,GACaxhD,GAEzB6wD,EAAYxF,EAAgBrrD,EAC5B+wD,EAAa1F,GAEjBc,EAAgB39C,MAAQqiD,EACxB1E,EAAgB19C,OAASsiD,EACzBn8B,EAAIkE,UACA72B,EACA,EACA,EACAu/C,EACA6J,EACA,EACA,EACAwF,EACAE,QAGJ5E,EAAgB39C,MAAkB,QAAb2iD,EAAIN,SAAS,IAAAM,IAAI,EACtChF,EAAgB19C,OAAoB,QAAd2iD,EAAIL,SAAU,IAAAK,IAAI,EACxCx8B,EAAIkE,UACA72B,EACA+uD,EACAC,EACAJ,EACAE,EACA,EACA,EACAF,EACAE,GAGW,YAAflD,IAA2C,OAAdQ,QAAc,IAAdA,IAAkB,IAAIr3C,QAAU,GACxDhX,IAAU2vD,GAAc58C,QAC7B45C,EAAagD,GAAe9B,GAE5BwD,GACAhC,IAAQ,SAAA/oD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAEitB,QAAS89B,YAGxC,CAAC1B,GAAexD,EAAiBsB,EAAc5B,IAElDtF,qBAAU,WACN8I,IAAQ,SAAA/oD,GACJ,GAAsB,MAAlB2oD,GAAO17B,SAAmBjtB,EAAIitB,QAAS,CACvC,IAAM+9B,EAAW3G,GAAcrkD,EAAIitB,QAAS07B,GAAO17B,QAASvzB,GAC5D,MAAO,CACHuzB,QAAS+9B,EACTnC,UAAWmC,GAGnB,OAAOhrD,OAEZ,CAACtG,IAEJ,IAAMgwD,GAAYpM,iBAAO,GACzB2N,8BAAoB5F,GAAc,iBAAO,CACrCj7B,UAAW,kBAAMA,IACjB8gC,SAAU,iBAAiC,kBAAnBnD,GAA+BA,EAAer3C,OAAS,GAAoB,YAAf62C,GAClD,kBAAnBkB,IAA+BA,GAAe/3C,OAAS,GAAoB,WAAf62C,GAC3E4D,YAAa,SAACxxD,EAA4Bq4B,EAAQo5B,IACT,YAAf7D,EAA2BQ,EAAiBU,MAC5Cz2B,IAClBm2B,IAAW,GACXX,EAAc7tD,GACdiuD,EAAajuD,GACbwsD,EAAexsD,EAAMq4B,GACR,YAATr4B,EACAquD,EAAkBh2B,GACf02B,GAAkB12B,IAE7Bm3B,GAA8B,MAAlBiC,EAAS5+C,MACrBk9C,GAAUz8B,SAAW,EACrBq8B,GAAYr8B,QAAU,CAClB+E,SACAsyB,KAAM8G,GAEVhE,GAAgB,SAAApnD,GAAG,OAAIA,EAAM,UAIrC,IAAMkrD,GAA2B,YAAf3D,IAA2C,OAAdQ,QAAc,IAAdA,IAAkB,IAAIr3C,OAAS,GACvD,WAAf62C,IAA0C,OAAdkB,SAAc,IAAdA,MAAkB,IAAI/3C,OAAS,EAC7D26C,GAAiBxF,GAAmBqF,KAAa9gC,KAA0B,OAAbi/B,SAAa,IAAbA,QAAa,EAAbA,GAAenhD,SAAsB,OAAbmhD,SAAa,IAAbA,QAAa,EAAbA,GAAelhD,QAC3G,OACI0b,eAAA,OAAKf,UAAS,sBAAAlb,OAAwBkb,GAAYC,SAAA,CAC9Cc,eAAA,OAAKf,UAAU,0BAAyBC,SAAA,CACnCA,EACDc,eAAA,OAAKf,UAAU,oCAAmCC,SAAA,CAC9Cc,eAAA,OAAKf,UAAU,gCAA+BC,SAAA,CAC1Cc,eAAA,QAAMf,UAAU,cAAaC,SAAA,CACxBa,EAAM,IAAC7oB,cAACmoB,GAAU,CACfC,KAAMmoC,KACN/nC,eAAgB,CAAET,UAAWuoC,GAAiB,GAAK,YACnD/nC,aAAc,CAAEm6B,QAAS4N,GACnBnhC,EAAS,0BACTA,EAAS,8BACf9G,QAAS,kBAAOioC,IAAkBxF,GAvZlE,SAA0BrxB,EAAkC8vB,GACnDA,GAAS9vB,GACdA,EAAOovB,QACH,SAACrvC,GACG,GAAa,OAATA,EAAe,CACf,IAAMg3C,EAAa12C,OAAOC,IAAIC,gBAAgBR,GAExCi3C,EAAS/2C,SAASC,cAAc,KACtC82C,EAAO72C,SAAW,mBAClB62C,EAAO52C,KAAOE,IAAIC,gBAAgBR,GAClCi3C,EAAOC,QAEP52C,OAAOC,IAAIivC,gBAAgBwH,MAGnC,YACA,GAuY8EG,CAAiB7F,EAAiBwD,UAGhGxlC,eAAC8nC,KAAMC,MAAK,CACR9oC,UAAU,+BACV+oC,SAAU,SAAAt7C,GACN,IAAMtV,EAAQsV,EAAE4c,OAAOlyB,MACvB2sD,EAAa3sD,KAEO,OAAd8sD,QAAc,IAAdA,IAAkB,IAAIr3C,OAAS,GAAe,YAAVzV,IACnB,OAAdwtD,SAAc,IAAdA,MAAkB,IAAI/3C,OAAS,GAAe,WAAVzV,KAEzCusD,EAAcvsD,GACA,YAAVA,EACAkrD,EAAe,UAAW4B,GAE1B5B,EAAe,SAAUsC,MAIrCxtD,MAAO0sD,EAAU5kC,SAAA,CAEjBhoB,cAAC4wD,KAAMG,OAAM,CAAC7wD,MAAO,SAAU8wD,QAAuB,WAAdpE,EAAuB5kC,SAC1DmH,EAAS,yCAEdnvB,cAAC4oB,KAAO,CAACC,MAAO7oB,cAAA,OAAK+nB,UAAU,gBAAeC,SACzCmH,EAAS,mCACPnH,SACHhoB,cAAC4wD,KAAMG,OAAM,CAAC7wD,MAAO,UAAW8wD,QAAuB,YAAdpE,EAAwB5kC,SAC5DmH,EAAS,kDAK1BrG,eAAA,OAAKf,UAAW,CAAC,mBAAkC,WAAd6kC,EAAyB,GAAK,kBAAkB9/C,KAAK,KAAKkb,SAAA,CAC3FhoB,cAACixD,KAAK,CACFC,YAAa/hC,EAAS,6BACtBjvB,MAAOwtD,GACPoD,SA1OE,SAACt7C,GACvB,IAAMyhB,EAASzhB,EAAE4c,OAAOlyB,MAExBktD,IAAW,GACXX,EAAc,UACdI,EAAa,UACbzB,EAAe,SAAUn0B,GACzB02B,GAAkB12B,IAoOEk6B,UAAW,IACXC,YAAU,GALH,OAOVpxD,cAAA,OAAK+nB,UAAU,mBAAkBC,SAC7BmH,EAAS,iCAGlBrG,eAAA,OAAKf,UAAW,CAAC,mBAAkC,YAAd6kC,EAA0B,GAAK,kBAAkB9/C,KAAK,KAAKkb,SAAA,CAC5FhoB,cAACixD,KAAK,CAACI,IAAKvF,EACRltD,KAAK,OACL0yD,OAAO,UACPR,SAtTG,SAACt7C,GACxB,GAAIA,EAAE4c,OAAOm/B,OAAS/7C,EAAE4c,OAAOm/B,MAAM57C,OAAS,EAAG,CAC7C,IAAM67C,EAAah8C,EAAE4c,OAAOm/B,MAAM,GAGlC,GAAIC,EAAW5vC,KAAO6vC,QAA2B,CAC7CrE,IAAW,GACX,IAAMsE,EAAS,IAAIC,WACnBD,EAAO35B,iBAAiB,QAAQ,WACC,kBAAlB25B,EAAO7zC,SACdovC,EAAkByE,EAAO7zC,QACzB4uC,EAAc,WACdI,EAAa,WACbzB,EAAe,UAAWsG,EAAO7zC,QACjCuvC,IAAW,OAGnBsE,EAAOE,cAAcJ,QAErB9F,EAhBgB,QAkBjBmG,MAAM1iC,EAAS,qCAkSF9G,QAAS,eAAAypC,EAAA,OAA0B,QAA1BA,EAAMhG,EAAa55B,eAAO,IAAA4/B,OAAA,EAApBA,EAAsBC,SAAS,OAElD/xD,cAAA,SACCmvB,EAAS,0CAIrB47B,EACDjiC,eAAA,OAAKf,UAAU,eAAcC,SAAA,CACxBqH,IAAarvB,cAAC4nB,GAAQE,SAAQ,IAC7BqoC,KAAa92C,IAAUyP,eAACb,GAAyB,CAACF,UAAU,mBAAmBM,QAAS,kBAAMujC,GAAkBpB,IAAUxiC,SAAA,CACxHhoB,cAACgyD,KAAQ,CAAChB,QAASxG,IAAY,IAACxqD,cAAA,QAAAgoB,SAAOmH,EAAS,wCAEjDghC,IAAY92C,KAAUrZ,cAACiyD,KAAK,CAAC5gC,YAAalC,EAAS,mCAAoCvuB,MAAO,OACjGZ,cAACkyD,KAAS,CACNp6B,IAAoB,YAAf00B,EAA2BQ,EAAiBU,GACjDyE,SAAU3H,EACVziC,UAAWyiC,EAAW,eAAiB,GACvC4H,WAAY7H,EACN,CACEA,mBAEF,CACE8H,gBAAgB,QAADxlD,OAAU6gB,aAAsB,gDAEvD4kC,cAAe9D,GACf+D,aAAc,WAOV,GANAhE,GAAYr8B,QAAU,CAClB+E,OAAQ,GACRsyB,KAAM,MAEVgE,GAAS,eACTH,IAAW,GACNtC,EACA,GACe,WAAf0B,GAAsD,MAAZ,OAAdkB,SAAc,IAAdA,MAAkB,KAC5B,YAAflB,GAAuD,MAAZ,OAAdQ,QAAc,IAAdA,IAAkB,IACrD,CAAC,IACS7/C,EAAkB29C,EAAlB39C,MAAOC,EAAW09C,EAAX19C,OACTmmB,EAAMu3B,EAAgBpwB,WAAW,MAEpC,OAAHnH,QAAG,IAAHA,KAAK2B,UAAU,EAAG,EAAG/nB,EAAOC,GACxBkhD,IAAehD,EAAagD,GAAe9B,GAC/CtB,SAEAM,SAZkBA,KAgB1BjC,KAAM8E,GACNyC,SAAU,SAAC0B,EAAeC,GACtB,IAAM7xD,EAAQgtD,GAAO17B,QACjBq8B,GAAYr8B,QAAQq3B,OACnB4E,GASDH,IAAQ,SAAA/oD,GACJ,OAAA1F,wBAAA,GACO0F,GAAG,IACNitB,QAASo3B,GAAcmJ,EAAiB7xD,EAAOjC,SAXvDyvD,IAAY,GACZJ,IAAQ,SAAA/oD,GACJ,OAAA1F,wBAAA,GACO0F,GAAG,IACNitB,QAASo3B,GAAckJ,EAAe5xD,EAAOjC,WAY7D+zD,WAAY,SAAC3R,EAAG4R,GACPpE,GAAYr8B,QAAQq3B,MAAMyE,IAAQ,SAAA/oD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAE6oD,UAAW6E,QAExEC,cAAc,EACd3G,YAAaA,GAAY,GAAAp/C,OA5DV2/C,EAAU,KAAA3/C,OAAIshD,GAAU,KAAAthD,OAAIu/C,aCxdlDyG,I,OAAkB,SAAHn+C,GAGJ,IAADo+C,EAAAp+C,EAFnBq+C,oBAAY,IAAAD,EAAG,GAAEA,EAAAE,EAAAt+C,EACjBo8C,gBAAQ,IAAAkC,EAAG,aAAQA,EAAAjH,EAEqBC,mBAAS+G,GAAaE,EAAA5mD,YAAA0/C,EAAA,GAAvDmH,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAY,EAAE,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,KAChDjkC,EAAWa,KAEXqjC,EAAsBj7C,KAAK+a,UAAU+/B,GAM3C,OALAhO,qBAAU,WACN4L,EAASoC,KAEV,CAACG,IAEGvqC,eAAA,OAAKf,UAAU,sBAAqBC,SAAA,CACvChoB,cAAA,OAAK+nB,UAAU,QAAOC,SACjBmH,EAAS,uBAEdnvB,cAAA,OAAK+nB,UAAU,YAAWC,SACrB2lB,aAAIl2B,MAAM,IAAIlJ,KAAI,SAACwyC,EAAG59B,GACnB,IAAMmwC,EAAe,GAAAzmD,OAAMsW,EAAQ,GAEnC,MAAwB,MAApBmwC,EAAgCtzD,cAAC4oB,KAAO,CAAS85B,QAASvzB,EAAS,6BAA6BnH,SAChGhoB,cAAA,OAAK+nB,UAAU,oBAAoBM,QAAS,WACxC8qC,EAAgB,KAClBnrC,SACEhoB,cAACC,IAAmB,OAJqB,KAQ1CD,cAAA,OACH+nB,UAAS,6BAAAlb,OAA+BsW,EAAQ,EAAC,KAAAtW,OAAIqmD,EAAa1+C,SAAS8+C,GAAmB,iBAAmB,IACjHjrC,QAAS,WACL8qC,GAAgB,SAAAluD,GACZ,IAAIsuD,EAAM5lB,aAAO1oC,GAKjB,OAHIsuD,EAAO/+C,SAAS8+C,GAAkBC,EAASA,EAAOtxC,QAAO,SAAAzT,GAAK,OAAIA,IAAU8kD,KAC3EC,EAAO9tB,KAAK6tB,GAEVC,MAEbvrC,SAEFhoB,cAAA,OAAK+nB,UAAS,qCAAAlb,OAAuCsW,EAAQ,GAAKxB,MAAO,CAAEstC,UAAU,UAADpiD,OAAYumD,EAAUjwC,GAAM,YAbnGmwC,a,oBChCpBE,I,OAAc,SAAH9+C,GAIJ,IAHhB++C,EAAgB/+C,EAAhB++C,iBACAnrC,EAAS5T,EAAT4T,UACG5K,EAAIC,aAAAjJ,EAAA,kCAAA+T,EAE0C,OAATH,QAAS,IAATA,IAAa,GAA7CP,EAASU,EAATV,UAAc2rC,EAAa/1C,aAAA8K,EAAA,eAEnC,OAAOzoB,cAAC2zD,KAAOp0D,wBAAA,CAACk0D,iBAAkB,CAAC,sBAAuC,OAAhBA,QAAgB,IAAhBA,IAAoB,IAAI3mD,KAAK,MAAU4Q,GAAI,IAAAsK,SACjGhoB,cAAC4zD,KAAyBr0D,YAAA,CAACwoB,UAAW,CAAC,mBAA6B,OAATA,QAAS,IAATA,IAAa,IAAIjb,KAAK,MAAU4mD,S,6zCCTnG,IAAMG,GAAapsC,KAAOS,KAAIP,MAOxBmsC,GAAkBrsC,KAAOC,IAAGqsC,MAG5BC,GAAqBvsC,KAAOC,IAAGusC,MAY/BC,GAAkCzsC,KAAOC,IAAGysC,MAuBrCC,GAAmB,SAAH1/C,GAKJ,IAJrB2/C,EAAO3/C,EAAP2/C,QACA7rC,EAAc9T,EAAd8T,eACA8rC,EAAG5/C,EAAH4/C,IACG52C,EAAIC,aAAAjJ,EAAA,oCAECqT,GAA4B,OAAdS,QAAc,IAAdA,IAAkB,IAAhCT,UAER,OAAOe,eAACorC,GAA+B,CAACnsC,UAAS,sBAAAlb,OAAwBkb,GAAYC,SAAA,CACjFhoB,cAAA,MAAAT,YAAA,CAAK+0D,IAAKA,GAAS52C,IACnB1d,cAAA,OAAK+nB,UAAU,UAASC,SAAEqsC,QAIrBE,GAAuB,WAAO,IAADxI,EACHC,oBAAS,GAAMiH,EAAA5mD,YAAA0/C,EAAA,GAA3CyI,EAASvB,EAAA,GAAEwB,EAAaxB,EAAA,GACzB9jC,EAAWa,KAEjB,OAAOlH,eAAA4rC,WAAA,CAAA1sC,SAAA,CACHhoB,cAAC20D,KAAM,CACHC,OAAQ,KACRC,QAASL,EACTrnD,MAAO,MACP0b,MAAOC,eAAA,OAAKf,UAAU,gBAAeC,SAAA,CAAEmH,EAAS,sBAAsB,IAACnvB,cAAC+wD,KAAM,CAC1EnvC,KAAK,QACLhjB,KAAK,UACLypB,QAAS,WACLosC,GAAc,IAChBzsC,SACJmH,EAAS,2BACXpH,UAAU,4BACV+sC,QAAS,WACLL,GAAc,IAChBzsC,SAEFc,eAACgrC,GAAe,CAAA9rC,SAAA,CACZc,eAAA,KAAAd,SAAA,CACKmH,EAAS,6BAA6BnvB,cAAC+0D,KAAa,GAAK,SAAW,OAEzE/0D,cAAA,MAAAgoB,SAAKmH,EAAS,kCACbA,EAAS,kCACNnvB,cAAC6zD,GAAU,CAAA7rC,SAAiB,KAAZ,YAChBhoB,cAAC6zD,GAAU,CAAA7rC,SAAkB,KAAb,aAChBhoB,cAAC6zD,GAAU,CAAA7rC,SAAe,UAAV,UAChBhoB,cAAC6zD,GAAU,CAAA7rC,SAA0B,YAArB,sBAEpBc,eAACkrC,GAAkB,CAACjsC,UAAU,eAAcC,SAAA,CACxChoB,cAACo0D,GAAgB,CACb5rC,eAAgB,CAAET,UAAW,qBAC7BusC,IAAK,yBACLx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,wCAC9B2mC,QAASllC,EAAS,gCAEtBnvB,cAACo0D,GAAgB,CACb5rC,eAAgB,CAAET,UAAW,yBAC7BusC,IAAK,6BACLx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,4CAC9B2mC,QAASllC,EAAS,oCAG1BnvB,cAAA,MAAAgoB,SAAKmH,EAAS,kCACbA,EAAS,kCACNnvB,cAAC6zD,GAAU,CAAA7rC,SAAiB,KAAZ,YAChBhoB,cAAC6zD,GAAU,CAAA7rC,SAAkB,KAAb,aAChBhoB,cAAC6zD,GAAU,CAAA7rC,SAAe,UAAV,UAChBhoB,cAAC6zD,GAAU,CAAA7rC,SAA0B,YAArB,sBAEpBc,eAACkrC,GAAkB,CAACjsC,UAAU,eAAcC,SAAA,CACxChoB,cAACo0D,GAAgB,CACb5rC,eAAgB,CAAET,UAAW,qBAC7BusC,IAAK,yBACLx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,wCAC9B2mC,QAASllC,EAAS,gCAEtBnvB,cAACo0D,GAAgB,CACb5rC,eAAgB,CAAET,UAAW,yBAC7BusC,IAAK,6BACLx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,4CAC9B2mC,QAASllC,EAAS,oCAG1BnvB,cAAA,MAAAgoB,SAAKmH,EAAS,kCACbA,EAAS,kCACNnvB,cAAC6zD,GAAU,CAAA7rC,SAAkB,KAAb,aAChBhoB,cAAC6zD,GAAU,CAAA7rC,SAAe,UAAV,UAChBhoB,cAAC6zD,GAAU,CAAA7rC,SAA0B,YAArB,sBAEpBc,eAACkrC,GAAkB,CAACjsC,UAAU,eAAcC,SAAA,CACxChoB,cAACo0D,GAAgB,CACb5rC,eAAgB,CAAET,UAAW,qBAC7BusC,IAAK,yBACLx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,wCAC9B2mC,QAASllC,EAAS,gCAEtBnvB,cAACo0D,GAAgB,CACb5rC,eAAgB,CAAET,UAAW,yBAC7BusC,IAAK,6BACLx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,4CAC9B2mC,QAASllC,EAAS,oCAG1BnvB,cAAA,MAAAgoB,SAAKmH,EAAS,kCACbA,EAAS,kCACNnvB,cAAC6zD,GAAU,CAAA7rC,SAAkB,MAAb,aAChBhoB,cAAC6zD,GAAU,CAAA7rC,SAAe,UAAV,UAChBhoB,cAAC6zD,GAAU,CAAA7rC,SAA0B,YAArB,sBAEpBc,eAACkrC,GAAkB,CAACjsC,UAAU,eAAcC,SAAA,CACxChoB,cAACo0D,GAAgB,CACb5rC,eAAgB,CAAET,UAAW,qBAC7BusC,IAAK,yBACLx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,wCAC9B2mC,QAASllC,EAAS,gCAEtBnvB,cAACo0D,GAAgB,CACb5rC,eAAgB,CAAET,UAAW,yBAC7BusC,IAAK,6BACLx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,4CAC9B2mC,QAASllC,EAAS,oCAG1BnvB,cAAA,MAAAgoB,SAAKmH,EAAS,kCACbA,EAAS,kCACNnvB,cAAC6zD,GAAU,CAAA7rC,SAAiB,MAAZ,YAChBhoB,cAAC6zD,GAAU,CAAA7rC,SAAkB,MAAb,aAChBhoB,cAAC6zD,GAAU,CAAA7rC,SAAe,UAAV,UAChBhoB,cAAC6zD,GAAU,CAAA7rC,SAA0B,YAArB,sBAEpBc,eAACkrC,GAAkB,CAACjsC,UAAU,eAAcC,SAAA,CACxChoB,cAACo0D,GAAgB,CACb5rC,eAAgB,CAAET,UAAW,qBAC7BusC,IAAK,yBACLx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,wCAC9B2mC,QAASllC,EAAS,gCAEtBnvB,cAACo0D,GAAgB,CACb5rC,eAAgB,CAAET,UAAW,yBAC7BusC,IAAK,6BACLx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,4CAC9B2mC,QAASllC,EAAS,yCAKlCrG,eAACioC,KAAM,CACHhpC,UAAU,yBACVnpB,KAAK,UACLypB,QAAS,WACLosC,GAAc,IAChBzsC,SAAA,CAEDmH,EAAS,sBAAsB,IAACnvB,cAACg1D,KAAU,W,oVCvMxD,IAAMC,GAAuBxtC,KAAOC,IAAGC,MAEjC,SAAAjT,GAAc,OAAAA,EAAXwgD,YAAgC,0CAA4C,iCAO/EC,GAAoB1tC,KAAOC,IAAGqsC,MAIvBqB,GAAiB,SAAH3sC,GAKyD,IAJhF/oB,EAAO+oB,EAAP/oB,QACAgN,EAAoB+b,EAApB/b,qBACAC,EAAwB8b,EAAxB9b,yBACAob,EAASU,EAATV,UAEMoH,EAAWa,KAEjB,OAAOlH,eAACmsC,GAAoB,CACxBltC,UAAS,oBAAAlb,OAA+B,OAATkb,QAAS,IAATA,IAAa,IAC5CmtC,eAAgBxoD,IAAwBC,GAA0Bqb,SAAA,CAEjErb,EACK3M,cAACm1D,GAAiB,CAAAntC,SACfrb,EAAyB4B,KAAI,SAAA5O,GAAK,OAAIK,cAAA,OAEnC2hB,MAAO,CAAE4oC,gBAAiB5qD,EAAOyN,OAAO,GAADP,OAAK,IAAMF,EAAyBgJ,OAAM,OAD5EhW,QAIX+M,EACI1M,cAACm1D,GAAiB,CAACxzC,MAAO,CAAE4oC,gBAAiB79C,KAC7C,KACV1M,cAAA,SAAO+nB,UAAU,yBAAwBC,SAAEmH,EAASzvB,S,0pCClC5D,IAAM21D,GAASC,aAAS3tC,MAKlB4tC,GAAqB9tC,KAAOC,IAAGqsC,MAU/ByB,GAA+B/tC,KAAOC,IAAGusC,MAejC,SAAAv/C,GAAY,OAAAA,EAAT+gD,UAA4B,GAAKC,aAAGvB,KAAckB,OAUtDM,GAAgB,WACzB,IAAMxmC,EAAWa,KAAc4lC,EAI3BtjC,IAAW,SAAA7J,GAAyB,MAAQ,CAAEqK,QAAzBrK,EAAPqK,QAAyCC,cAAnBtK,EAAbsK,kBAFvBD,EAAO8iC,EAAP9iC,QACAC,EAAa6iC,EAAb7iC,cAGAL,EAIAI,EAJAJ,YACAC,EAGAG,EAHAH,kBACAC,EAEAE,EAFAF,mBACAC,EACAC,EADAD,0BAGJ,OAAO7yB,cAACw1D,GAA4B,CAACztC,UAAU,iBAAiB0tC,UAAW9iC,EAAkB3K,SACzFhoB,cAAC2zD,KAAO,CACJkC,QAAS,CAAC,SACVpC,iBAAiB,yBACjB3nB,QAAShjB,eAACysC,GAAkB,CAAAvtC,SAAA,CACxBhoB,cAAA,OAAAgoB,SACIhoB,cAACgyD,KAAQ,CACLhB,QAASr+B,EACTm+B,SAAU,SAAAt7C,GAAC,OAAIud,EAAc,CAAEJ,kBAAmBnd,EAAE4c,OAAO4+B,WAAWhpC,SACxEmH,EAAS,sCAEfnvB,cAAA,OAAAgoB,SACIhoB,cAACgyD,KAAQ,CACLhB,QAASn+B,EACTi+B,SAAU,SAAAt7C,GAAC,OAAIud,EAAc,CAAEF,0BAA2Brd,EAAE4c,OAAO4+B,WAAWhpC,SAChFmH,EAAS,6CAEfnvB,cAAA,OAAAgoB,SACIhoB,cAACgyD,KAAQ,CACLhB,QAASp+B,EACTk+B,SAAU,SAAAt7C,GAAC,OAAIud,EAAc,CAAEH,mBAAoBpd,EAAE4c,OAAO4+B,WAAWhpC,SACzEmH,EAAS,qCAEfnvB,cAAA,OAAAgoB,SACIhoB,cAAC4oB,KAAO,CAACC,MAAOsG,EAAS,iCAAkC2mC,UAAU,OAAM9tC,SACvEhoB,cAACgyD,KAAQ,CACLhB,QAASt+B,EACTo+B,SAAU,SAAAt7C,GAAC,OAAIud,EAAc,CAAEL,YAAald,EAAE4c,OAAO4+B,WAAWhpC,SAClEmH,EAAS,qCAGnBnvB,cAAA,OAAAgoB,SACIhoB,cAAA,SAAAgoB,SAAQmH,EAAS,wBAEHnH,SAEtBc,eAAA,OAAKf,UAAU,uBAAsBC,SAAA,CACjChoB,cAAC+0D,KAAa,IACd/0D,cAAA,SAAAgoB,SAAQmH,EAAS,kC,8RCxF1B,IAAM4mC,GAAc,WAAO,IAADC,EAC7B,OAAOltC,eAAA,OAAKf,UAAU,cAAaC,SAAA,CAC/Bc,eAAA,QAAMf,UAAU,UAASC,SAAA,CAAC,IAA+B,QAA9BguC,EAACtoC,UAA6BsoC,EAAI,aAC7Dh2D,cAAA,OAAK+nB,UAAU,mBAAkBC,SAC7BhoB,cAAA,KAAG6Z,KAAK,uCAAuCuY,OAAO,SAAS6jC,IAAI,aAAYjuC,SAC3EhoB,cAACk2D,KAAY,YAMvBC,GAA4B1uC,KAAOC,IAAGC,MAS/ByuC,GAAY,WAAO,IAADC,EAMvB3qC,IAAQ,SAAAhX,GAIM,MACX,CACHwa,aALYxa,EAAZwa,aAMAC,SALQza,EAARya,SAMA/B,oBALmB1Y,EAAnB0Y,oBAMAyB,eALcna,EAAdma,mBARAM,EAAQknC,EAARlnC,SACAD,EAAYmnC,EAAZnnC,aACA9B,EAAmBipC,EAAnBjpC,oBACAyB,EAAcwnC,EAAdxnC,eAaJ,OAAO/F,eAAA,OAAKf,UAAU,aAAYC,SAAA,CAC9BhoB,cAAA,OAAKs0D,IAAI,WAAWx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,gBAAgBvgB,MAAO,KACzE2b,eAAA,OAAKf,UAAU,kBAAiBC,SAAA,CAC5Bc,eAAA,OAAKf,UAAU,kBAAiBC,SAAA,CAC5BhoB,cAAA,MAAAgoB,SAAI,kBACJhoB,cAAC4wD,KAAMC,MAAK,CAAC3wD,MAAOgvB,EAAaxC,SAAU9K,KAAK,QAAQmG,UAAU,kBAAiBC,SAC9EtlB,OAAOC,OAAOyqB,GACVnL,QAAO,SAAAwG,GAAS,OAAAA,EAANoE,UACVte,KAAI,SAAAugB,GAAyB,IAAtBpC,EAAQoC,EAARpC,SAAU3uB,EAAI+wB,EAAJ/wB,KACd,OAAOiC,cAAC4wD,KAAMG,OAAM,CAChB7wD,MAAOwsB,EACPokC,SAAU,SAAAt7C,GAAC,OAAIqZ,EAAerZ,EAAE4c,OAAOlyB,QAAO8nB,SAE7CjqB,GAJqB2uB,QAQtC1sB,cAAA,QAAM+nB,UAAU,aAAYC,SACxBc,eAAA,OAAK5K,GAAG,oBAAmB8J,SAAA,CACtBmH,EAAS,kCAAkC,IAACnvB,cAACs2D,KAAW,YAIrExtC,eAAA,OAAKf,UAAU,mBAAkBC,SAAA,CAC7Bc,eAAA,QAAMf,UAAU,cAAaC,SAAA,CACxBmH,EAAS,yBAAyB,KAAEnvB,cAAA,KACjC6Z,KAAK,uCACLuY,OAAO,SACP6jC,IAAI,aAAYjuC,SAEhBhoB,cAAA,KAAAgoB,SAAG,cACH,OAAMhoB,cAACwzD,GAAW,CAClB1nB,QAAShjB,eAAA,OAAKf,UAAU,aAAYC,SAAA,CAChChoB,cAAA,MAAAgoB,SAAKmH,EAAS,kCACdrG,eAAA,MAAAd,SAAA,CACIhoB,cAAA,MAAAgoB,SAAKmH,EAAS,iCAAiCnvB,cAAA,KAAoB6Z,KAAK,sCAAqCmO,SAAC,+BAAxD,iBACtDhoB,cAAA,MAAAgoB,SAAKmH,EAAS,mCACdnvB,cAAA,MAAAgoB,SAAKmH,EAAS,mCACdnvB,cAAA,MAAAgoB,SAAKmH,EAAS,mCACdnvB,cAAA,MAAAgoB,SAAKmH,EAAS,iCACVnvB,cAAA,KACI6Z,KAAK,oCACLuY,OAAO,SACP6jC,IAAI,aAAYjuC,SAAC,UAHd,oBAIPhoB,cAAA,KACI6Z,KAAK,sCACLuY,OAAO,SACP6jC,IAAI,aAAYjuC,SAAC,YAHd,uBAKXhoB,cAAA,MAAAgoB,SAAKmH,EAAS,8CAK9BnvB,cAAA,QAAM+nB,UAAU,mBAAkBC,SAC7BmH,EAAS,8BACNnvB,cAAA,KACI6Z,KAAK,6FACLuY,OAAO,SACP6jC,IAAI,aAAYjuC,SAAChoB,cAAA,KAAAgoB,SAAG,YAHjB,YAIPhoB,cAAA,KACI6Z,KAAK,mGACLuY,OAAO,SACP6jC,IAAI,aAAYjuC,SAAChoB,cAAA,KAAAgoB,SAAG,cAHjB,YAIPhoB,cAAA,KACI6Z,KAAK,6CACLuY,OAAO,SACP6jC,IAAI,aAAYjuC,SAAChoB,cAAA,KAAAgoB,SAAG,qBAHjB,YAIPhoB,cAAA,KACI6Z,KAAK,uCACLuY,OAAO,SACP6jC,IAAI,aAAYjuC,SAAChoB,cAAA,KAAAgoB,SAAG,eAHjB,qBAQvBhoB,cAACm2D,GAAyB,CAACpuC,UAAU,cAAaC,SAC9ChoB,cAAC21D,GAAa,UAKbY,GAAuB,WAChC,IAAMpnC,EAAWa,KAEjB,OAAOhwB,cAACwzD,GAAW,CACfC,iBAAiB,qBACjB3nB,QAAShjB,eAAA,OAAKf,UAAU,aAAYC,SAAA,CAChChoB,cAAA,MAAAgoB,SAAKmH,EAAS,+CACdnvB,cAAA,KAAAgoB,SAAImH,EAAS,6CACbnvB,cAAA,MAAAgoB,SAAKmH,EAAS,gDACdnvB,cAAA,KAAAgoB,SAAImH,EAAS,8CACbnvB,cAAA,MAAAgoB,SAAKmH,EAAS,+CACdnvB,cAAA,KAAAgoB,SAAImH,EAAS,mD,4wCCzIlB,IAAMqnC,GAAkB/uC,KAAOC,IAAGC,MAiB5B8uC,GAAuBhvC,KAAOC,IAAGqsC,MAuBjC2C,GAAiB,CAC1BC,UATmClvC,KAAOC,IAAGusC,MAU7C2C,OAAQH,IC1BCI,GAAmB,CAC5B,CACIh3D,MAAO,MACPK,MAAO,MACPghB,MAAO,CACH6G,UAAW,aACXpG,MAAO,CAAEm1C,WAAY,UAG7B,CACIj3D,MAAO,MACPK,MAAO,MACPghB,MAAO,CACH6G,UAAW,aACXpG,MAAO,CAAEm1C,WAAY,WAkBpBC,GAAmBr0D,OAAOC,OAAOyC,GAAWmJ,KAAI,SAAAka,GAAA,IAAGvoB,EAAKuoB,EAALvoB,MAAY,MAAQ,CAChFL,MADwE4oB,EAAL5oB,MAEnEK,YAQS82D,GAAmB,CAC5B,CAAE92D,MAAO,SAAUL,MAAOG,cAACC,IAAmB,MAAK4M,OAAA8gC,aAChDjrC,OAAOC,OAAO2C,GAAciJ,KAAI,SAAA0hB,GAAA,IAAG/vB,EAAK+vB,EAAL/vB,MAAY,MAAQ,CACtDL,MAD8CowB,EAALpwB,MAEzCK,cAIK+2D,GAAqB,WAAH,OAASlqD,GAAUwB,KAAI,SAAAioB,GAAA,IAAGz4B,EAAIy4B,EAAJz4B,KAAM2B,EAAO82B,EAAP92B,QAASgN,EAAoB8pB,EAApB9pB,qBAAsBC,EAAwB6pB,EAAxB7pB,yBAA0BF,EAAO+pB,EAAP/pB,QAAO,MAAQ,CACnI5M,MAAOG,cAACo1D,GAAc,CAClB1oD,qBAAsBA,EACtBC,yBAA0BA,EAC1BjN,QAASA,IAEbQ,MAAOnC,EACP0O,eA2BSyqD,GAAiBvpB,aAAIl2B,MAAM,KAAKlJ,KAAI,SAACwyC,EAAG59B,GAAK,MAAM,CAAEtjB,MAAOsjB,EAAOjjB,MAAOijB,MAC1Eg0C,GAAgH,CACzH,KAAQ,CACJj3D,MAAO,OACP+H,SAAU,6BACVmvD,aAAc,6BACdr5C,KAAM,MAEV,GAAM,CACF7d,MAAO,KACP+H,SAAU,6BACVmvD,aAAc,6BACdr5C,KAAM/d,cAAA,OACF+nB,UAAU,aACVusC,IAAI,WACJx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,sDAGtC,MAAS,CACLxtB,MAAO,QACP+H,SAAU,8BACVmvD,aAAc,8BACdr5C,KAAM/d,cAAA,OACF+nB,UAAU,aACVusC,IAAI,aACJx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,iDAGtC,iBAAkB,CACdxtB,MAAO,iBACP+H,SAAU,uCACVmvD,aAAc,uCACdr5C,KAAM/d,cAAA,OACF+nB,UAAU,aACVusC,IAAI,sBACJx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,0DAGtC,KAAQ,CACJxtB,MAAO,OACP+H,SAAU,6BACVmvD,aAAc,6BACdr5C,KAAM/d,cAAA,OACF+nB,UAAU,aACVusC,IAAI,YACJx8B,IAAG,GAAAjrB,OAAK6gB,aAAsB,iDAI7B2pC,GAAe30D,OAAOC,OAAOw0D,IAE7BG,G1DhCc,CACvB,aACA,OACA,SACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,a0DqByC/oD,KAAI,SAAAxQ,GAAI,MAAK,CACtD8B,MAAgB,eAAT9B,EACDiC,cAACC,IAAmB,IACpBD,cAAA,OAAKs0D,IAAKv2D,EAAM+5B,IAAG,GAAAjrB,OAAK6gB,aAAsB,iCAAA7gB,OAAgC9O,EAAK8yB,cAAa,UACtG3wB,MAAOnC,MAGEw5D,GAA8B70D,OACtCyJ,QrD4E2F,CAC5FzE,WAAY,CACR7H,MAAO,IACP+sB,MAAO,GAEXjlB,OAAQ,CACJ9H,MAAO,IACP+sB,MAAO,GAEXhlB,MAAO,CACH/H,MAAO,IACP+sB,MAAO,GAEX/kB,UAAW,CACPhI,MAAO,IACP+sB,MAAO,GAEX9kB,QAAS,CACLjI,MAAO,IACP+sB,MAAO,KqD9FVre,KAAI,SAAA0gC,GAA8B,IAADI,EAAAhjC,YAAA4iC,EAAA,GAA3BtuC,EAAG0uC,EAAA,GAAAmoB,EAAAnoB,EAAA,GACN,MAAO,CACHxvC,MAFW23D,EAAL33D,MAGNK,MAAOS,EACPisB,MAJkB4qC,EAAL5qC,UAOpBs8B,MAAK,SAACC,EAAGjzC,GAAC,OAAKizC,EAAEv8B,MAAQ1W,EAAE0W,S,2sDC7HhC,IAAM6qC,GAA4BhwC,KAAOC,IAAGC,MA8D/B+vC,GAAa,SAAHhjD,GAGJ,IAADijD,EAAAjjD,EAFdkjD,gBAAQ,IAAAD,EAAG,GAAEA,EAAAE,EAAAnjD,EACbojD,cAAM,IAAAD,EAAG,aAAQA,EAEX1oC,EAAWa,KAEX+nC,EAAiB,SAACv8B,GACpB,IAAMw8B,EAAct+C,SAASu+C,eAAeL,GAC5C,GAAII,EAAa,CAAC,IACN93D,EA5Gb,SAAwBkyB,EAA6B8lC,GAExD,GAAKx+C,SAAiBy+C,UAKlB,OAJA/lC,EAAOvM,QACMnM,SAAiBy+C,UAAUC,cACpCt6D,KAAOo6D,EAEJ,CACHh4D,MAAOkyB,EAAOlyB,MACdm4D,SAAU,GAIb,GAAIjmC,EAAOkmC,gBAA4C,IAA1BlmC,EAAOkmC,eAAsB,CAC3D,IAAMC,EAAWnmC,EAAOkmC,eAClBE,EAASpmC,EAAOqmC,aAQtB,OAPArmC,EAAOlyB,MAAQkyB,EAAOlyB,MAAMwV,UAAU,EAAG6iD,GACnCL,EACA9lC,EAAOlyB,MAAMwV,UAAU8iD,EAAQpmC,EAAOlyB,MAAMyV,QAClDyc,EAAOkmC,eAAiBC,EAAWL,EAAQviD,OAC3Cyc,EAAOqmC,aAAeF,EAAWL,EAAQviD,OACzCyc,EAAOvM,QAEA,CACH3lB,MAAOkyB,EAAOlyB,MACdm4D,SAAUE,EAAWL,EAAQviD,QAKjC,OAFAyc,EAAOlyB,OAASg4D,EAET,CACHh4D,MAAOkyB,EAAOlyB,MACdm4D,SAAU,GA4EQK,CAAeV,EAAax8B,GAAtCt7B,MAER43D,EAAO53D,EAAOs7B,KAmBtB,OAAO1S,eAAC2uC,GAAyB,CAAC1zC,UAAW,EAAGgE,UAAU,wBAAuBC,SAAA,CAC5EhoB,cAAA,OAAKke,GAAI,cAAe6J,UAAU,cAAaC,SAI3C,CACG,SACA,SACA,SACA,OACA,SACA,SACA,SACA,UACFzZ,KAAI,SAAAC,GACF,OAAOxO,cAAA,UACH+jB,UAAW,EACXgE,UAAU,UACVM,QAAS,kBAAM0vC,EAAevpD,IAAOwZ,SACvCxZ,GAJkBA,QAO5BxO,cAAA,OAAK+nB,UAAU,wBAAuBC,SAClChoB,cAACwzD,GAAW,CACR1nB,QAAShjB,eAAA4rC,WAAA,CAAA1sC,SAAA,CACJmH,EAAS,kCACVrG,eAAA,MAAAd,SAAA,CACIhoB,cAAA,MAAAgoB,SAAKmH,EAAS,2CACdnvB,cAAA,MAAAgoB,SAAKmH,EAAS,yD,uCC9IhCwpC,I,cAAqBtO,sBAAW,SAAA31C,EAMf28C,GAA8C,IALjEc,EAAQz9C,EAARy9C,SACAxyD,EAAK+U,EAAL/U,MACAi5D,EAAQlkD,EAARkkD,SACAC,EAAcnkD,EAAdmkD,eACAC,EAAQpkD,EAARokD,SAEM3pC,EAAWa,KAAc+7B,EACWC,mBAASrsD,GAAMszD,EAAA5mD,YAAA0/C,EAAA,GAAlDgN,EAAa9F,EAAA,GAAE+F,EAAgB/F,EAAA,GAAA/G,EACMF,mBAAS,GAAEG,EAAA9/C,YAAA6/C,EAAA,GAAhD+M,EAAc9M,EAAA,GAAE+M,EAAiB/M,EAAA,GAAAG,EACJN,oBAAU,GAAEO,EAAAlgD,YAAAigD,EAAA,GAAzCoC,EAAUnC,EAAA,GAAE4M,EAAa5M,EAAA,GAC1B6M,EAAoB7W,iBAAOhxB,KAAS2nC,EAAmB,MAAMhnC,QAwBnE,OAtBAg+B,8BAAoBmB,GAAK,iBAAO,CAC5BgI,SAAU,SAAAC,GACN,GAAIA,EAAW,CAAC,IACJ35D,EAAsB25D,EAAtB35D,MAAOqjB,EAAes2C,EAAft2C,OAAQ9E,EAAOo7C,EAAPp7C,GACfqB,EAAoBQ,KAApBR,IAAKC,EAAeO,KAAfP,IAAK2pB,EAAUppB,KAAVopB,MAElB6vB,EAAiBr5D,GACjBu5D,EAAkB15C,EAAI,EAAGD,EAAI,IAAK4pB,EAA2B,IAArBrnB,WAAWkB,OACnDm2C,EAAcj7C,KAGtBq7C,iBAAkB,SAACr7C,EAAI8E,GAAY,IACvBzD,EAAoBQ,KAApBR,IAAKC,EAAeO,KAAfP,IAAK2pB,EAAUppB,KAAVopB,MAEdjrB,IAAOwwC,GAAYwK,EAAkB15C,EAAI,EAAGD,EAAI,IAAK4pB,EAA2B,IAArBrnB,WAAWkB,YAIlFkiC,qBAAU,WACFwJ,EAAa,IAAiB,OAAdmK,QAAc,IAAdA,KAAiBnK,EAAW,GAAD7hD,OAAKosD,EAAiB,SACtE,CAACvK,EAAYuK,EAAgBJ,IAEzB/vC,eAAA,OAAKf,UAAU,2BAA0BC,SAAA,CAC5Cc,eAAA,OAAKf,UAAU,0BAAyBC,SAAA,CACpCc,eAAA,OAAAd,SAAA,CACKmH,EAAS,8CAA8C,KAAEnvB,cAACw5D,KAAW,CAClEt5D,MAAO+4D,EACPr3C,KAAK,QACLpC,IAAK,IAAKD,IAAK,EACfuxC,SAAU,SAAA5wD,GAAK,OAAIk5D,EAAmC,kBAAVl5D,EAAqBqmB,SAASrmB,GAAc,OAALA,QAAK,IAALA,IAAS,SAGpGF,cAAC+wD,KAAM,CAAChpC,UAAU,oBAAoBnG,KAAK,QAAQuwC,SAAUA,EAAU9pC,QAAS,kBAAc,OAARywC,QAAQ,IAARA,OAAQ,EAARA,EAAWpK,IAAY1mC,SACxGmH,EAAS,qDAGlBnvB,cAACy5D,KAAY,CACTC,OAAQ,CACJC,QAAS,CACLC,OAAQ,CACJj6D,MAAO,UACPiS,WAAY,sBACZioD,UAAW,QAEfj8D,KAAM,CACFk8D,QAAS,mCAIrBC,cAAc,EACdp6D,MAAOo5D,EACPjI,SAAU,SAAAnxD,GAAK,OAAIq5D,EAAiBr5D,EAAMqmB,MAC1Cg0C,iBAAkB,SAAAr6D,GACdq5D,EAAiBr5D,EAAMqmB,KACf,OAAR4yC,QAAQ,IAARA,KAAWj5D,EAAMqmB,eAO3Bi0C,GAAiB,SAACC,GACpB,MAAO,CACHC,UAAWD,EACXE,IAAKt3C,GAAiBo3C,KAQjBG,GAAqB,SAAH5xC,GAIJ,IAAD6xC,EAAAC,EAAAC,EAAA/xC,EAHtB1F,QAAS03C,OAAe,IAAAD,EAAG13C,GvCzG8BG,GpBc1C,4C2D2FyDu3C,EAAAE,EAAAjyC,EACxEkyC,MAAOC,OAAa,IAAAF,EAAG,IAAGA,EAC1BG,EAAgBpyC,EAAhBoyC,iBAEM1rC,EAAWa,KACX8qC,EAAYvY,iBAA8B,MAAMmK,EAC5BV,mBAAS4O,GAAcjO,EAAAtgD,YAAAqgD,EAAA,GAA1CiO,EAAKhO,EAAA,GAAEoO,EAAQpO,EAAA,GAAAG,EACQd,oBAAS,WAAO,IAADgP,EAAAC,EACnCC,EAAgBj4C,GAAaw3C,GAEnC,MAAO,CACHL,IAAKK,EACLN,UAAWe,EACXC,iBAAsC,QAAtBH,EAAkB,QAAlBC,EAAEC,EAAc,UAAE,IAAAD,OAAA,EAAhBA,EAAkB/8C,UAAE,IAAA88C,KAAK,MAEjDjO,EAAA1gD,YAAAygD,EAAA,GARK/pC,EAAOgqC,EAAA,GAAEqO,EAAUrO,EAAA,GAUpBsO,EAAgBnT,uBAAY,SAAChqC,EAAY8E,GAAc,OAAKo4C,GAAW,SAAAn2D,GACzE,IAAMq2D,EAAgBr2D,EAAIk1D,UAAU5rD,KAAI,SAAAC,GAAK,OAAIA,EAAM0P,KAAOA,EAAE3e,wBAAA,GAAQiP,GAAK,IAAEwU,WAAWxU,KAE1F,OAAAjP,wBAAA,GAAY0F,GAAQg1D,GAAeqB,SACnC,IAEJpW,qBAAU,WACN6V,EAASH,KACV,CAACA,IAEJ1V,qBAAU,WAAO,IAADqW,EAAAC,EACNC,EAAax4C,GAAaw3C,GAEhCW,EAAW,CACPhB,IAAKK,EACLN,UAAWsB,EACXN,iBAAmC,QAAnBI,EAAe,QAAfC,EAAEC,EAAW,UAAE,IAAAD,OAAA,EAAbA,EAAet9C,UAAE,IAAAq9C,KAAK,MAE7C,CAACd,IAEJ,IAAMiB,EAAmBnZ,kBAAO,GAsChC,OArCA2C,qBAAU,WACiD,IAADyW,EAAlD54C,EAAQo3C,UAAU,IAAMuB,EAAiBxpC,UACzCwpC,EAAiBxpC,SAAU,EACV,QAAjBypC,EAAAb,EAAU5oC,eAAO,IAAAypC,GAAjBA,EAAmBtC,SAASt2C,EAAQo3C,UAAU,OAEnD,CAACp3C,EAAQo3C,YAEZjV,qBAAU,WACN,IAAI0W,GAAW,EAUf,OATAhT,YAAW,WAAO,IACNuR,EAAgCp3C,EAAhCo3C,UAAWgB,EAAqBp4C,EAArBo4C,iBACnB,GAAIS,GAAYT,GAAoB,EAAG,CAAC,IAADU,EAC7BC,EAAc3B,EAAU4B,MAAK,SAAAvtD,GAAK,OAAIA,EAAM0P,KAAOi9C,KAErDW,IAA8B,QAAjBD,EAAAf,EAAU5oC,eAAO,IAAA2pC,GAAjBA,EAAmBtC,iBAAiB4B,EAAkBW,EAAY94C,YAExF,KAEI,WACH44C,GAAW,KAEhB,CAAC74C,IAGJmiC,qBAAU,WACN,IAAI0W,GAAW,EAOf,OANAhT,YAAW,WACHgT,GACAf,EAAiB93C,EAAQo3C,UAAWQ,KAEzC,KAEI,WACHiB,GAAW,KAEhB,CAAC74C,EAAS43C,EAAOE,IAEb/xC,eAAA,OAAKf,UAAU,6CAA4CC,SAAA,CAC9Dc,eAAA,OAAKf,UAAU,yBAAwBC,SAAA,CACnChoB,cAAA,MAAAgoB,SACKmH,EAAS,iDAEdrG,eAACioC,KAAM,CACHnvC,KAAK,QACLmG,UAAU,iBACVoqC,UAAoC,QAA1BmI,EAAkB,QAAlBC,EAACx3C,EAAQo3C,iBAAS,IAAAI,OAAA,EAAjBA,EAAmB5kD,cAAM,IAAA2kD,IAAI,KAhGjC,GAiGPjyC,QAAS,WACL+yC,GAAW,SAAAn2D,GACP,IAAMq2D,EAAgB,GAAAzuD,OAAA8gC,aACf1oC,EAAIk1D,WAAS,CAChB,CAAEn3C,OAAQ,MAAOrjB,MAAO,UAAWue,GAAIjZ,EAAIk1D,UAAUxkD,OAAS,KAChEuzC,MAAK,SAACC,EAAGjzC,GAAC,OAAK8lD,OAAO7S,EAAEnmC,QAAUg5C,OAAO9lD,EAAE8M,WAE7C,OAAAzjB,wBAAA,GACO0F,GACAg1D,GAAeqB,QAG5BtzC,SAAA,CACJmH,EAAS,6CAA6C,KAAGpM,EAAQo3C,UAAUxkD,OAAO,IA9GzE,GA8G0F,OACrGmT,eAAA,OAAKf,UAAU,yBAAwBC,SAAA,CACnChoB,cAAA,MAAAgoB,SAAKmH,EAAS,wDACdnvB,cAACi8D,eAAW,CAACtB,MAAOA,EAAO/4C,KAAM,IAAKm5C,SAAUA,UAGxD/6D,cAAA,OAAK+nB,UAAU,8BAA6BC,SACxChoB,cAACk8D,kBAAc38D,wBAAA,GAAK,CAChB4N,MAAO,IACPgvD,cAAe,GACfC,SAxHO,GAyHPC,SAAU,EACVC,gBAAiB,MACjBv5C,QAASA,EAAQo3C,UACjBoC,gBAAiB,SAAApC,GAAS,OAAIiB,GAAW,SAAAn2D,GAAG,OAAA1F,wBAAA,GAAU0F,GAAQg1D,GAAeE,QAC7EqC,kBAAmB,SAAAC,GAAc,IAADC,EAC5BtB,GAAW,SAAAn2D,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAEk2D,iBAAkBsB,EAAUv+C,QACxC,QAAjBw+C,EAAA5B,EAAU5oC,eAAO,IAAAwqC,GAAjBA,EAAmBrD,SAASoD,MAEnC,IAAAz0C,SAEGhoB,cAAC24D,GAAkB,CAACtH,IAAKyJ,EACrB3I,SAAUpvC,EAAQo3C,UAAUxkD,QAAU,EACtCkjD,eAAgBwC,EAChBvC,SAAU,SAAA56C,GACNk9C,GAAW,SAAAn2D,GAAQ,IAAD03D,EAG+BC,EAFvCtB,EAAgBr2D,EAAIk1D,UAAUl4C,QAAO,SAAAzT,GAAK,OAAIA,EAAM0P,KAAOA,KAC3D2+C,EAA8B,QAAxBF,EAAgB,OAAbrB,QAAa,IAAbA,OAAa,EAAbA,EAAgB,GAAGp9C,UAAE,IAAAy+C,KAAK,EACrCE,EAAS,GAAK95C,EAAQo3C,UAAU0C,KACf,QAAjBD,EAAA9B,EAAU5oC,eAAO,IAAA0qC,GAAjBA,EAAmBvD,SAASt2C,EAAQo3C,UAAU0C,KAGlD,OAAAt9D,wBAAA,GACO06D,GAAeqB,IAAc,IAChCH,iBAAkB0B,mB,8zEC5O3C,IAAMC,GAAqBr1C,KAAOC,IAAGC,MAEtC,SAAAjT,GAAU,OAAAA,EAAPqoD,QAAwB,8CAAgD,iDAO3E,SAAAt0C,GAA6B,IAA1BgtC,EAAShtC,EAATgtC,UAAWsH,EAAOt0C,EAAPs0C,QACZ,OAAOtH,EAAS,mFAAA5oD,OAGNkwD,EAAU,+CAAiD,GAAE,kBAEjE,MAODC,GAAyBv1C,aAAOivC,GAAeC,UAAtBlvC,CAAgCssC,MAWzDkJ,GAAsBx1C,KAAOC,IAAGusC,MA+BhCiJ,GAA4Bz1C,aAAOivC,GAAeC,UAAtBlvC,CAAgC0sC,MAU5DgJ,GAAyB11C,KAAOC,IAAG01C,M,oBC7CnCC,GAAkBhT,sBAAgD,SAAA31C,EAM5E28C,GAAS,IALRtpC,EAASrT,EAATqT,UACAgrC,EAAYr+C,EAAZq+C,aACAuK,EAAQ5oD,EAAR4oD,SACAC,EAAQ7oD,EAAR6oD,SACAzM,EAAQp8C,EAARo8C,SAEM3hC,EAAWa,KAEVwtC,EAIHF,EAJA/rD,EACGksD,EAGHH,EAHA9rD,EACOksD,EAEPJ,EAFA39D,MACOg+D,EACPL,EADAnwD,MAAK4+C,EAEiBC,oBAAS,WAC/B,IAAM4R,EAAS7K,EAAayK,GACtBK,EAAS9K,EAAa0K,GACtBK,EAAa/K,EAAa2K,GAC1BK,EAAahL,EAAa4K,GAEhC,MAAO,CACHpsD,EAAS,OAANqsD,QAAM,IAANA,IAAU,EACbpsD,EAAS,OAANqsD,QAAM,IAANA,IAAU,EACb1wD,MAAiB,OAAV4wD,QAAU,IAAVA,IAAc,EACrBp+D,MAAOm+D,MAEb7K,EAAA5mD,YAAA0/C,EAAA,GAZK7rD,EAAK+yD,EAAA,GAAElB,EAAQkB,EAAA,GAclB1hD,EAIArR,EAJAqR,EACAC,EAGAtR,EAHAsR,EACA7R,EAEAO,EAFAP,MACAwN,EACAjN,EADAiN,MAEE6wD,EAAaT,EAASI,GA8B5B,OA5BAzY,qBAAU,WACN,IAAI0W,GAAW,EAOf,OANAhT,YAAW,WACHgT,GACA9K,EAAS5wD,KAEd,KAEI,WACH07D,GAAW,KAIhB,CAAC17D,IAEJgwD,8BAAoBmB,GAAK,iBAAO,CAC5BU,SAAU,SAAAkM,GACN,IAAMC,EAAUx7D,OAAO2U,KAAK4mD,GAE5B,IAAK,IAAMt9D,KAAOu9D,EACd,GAAID,EAAUt9D,KAA+BT,EAAMS,GAE/C,YADAoxD,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAQg5D,WAOvCn1C,eAAA,OAAKf,UAAWA,EAAUC,SAAA,CAC7BhoB,cAAA,MAAAgoB,SAAKmH,EAAS,4CACdrG,eAAA,OAAKf,UAAU,gBAAeC,SAAA,CAC1BhoB,cAACm+D,KAAW,CAACC,KAAK,KACd1E,OAAQ,CACJ2E,MAAO,CACH9T,gBAAiB,qBACjBp9C,MAAO,IACPC,OAAQ,IACRkxD,QAAS,SACTjG,SAAU,YAEdkG,MAAO,CACHhU,gBAAiB,oBACjBiU,OAAQ,KAGhBC,KAAM,EAAGC,MAAO,EAChBC,KAAM,EAAGC,MAAO,EAChBrtD,EAAI,OAADA,QAAC,IAADA,IAAK,EACRC,EAAI,OAADA,QAAC,IAADA,IAAK,EACRs/C,SAAU,SAAAroC,GAAA,IAAGlX,EAACkX,EAADlX,EAAGC,EAACiX,EAADjX,EAAC,OAAOugD,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAEsM,IAAGC,YAC1DsX,eAAA,OAAKf,UAAU,gBAAeC,SAAA,CACzBmH,EAAS,0CAA0C,KAAEnvB,cAACw5D,KAAW,CAC9D53C,KAAK,QACL1hB,MAAOqR,EACPu/C,SAAU,SAAA5wD,GAAK,OAAI6xD,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAEsM,EAAoB,kBAAVrR,EAAqBA,EAAQqmB,SAAc,OAALrmB,QAAK,IAALA,IAAS,gBAG/G4oB,eAAA,OAAKf,UAAU,gBAAeC,SAAA,CACzBmH,EAAS,0CAA0C,KAAEnvB,cAACw5D,KAAW,CAC9D53C,KAAK,QACL1hB,MAAOsR,EACPs/C,SAAU,SAAA5wD,GAAK,OAAI6xD,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAEuM,EAAoB,kBAAVtR,EAAqBA,EAAQqmB,SAAc,OAALrmB,QAAK,IAALA,IAAS,gBAG/G4oB,eAAA,OAAKf,UAAU,gBAAeC,SAAA,CACzBg2C,EAAW,KAAEh+D,cAAC6+D,KAAM,CACjB3+D,MAAOiN,EACPoS,IAAK,EACLC,IAAK,GACLsxC,SAAU,SAAA5wD,GACe,kBAAVA,GACP6xD,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAEkI,MAAOjN,gBAMtDF,cAAA,MAAAgoB,SAAKmH,EAAS,yCACdnvB,cAAC8+D,KAAa,CACVC,OAAQhrD,GACRpU,MAAOA,EACPq6D,iBAAkB,SAAAr6D,GAAK,OAAIoyD,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAEtF,MAAOA,EAAMqmB,kBChIlEg5C,GAAuB3U,sBAA0D,SAAA31C,EAK3F28C,GAAS,IAJRxkC,EAAMnY,EAANmY,OACA3sB,EAAKwU,EAALxU,MACAmoB,EAAO3T,EAAP2T,QACAxE,EAAQnP,EAARmP,SAEMo7C,EAAe1c,iBAAuB,MAAMwJ,EACxBC,mBAAS,GAAEiH,EAAA5mD,YAAA0/C,EAAA,GAA9BlmC,EAAKotC,EAAA,GAAEtvC,EAAQsvC,EAAA,GAMtB,OAJA/C,8BAAoBmB,GAAK,iBAAO,CAC5BxrC,MAAO,eAAAq5C,EAAA,OAA0B,QAA1BA,EAAMD,EAAa/sC,eAAO,IAAAgtC,OAAA,EAApBA,EAAsBr5C,aAGhC7lB,cAACk9D,GAAyB39D,wBAAA,CAAC8xD,IAAK4N,GAC/B37C,GAAmB,CACnBI,iBAAiB,EACjBF,aAAc/gB,EAAoBkT,OAClCgO,WACAC,UAAW,WACHiC,GAAS,GAAGwC,EAAQ5lB,EAAoBojB,KAEhDhC,SAAU,WACE,OAARA,QAAQ,IAARA,WAEN,IAAAmE,SAEDvlB,EAAoB8L,KAAI,SAACC,EAAO2U,GAAW,IAChCxiB,EAAsB6N,EAAtB7N,IAAKC,EAAiB4N,EAAjB5N,MAAOf,EAAU2O,EAAV3O,MAEpB,OAAOG,cAACm9D,GAAsB,CAC1Bp1C,UAAWZ,GACP,cACAjnB,EAAMW,SAAWF,GAAOksB,EAAS,cAAgB,GACjDhH,IAAU1C,EAAQ,sBAAwB,IAE9CkF,QAAS,SAAA7S,GACLA,EAAEkO,kBACF2E,EAAQ7Z,IACVwZ,SAIFhoB,cAAA,OACI+nB,UAAU,iBACV+P,IAAG,GAAAjrB,OAAK6gB,aAAsB,KAAA7gB,OAAIjM,GAClC0zD,IAAKz0D,KAhBuBc,YCZnCw+D,I,OAAkB9U,sBAAW,SAAA31C,EAMtB28C,GAA2C,IAL3D+N,EAAS1qD,EAAT0qD,UACAC,EAAW3qD,EAAX2qD,YACAtM,EAAYr+C,EAAZq+C,aACAlgC,EAAyBne,EAAzBme,0BACUysC,EAAmB5qD,EAA7Bo8C,SAEM3hC,EAAWa,KACXuvC,EAAgBhd,iBAAgC,MAAMwJ,EAClCC,oBAAU,GAAEiH,EAAA5mD,YAAA0/C,EAAA,GAA/BlmC,EAAKotC,EAAA,GAAEtvC,EAAQsvC,EAAA,GAAA/G,EAC4CF,oBAAS,GAAMG,EAAA9/C,YAAA6/C,EAAA,GAA1EsT,EAAyBrT,EAAA,GAAEsT,EAA4BtT,EAAA,GAAAG,EACtCN,mBAASqT,GAAY9S,EAAAlgD,YAAAigD,EAAA,GAAtC1tD,EAAI2tD,EAAA,GAAEmT,EAAOnT,EAAA,GAAAG,EACMV,mBAAS+G,GAAapG,EAAAtgD,YAAAqgD,EAAA,GAAzCxsD,EAAKysD,EAAA,GAAEoF,EAAQpF,EAAA,GAAAgT,EC/CA,WAA6B,IAAD5T,EAC5BC,mBAAS,GAAEiH,EAAA5mD,YAAA0/C,EAAA,GAA1BvoB,EAAGyvB,EAAA,GAAE2M,EAAM3M,EAAA,GAKlB,MAAO,CAJS/K,uBAAY,WACxB0X,GAAO,SAAA36D,GAAG,OAAIA,EAAM,OACrB,IAEcu+B,GD0CkCq8B,GAAYC,EAAAzzD,YAAAszD,EAAA,GAAxDI,EAAiBD,EAAA,GAAEE,EAAqBF,EAAA,GACzChP,EAAWvO,iBAAOhxB,KAAS+tC,EAAqB,MAAMptC,QACtD+tC,EAA2B/X,uBAAY,SAACnlC,EAASvhB,GACnDuwD,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAEzD,gBAAeC,cAAeqhB,GAAiBC,QAC1Eg9C,MACD,CAACA,IACEG,EAAoB5tC,IAAW,SAAAnG,GAAK,OAAIA,EAAM2G,QAAQH,qBAEtD7rB,EAAWi8C,mBAAQ,kBNHSt3B,EMGmB0D,ENHoBzsB,OAAOC,OAAOoF,IAAiBwG,KAAI,SAAAugB,GAAA,IAAG5uB,EAAK4uB,EAAL5uB,MAAO+H,EAAQ6mB,EAAR7mB,SAAQ,MAAQ,CACtIpI,MAAO4rB,EAAWxjB,GAClB/H,YAFiC,IAACurB,IMG8B,CAAC0D,IAEjE+1B,qBAAU,WACwB,IAA1B8a,IACAN,EAAQ,UACR5O,EAAS,SAAU5wD,MAGxB,CAAC8/D,IAEJ,IAAMG,EAAiB5d,iBAA2B,MAC5C6d,EAAkB7d,iBAA2B,MAEnD2N,8BAAoBmB,GAAK,iBAAO,CAC5BU,SAAU,SAAAkM,GAAc,IAADoC,EAAAC,EACnBvO,GAAS,SAAAwO,GAAY,OAAAhhE,wBAAA,GAAUghE,GAAiBtC,MAAc,IAG1D/8D,EAEA+8D,EAFA/8D,UAAWD,EAEXg9D,EAFWh9D,UAAWI,EAEtB48D,EAFsB58D,YAAagB,EAEnC47D,EAFmC57D,YACnCH,EACA+7D,EADA/7D,WAAYH,EACZk8D,EADYl8D,YAAaE,EACzBg8D,EADyBh8D,cAAeD,EACxCi8D,EADwCj8D,cAEtB,QAAtBq+D,EAAAF,EAAejuC,eAAO,IAAAmuC,GAAtBA,EAAwBtO,SAAS,CAC7BxgD,EAAGtP,EAAeuP,EAAGxP,EACrBmL,MAAOjL,EAAYvC,MAAOoC,IAEP,QAAvBu+D,EAAAF,EAAgBluC,eAAO,IAAAouC,GAAvBA,EAAyBvO,SAAS,CAC9BxgD,EAAGlQ,EAAamQ,EAAGnP,EACnB8K,MAAOlM,EAAWtB,MAAOuB,SAGjC,IAEAJ,EAOAZ,EAPAY,UACA+P,EAMA3Q,EANA2Q,kBACAvQ,EAKAJ,EALAI,WACAC,EAIAL,EAJAK,UACAF,EAGAH,EAHAG,YAAaoB,EAGbvB,EAHauB,cAAeD,EAG5BtB,EAH4BsB,cAC5BhB,EAEAN,EAFAM,QACAY,EACAlB,EADAkB,KAAIqnB,EAEwD,OAAT22C,QAAS,IAATA,IAAa,GAC9DoB,EAAe,CACjB5uD,WAFwB6W,EAApB/b,qBAGJ2lD,gBAH8C5pC,EAApB7b,sBAKxB6zD,EAAyB,WAAT7hE,EAChB8hE,GAA6B,eAAT9hE,EACpB+hE,GAAyB,oCACzBC,GAAiB,WACnBlB,EAAQ,QACK,SAAT9gE,GAAiBkyD,EAAS,OAAQ5wD,IAEpC2gE,GAAuB,WAAO,IAADC,EACzB1gE,EAAcF,EAAMW,OACY,QADNigE,EAC1BrgE,EAAmBP,EAAMW,eAAO,IAAAigE,OAAA,EAAhCA,EAAkC5gE,MAClC,GACNw/D,EAAQ,cACR3N,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAQ7E,MAC9B0wD,EAAS,aAAYvxD,wBAAA,GAAOW,GAAUE,KAEpC2gE,GAAmB,WACrBrB,EAAQ,UACK,WAAT9gE,GAAmBkyD,EAAS,SAAU5wD,IAE9C,OAAOF,cAAA,OAAK+nB,UAAU,2CAA0CC,SAC5Dc,eAAA,QAAMf,UAAU,oCAAmCC,SAAA,CAC/ChoB,cAAA,QAAM+nB,UAAU,wBAAuBC,SAAEmH,EAAS,4BAClDrG,eAAA,QAAMf,UAAU,6BAA4BC,SAAA,CACxCc,eAAA,MAAAvpB,wBAAA,CACI2e,GAAIyiD,GACJ54C,UAAU,6EACNzE,GAAmB,CACnBK,WACAH,aAAc,EACdM,WAAY,SAAAtO,GACR,GAAc,IAAVqQ,IAA0B,cAAVrQ,EAAE7U,KAAiC,UAAV6U,EAAE7U,KAA6B,OAAV6U,EAAE7U,KAShE,OARA6U,EAAE4O,iBACFT,EAAS,GACT87C,GAA6B,GAE7B7W,YAAW,WAAO,IAADoY,EACC,IAAVn7C,IAAkC,QAArBm7C,EAAAzB,EAAcrtC,eAAO,IAAA8uC,GAArBA,EAAuBn7C,WACzC,MAEI,GAGfjC,UAAS,WACS,IAAViC,GAAa+6C,KACH,IAAV/6C,GAAag7C,KACH,IAAVh7C,GAAak7C,SAEvB,IAAA/4C,SAAA,CAEFc,eAAA,SACIf,UAAWZ,GACP,oBACS,SAATvoB,GAAmB,4BACT,IAAVinB,GAAe,qBAEnBwC,QAAS,kBAAMu4C,MAAiB54C,SAAA,CAEhCc,eAAA,QAAMf,UAAS,aAAAlb,OAAwB,SAATjO,EAAkB,oBAAsB,IAAKopB,SAAA,CACvEhoB,cAAA,SAAO+jB,UAAW,EAAGnlB,KAAK,QAAQmpB,UAAU,kBAAkB7nB,MAAM,SACpEF,cAAA,QAAM+nB,UAAU,uBAEpB/nB,cAAA,QAAM+nB,UAAU,kBAAiBC,SAC5BmH,EAAS,yCAGlBnvB,cAAA,QAAM+nB,UAAU,4BAChB/nB,cAAA,SACI+nB,UAAWZ,GACP,oBACAu5C,IAAqB,4BACX,IAAV76C,GAAe,qBAEnBwC,QAAS,kBAAMw4C,MAAuB74C,SAEtChoB,cAAC2zD,KAAO,CACJkB,QAAS2K,EACTyB,gBAAiBxB,EACjB5J,QAAS,CAAC,QAAS,SACnBC,UAAU,aACVrC,iBAAiB,4BACjB3nB,QAAS9rC,cAAA,OAAK+nB,UAAU,yBAAwBC,SAC5ChoB,cAACg/D,GAAoB,CAAC3N,IAAKkO,EACvB1yC,OAAQ6zC,GACRxgE,MAAOA,EACP2jB,SAAU,WAAO,IAADq9C,EACZzB,GAA6B,GACkB,QAA/CyB,EAAAxnD,SAASu+C,eAAe0I,WAAuB,IAAAO,GAA/CA,EAAiDr7C,SAErDwC,QAAS,SAAAyG,GAAc,IAADqyC,EAAVxgE,EAAGmuB,EAAHnuB,IACFP,EAAcO,EACS,QADNwgE,EACjB1gE,EAAmBE,UAAI,IAAAwgE,OAAA,EAAvBA,EAAyBjhE,MACzB,GACNw/D,EAAQ,cACR3N,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAQ7E,MAC9B0wD,EAAS,aAAYvxD,wBAAA,GAAOW,GAAUE,SAG3C4nB,SAEPc,eAAA,QAAMf,UAAU,0BAAyBC,SAAA,CACrCc,eAAA,QAAMf,UAAS,aAAAlb,OAAe6zD,GAAoB,oBAAsB,IAAK14C,SAAA,CACzEhoB,cAAA,SAAO+jB,UAAW,EAAGnlB,KAAK,QAAQmpB,UAAU,kBAAkB7nB,MAAM,eACpEF,cAAA,QAAM+nB,UAAU,uBAEpB/nB,cAAA,QAAM+nB,UAAU,kBAAiBC,SAC5BmH,EAAS,mDAK1BnvB,cAAA,QAAM+nB,UAAU,4BAChB/nB,cAAA,SACI+nB,UAAWZ,GACP,oBACAs5C,GAAiB,4BACP,IAAV56C,GAAe,qBAEnBwC,QAAS,kBAAM04C,MAAmB/4C,SAElCc,eAAA,QAAAd,SAAA,CACIc,eAAA,QAAMf,UAAS,aAAAlb,OAAe4zD,EAAgB,oBAAsB,IAAKz4C,SAAA,CACrEhoB,cAAA,SAAO+jB,UAAW,EAAGnlB,KAAK,QAAQmpB,UAAU,kBAAkB7nB,MAAM,WACpEF,cAAA,QAAM+nB,UAAU,uBAEpB/nB,cAAA,QAAM+nB,UAAU,yCAAwCC,SACnDmH,EAAS,iDAK1BrG,eAAA,OAAKf,UAAU,eAAcC,SAAA,CACzBhoB,cAAC2zD,KAAO,CACJkC,QAAS,CAAC,SACVpC,iBAAiB,mDACjB3nB,QAAS9rC,cAAA,OAAK+nB,UAAU,yBAAwBC,SAC5Cc,eAAA,OAAKf,UAAW,sBAAsBC,SAAA,CAClCc,eAAA,OAAKf,UAAU,oBAAmBC,SAAA,CAC9BhoB,cAAA,MAAAgoB,SACKmH,EAAS,uCAEdnvB,cAAC8+D,KAAa,CACVC,OAAQhrD,GACRpU,MAAOmB,EACPk5D,iBAAkB,SAAAr6D,GACd+/D,EAAQ,UACR3N,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAEnE,UAAWnB,EAAMqmB,SAC5C+5C,UAIZ//D,cAAA,SACA8oB,eAAA,OAAKf,UAAU,oBAAmBC,SAAA,CAC9BhoB,cAAA,MAAAgoB,SACKmH,EAAS,uCAEdnvB,cAAC8+D,KAAa,CACVC,OAAQhrD,GACRpU,MAAOkR,EACPmpD,iBAAkB,SAAAr6D,GACd+/D,EAAQ,UACR3N,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAE4L,kBAAmBlR,EAAMqmB,SACpD+5C,eAMpBjK,UAAU,SAAQ9tC,SAElBc,eAACg0C,GAAkB,CAACrH,UAAWyK,EAAmBn4C,UAAU,wCAAuCC,SAAA,CAC9FmH,EAAS,gCAAgC,IAACnvB,cAACohE,KAAiB,QAvCxD,gBA0CZvuC,GAA6B7yB,cAAC2zD,KAAO,CAClCkC,QAAS,CAAC,SACVpC,iBAAiB,mDACjB3nB,QAAS9rC,cAAA,OAAK+nB,UAAU,yBAAwBC,SAC5Cc,eAAA,OAAKf,UAAW,sBAAsBC,SAAA,CAClChoB,cAAA,MAAI+nB,UAAU,sBAAqBC,SAC/BhoB,cAACgyD,KAAQ,CAAC9xD,MAAO,aAAc8wD,QAASzwD,EAAWuwD,SAAU,WACzD4O,EAAQ,UACR3N,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAE1E,WAAY0E,EAAI1E,eAC3Cw/D,KACF/3C,SACGmH,EAAS,4CAGjB5uB,GAAaP,cAACq9D,GAAe,CAAChM,IAAK8O,EAChCp4C,UAAU,sBACVu1C,SAAU,CACN39D,MAAO,cACPwN,MAAO,aACPoE,EAAG,gBACHC,EAAG,iBAEP+rD,SAAU,CACNr7D,WAAYitB,EAAS,uCAEzB4jC,aAAc7yD,EACd4wD,SAAU,SAAA7gC,GAA6B,IAA1BtwB,EAAKswB,EAALtwB,MAAOwN,EAAK8iB,EAAL9iB,MAAOoE,EAAC0e,EAAD1e,EAAGC,EAACye,EAADze,EAC1BugD,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GACL0F,GAAG,IACN/C,WAAYiL,EACZpL,YAAapC,EACbsC,cAAesP,EACfvP,cAAewP,OAEnBuuD,YAKhBjK,UAAU,SAAQ9tC,SAElBc,eAACg0C,GAAkB,CACfrH,UAAWyK,EACXnD,QAAS0D,GAAiBlgE,EAC1BwnB,UAAU,yCAAwCC,SAAA,CAEjDmH,EAAS,iCAAiC,IAACnvB,cAACohE,KAAiB,QA9C3B,iBAiD3CphE,cAAC2zD,KAAO,CACJkC,QAAS,CAAC,SACVpC,iBAAiB,mDACjB3nB,QAAS9rC,cAAA,OAAK+nB,UAAU,yBAAwBC,SAC5Cc,eAAA,OAAKf,UAAW,sBAAsBC,SAAA,CAClChoB,cAAA,MAAI+nB,UAAU,sBAAqBC,SAC/BhoB,cAACgyD,KAAQ,CAAC9xD,MAAO,WAAY8wD,QAAS1wD,EAAYwwD,SAAU,WACxD4O,EAAQ,UACR3N,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAE3E,YAAa2E,EAAI3E,gBAC5Cy/D,KACF/3C,SACGmH,EAAS,6CAGjB7uB,GAAcN,cAACq9D,GAAe,CAAChM,IAAK+O,EACjCr4C,UAAU,oBACVu1C,SAAU,CACN39D,MAAO,YACPwN,MAAO,YACPoE,EAAG,cACHC,EAAG,eAEP+rD,SAAU,CACNt8D,UAAWkuB,EAAS,4CAExB4jC,aAAc7yD,EACd4wD,SAAU,SAAAt6B,GAA6B,IAA1B72B,EAAK62B,EAAL72B,MAAOwN,EAAKqpB,EAALrpB,MAAOoE,EAACilB,EAADjlB,EAAGC,EAACglB,EAADhlB,EAC1BugD,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GACL0F,GAAG,IACNhE,UAAWkM,EACXjM,UAAWvB,EACX0B,YAAakQ,EACblP,YAAamP,OAEjBuuD,YAKhBjK,UAAU,SAAQ9tC,SAElBc,eAACg0C,GAAkB,CACfrH,UAAWyK,EACXnD,QAAS0D,GAAiBngE,EAC1BynB,UAAU,0CAAyCC,SAAA,CAElDmH,EAAS,kCAAkC,IAACnvB,cAACohE,KAAiB,QA9C1D,kBAiDZvuC,GAA6B7yB,cAAC2zD,KAAO,CAClCkC,QAAS,CAAC,SACVpC,iBAAiB,mDACjB3nB,QAAS9rC,cAAA,OAAK+nB,UAAU,yBAAwBC,SAC5Cc,eAAA,OAAKf,UAAW,sBAAsBC,SAAA,CAClChoB,cAAA,MAAI+nB,UAAU,sBAAqBC,SAC/BhoB,cAACgyD,KAAQ,CAAC9xD,MAAO,eAAgB8wD,QAAS3wD,EAAaywD,SAAU,WAC7D4O,EAAQ,UACR3N,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAE5E,aAAc4E,EAAI5E,iBAC7C0/D,KACF/3C,SACGmH,EAAS,8CAGjB9uB,GAAeL,cAAA,OAAK+nB,UAAU,wBAAuBC,SAClDhoB,cAACq6D,GAAkB,CACfM,MAAOn5D,EACPuhB,QAASthB,EACTo5D,iBAAkBoF,WAKlCnK,UAAU,SAAQ9tC,SAElBc,eAACg0C,GAAkB,CACfrH,UAAWyK,EACXnD,QAAS0D,GAAiBpgE,EAC1B0nB,UAAU,2CAA0CC,SAAA,CAEnDmH,EAAS,mCAAmC,IAACnvB,cAACohE,KAAiB,QA9B7B,mBAiC1CvuC,GAA6B7yB,cAAC2zD,KAAO,CAClCkC,QAAS,CAAC,SACVpC,iBAAiB,8CACjB3nB,QAAS9rC,cAAA,OAAK+nB,UAAU,yBAAwBC,SAC5Cc,eAACk0C,GAAsB,CAAC30C,QAAS,SAAA7S,GAAC,OAAIA,EAAEkO,mBAAkBsE,SAAA,CACtDhoB,cAAA,OAAK+nB,UAAU,QAAOC,SACjBmH,EAAS,oCAEbzrB,EAAY6K,KAAI,SAAAgvB,GAA4B,IAAzB58B,EAAG48B,EAAH58B,IAAKmC,EAAYy6B,EAAZz6B,aACrB,OAAO9C,cAACi9D,GAAmB,CACvBl1C,UAAW,CACP,iBACA7nB,EAAMM,UAAYG,EAAM,cAAgB,GACxCmC,EAAe,GAAK,YACtBgK,KAAK,KACPub,QAAS,WACL0pC,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAEzE,QAASG,OACpCo/D,KACF/3C,SAEDllB,EACK9C,cAAA,OACE2hB,MAAO7e,EAAe09D,EAAe,GACrCz4C,UAAU,gBACV+P,IAAG,GAAAjrB,OAAK6gB,aAAsB,6BAAA7gB,OAA4B/J,EAAY,QACtEwxD,IAAK3zD,IAEPmoB,eAAA4rC,WAAA,CAAA1sC,SAAA,CACEhoB,cAACC,IAAmB,IAAG,IAAEkvB,EAAS,iDAnBbxuB,WAyB7Cm1D,UAAU,aAAY9tC,SAEtBhoB,cAAC88D,GAAkB,CACfrH,UAAWyK,EACXnD,QAAS0D,GAAoC,kBAAZjgE,GAAoC,SAAZA,EACzDunB,UAAU,0CAAyCC,SAElDmH,EAAS,qCAzCyB,kBA4C3CnvB,cAAC2zD,KAAO,CACJkC,QAAS,CAAC,SACVpC,iBAAiB,2CACjB3nB,QAAS9rC,cAAA,OAAK+nB,UAAU,yBAAwBC,SAC5ChoB,cAAC02D,GAAeC,UAAS,CAAA3uC,SACpBlhB,EAASyH,KAAI,SAAAqgC,GAAkC,IAAxByyB,EAASzyB,EAAhB1uC,MAAkBL,EAAK+uC,EAAL/uC,MAC/B,OAAOG,cAAC02D,GAAeE,OAAM,CACzB7uC,UAAW3mB,IAASigE,EAAY,cAAgB,GAChDh5C,QAAS,WACL0pC,GAAS,SAAA9sD,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAE7D,KAAMigE,OACjCtB,KACF/3C,SAEDnoB,GAP8BwhE,UAY/CvL,UAAU,aAAY9tC,SAEtBhoB,cAAC88D,GAAkB,CAACrH,UAAWyK,EAAmBn4C,UAAU,uCAAsCC,SAC7FmH,EAAS,kCArBL,8B,+yDEjc1B,IAAMmyC,GAAkB5L,aAAG/tC,MAyBrB45C,GAAiB7L,aAAG3B,M,mFCrBjC,IAAMyN,GAA4B/5C,KAAOC,IAAGC,KACtC25C,IAcOG,GAAapX,sBAAsC,SAAA31C,EAQ7D28C,GAAS,IAPRP,EAAQp8C,EAARo8C,SACO4Q,EAAWhtD,EAAlBxU,MACAyhE,EAAUjtD,EAAVitD,WACA35C,EAAQtT,EAARsT,SACA45C,EAAMltD,EAANktD,OACA75C,EAASrT,EAATqT,UAAS85C,EAAAntD,EACT/M,cAAM,IAAAk6D,GAAQA,EAAA9V,EAEYC,oBAAU,GAAEiH,EAAA5mD,YAAA0/C,EAAA,GAA/BlmC,EAAKotC,EAAA,GAAEtvC,EAAQsvC,EAAA,GAChB6O,EAAcvf,iBAAuB,MACrC/+B,EAAem+C,EAAWhsD,OAMhC,OAJAu6C,8BAAoBmB,GAAK,iBAAO,CAC5BxrC,MAAO,eAAAk8C,EAAA,OAAyB,QAAzBA,EAAMD,EAAY5vC,eAAO,IAAA6vC,OAAA,EAAnBA,EAAqBl8C,aAG/BiD,eAAC04C,GAAyB,CAC7Bz5C,UAAW,CAAC,sDAAuDA,GAAWjb,KAAK,KAAKkb,SAAA,CAEvFA,GAAYhoB,cAAA,SAAO+nB,UAAU,yCAAwCC,SAAEA,IACxEhoB,cAAA,MAAAT,wBAAA,CAAK8xD,IAAKyQ,EACN/5C,UAAU,2BACNzE,GAAmB,CACnBK,WACAH,eACAI,UAAW,WACP,IAAMwO,EAASuvC,EAAW97C,GACtBuM,GACA0+B,EAAS1+B,EAAOlyB,WAG1B,IAAA8nB,SAED25C,EAAWpzD,KAAI,SAAAka,EAAwCtF,GAAW,IAAhDjjB,EAAKuoB,EAALvoB,MAAOghB,EAAKuH,EAALvH,MAAOrhB,EAAK4oB,EAAL5oB,MAAO0oB,EAAYE,EAAZF,aAC5BR,GAAmB,OAAL7G,QAAK,IAALA,IAAS,IAAvB6G,UACFi6C,EAAYr6D,EACZzH,IAAUwhE,EACV,GAAA70D,OAAG3M,KAAK,GAAA2M,OAAU60D,GAExB,OAAO1hE,cAAC4oB,KAAOrpB,wBAAA,CAAamjD,QAAS,MAAUn6B,GAAY,IAAAP,SACvDc,eAAA,QAAAvpB,wBAAA,GACQ2hB,GAAK,IACT6G,UAAW,CACP,2BACAi6C,EAAY,mCAAqC,GACxC,OAATj6C,QAAS,IAATA,IAAa,GACblC,IAAU1C,EAAQ,sBAAwB,IAC5CrW,KAAK,KACPub,QAAS,kBAAMyoC,EAAS5wD,IAAO8nB,SAAA,CAE/BhoB,cAAA,QAAM+nB,UAAS,oBAAAlb,OAAsBm1D,EAAY,2BAA6B,IAAKh6C,SAC/EhoB,cAAA,QAAM+nB,UAAU,6BAEpB/nB,cAAA,QAAM+nB,UAAU,QAAOC,SAAEnoB,UAdZK,SAmB5B0hE,Q,iFCvET,IAAMK,GAAmBx6C,aAAOg6C,GAAPh6C,CAAkBE,KACxC45C,IAMUW,GAAa,SAAHxtD,GAEJ,IADfytD,EAAeztD,EAAfytD,gBAKQtvC,EADJP,KADAQ,QAEID,0BACF9lB,EAAYg2C,mBAAQ,kBAAMkU,KAC3Bh1C,QAAO,SAAAzT,GACJ,OAAOqkB,GAA+C,WAAlBrkB,EAAM/B,aAE9C,CAAComB,IACHuvC,EAKE1wC,GAAQ2wC,uBAAW,SAAA55C,GAAA,IACnBxU,EAAIwU,EAAJxU,KACA0d,EAAOlJ,EAAPkJ,QAAO,MACJ,CACHphB,MAAO0D,EAAK1D,MACZohB,eAPAphB,EAAK6xD,EAAL7xD,MACAohB,EAAOywC,EAAPzwC,QAQE2wC,EAAcpa,uBAAY,SAACqa,GAC7B5wC,GAAQ,SAAA6wC,GAAgB,IAEhBlwD,EAIAkwD,EAJAlwD,YACAnT,EAGAqjE,EAHArjE,WACA2R,EAEA0xD,EAFA1xD,UACAb,EACAuyD,EADAvyD,OAEEwyD,EAAS,GAAA51D,OAAM01D,GACfG,EAAqB,UAAdD,GAAuC,SAAdA,EAChCn5C,EAAqB,QAAXrZ,EACV,CACE,aAAc,aACd,YAAa,aAEf/D,GACAy2D,EAA+B,UAAdF,EACjB,CAACn5C,EAAQ,eACK,SAAdm5C,EAAuB,CAACn5C,EAAQ,cAAgBhX,EAGtD,OAFIowD,GAAMP,EAAgBQ,GAE1BpjE,wBAAA,GACOijE,GAAW,IACdjyD,MAAOkyD,EACPtjE,WAA0B,SAAdsjE,GAA+BtjE,EAC3C2R,UAAW4xD,EACL,GAAA71D,OAAG41D,GAAY7d,cACf9zC,EACNwB,YAAaqwD,SAGtB,CAAChxC,EAASwwC,IAEb,OAAOniE,cAACiiE,GAAgB,CAACl6C,UAAU,cAAc7nB,MAAOqQ,EAAOugD,SAAUwR,EAAaX,WAAY50D,K,mFCpEtG,IAAM61D,GAA+Bn7C,KAAOC,IAAGC,KACzC25C,IASOuB,GAAgB,SAAHnuD,GAMJ,IALlBo8C,EAAQp8C,EAARo8C,SACO4Q,EAAWhtD,EAAlBxU,MACAyhE,EAAUjtD,EAAVitD,WACA35C,EAAQtT,EAARsT,SACAD,EAASrT,EAATqT,UAASgkC,EAEiBC,oBAAU,GAAEiH,EAAA5mD,YAAA0/C,EAAA,GAA/BlmC,EAAKotC,EAAA,GAAEtvC,EAAQsvC,EAAA,GAChBzvC,EAAem+C,EAAWhsD,OAEhC,OAAOmT,eAAC85C,GAA4B,CAChC76C,UAAW,CAAC,yDAA0DA,GAAWjb,KAAK,KAAKkb,SAAA,CAE1FA,GAAYhoB,cAAA,SAAO+nB,UAAU,yCAAwCC,SAAEA,IACxEhoB,cAAA,MAAAT,wBAAA,CACIwoB,UAAU,8BACNzE,GAAmB,CACnBK,WACAH,eACAI,UAAW,WACP,IAAMwO,EAASuvC,EAAW97C,GAC1B,GAAIuM,EAAQ,CACR,IAAM4vC,IAAYvqD,MAAMC,QAAQgqD,IAAeA,EAAYltD,SAAS,GAAD3H,OAAIulB,EAAOlyB,QAC9E4wD,EAASkR,EACHN,EAAYz/C,QAAO,SAAAs+C,GAAY,MAAI,GAAA1zD,OAAGulB,EAAOlyB,SAAYqgE,KAAa,GAAA1zD,OAAA8gC,aAClE+zB,GAAW,IAAA70D,OAAKulB,EAAOlyB,eAG3C,IAAA8nB,SAED25C,EAAWpzD,KAAI,SAACC,EAAO2U,GAAW,IACvBtjB,EAAwB2O,EAAxB3O,MAAOK,EAAiBsO,EAAjBtO,MAAOghB,EAAU1S,EAAV0S,MAChB8gD,IAAYvqD,MAAMC,QAAQgqD,IAAeA,EAAYltD,SAAS,GAAD3H,OAAI3M,IAEvE,OAAO4oB,eAAA,QAAAvpB,wBAAA,GACC2hB,GAAK,IACT6G,UAAW,CACP,2BACAi6C,EAAY,mCAAqC,GACjDn8C,IAAU1C,EAAQ,yBAA2B,IAC/CrW,KAAK,KACPub,QAAS,WACLyoC,EAASkR,EACHN,EAAYz/C,QAAO,SAAAs+C,GAAY,MAAI,GAAA1zD,OAAG3M,KAAYqgE,KAAa,GAAA1zD,OAAA8gC,aAC3D+zB,GAAW,IAAA70D,OAAK3M,OAC5B8nB,SAAA,CAEFhoB,cAAA,QAAM+nB,UAAS,oBAAAlb,OAAsBm1D,EAAY,2BAA6B,IAAKh6C,SAC/EhoB,cAAA,QAAM+nB,UAAU,6BAEpB/nB,cAAA,QAAM+nB,UAAU,QAAOC,SAAEnoB,OAhBVK,a,0bCzCnC,IAAM4iE,GAAqBr7C,aAAO2iC,GAAP3iC,CAAoBE,MAgClCo7C,GAAuB1Y,sBAA0D,SAAA31C,EAO3F28C,GAAS,IANR9G,EAAe71C,EAAf61C,gBACAviC,EAAQtT,EAARsT,SACA8iC,EAAep2C,EAAfo2C,gBACAI,EAAcx2C,EAAdw2C,eACAM,EAAS92C,EAAT82C,UACAF,EAAY52C,EAAZ42C,aAEMn8B,EAAWa,KAAcoyC,EAO3B1wC,GAAQ2wC,uBAAW,SAAA55C,GAAA,IAAAu6C,EAAAv6C,EACnBxU,KAMO,MACJ,CACHrC,WAPcoxD,EAAVpxD,WAOQI,eAPkBgxD,EAAdhxD,eAOY3S,eAPkB2jE,EAAd3jE,eAOYwS,eAPkBmxD,EAAdnxD,eAOYE,iBAPoBixD,EAAhBjxD,iBAOcD,cAPiBkxD,EAAblxD,cAQlF3S,WAPc6jE,EAAV7jE,WAQJC,QAPW4jE,EAAP5jE,QAQJyyB,WANUpJ,EAAVoJ,WAOAF,QANOlJ,EAAPkJ,aAZA/f,EAAUwwD,EAAVxwD,WAAYI,EAAcowD,EAAdpwD,eAAgB3S,EAAc+iE,EAAd/iE,eAAgBwS,EAAcuwD,EAAdvwD,eAAgBE,EAAgBqwD,EAAhBrwD,iBAAkBD,EAAaswD,EAAbtwD,cAC9E3S,EAAUijE,EAAVjjE,WACAC,EAAOgjE,EAAPhjE,QACAyyB,EAAUuwC,EAAVvwC,WACAF,EAAOywC,EAAPzwC,QAgBEsxC,EAAkB1gB,iBAAwB,MAE1C2gB,EAAyBngB,mBAAQ,kBAAMlxB,EAAW,sBAAqB,CAACA,IACxEsxC,EAAmBpgB,mBAAQ,kBAAMlxB,EAAW,gBAAe,CAACA,IAC5DuxC,EAAuBrgB,mBAAQ,kBAAMlxB,EAAW,oBAAmB,CAACA,IACpEwxC,EAAsBnb,uBAAY,SAACob,GAAe,OAAK3xC,GAAQ,SAAA6wC,GACjE,OAAAjjE,wBAAA,GACOijE,GAAW,IACd1wD,cAAewxD,SAEnB,CAAC3xC,IACC4xC,EAAuBrb,uBAAY,SAACmI,EAAmC7D,GAC7D,OAAZlB,QAAY,IAAZA,KAAe+E,EAAU7D,GACrB6D,GAAU1+B,GAAQ,SAAAkT,GAAI,OAAAtlC,wBAAA,GACnBslC,GAAI,IACP7yB,eAAgBq+C,SAErB,CAAC/E,EAAc35B,IAkBlB,OAhBAu+B,8BAAoBmB,GAAK,iBAAO,CAC5BhiC,UAAW,eAAAm0C,EAAAC,EAAA,OAA0C,QAA1CD,EAA6B,QAA7BC,EAAMR,EAAgB/wC,eAAO,IAAAuxC,OAAA,EAAvBA,EAAyBp0C,mBAAW,IAAAm0C,MACrDrT,SAAU,eAAAuT,EAAAC,EAAA,OAAyC,QAAzCD,EAA6B,QAA7BC,EAAMV,EAAgB/wC,eAAO,IAAAyxC,OAAA,EAAvBA,EAAyBxT,kBAAU,IAAAuT,MACnD3R,SAAU,SAAAjjC,GAAuE,IAEf80C,EAIJC,EANjDjyD,EAAUkd,EAAVld,WAAYI,EAAc8c,EAAd9c,eAAgBH,EAAcid,EAAdjd,eACZ,YAD4Cid,EAAhB/c,iBAEnB,kBAAnBF,GAA+BG,IACf,QAAvB4xD,EAAAX,EAAgB/wC,eAAO,IAAA0xC,GAAvBA,EAAyBxT,YAAY,UAAWv+C,EAAgBG,IAG1C,kBAAfJ,GAA2BI,IACX,QAAvB6xD,EAAAZ,EAAgB/wC,eAAO,IAAA2xC,GAAvBA,EAAyBzT,YAAY,SAAUx+C,EAAYI,SAMpEhS,cAAC8iE,GAAkB,CACtBzR,IAAK4R,EACLp6C,MAAOsG,EAAS,gCAChBo7B,gBAAiBA,EACjBE,kBAAmB14C,EACnB44C,sBAAuB94C,EACvBg5C,sBAAuBj5C,EACvBo5C,gBAAiBh5C,EACjB84C,gBAAiBA,EACjBN,SAAU14C,EACVs5C,eAAgB,SAACxsD,EAAM4xB,GACnB0yC,EAAuBtkE,GACV,YAATA,EAAoBwkE,EAAqB5yC,GACxC2yC,EAAiB3yC,IAE1B86B,aAAciY,EACd/X,UAAWA,EACXN,eAAgBA,EAChBU,iBAAkByX,EAClB3X,kBAAmB,SAAA9pC,GACfuP,KAAa9X,MAAM,CACfgY,YAAalC,EAAS,8BAA8BvN,GACpDwP,QAASjC,EAAS,6BAG1BxwB,MAAOO,EAAuBC,EAAYC,EAASC,GAAgBV,MACnEosD,cAAe,KAAK/iC,SAEnBA,O,uyICxHT,IAAM87C,GAAyBr8C,KAAOS,KAAIP,MAGpCo8C,GAA8Bt8C,KAAOC,IAAGqsC,MAmFxCiQ,GAAgCv8C,KAAOC,IAAGusC,MAkFnCgQ,GAAe5Z,sBAA2C,SAAA31C,EAOpE28C,GAAS,IAAD6S,EANPpZ,EAAep2C,EAAfo2C,gBACAiI,EAAYr+C,EAAZq+C,aACAvH,EAAS92C,EAAT82C,UACAsF,EAAQp8C,EAARo8C,SACA5F,EAAcx2C,EAAdw2C,eACAI,EAAY52C,EAAZ42C,aAEMn8B,EAAWa,KAAcoyC,EAQ3B1wC,GAAQ2wC,uBAAW,SAAA55C,GAAA,IAAAu6C,EAAAv6C,EACnBxU,KACI9U,EAAU6jE,EAAV7jE,WAMM,MACP,CACHwS,cAPiBqxD,EAAbrxD,cAQJtS,eAPkB2jE,EAAd3jE,eAQJF,aACAyS,WARcoxD,EAAVpxD,WASJ+f,QAPOlJ,EAAPkJ,QAQAE,WAPUpJ,EAAVoJ,gBAdAlgB,EAAaywD,EAAbzwD,cACAtS,EAAc+iE,EAAd/iE,eACAF,EAAUijE,EAAVjjE,WACAyS,EAAUwwD,EAAVxwD,WACA+f,EAAOywC,EAAPzwC,QACAE,EAAUuwC,EAAVvwC,WAAUk6B,EAkB8CC,oBAAS,GAAKiH,EAAA5mD,YAAA0/C,EAAA,GAAnEoY,EAAsBlR,EAAA,GAAEmR,EAAyBnR,EAAA,GAAA/G,EACEF,oBAAS,GAAKG,EAAA9/C,YAAA6/C,EAAA,GAAjEmY,EAAqBlY,EAAA,GAAEmY,EAAwBnY,EAAA,GAAAG,EACxBN,mBAAQzsD,wBAAC,GAAK5B,KAA4Bo1D,IAAexG,EAAAlgD,YAAAigD,EAAA,GAAhFltD,EAAOmtD,EAAA,GAAEgY,EAAUhY,EAAA,GACpBiY,EAAqBjiB,iBAAgC,MAErDkiB,EAAuB1hB,mBAAQ,kBAAMlxB,EAAW,oBAAmB,CAACA,IACpE6yC,EAAsBxc,uBAAY,SAAC1yC,GAAM,OAAKmc,GAAQ,SAAA6wC,GACxD,IAAMvE,EAAYzoD,EAAE4c,OAAO4+B,QAE3B,OAAAzxD,wBAAA,GAAYijE,GAAW,IAAE7wD,cAAessD,SACxC,CAACtsC,IAELuzB,qBAAU,WACN,IAAI0W,GAAW,EAOf,OANAhT,YAAW,WACHgT,GACA9K,EAAS1xD,KAEd,KAEI,WACHw8D,GAAW,KAIhB,CAACx8D,IAEJ8lD,qBAAU,WAENkf,GAA0B,GAE1Bxb,YAAW,WACP0b,GAAyB,KAC1B,OACJ,IAEHpU,8BAAoBmB,GAAK,iBAAO,CAC5BhiC,UAAW,eAAAs1C,EAAAC,EAAA,OAA6C,QAA7CD,EAAgC,QAAhCC,EAAMJ,EAAmBtyC,eAAO,IAAA0yC,OAAA,EAA1BA,EAA4Bv1C,mBAAW,IAAAs1C,MACxD5S,SAAU,SAAAjjC,GAAoF,IACI+1C,EADrFjzD,EAAUkd,EAAVld,WAAYI,EAAc8c,EAAd9c,eAAgBH,EAAcid,EAAdjd,eAAgBE,EAAgB+c,EAAhB/c,iBAAqBk+C,EAAQtyC,aAAAmR,EAAA,qEACvD,kBAAfld,GAAqD,kBAAnBC,IAAgCG,IAChD,QAA1B6yD,EAAAL,EAAmBtyC,eAAO,IAAA2yC,GAA1BA,EAA4B9S,SAAS,CAAEngD,aAAYI,iBAAgBH,iBAAgBE,sBAEvF,IAAK,IAAMpR,KAAOsvD,EACVA,EAAStvD,KAA8BvB,EAAQuB,IAC/C4jE,GAAW,SAAAt/D,GAAG,OAAA1F,wBAAA,GAAU0F,GAAQgrD,WAMhD,IAAM6U,EAA6C,KAAnB,OAAVlzD,QAAU,IAAVA,IAAc,IAAI+D,SACW,KAAjB,QAA1BuuD,EAAAM,EAAmBtyC,eAAO,IAAAgyC,OAAA,EAA1BA,EAA4B/T,YACpC,OAAOrnC,eAACi7C,GAA2B,CAACh8C,UAAU,gCAA+BC,SAAA,CACzEhoB,cAAC4oB,KAAO,CACJ6qC,iBAAiB,uBACjB5qC,MAAO7oB,cAAC8jE,GAAsB,CAAA97C,SACzBmH,EAAS,qCACYnH,SAE1BhoB,cAACgyD,KAAQ,CACLjqC,UAAU,YACV+oC,SAAU,SAAA5wD,GAAK,OAAIqkE,GAAW,SAAAt/D,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAE9G,UAAW+B,EAAMkyB,OAAO4+B,cACxEA,QAAS5xD,EAAQjB,UAAU6pB,SAE1BmH,EAAS,qCAGjBvb,GAAYrF,KAAI,SAAA0hB,GAA8C,IAAD80C,EAAAC,EAAAC,EAA1Ch9D,EAAQgoB,EAARhoB,SAAUrJ,EAAIqxB,EAAJrxB,KAAMiV,EAAOoc,EAAPpc,QAASC,EAAUmc,EAAVnc,WACzC,GAAa,aAATlV,IAAwBO,EAAY,OAAO,KAC/C,IxE3R0BssB,EwE2RpBy5C,IAAcrxD,EACdsgC,EAAWtgC,GAAWzU,EAAQyU,GACpC,OAAOiV,eAAA,OACHf,UAAW,CACP,sBACAosB,EAAW,GAAK,YAClBrnC,KAAK,KAAKkb,SAAA,CAEZc,eAAA,OAAKf,UAAU,eAAcC,SAAA,CACf,SAATppB,GAAmBoB,cAAC2zD,KAAO,CACxBkB,QAASsP,EACTgB,sBAAsB,EACtBtP,QAAS,CAAC,SACVoL,gBAAiBmD,EACjB3Q,iBAAkB,CACd,yEACA0Q,EAAyB,iBAAmB,GAC5CE,EAAwB,gBAAkB,IAC5Cv3D,KAAK,KACPg/B,QAAS9rC,cAAA,OAAK+nB,UAAU,yBAAwBC,SAC5Cc,eAACk7C,GAA6B,CAC1Bj8C,UAAW,CACP,sBACA+8C,EAAe,8BAAgC,IACjDh4D,KAAK,KAAKkb,SAAA,CAEZc,eAAA,MAAIf,UAAS,uBAAAlb,OAAyB8E,EAAgB,GAAK,YAAaqW,SAAA,CACpEhoB,cAACgyD,KAAQ,CACLhB,QAASr/C,EACTm/C,SAAU,SAAAt7C,GACNkvD,EAAoBlvD,IACtBwS,SACJmH,EAAS,mCACXnvB,cAAA,SACAA,cAAA,KAAAgoB,SAAImH,EAAS,qCAEjBnvB,cAAA,OAAK+nB,UAAS,qBAAAlb,OAAuB8E,EAAgB,GAAK,yBAA0BqW,SAChFhoB,cAAC+iE,GAAoB,CACjB1R,IAAKmT,EACL1Z,gBAAiBA,EACjBI,eAAgBA,EAChBM,UAAWA,EACXF,aAAcA,EACdf,gBAAiBnrD,EAAQpB,SAASgqB,SAElCc,eAAA,OAAKf,UAAU,sBAAqBC,SAAA,CAChCc,eAAA,OAAKf,UAAU,uCAAsCC,SAAA,CACjDhoB,cAAA,MAAAgoB,SAAKmH,EAAS,kCACdnvB,cAAC8+D,KAAa,CACVC,OAAQhrD,GACRpU,MAAOP,EAAQpB,SACfg8D,iBAAkB,SAAAr6D,GACd4kE,GAAW,SAAAt/D,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,IAAEjH,SAAU2B,EAAMqmB,gBAIvD8+C,GAAgBh8C,eAAA,OAAKf,UAAU,sCAAqCC,SAAA,CAClEhoB,cAAA,MAAAgoB,SAAKmH,EAAS,iCACdnvB,cAACyhE,GAAU,CACP3Q,SAAU2T,EACV9C,YxEvVdl2C,EwEuVgD,CAC9B25C,IAAKj2C,EAAS,mCACdk2C,KAAMl2C,EAAS,qCxEtVjE,CACF,CACIjvB,MAAO,MACPL,MAAO4rB,EAAW25C,KAEtB,CACIllE,MAAO,OACPL,MAAO4rB,EAAW45C,QwEiV0BnlE,MAAOb,mBAQnCy2D,UAAU,SAAQ9tC,SAElBhoB,cAAA,OACI+nB,UAAU,qBACVpG,MAAO,CAAE4oC,gBAAiB54C,EAAgBvS,EAAQpB,SAAWN,GAA0BsqB,SAEtFrW,EACKC,EACI5R,cAAA,OAAK+nB,UAAU,2BAA2B+P,IAAKlmB,EAAY0iD,IAAI,eAC/D,KACJt0D,cAACslE,KAAmB,CAACv9C,UAAU,2BAG5Cm9C,GAAallE,cAAC4oB,KAAO,CAClBC,MAAO/U,GACmB,QADTixD,EACX51C,EAASrb,UAAW,IAAAixD,IACpB,KACNtR,iBAAiB,uBAAsBzrC,SAEvChoB,cAACgyD,KAAQ,CACLhB,QAAS7c,EACT2c,SAAU,SAAAt7C,GAAC,OAAI3B,GAAW0wD,GAAW,SAAAt/D,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,GAAAgH,aAAA,GAAG4H,EAAU2B,EAAE4c,OAAO4+B,kBAGlF7hC,EAASlnB,MAEdjI,cAACw5D,KAAW,CACR53C,KAAK,QACLrC,IAAK,EACLC,IAAK,IACLsxC,SAAU,SAAA5wD,GAAK,OAAIqkE,GAAW,SAAAt/D,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,GAAAgH,aAAA,GAAGrN,EAAwB,kBAAVsB,EAAqBA,EAAQ,UAC5FA,MAAoB,QAAf8kE,EAAE5lE,EAAQR,UAAK,IAAAomE,IAAI,MAE5BhlE,cAAC6+D,KAAM,CACHt/C,IAAK,EACLC,IAAK,IACL+lD,KAAM,EACNzU,SAAU,SAAA5wD,GAAK,OAAIqkE,GAAW,SAAAt/D,GAAG,OAAA1F,wBAAA,GAAU0F,GAAG,GAAAgH,aAAA,GAAGrN,EAAOsB,QACxDA,MAAoB,QAAf+kE,EAAE7lE,EAAQR,UAAK,IAAAqmE,IAAI,MAE5BjlE,cAAA,OAAK+nB,UAAU,qBA9GFnpB,Y,mfClR7B,IAAM4mE,GAAqB/9C,aAAOivC,GAAeC,UAAtBlvC,CAAgCE,MAKrD89C,GAA0Bh+C,aAAOg6C,GAAPh6C,CAAkBssC,MAmBrC2R,GAAqBrb,sBAAsD,SAAA31C,EAIrF28C,GAAS,IAHRxiB,EAAMn6B,EAANm6B,OACA6Q,EAAShrC,EAATgrC,UACA9sB,EAAkBle,EAAlBke,mBAEMzD,EAAWa,KAAcoyC,EAQ3B1wC,GAAQ2wC,uBAAW,SAAA55C,GAAA,IAAAu6C,EAAAv6C,EACnBxU,KAOU,MACP,CACH1D,MARSyyD,EAALzyD,MASJQ,UARaiyD,EAATjyD,UASJC,SARYgyD,EAARhyD,SASJC,KARQ+xD,EAAJ/xD,KASJC,cARiB8xD,EAAb9xD,cASJ2gB,WAPUpJ,EAAVoJ,gBAdAthB,EAAK6xD,EAAL7xD,MACAQ,EAASqxD,EAATrxD,UACAC,EAAQoxD,EAARpxD,SACAC,EAAImxD,EAAJnxD,KACAC,EAAakxD,EAAblxD,cACA2gB,EAAUuwC,EAAVvwC,WAkBE8zC,E3DxDgB,iB2DwDiB,CAAEp1D,S3DxD7BA,M2DyDN0/B,EAAQj8B,GAAS,CAAEzD,UAEnBq1D,EAAiB7iB,mBAAQ,kBAAMlxB,EAAW,cAAa,CAACA,IACxDg0C,EAAkB9iB,mBAAQ,kBAAMlxB,EAAW,eAAc,CAACA,IAC1Di0C,EAAa/iB,mBAAQ,kBAAMlxB,EAAW,UAAS,CAACA,IAChDk0C,EAAsBhjB,mBAAQ,kBAAMlxB,EAAW,mBAAkB,CAACA,IAExEq+B,8BAAoBmB,GAAK,iBAAO,MAEhC,IdkBgC5lC,EclB1Bu6C,EAA4B,SAAbh1D,EACfmmD,GAAYzX,EACRzP,EAAQ,OAAS01B,EAAgB,iBAAmB,QACpD,MAEJxO,GAAYnmD,GACZi1D,EAAmB92C,EAAS62C,EAAa/9D,UACzCi+D,EAAoBtzC,EACpB9J,eAAA4rC,WAAA,CAAA1sC,SAAA,CAAGi+C,EAAiB,IAACjmE,cAACohE,KAAiB,OACvC6E,EACAE,EAAenmE,cAAC2zD,KAAO,CACzBkC,QAAS,CAAC,SACVpC,iBAAiB,8CACjB3nB,QAAS9rC,cAAA,OAAK+nB,UAAU,yBAAwBC,SAC5ChoB,cAACwlE,GAAkB,CAAAx9C,SACdqvC,GAAa9oD,KAAI,SAAAugB,GAAoC,IAAjCsoC,EAAYtoC,EAAZsoC,aAAcl3D,EAAK4uB,EAAL5uB,MAAO6d,EAAI+Q,EAAJ/Q,KACtC,OAAO+K,eAAC4tC,GAAeE,OAAM,CACzB7uC,UAAW7nB,IAAU8Q,EAAW,cAAgB,GAChDqX,QAAS,kBAAMu9C,EAAe1lE,IAAO8nB,SAAA,CAEpCjK,EAAO+K,eAAA4rC,WAAA,CAAA1sC,SAAA,CAAGjK,EAAK,UAAY,KAAMoR,EAASioC,KAJZl3D,UAS/C41D,UAAU,cAAa9tC,SAEvBhoB,cAAA,QACI+nB,UAAS,sBAAAlb,OAAqC,SAAbmE,EAAsB,GAAK,SAAQ,KAAAnE,OAAI+lB,EAAqB,GAAK,YAAa5K,SAE9Gk+C,KApByB,oBAuB5BE,EAAmBxzC,EACnBuzC,EACAD,EACN,OAAQr3B,EAiDF,KAhDuB,OAAvBm3B,EAAa9lE,MACTF,cAACyhE,GAAU,CAAC15C,UAAU,mBAAmB7nB,MAAO6Q,EAAW+/C,SAAU+U,EAAiBlE,YdpBhEl2C,EcoBgG0D,EdpBzDpvB,EAASwO,KAAI,SAAA2gC,GAAA,IAAGhvC,EAAKgvC,EAALhvC,MAAOR,EAAOwvC,EAAPxvC,QAAO,MAAQ,CAC7GG,MAAOK,IAAUJ,EACXE,cAACC,IAAmB,IACpBD,cAAC4oB,KAAO,CAAC85B,QAASj3B,EAAW/rB,GAASsoB,SACpChoB,cAAA,OAAKs0D,IAAK7oC,EAAW/rB,GAAUo4B,IAAG,GAAAjrB,OAAK6gB,aAAsB,qCAAA7gB,OAAoC3M,EAAM2wB,cAAa,YAE5H3wB,acc0I8nB,SAC7Ho+C,IAEHpmE,cAACylE,GAAuB,CACtB19C,UAAU,sBACV7nB,MAAO+Q,EACP6/C,SAAUgV,EACVnE,WAAYzK,GACZvvD,QAAQ,EACRi6D,OAAQhvC,GAAsB9J,eAAA,OAAKf,UAAU,uBAAsBC,SAAA,CAC/DhoB,cAACixD,KAAK,CACFlpC,UAAU,oBACV7nB,MAAuB,kBAAT+Q,EAAoB,GAAKA,EACvCmgD,YAAU,EACVN,SAAUgV,EACV5U,YAAa/hC,EAAS,wCAE1BnvB,cAACyhE,GAAU,CACPvhE,MAAOgR,EACP4/C,SAAUiV,EACVpE,WAAY,CACR,CACIzhE,MAAO,OACPqoB,aAAc,CAAEm6B,QAASvzB,EAAS,mCAClCtvB,MAAOG,cAACC,IAAmB,KAE/B,CACIC,MAAO,OACPqoB,aAAc,CAAEm6B,QAASvzB,EAAS,mCAClCtvB,MAAOG,cAACqmE,KAAiB,KAE7B,CACInmE,MAAO,SACPqoB,aAAc,CAAEm6B,QAASvzB,EAAS,qCAClCtvB,MAAOG,cAACsmE,KAAmB,KAE/B,CACIpmE,MAAO,QACPqoB,aAAc,CAAEm6B,QAASvzB,EAAS,oCAClCtvB,MAAOG,cAACumE,KAAkB,WAInCv+C,SAENo+C,OC9JJI,GAAmB,IAAIC,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,MAChDC,GAAgB,SACzBxmE,EACAS,EACA23D,EACAG,EACAkO,EACAC,GAEA,IAAMC,EAAe3mE,EAAMwV,UAAU4iD,EAAgBG,GAE/CqO,EAA4B,OADf5mE,EAAMu4D,KACkBkO,EACvCI,EAAcF,EACdG,EAAe,EACnB,OAAQrmE,GACJ,IAAK,IAAKomE,EAAW,IAAAl6D,OAAOg6D,EAAY,KAAAh6D,OAAIi6D,EAAa,GAAK,MAC1DE,EAAeF,EAAa,EAAI,EAChC,MACJ,IAAK,IAAKC,EAAW,IAAAl6D,OAAOg6D,EAAY,KAAK,MAC7C,IAAK,IAAKE,EAAW,IAAAl6D,OAAOg6D,EAAY,MAAM,MAC9C,IAAK,IAAKE,EAAW,IAAAl6D,OAAOg6D,EAAY,OAAOG,EAAe,EAAG,MACjE,IAAK,IAAKD,EAAW,KAAAl6D,OAAQg6D,EAAY,MAAMG,EAAe,EAMlEJ,EAJmB1mE,EAAMwV,UAAU,EAAG4iD,GAAe,GAAAzrD,OAC5Ck6D,GACH7mE,EAAMwV,UAAU+iD,EAAcv4D,EAAMyV,QAErB8iD,EAAeuO,IAG3BC,GAAqB,SAAHvyD,GAMxB,IALHwJ,EAAExJ,EAAFwJ,GACA43C,EAASphD,EAATohD,UAKA,GAAI53C,GAAM43C,GAAa,EAAG,CAAC,IAADoR,EAChB90C,EAAS1Y,SAASkM,cAAc,IAAD/Y,OAAKqR,IAEtCkU,IAA8B,QAApB80C,EAAC90C,EAAOqmC,oBAAY,IAAAyO,KAAK,IAAM,IACzC90C,EAAOqmC,aAAe3C,KCpC1BqR,GAAalW,KAAbkW,SAiBKC,GAAe/c,sBAA0C,SAAA31C,EASnE28C,GAAS,IARRnzC,EAAExJ,EAAFwJ,GACAwU,EAAWhe,EAAXge,YACAqgC,EAAYr+C,EAAZq+C,aACAsU,EAAY3yD,EAAZ2yD,aACAvW,EAAQp8C,EAARo8C,SACA3sC,EAASzP,EAATyP,UACA4D,EAASrT,EAATqT,UACGrK,EAAIC,aAAAjJ,EAAA,uFAED4yD,EAAiB/kB,iBAAOwQ,GAAchH,EAClBC,mBAAS+G,GAAaE,EAAA5mD,YAAA0/C,EAAA,GAAzC7rD,EAAK+yD,EAAA,GAAElB,EAAQkB,EAAA,GAAA/G,EACcF,mBAAS,CAAE9tC,GAAI,GAAI43C,WAAY,IAAI3J,EAAA9/C,YAAA6/C,EAAA,GAAhEqb,EAAUpb,EAAA,GAAEqb,EAAarb,EAAA,GAC1Bsb,EAAmBvf,uBAAY,SAACwf,GAClC,IAAMC,EAA0C,kBAAjBD,EAA4BA,EAAeA,EAAat1C,OAAOlyB,MAC9FonE,EAAep1C,QAAUy1C,EACzB5V,EAAS4V,KACV,IAEHziB,qBAAU,WACN+hB,GAAmBM,KACpB,CAACA,IAEJriB,qBAAU,WACN4L,EAAS,CAAE1+B,OAAQ,CAAElyB,aAGtB,CAACA,IAEJ,IAAM0nE,EAAmB,SAAC3J,GAClBA,IAAcqJ,EAAep1C,SAC7Bu1C,EAAiBxJ,IAQzB,OALA/N,8BAAoBmB,GAAK,iBAAO,CAC5BU,SAAU6V,EACVC,aAAc,kBAAM3pD,EAAM,CAAEA,KAAI6zC,SAAU6V,GAAsB,UAG7D5nE,cAACmnE,GAAQ5nE,YAAA,CACZ2e,GAAIA,EACJ4pD,aAAa,MACb9jD,QAAS,kBAAM9F,IAAkB,OAAZmpD,QAAY,IAAZA,OAAY,EAAZA,EAAe,CAAEnpD,KAAI6zC,SAAU6V,MACpDxW,YAAU,EACV2W,YAAY,EACZhgD,UAAS,GAAAlb,OAAKqR,EAAE,WAAArR,OAAUkb,GAC1B7nB,MAAOA,EACPikB,UAAW,SAAA6jD,GAAO,IAADC,EAAAC,EAEb,GADS,OAAT/jD,QAAS,IAATA,KAAY6jD,GACPt1C,EAAL,CAAyB,IACjBy1C,EAA0BH,EAA1BG,QAASxnE,EAAiBqnE,EAAjBrnE,IAAKynE,EAAYJ,EAAZI,QAChB9P,EAAgD,QAAlC2P,EAAGD,EAAGK,cAAc/P,sBAAc,IAAA2P,KAAK,EACrDxP,EAA4C,QAAhCyP,EAAGF,EAAGK,cAAc5P,oBAAY,IAAAyP,KAAK,GAClDC,GAAWC,IAAYlqD,GAAMu6C,IAAiBH,GAAkBkO,GAAiB8B,IAAI3nE,KACtFqnE,EAAG5jD,iBACHsiD,GACIsB,EAAGK,cAAcnoE,MAAOS,EACxB23D,EAAgBG,GAChB,GACA,SAAC8P,EAAYzS,GACT2R,EAAiBc,GACjBf,EAAc,CAAEtpD,KAAI43C,oBAKpChF,SAAU2W,GACN/pD,OCxEC8qD,GAAgBne,sBAA4C,SAAA31C,EAQtE28C,GAAS,IAPRnzC,EAAExJ,EAAFwJ,GACA60C,EAAYr+C,EAAZq+C,aACAsU,EAAY3yD,EAAZ2yD,aACAvW,EAAQp8C,EAARo8C,SACA3sC,EAASzP,EAATyP,UACA4D,EAASrT,EAATqT,UACGrK,EAAIC,aAAAjJ,EAAA,yEAGCge,EADYJ,KAAZQ,QACAJ,YACF40C,EAAiB/kB,iBAAOwQ,GAAchH,EAClBC,mBAAS+G,GAAaE,EAAA5mD,YAAA0/C,EAAA,GAAzC7rD,EAAK+yD,EAAA,GAAElB,EAAQkB,EAAA,GAAA/G,EACcF,mBAAS,CAAE9tC,GAAI,GAAI43C,WAAY,IAAI3J,EAAA9/C,YAAA6/C,EAAA,GAAhEqb,EAAUpb,EAAA,GAAEqb,EAAarb,EAAA,GAC1Bsb,EAAmBvf,uBAAY,SAACwf,GAClC,IAAMC,EAA0C,kBAAjBD,EAA4BA,EAAeA,EAAat1C,OAAOlyB,MAC9FonE,EAAep1C,QAAUy1C,EACzB5V,EAAS4V,KACV,IAEHziB,qBAAU,WACN+hB,GAAmBM,KACpB,CAACA,IAEJriB,qBAAU,WACN4L,EAAS,CAAE1+B,OAAQ,CAAElyB,aAGtB,CAACA,IAEJ,IAAM0nE,EAAmB,SAAC3J,GAClBA,IAAc/9D,GACdunE,EAAiBxJ,IAOzB,OAJA/N,8BAAoBmB,GAAK,iBAAO,CAC5BU,SAAU6V,MAGP5nE,cAACixD,KAAK1xD,YAAA,CACT2e,GAAIA,EACJ4pD,aAAa,MACb9jD,QAAS,kBAAM9F,IAAkB,OAAZmpD,QAAY,IAAZA,OAAY,EAAZA,EAAe,CAAEnpD,KAAI6zC,SAAU6V,MACpDxW,YAAU,EACVrpC,UAAS,GAAAlb,OAAKqR,EAAE,WAAArR,OAAUkb,GAC1B7nB,MAAOA,EACPikB,UAAW,SAAA6jD,GAAO,IAADC,EAAAC,EAEb,GADS,OAAT/jD,QAAS,IAATA,KAAY6jD,GACPt1C,EAAL,CAAyB,IACjBy1C,EAA0BH,EAA1BG,QAASxnE,EAAiBqnE,EAAjBrnE,IAAKynE,EAAYJ,EAAZI,QAChB9P,EAAgD,QAAlC2P,EAAGD,EAAGK,cAAc/P,sBAAc,IAAA2P,KAAK,EACrDxP,EAA4C,QAAhCyP,EAAGF,EAAGK,cAAc5P,oBAAY,IAAAyP,KAAK,GAClDC,GAAWC,IAAYlqD,GAAMu6C,IAAiBH,GAAkBkO,GAAiB8B,IAAI3nE,KACtFqnE,EAAG5jD,iBACHsiD,GACIsB,EAAGK,cAAcnoE,MAAOS,EACxB23D,EAAgBG,GAChB,GACA,SAAC8P,EAAYzS,GACT2R,EAAiBc,GACjBf,EAAc,CAAEtpD,KAAI43C,oBAKpChF,SAAU,SAAAkX,GAAE,OAAIP,EAAiBO,EAAG51C,OAAOlyB,SACvCwd,OC3EC+qD,GAAmBpe,sBAAkD,SAAA31C,EAE/E28C,GAAS,IADRgW,EAAY3yD,EAAZ2yD,aAEMx1C,EAAaH,IAAQ,SAAAvF,GAAK,OAAIA,EAAM0F,cACpC62C,EAAiBnmB,iBAAwB,MAEzComB,EAAe5lB,mBAAQ,kBAAMlxB,EAAW,cAAUrb,EAAW,cAAa,CAACqb,IAgBjF,OAdAqzB,qBAAU,WAAO,IAAD0jB,EACN9N,EAAkC,QAAzB8N,EAAGF,EAAex2C,eAAO,IAAA02C,OAAA,EAAtBA,EAAwBf,eAEtC/M,IAAuB,OAAZuM,QAAY,IAAZA,KAAevM,MAG/B,IAEH5K,8BAAoBmB,GAAK,iBAAO,CAC5BU,SAAU,SAAC7xD,GAAW,IAAD2oE,EACK,QAAtBA,EAAAH,EAAex2C,eAAO,IAAA22C,GAAtBA,EAAwB9W,SAAS7xD,QAIlCF,cAAConE,GAAY,CAAC/V,IAAKqX,EACtBxqD,GAAG,SACHwU,aAAW,EACXqgC,aAAcrhC,GAAQvB,WAAWlc,KAAKxB,OACtCq+C,SAAU6X,EACVtB,aAAcA,EACdyB,KAAM,O,0LC5Bd,IAAMC,GAAsBthD,KAAOC,IAAGC,MASzBqhD,GAAoB,SAACjoB,GAC9B,IAAM5xB,EAAWa,KAAcoyC,EAQ3B1wC,GAAQ2wC,uBAAW,SAAA3tD,GAAA,IACnBT,EAAIS,EAAJT,KACA0d,EAAOjd,EAAPid,QAAO,MACJ,CACH3e,YAAaiB,EAAKjB,YAClBE,mBAAoBe,EAAKf,mBACzBH,eAAgBkB,EAAKlB,eACrBE,iBAAkBgB,EAAKhB,iBACvBE,aAAcc,EAAKd,aACnBwe,eAfAze,EAAkBkvD,EAAlBlvD,mBACAH,EAAcqvD,EAAdrvD,eACAC,EAAWovD,EAAXpvD,YACAC,EAAgBmvD,EAAhBnvD,iBACAE,EAAYivD,EAAZjvD,aACAwe,EAAOywC,EAAPzwC,QAiBEs3C,EAAuB/gB,uBAAY,SAAC1yC,GAAsB,OAAKmc,GAAQ,SAAA6wC,GACzE,IACI0G,EAoBJ,OAhBQA,EALU1zD,EAAE4c,OAAO4+B,QAInB79C,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVD,gBAAgB,EAChBE,kBAAkB,GAGT,CACjBF,gBAAgB,GAGpBxT,wBAAA,GAAYijE,GAAgB0G,QAC5B,CAACv3C,EAASxe,IACRg2D,EAAyBjhB,uBAAY,SAAC1yC,GAAsB,OAAKmc,GAAQ,SAAA6wC,GAC3E,IACI0G,EAoBJ,OAhBQA,EALU1zD,EAAE4c,OAAO4+B,QAInB79C,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVD,gBAAgB,EAChBE,kBAAkB,GAGT,CACjBA,kBAAkB,GAGtB1T,wBAAA,GAAYijE,GAAgB0G,QAC5B,CAACv3C,EAASxe,IACRi2D,EAA2BlhB,uBAAY,SAAC1yC,GAAsB,OAAKmc,GAAQ,SAAA6wC,GAC7E,IACI0G,EAoBJ,OAhBQA,EALU1zD,EAAE4c,OAAO4+B,QAInB79C,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVA,aAAa,EACbE,oBAAoB,GAGX,CACjBA,oBAAoB,GAGxB3T,wBAAA,GAAYijE,GAAgB0G,QAC5B,CAACv3C,EAASxe,IACRk2D,EAAoBnhB,uBAAY,SAAC1yC,GAAsB,OAAKmc,GAAQ,SAAA6wC,GACtE,IACI0G,EAoBJ,OAhBQA,EALU1zD,EAAE4c,OAAO4+B,QAInB79C,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVE,oBAAoB,EACpBF,aAAa,GAGJ,CACjBA,aAAa,GAGjBzT,wBAAA,GAAYijE,GAAgB0G,QAC5B,CAACv3C,EAASxe,IACRm2D,EAAqBphB,uBAAY,SAAC1yC,GAAsB,OAAKmc,GAAQ,SAAA6wC,GACvE,IAAMvE,EAAYzoD,EAAE4c,OAAO4+B,QAEvB99C,EAIAsvD,EAJAtvD,mBACAH,EAGAyvD,EAHAzvD,eACAE,EAEAuvD,EAFAvvD,iBACAD,EACAwvD,EADAxvD,YAKAu2D,GAAyB,EACzBC,GAAqB,EACrBC,GAAuB,EACvBC,GAAkB,EAiBtB,OAfIzL,EAIAwL,KADAF,IADAG,IADAF,EAAqBz2D,IAC0BC,KACFw2D,GAA8Bt2D,IACzBs2D,GAAsBC,IAElEx2D,GAGNw2D,IADAD,EAAqBz2D,IAC+BE,EAGpDs2D,IADAG,EAAkB12D,IACiCE,GAGvD3T,wBAAA,GACOijE,GAAW,IACdrvD,aAAc8qD,EACd/qD,mBAAoBq2D,EACpBx2D,eAAgBy2D,EAChBv2D,iBAAkBw2D,EAClBz2D,YAAa02D,SAEjB,CAAC/3C,IAEL,OAAO7I,eAACigD,GAAmB,CAAChhD,UAAU,iBAAgBC,SAAA,CAClDhoB,cAAC4oB,KAAO,CAAC6qC,iBAAiB,uBAAuB/Q,QAASvzB,EAAS,wBAAwBnH,SACvFhoB,cAACgyD,KAAQ,CACLjqC,UAAU,eACV+oC,SAAUwY,EACVtY,QAAS79C,EACT4Q,SAAU,EAAEiE,SAEXmH,EAAS,0BAGlBnvB,cAACgyD,KAAQ,CACLjqC,UAAU,YACV+oC,SAAUmY,EACVjY,QAASj+C,EACTgR,SAAU,EAAEiE,SAEXmH,EAAS,6BAEdnvB,cAACgyD,KAAQ,CACLjqC,UAAU,gBACV+oC,SAAUqY,EACVnY,QAAS/9C,EACT8Q,SAAU,EAAEiE,SAEXmH,EAAS,iCAGdnvB,cAACgyD,KAAQ,CACLjqC,UAAU,cACV+oC,SAAUuY,EACVrY,QAASh+C,EACT+Q,SAAU,EAAEiE,SAEXmH,EAAS,4BAEdnvB,cAACgyD,KAAQ,CACLjqC,UAAU,iBACV+oC,SAAUsY,EACVpY,QAAS99C,EACT6Q,SAAU,EAAEiE,SAEXmH,EAAS,mC,+tECzNf,IAAMw6C,GAA+BliD,aAAOivC,GAAeC,UAAtBlvC,CAAgCE,KAgBtE45C,IAGOqI,GAA6BniD,KAAOC,IAAGqsC,MAQvC8V,GAAgCpiD,KAAOC,IAAGusC,MAQ1C6V,GAAyBriD,aAAOg6C,GAAPh6C,CAAkB0sC,M,uhBCxBxD,IAAM4V,GAA6BtiD,KAAOC,IAAGC,MA2BhCqiD,GAAmB3f,sBAAkD,SAAA31C,EAI/E28C,GAAS,IAHR3R,EAAShrC,EAATgrC,UACA9sB,EAAkBle,EAAlBke,mBACAy0C,EAAY3yD,EAAZ2yD,aAEMl4C,EAAWa,KAAcoyC,EAK3B1wC,GAAQ2wC,uBAAW,SAAA55C,GAAA,IAAAu6C,EAAAv6C,EACnBxU,KACU,MACP,CACHnB,QAHekwD,EAAPlwD,QAIR7C,OAJuB+yD,EAAN/yD,OAKjB4hB,WAJUpJ,EAAVoJ,gBALA/e,EAAOsvD,EAAPtvD,QACA7C,EAAMmyD,EAANnyD,OACA4hB,EAAUuwC,EAAVvwC,WASEo4C,EAAmB1nB,iBAAyB,MAC5C2nB,EAAkB3nB,iBAAyB,MAC3C4nB,EAAc5nB,iBAAyB,MACvC6nB,EAAc7nB,iBAAyB,MAEvC8nB,EAAiBp6D,GAAUnE,GAAamE,GACxCnE,GAAamE,GACbnE,GAAa7H,IAEbqmE,EAAYvnB,mBAAQ,kBAAMlxB,EAAW,OAAO,SAAA3xB,GAAK,MAAqB,kBAAVA,EAAqBA,EAAM6wB,OAAS7wB,OAAQ,CAAC2xB,IACzG04C,EAAYxnB,mBAAQ,kBAAMlxB,EAAW,OAAO,SAAA3xB,GAAK,MAAqB,kBAAVA,EAAqBA,EAAM6wB,OAAS7wB,OAAQ,CAAC2xB,IACzG24C,EAAiBznB,mBAAQ,kBAAMlxB,EAAW,gBAAYrb,EAAW,cAAa,CAACqb,IAC/E44C,EAAkB1nB,mBAAQ,kBAAMlxB,EAAW,aAAY,CAACA,IACxD64C,EAAgB3nB,mBAAQ,kBAAMlxB,EAAW,eAAWrb,EAAW,cAAa,CAACqb,IAWnF,OATAq+B,8BAAoBmB,GAAK,iBAAO,CAC5BU,SAAU,SAAAjjC,GAAsC,IAAD67C,EAAAC,EAAAC,EAAAC,EAAlCj4D,EAAQic,EAARjc,SAAUO,EAAO0b,EAAP1b,QAAST,EAAGmc,EAAHnc,IAAKC,EAAGkc,EAAHlc,IACd,kBAARD,IAAqC,QAAnBg4D,EAAAR,EAAYj4C,eAAO,IAAAy4C,GAAnBA,EAAqB5Y,SAASp/C,IACxC,kBAARC,IAAqC,QAAnBg4D,EAAAR,EAAYl4C,eAAO,IAAA04C,GAAnBA,EAAqB7Y,SAASn/C,IACnC,kBAAbC,IAA+C,QAAxBg4D,EAAAZ,EAAiB/3C,eAAO,IAAA24C,GAAxBA,EAA0B9Y,SAASl/C,IAC9C,kBAAZO,IAA6C,QAAvB03D,EAAAZ,EAAgBh4C,eAAO,IAAA44C,GAAvBA,EAAyB/Y,SAAS3+C,SAIpE0V,eAACihD,GAA0B,CAAChiD,UAAU,oBAAmBC,SAAA,EAC1D03B,GAAa9sB,IAAuB9J,eAAA4rC,WAAA,CAAA1sC,SAAA,CAClChoB,cAACwoE,GAAa,CAACnX,IAAK8Y,EAChBjsD,GAAG,MACH6sD,YAAa57C,EAAS,mBACtB4jC,aAAcrhC,GAAQvB,WAAWlc,KAAKtB,IACtCm+C,SAAUwZ,EACVjD,aAAcA,IAElBrnE,cAACwoE,GAAa,CAACnX,IAAK+Y,EAChBlsD,GAAG,MACH6sD,YAAa57C,EAAS,mBACtB4jC,aAAcrhC,GAAQvB,WAAWlc,KAAKrB,IACtCk+C,SAAUyZ,EACVlD,aAAcA,OAGtBrnE,cAACwoE,GAAa,CAACnX,IAAK4Y,EAChB/rD,GAAG,WACH6sD,YAAajiD,eAAC8gD,GAA0B,CAAC7hD,UAAU,0BAAyBC,SAAA,CACxEhoB,cAAA,OAAK+nB,UAAU,cAAaC,SAAEmH,EAAS,0BACvCnvB,cAACmoB,GAAU,CACPE,QAAS,eAAA2iD,EAAA,OAA8B,QAA9BA,EAAMf,EAAiB/3C,eAAO,IAAA84C,OAAA,EAAxBA,EAA0BjZ,SxDvFnD,GAANllD,OAAUwX,GAAgB,aAAc,MwDwFxB+D,KAAM6iD,KACN1iD,aAAc,CAAEm6B,QAASvzB,EAAS,gCAG1C4jC,aAAcrhC,GAAQvB,WAAWlc,KAAKpB,SACtCi+C,SAAU0Z,EACVnD,aAAcA,IAElBrnE,cAACwoE,GAAa,CAACnX,IAAK6Y,EAChBhsD,GAAG,UACH6sD,YAAajiD,eAAC8gD,GAA0B,CAAC7hD,UAAU,0BAAyBC,SAAA,CACxEhoB,cAAA,OAAK+nB,UAAU,cAAaC,SAAEmH,EAAS,2BACvCnvB,cAACkrE,KAAQ,CACLnjD,UAAU,uBACV+tC,UAAU,UACVqV,OAAK,EACLzoB,QAAS1iD,cAACorE,KAAI,CAAC/iD,QAAS,SAAA7S,GAAC,OAAIA,EAAE61D,SAAS3nD,mBAAkBsE,SACrDqiD,EAAc97D,KAAI,SAACzQ,EAAMqlB,GACtB,OAAOnjB,cAACorE,KAAKE,KAAI,CACbjjD,QAAS,WAAO,IAADkjD,EACY,QAAvBA,EAAArB,EAAgBh4C,eAAO,IAAAq5C,GAAvBA,EAAyBxZ,SAASj0D,IACpCkqB,SAEDlqB,GAAI,GAAA+O,OALiBsW,SAQ1B6E,SAERhoB,cAAA,OAAAgoB,SACAhoB,cAACmoB,GAAU,CACXE,QAAS,aACLD,KAAMojD,cAKlBzY,aAAcrhC,GAAQvB,WAAWlc,KAAKb,QACtC09C,SAAU4Z,EACVrD,aAAcA,IAElBrnE,cAACgpE,GAAiB,IAClBhpE,cAACyhE,GAAU,CACP15C,UAAU,iCACV7nB,MAAO4S,EACPg+C,SAAU2Z,EACV9I,WAAYrK,GAAkBtvC,SAE9BhoB,cAAA,QAAAgoB,SAAOmH,EAAS,iC,6NChJ5B,IAAMs8C,GAAwBhkD,aAAOg6C,GAAPh6C,CAAkBE,MA0BnC+jD,GAAkBrhB,sBAAgD,SAAA31C,EAO5E28C,GAAS,IANRxiB,EAAMn6B,EAANm6B,OACAhc,EAAyBne,EAAzBme,0BACAi4B,EAAep2C,EAAfo2C,gBACAI,EAAcx2C,EAAdw2C,eACAM,EAAS92C,EAAT82C,UACAF,EAAY52C,EAAZ42C,aAEMn8B,EAAWa,KAAcoyC,EAS3B1wC,GAAQ2wC,uBAAW,SAAA55C,GAAA,IAAAu6C,EAAAv6C,EACnBxU,KAQO,MACJ,CACH7U,QATW4jE,EAAP5jE,QAUJsR,UATasyD,EAATtyD,UAUJuB,QATW+wD,EAAP/wD,QAUJ9S,WATc6jE,EAAV7jE,WAUJoG,IATOy9D,EAAHz9D,IASC+L,QATW0xD,EAAP1xD,QASKH,QATW6xD,EAAP7xD,QASKE,UATa2xD,EAAT3xD,UASOD,OATU4xD,EAAN5xD,OAUtCygB,WARUpJ,EAAVoJ,WASAF,QAROlJ,EAAPkJ,aAhBAvyB,EAAOgjE,EAAPhjE,QACAsR,EAAS0xD,EAAT1xD,UACAuB,EAAOmwD,EAAPnwD,QACA9S,EAAUijE,EAAVjjE,WACAoG,EAAG68D,EAAH78D,IAAK+L,EAAO8wD,EAAP9wD,QAASH,EAAOixD,EAAPjxD,QAASE,EAAS+wD,EAAT/wD,UAAWD,EAAMgxD,EAANhxD,OAClCygB,EAAUuwC,EAAVvwC,WACAF,EAAOywC,EAAPzwC,QAoBEsxC,EAAkB1gB,iBAAwB,MAE1CopB,EAAgB5oB,mBAAQ,kBAAMlxB,EAAW,aAAY,CAACA,IACtD+5C,EAAY7oB,mBAAQ,kBAAMlxB,EAAW,SAAQ,CAACA,IAC9Cg6C,EAAgB9oB,mBAAQ,kBAAMlxB,EAAW,aAAY,CAACA,IACtDi6C,EAAe5jB,uBAAY,SAACob,GAAe,OAAK3xC,GAAQ,SAAA6wC,GAC1D,OAAAjjE,wBAAA,GACOijE,GAAW,IACdpxD,OAAQkyD,SAEZ,CAAC3xC,IACCo6C,EAAkBhpB,mBAAQ,kBAAMlxB,EAAW,eAAc,CAACA,IAC1Dm6C,EAAkBjpB,mBAAQ,kBAAMlxB,EAAW,eAAc,CAACA,IAC1Do6C,EAAkB/jB,uBAAY,SAACmI,EAAmC7D,GACxD,OAAZlB,QAAY,IAAZA,KAAe+E,EAAU7D,GACrB6D,GAAU1+B,GAAQ,SAAAkT,GAAI,OAAAtlC,wBAAA,GACnBslC,GAAI,IACPvzB,QAAS++C,SAEd,CAAC/E,EAAc35B,IAiBlB,OAfAu+B,8BAAoBmB,GAAK,iBAAO,CAC5BhiC,UAAW,eAAAm0C,EAAAC,EAAA,OAA0C,QAA1CD,EAA6B,QAA7BC,EAAMR,EAAgB/wC,eAAO,IAAAuxC,OAAA,EAAvBA,EAAyBp0C,mBAAW,IAAAm0C,MACrDzR,SAAU,SAAAjjC,GAA2C,IAED40C,EAIJC,EANnCp+D,EAAGupB,EAAHvpB,IAAK+L,EAAOwd,EAAPxd,QAASH,EAAO2d,EAAP3d,QACL,YADuB2d,EAATzd,UAEL,kBAAZF,GAAwBG,IACR,QAAvBoyD,EAAAT,EAAgB/wC,eAAO,IAAAwxC,GAAvBA,EAAyBtT,YAAY,UAAWj/C,EAASG,IAG1C,kBAAR/L,GAAoB+L,IACJ,QAAvBqyD,EAAAV,EAAgB/wC,eAAO,IAAAyxC,GAAvBA,EAAyBvT,YAAY,SAAU7qD,EAAK+L,SAM7DtR,cAACoqD,GAAY,CAChBiH,IAAK4R,EACLp6C,MAAOsG,EAAS,wBAChBs7B,kBAAmBp5C,EACnBw5C,sBAAuBtlD,EACvBolD,sBAAuBx5C,EACvB65C,gBAAiB15C,EACjBk5C,SAAUp5C,EACV05C,gBAAiBA,EACjBM,eAAgB,SAACxsD,EAAM4xB,GACnBu7C,EAAgBntE,GACH,YAATA,EAAoBitE,EAAcr7C,GACjCo7C,EAAUp7C,IAEnB86B,aAAc2gB,EACdzgB,UAAWA,EACXN,eAAgBA,EAChBU,iBAAkBkgB,EAClBpgB,kBAAmB,SAAA9pC,GACfuP,KAAa9X,MAAM,CACfgY,YAAalC,EAAS,8BAA8BvN,GACpDwP,QAASjC,EAAS,6BAG1BxwB,MAAOO,EAAuBC,EAAYC,GAAST,MACnDosD,cAAel4B,EACT7yB,cAACyrE,GAAqB,CACpB1jD,UAAU,uCACV7nB,MAAOwQ,EACPogD,SAAUkb,EACVrK,WAAY3K,GAAoBhvC,SAEhChoB,cAAA,QAAM+nB,UAAU,cAAaC,SAAEmH,EAAS,8BAE1C,KACLnH,SAEA6mB,EACK7uC,cAAC6yD,GAAe,CAACE,aAAc9gD,EAAS6+C,SAAU6a,IAClD3rE,cAAA,e,mZCxId,IAAMksE,GAA2BzkD,KAAOC,IAAGC,MAcrCwkD,GAAmB1kD,KAAOS,KAAI6rC,MAQvBqY,GAAoB/hB,sBAAoD,SAAA31C,EAElF28C,GAAS,IADRgW,EAAY3yD,EAAZ2yD,aAEMl4C,EAAWa,KAAcoyC,EAK3B1wC,GAAQ2wC,uBAAW,SAAA55C,GAAA,IAAAu6C,EAAAv6C,EACnBxU,KAIU,MACP,CACHlW,KALQilE,EAAJjlE,KAMJkS,OALU+yD,EAAN/yD,OAMJ4hB,WAJUpJ,EAAVoJ,gBARA9zB,EAAIqkE,EAAJrkE,KACAkS,EAAMmyD,EAANnyD,OACA4hB,EAAUuwC,EAAVvwC,WAYEw6C,EAAe9pB,iBAAyB,MACxC+pB,EAAgB/pB,iBAAyB,MAEzCgqB,EAAcxpB,mBAAQ,kBAAMlxB,EAAW,WAAU,CAACA,IAClD26C,EAAazpB,mBAAQ,kBAAMlxB,EAAW,YAAQrb,EAAW,cAAa,CAACqb,IAS7E,OAPAq+B,8BAAoBmB,GAAK,iBAAO,CAC5BU,SAAU,SAAAjjC,GAAsB,IAAD29C,EAAAC,EAAlB3uE,EAAI+wB,EAAJ/wB,KAAM2U,EAAKoc,EAALpc,MACK,kBAAT3U,IAAuC,QAApB0uE,EAAAJ,EAAan6C,eAAO,IAAAu6C,GAApBA,EAAsB1a,SAASh0D,IACxC,kBAAV2U,IAAyC,QAArBg6D,EAAAJ,EAAcp6C,eAAO,IAAAw6C,GAArBA,EAAuB3a,SAASr/C,SAIhEoW,eAACojD,GAAwB,CAACnkD,UAAU,gBAAeC,SAAA,CACtDhoB,cAACwoE,GAAa,CAACnX,IAAKgb,EAChBnuD,GAAG,OACH60C,aAAch1D,EACdgtE,YAAa/qE,cAAC4oB,KAAO,CAACC,MAAOsG,EAAS,sBAAsBnH,SACxDhoB,cAACmsE,GAAgB,CAAC9jD,QAAS,WACvBxB,UAAU8lD,UAAUC,UAAU1zD,GAAmBnb,KACnDiqB,SACGmH,EAAS,wBAGlB2hC,SAAU0b,EACVnF,aAAcA,IAElBrnE,cAACwoE,GAAa,CAACnX,IAAKib,EAChBpuD,GAAG,SACH60C,aAAcrhC,GAAQvB,WAAWlc,KAAKvB,MACtCq4D,YAAajiD,eAAC8gD,GAA0B,CAAC7hD,UAAU,0BAAyBC,SAAA,CACxEhoB,cAAA,OAAK+nB,UAAU,cAAaC,SACvBmH,EAAS,wBAEdnvB,cAACmoB,GAAU,CACPE,QAAS,eAAAwkD,EAAA,OAA2B,QAA3BA,EAAMP,EAAcp6C,eAAO,IAAA26C,OAAA,EAArBA,EAAuB9a,S1D9E/B,SAAC9hD,GACxB,OAAOoU,GAAgB,6BAA8B,GAC/C,KACY,QAAXpU,EAAmB,KAAO,MAE3BoU,GAAgB,wCAAyC,GACzDA,GAAgB,aAAc,G0DwE2ByoD,CAAY78D,KAC3DmY,KAAM6iD,KACN1iD,aAAc,CAAEm6B,QAASvzB,EAAS,gCAG1C2hC,SAAUyb,EACVlF,aAAcA,U,05ECtE1B,IAAM0F,GAAwB1iB,sBAA4D,SAAA31C,EAKvF28C,GAAS,IAJRtkD,EAAS2H,EAAT3H,UACAmF,EAAawC,EAAbxC,cACA4+C,EAAQp8C,EAARo8C,SACAjtC,EAAQnP,EAARmP,SAEMsL,EAAWa,KACXg9C,EAA4BzqB,iBAAyB,SAAlBrwC,EAA2B,QAAUA,GACxE+6D,EAAW1qB,iBAAyB,MAAMwJ,EACtBC,mBAAS,GAAEiH,EAAA5mD,YAAA0/C,EAAA,GAA9BlmC,EAAKotC,EAAA,GAAEtvC,EAAQsvC,EAAA,GAMtB,OAJA/C,8BAAoBmB,GAAK,iBAAO,CAC5BxrC,MAAO,eAAAqnD,EAAA,OAAsB,QAAtBA,EAAMD,EAAS/6C,eAAO,IAAAg7C,OAAA,EAAhBA,EAAkBrnD,aAG5BiD,eAAC6gD,GAA4BpqE,wBAAA,CAChCwoB,UAAU,yBACNzE,GAAmB,CACnBI,iBAAiB,EACjBF,aAAczW,EAAU4I,OACxBgO,WACAC,UAAW,WACHiC,GAAS,GAAGirC,EAAS/jD,EAAU8Y,GAAO3lB,QAE9C2jB,cACF,IAAAmE,SAAA,CAEFhoB,cAACgyD,KAAQ,CAACX,IAAK4b,EACXllD,UAAU,sBACVipC,QAA2B,SAAlB9+C,EACT4+C,SAAU,SAAAt7C,GACNs7C,EAASt7C,EAAE4c,OAAO4+B,QAAU,OAASgc,EAA0B96C,UACjElK,SACJmH,EAAS,sBACXnvB,cAACyhE,GAAU,CACP15C,UAAU,cACV7nB,MAAOgS,EACP4+C,SAAUA,EACV6Q,WAAY50D,WAKlBogE,GAAoC1lD,KAAOC,IAAGC,MAmC9CylD,GAA+B3lD,KAAOC,IAAGqsC,MAoDlCsZ,GAAqBhjB,sBAAsD,SAAA5hC,EAIrF4oC,GAAS,IAHRz+B,EAAkBnK,EAAlBmK,mBACAC,EAAyBpK,EAAzBoK,0BACAw0C,EAAY5+C,EAAZ4+C,aAEMl4C,EAAWa,KAAcoyC,EAS3B1wC,GAAQ2wC,uBAAW,SAAAvzC,GAAA,IAAAw+C,EAAAx+C,EACnB7a,KAQU,MACP,CACH1D,MATS+8D,EAAL/8D,MAUJpR,WATcmuE,EAAVnuE,WAUJ+S,cATiBo7D,EAAbp7D,cAUJG,kBATqBi7D,EAAjBj7D,kBAUJD,iBAToBk7D,EAAhBl7D,iBAUJuf,QARO7C,EAAP6C,QASAE,WARU/C,EAAV+C,gBAhBAthB,EAAK6xD,EAAL7xD,MACApR,EAAUijE,EAAVjjE,WACA+S,EAAakwD,EAAblwD,cACAG,EAAiB+vD,EAAjB/vD,kBACAD,EAAgBgwD,EAAhBhwD,iBACAuf,EAAOywC,EAAPzwC,QACAE,EAAUuwC,EAAVvwC,WAoBEotC,EAAe1c,iBAAuB,MACtCgrB,EAA2BhrB,iBAAiC,MAC5DirB,EAAyBjrB,iBAAwB,MAAM2J,EACrBF,oBAAS,GAAKG,EAAA9/C,YAAA6/C,EAAA,GAA/CuhB,EAAathB,EAAA,GAAEuhB,EAAcvhB,EAAA,GAAAG,EAC2BN,oBAAS,GAAMO,EAAAlgD,YAAAigD,EAAA,GAAvEqhB,EAAoBphB,EAAA,GAAEqhB,EAA8BrhB,EAAA,GACrDygB,EAA4BzqB,iBAAyB,SAAlBrwC,EAA2B,QAAUA,GAuBxE27D,EAAmB9qB,mBAAQ,kBAAMlxB,EAAW,sBAAqB,CAACA,IAClEi8C,EAAoB/qB,mBAAQ,kBAAMlxB,EAAW,uBAAsB,CAACA,IACpEk8C,EAAuBhrB,mBAAQ,kBAAMlxB,EAAW,sBAAkBrb,EAAW,cAAa,CAACqb,IAE3F9kB,EAAYg2C,mBAAQ,kBAAMkU,KAC3Bh1C,QAAO,SAAAzT,GACJ,OAAOqkB,GAA+C,WAAlBrkB,EAAM/B,aAE9C,CAAComB,IAGLq9B,8BAAoBmB,GAAK,iBAAO,CAC5BU,SAAU,SAAA9hC,GAAyB,IAAD+9C,EAArB77D,EAAc8d,EAAd9d,eACLA,IAA8C,QAA9B67D,EAAAR,EAAuBt7C,eAAO,IAAA87C,GAA9BA,EAAgCjc,SAAS5/C,SAIrE,IAAM87D,EAAuB1hE,GAAa2F,GAC1C,OAAO4W,eAACskD,GAA4B,CAChCrlD,UAAU,iBAAgBC,SAAA,CAE1Bc,eAAA,OAAKf,UAAU,6BAA4BC,SAAA,CAC5B,SAAVzX,EACKvQ,cAACgyD,KAAQ,CACPjqC,UAAU,oBACV+oC,SA/CS,SAACt7C,GAAM,OAAKmc,GAAQ,SAAA6wC,GACzC,IAAM0L,EAAqB14D,EAAE4c,OAAO4+B,QAOpC,OAAAzxD,wBAAA,GACOijE,GAAW,IAEdrjE,WAAY+uE,QAqCJld,QAAS7xD,EAAW6oB,SACtBmH,EAAS,0BACTnvB,cAAA,OAAK+nB,UAAU,kCACpB6K,GAAsB5yB,cAAC2zD,KAAO,CAC3BkB,QAAS8Y,EACT1M,gBAAiB2M,EACjB/X,QAAS,CAAC,QAAS,SACnBC,UAAU,SACVrC,iBAAiB,gCACjB3nB,QAAS9rC,cAAA,OAAK+nB,UAAU,yBAAwBC,SAC5ChoB,cAAC+sE,GAAqB,CAAC1b,IAAKkc,EACxBxgE,UAAWA,EACXmF,cAAeA,EACf2R,SAAU,WAAO,IAADq7C,EACZ0O,GAA+B,GACX,QAApB1O,EAAAD,EAAa/sC,eAAO,IAAAgtC,GAApBA,EAAsBr5C,SAE1BirC,SAnDM,SAAC5wD,GACvB,IAAMynE,EAAe,GAAA96D,OAAM3M,GAEH,SAApBynE,IAA4BqF,EAA0B96C,QAAUy1C,GACpEh2C,GAAQ,SAAA6wC,GACJ,OAAAjjE,wBAAA,GAAYijE,GAAW,IAAEtwD,cAAey1D,YAgD7B3/C,SAEPc,eAACqkD,GAAiC,CAAC9b,IAAK4N,EACpCl3C,UAAU,uBACVhE,SAAU,EACVI,UAAW,SAAA3O,GACP,GAAc,cAAVA,EAAE7U,KAAiC,UAAV6U,EAAE7U,KAA6B,OAAV6U,EAAE7U,IAOhD,OANAitE,GAA+B,GAE/BhlB,YAAW,WAAO,IAADulB,EACmB,QAAhCA,EAAAZ,EAAyBr7C,eAAO,IAAAi8C,GAAhCA,EAAkCtoD,UACnC,MAEI,GAEbmC,SAAA,CAEFc,eAAA,QAAMf,UAAU,uBAAsBC,SAAA,CAAEmH,EAAS,4BAA4B,IAACnvB,cAACohE,KAAiB,OAC/F6M,EACKjuE,cAACo1D,GAAc71D,YAAA,CAACwoB,UAAU,6BAAgCkmD,IAC1DjuE,cAACo1D,GAAc,CAACrtC,UAAU,4BAA4BroB,QAAQ,0BAG1EP,GAAcyzB,GACT5yB,cAACgyD,KAAQ,CAAClB,SAAU,SAAAt7C,GAAC,OAAIk4D,EAAel4D,EAAE4c,OAAO4+B,UAAUA,QAASyc,EAAczlD,SAChFmH,EAAS,iCAGrBhwB,GAAc2pB,eAAA4rC,WAAA,CAAA1sC,SAAA,CACXhoB,cAAA,OAAAgoB,SACIhoB,cAACixD,KAAK,CACF8Z,YAAa/qE,cAAA,QAAAgoB,SACRmH,EAAS,qBACNnvB,cAAA,QAAwB+nB,UAAU,aAAYC,SACzCmH,EAAS,2BADJ,iBAKlBjvB,MAAOmS,EACPy+C,SAAU,SAAAt7C,GACNs4D,EAAkBt4D,GACdi4D,GAAeI,EAAiBr4D,QAIhDxV,cAAA,OAAAgoB,SACIhoB,cAACixD,KAAK,CACF8Z,YAAa/qE,cAAA,QAAAgoB,SACRmH,EAAS,qBACNnvB,cAAA,QAAsB+nB,UAAU,YAAWC,SACtCmH,EAAS,0BADJ,gBAKlBjvB,MAAOkS,EACP0+C,SAAU,SAAAt7C,GACFi4D,GAAeK,EAAkBt4D,GACrCq4D,EAAiBr4D,QAI7BxV,cAAA,OAAK+nB,UAAU,aAAYC,SAGvBhoB,cAAConE,GAAY,CAAC/V,IAAKmc,EACftvD,GAAG,kBACHwU,aAAW,EACXqgC,aAAcrhC,GAAQvB,WAAWlc,KAAK9B,eACtC2+C,SAAUid,EACV1G,aAAcA,EACdyB,KAAM,e,o3BC7T1B,IAAMsF,GAAmC3mD,KAAOC,IAAGC,MAwCtC0mD,GAAyBhkB,sBAA8D,SAAA31C,EAEjG28C,GAAS,IADRgW,EAAY3yD,EAAZ2yD,aAEMl4C,EAAWa,KAAcoyC,EAS3B1wC,GAAQ2wC,uBAAW,SAAA55C,GAAA,IAAAu6C,EAAAv6C,EACnBxU,KACI1D,EAAKyyD,EAALzyD,MACAS,EAAQgyD,EAARhyD,SACAf,EAAM+yD,EAAN/yD,OACAoD,EAAc2vD,EAAd3vD,eACAd,EAAWywD,EAAXzwD,YAEJof,EAAOlJ,EAAPkJ,QACAE,EAAUpJ,EAAVoJ,WAAU,MACP,CACHthB,QACAS,WACAf,SACAoD,iBACAb,iBAA6B,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAaC,iBAC/Bmf,UACAE,kBAxBAthB,EAAK6xD,EAAL7xD,MACAS,EAAQoxD,EAARpxD,SACAf,EAAMmyD,EAANnyD,OACAoD,EAAc+uD,EAAd/uD,eACAb,EAAgB4vD,EAAhB5vD,iBACAmf,EAAOywC,EAAPzwC,QACAE,EAAUuwC,EAAVvwC,WAoBEy8C,EAAkC,QAAXr+D,EAAmB,SAAM,IAChDs+D,EAAsBhsB,iBAAyB,MAC/CisB,EAAoBzrB,mBAAQ,WAC9B,OAAOlxB,EACH,eACA,SAAA3xB,GACI,MAAwB,kBAAVA,EAAqB,GAAKA,EAAM0V,MAAM,aAC/CrH,KAAI,SAAAC,GAAK,MAAI,GAAA3B,OAAG2B,GAAQuiB,UACxB9O,QAAO,SAAAzT,GAAK,MAAqB,kBAAVA,GAAsBA,EAAMmH,OAAS,OAErE,cAEL,CAACkc,IACE48C,EAAuBvmB,uBAAY,SAAC1yC,GAAM,OAAKmc,GAAQ,SAAA6wC,GACzD,OAAAjjE,wBAAA,GAAYijE,GAAW,IAAEnvD,eAAgBmC,EAAE4c,OAAO4+B,eAClD,CAACr/B,IAaLu+B,8BAAoBmB,GAAK,iBAAO,CAC5BU,SAAU,SAAAjjC,GAAsB,IAAD4/C,EAAlBp8D,EAAWwc,EAAXxc,YACLA,IAAwC,QAA3Bo8D,EAAAH,EAAoBr8C,eAAO,IAAAw8C,GAA3BA,EAA6B3c,SAASz/C,EAAYxF,KAAKwhE,UAIhF,IAAMK,EAAyB,SAAb39D,EACZmD,GAAa,CAAE5D,UACX,2BACA,sBAC4B,OAAhC4mD,GAAYnmD,GAAU9Q,MAClB,sBACA,2BACJ0uE,EAAmB,QAAX3+D,EACd,OAAO6Y,eAACslD,GAAgC,CAACrmD,UAAS,+BAAAlb,OAAiCoD,GAAS+X,SAAA,CACxFhoB,cAACwoE,GAAa,CAACnX,IAAKkd,EAChBxD,YAAa57C,EAASw/C,GACtBzwD,GAAG,eACH60C,aAAcrhC,GAAQvB,WAAWlc,KAAK3B,YAAYxF,KAAKwhE,GACvDxd,SAAU0d,EACVnH,aAAcA,IAEjBuH,GAAS5uE,cAAC4oB,KAAO,CACd85B,QAASvzB,EAAS,iCAClBskC,iBAAiB,uBAAsBzrC,SAEvChoB,cAACgyD,KAAQ,CACLjqC,UAAU,qBACV+oC,SAAU2d,EACVzd,QAAS39C,EAAe2U,SAEvBmH,EAAS,mCAGlBnvB,cAACyhE,GAAU,CAAC15C,UAAU,iBAAiB7nB,MAAK,GAAA2M,OAAK2F,GAC7Cs+C,SAAU,SAAA5wD,GAAK,OA/CU,SAACA,GAC9ByxB,GAAQ,SAAA6wC,GACJ,OAAAjjE,wBAAA,GACOijE,GAAW,IACdjwD,YAAWhT,wBAAA,GACJijE,EAAYjwD,aAAW,IAC1BC,iBAAkBtS,SAyCP2uE,CAAyB3uE,IAC5CyhE,WAAYpK,GAA4BvvC,SAExCc,eAAA,QAAAd,SAAA,CACKmH,EAAS,wBAAwB,IAACnvB,cAACwzD,GAAW,CAC3C1nB,QAAS3c,EAAS,iCAI9BnvB,cAACu0D,GAAoB,U,wpGCjJ7B,IAAMua,GAAmCrnD,KAAOC,IAAGC,MAkD7ConD,GAAkB,CACpB,CAAE/oD,IAAK,UAAWgpD,IAAK,CAAC,IAAK,IAAK,MAClC,CAAEhpD,IAAK,UAAWgpD,IAAK,CAAC,EAAG,EAAG,IAC9B,CAAEhpD,IAAK,UAAWgpD,IAAK,CAAC,IAAK,EAAG,IAChC,CAAEhpD,IAAK,UAAWgpD,IAAK,CAAC,IAAK,IAAK,IAClC,CAAEhpD,IAAK,UAAWgpD,IAAK,CAAC,EAAG,IAAK,IAChC,CAAEhpD,IAAK,UAAWgpD,IAAK,CAAC,EAAG,IAAK,MAChC,CAAEhpD,IAAK,UAAWgpD,IAAK,CAAC,EAAG,EAAG,MAC9B,CAAEhpD,IAAK,UAAWgpD,IAAK,CAAC,IAAK,EAAG,OAM9BC,GAAoB,SAAHv6D,GAGG,IAADw6D,EAAAx6D,EAFrBxU,aAAK,IAAAgvE,EAAG,GAAEA,EACVpe,EAAQp8C,EAARo8C,SAAQ/E,EAE8BC,mBAAS9rD,GAAM+yD,EAAA5mD,YAAA0/C,EAAA,GAA9CojB,EAAWlc,EAAA,GAAEmc,EAAcnc,EAAA,GAAA/G,EACQF,oBAAS,WAC/C,MAAO,CACHhmC,IAAKF,GAAcmB,KAAK/mB,GAASA,EAAQ,UACzC8uE,IAAKjpD,GAAU7lB,GAAO,OAE5BisD,EAAA9/C,YAAA6/C,EAAA,GALKmjB,EAAaljB,EAAA,GAAEmjB,EAAgBnjB,EAAA,GA8BtC,OAvBAjH,qBAAU,WACN,IAAMvb,EAAiBwlC,EAAYx+C,WAAW,KAAOw+C,EAAW,IAAAtiE,OAAOsiE,GAEnErpD,GAAcmB,KAAK0iB,KACnBylC,EAAezlC,GACf2lC,EAAiB,CACbtpD,IAAK2jB,EACLqlC,IAAKjpD,GAAU4jB,GAAgB,KAE3B,OAARmnB,QAAQ,IAARA,KAAWnnB,MAIhB,CAACwlC,IAEJjqB,qBAAU,WACNkqB,EAAelvE,GACfovE,EAAiB,CACbtpD,IAAKF,GAAcmB,KAAK/mB,GAASA,EAAQ,UACzC8uE,IAAKjpD,GAAU7lB,GAAO,OAE3B,CAACA,IAEG4oB,eAACgmD,GAAgC,CAAA9mD,SAAA,CACpChoB,cAAA,OAAK+nB,UAAU,aAAYC,SACtB+mD,GAAgBxgE,KAAI,SAAAka,GAAmB,IAAhBzC,EAAGyC,EAAHzC,IAAKgpD,EAAGvmD,EAAHumD,IAEnBO,GAAqB,IAATP,EAAI,GAAoB,IAATA,EAAI,GAAoB,IAATA,EAAI,IAAY,KAAQ,IAClE,UACA,UAEN,OAAOhvE,cAAA,OAAK+nB,UAAU,cAAcc,MAAO7C,EAAKrE,MAAO,CAAE4oC,gBAAiBvkC,GAAOqC,QAAS,kBAAc,OAARyoC,QAAQ,IAARA,OAAQ,EAARA,EAAW9qC,IAAKgC,SAC3GqnD,EAAcrpD,IAAI4+B,gBAAkB5+B,GAAOhmB,cAAA,OACxC+nB,UAAU,aACVpG,MAAO,CACH4oC,gBAAiBglB,YAMrCzmD,eAAA,OAAKf,UAAU,cAAaC,SAAA,CACxBhoB,cAAA,OAAK+nB,UAAU,2BAA2BpG,MAAO,CAAE4oC,gBAAiB8kB,EAAcrpD,OAClFhmB,cAACixD,KAAK,CACFrvC,KAAK,QACL1hB,MAAOivE,EACPre,SAAU,SAAAt7C,GACN45D,EAAe55D,EAAE4c,OAAOlyB,iBAOtCsvE,GAA2B/nD,KAAOC,IAAGqsC,MAsBrC0b,GAAwBhoD,KAAOC,IAAGusC,MA8ClCyb,GAAmB,CACrBl8D,gBAAiB,CACbm8D,QAAS,kBACT1nE,SAAU,yCAEdwL,kBAAmB,CACfk8D,QAAS,oBACT1nE,SAAU,2CAEdqL,cAAe,CACXq8D,QAAS,gBACT1nE,SAAU,uCAEdsL,cAAe,CACXo8D,QAAS,gBACT1nE,SAAU,wCAGL2nE,GAAkB,WAC3B,IAAMzgD,EAAWa,KAAcoyC,EAO3B1wC,GAAQ2wC,uBAAW,SAAAvzC,GAAA,IAAAw+C,EAAAx+C,EACnB7a,KACIX,EAAag6D,EAAbh6D,cACAC,EAAa+5D,EAAb/5D,cACAC,EAAe85D,EAAf95D,gBACAC,EAAiB65D,EAAjB75D,kBAEJke,EAAO7C,EAAP6C,QACU7C,EAAV+C,WAAU,MACP,CACHve,gBACAC,gBACAC,kBACAC,oBACAke,eAnBAre,EAAa8uD,EAAb9uD,cACAC,EAAa6uD,EAAb7uD,cACAC,EAAe4uD,EAAf5uD,gBACAC,EAAiB2uD,EAAjB3uD,kBACAke,EAAOywC,EAAPzwC,QAkBEk+C,EAAY,CACd,CAAE5rD,KAAMyrD,GAAiBl8D,gBAAiBtT,MAAOsT,GACjD,CAAEyQ,KAAMyrD,GAAiBj8D,kBAAmBvT,MAAOuT,GACnD,CAAEwQ,KAAMyrD,GAAiBp8D,cAAepT,MAAOoT,GAC/C,CAAE2Q,KAAMyrD,GAAiBn8D,cAAerT,MAAOqT,IAEnD,OAAOvT,cAAC2zD,KAAO,CACXkC,QAAS,CAAC,SACVC,UAAU,aACVrC,iBAAiB,mDACjB3nB,QAAS9rC,cAAA,OAAK+nB,UAAU,yBAAwBC,SAC5ChoB,cAACyvE,GAAqB,CAAC1nD,UAAU,sBAAqBC,SACjD6nD,EAAUthE,KAAI,SAAA0hB,GAAsB,IAAnBhM,EAAIgM,EAAJhM,KAAM/jB,EAAK+vB,EAAL/vB,MACZyvE,EAAsB1rD,EAAtB0rD,QAAS1nE,EAAagc,EAAbhc,SAAQ6nE,EAAAzjE,YACsBnM,EAAK,GAA7C6vE,EAAMD,EAAA,GAAEhvE,EAASgvE,EAAA,GAAEvvE,EAASuvE,EAAA,GAAEE,EAAMF,EAAA,GAE3C,OAAOhnD,eAAA,OAAmBf,UAAU,gBAAeC,SAAA,CAC/Cc,eAAA,MAAIf,UAAS,uBAAAlb,OAAyBkjE,EAAS,GAAK,YAAa/nD,SAAA,CAC7DhoB,cAAA,QAAAgoB,SACKmH,EAASlnB,KAEdjI,cAACgyD,KAAQ,CACLhB,QAAS+e,EACTjf,SAAU,SAAAt7C,GACNmc,GAAQ,SAAA6wC,GACJ,IAAMyN,EAAaz6D,EAAE4c,OAAO4+B,QAE5B,OAAAzxD,wBAAA,GACOijE,GAAW,GAAAv2D,aAAA,GACb0jE,EAAO,CAAIM,GAAUpjE,OAAA8gC,aAAKztC,EAAMsmB,MAAM,WAGjDwB,SACJmH,EAAS,sCAEd4gD,GAAUjnD,eAAA,OAAKf,UAAU,uBAAsBC,SAAA,CAC5ChoB,cAAA,MAAAgoB,SACIhoB,cAACgyD,KAAQ,CACLjqC,UAAU,kBACVipC,QAASzwD,EACTuwD,SAAU,SAAAt7C,GACNmc,GAAQ,SAAA6wC,GACJ,IAAM0N,EAAc16D,EAAE4c,OAAO4+B,QAE7B,OAAAzxD,wBAAA,GACOijE,GAAW,GAAAv2D,aAAA,GACb0jE,EAAO,GAAA9iE,OAAA8gC,aAAOztC,EAAMsmB,MAAM,EAAG,IAAE,CAAE0pD,EAAahwE,EAAM,WAG/D8nB,SAEDmH,EAAS,qCAGjB5uB,GAAaP,cAACivE,GAAiB,CAC5B/uE,MAAO8vE,EACPlf,SAAU,SAAAqf,GAAW,OAAIx+C,GAAQ,SAAA6wC,GAC7B,OAAAjjE,wBAAA,GACOijE,GAAW,GAAAv2D,aAAA,GACb0jE,EAAO,GAAA9iE,OAAA8gC,aAAOztC,EAAMsmB,MAAM,EAAG,IAAE,CAAE2pD,YAI9CnwE,cAAA,MAAAgoB,SAAKmH,EAAS,kCACdnvB,cAAC8+D,KAAa,CACVC,OAAQhrD,GACRpU,MAAgB,OAATmB,QAAS,IAATA,IAAa,GACpBk5D,iBAAkB,SAAAr6D,GACdgyB,GAAQ,SAAA6wC,GACJ,OAAAjjE,wBAAA,GACOijE,GAAW,GAAAv2D,aAAA,GACb0jE,EAAO,CAAIzvE,EAAM,GAAIP,EAAMqmB,KAAGnZ,OAAA8gC,aAAKztC,EAAMsmB,MAAM,EAAG,kBAvD1DmpD,UAgEtB3nD,SAEPc,eAAC0mD,GAAwB,CAACznD,UAAU,qBAAoBC,SAAA,CACnD6nD,EAAUthE,KAAI,SAAAioB,GAAsB,IAAnBvS,EAAIuS,EAAJvS,KAAM/jB,EAAKs2B,EAALt2B,MACZyvE,EAAY1rD,EAAZ0rD,QAAOS,EAAA/jE,YACgCnM,EAAK,GAA7C6vE,EAAMK,EAAA,GAAEtvE,EAASsvE,EAAA,GAAE7vE,EAAS6vE,EAAA,GAAEJ,EAAMI,EAAA,GAE3C,OAAOpwE,cAAA,OACH+nB,UAAU,6BACVpG,MAAO,CACH4oC,gBAA8C,KAAnB,OAATzpD,QAAS,IAATA,IAAa,IAAI6U,QAAiBo6D,EAAqBjvE,EAAZ,UAC7D+4D,UAAYkW,GAAUxvE,EAAS,aAAAsM,OAAiBmjE,EAAM,UAAW,KAJxDL,MAQrB3vE,cAAA,QAAM+nB,UAAU,mBAAkBC,SAAEmH,EAAS,gDC5R5CkhD,I,OAAiBhmB,sBAA8C,SAAA31C,EAMzD41C,GAAkB,IALjCza,EAAan7B,EAAbm7B,cACAC,EAAgBp7B,EAAhBo7B,iBACAwb,EAAY52C,EAAZ42C,aACAE,EAAS92C,EAAT82C,UACAN,EAAcx2C,EAAdw2C,eAEM/7B,EAAWa,KAAcoyC,EAS3B1wC,GAAQ2wC,uBAAW,SAAA55C,GAAA,IAAAu6C,EAAAv6C,EACnBxU,KAQO,MACJ,CACHhE,OATU+yD,EAAN/yD,OAUJM,MATSyyD,EAALzyD,MASGC,KATQwyD,EAAJxyD,KASEC,OATUuyD,EAANvyD,OASIrR,QATW4jE,EAAP5jE,QAUzBuR,cATiBqyD,EAAbryD,cASWC,UATaoyD,EAATpyD,UAUnBzR,WATc6jE,EAAV7jE,WAUJ2R,UATakyD,EAATlyD,UAUJ+gB,WARUpJ,EAAVoJ,WASAF,QAROlJ,EAAPkJ,aAhBA1hB,EAAMmyD,EAANnyD,OACAM,EAAK6xD,EAAL7xD,MAAOC,EAAI4xD,EAAJ5xD,KAAMC,EAAM2xD,EAAN3xD,OAAQrR,EAAOgjE,EAAPhjE,QACrBuR,EAAayxD,EAAbzxD,cAAeC,EAASwxD,EAATxxD,UACfzR,EAAUijE,EAAVjjE,WACA2R,EAASsxD,EAATtxD,UACA+gB,EAAUuwC,EAAVvwC,WACAF,EAAOywC,EAAPzwC,QAoBImB,EAAYR,KAAZQ,QACAF,EAAkDE,EAAlDF,mBAAoBC,EAA8BC,EAA9BD,0BAEtBy9C,EAAiB/tB,iBAA2B,MAE5C1T,EAAS36B,GAAU,CAAE3D,UACrBmvC,EAAYvrC,GAAa,CAAE5D,UAASw7C,EACgBC,mBAAS,GAAEiH,EAAA5mD,YAAA0/C,EAAA,GAA9DwkB,EAAqBtd,EAAA,GAAEud,EAAwBvd,EAAA,GAChDwd,EAAiB1tB,mBAAQ,kBjFqCR,SAACt3B,GAA0B,MAAK,CACvD,CACI1tB,KAAM,SACN8B,MAAO4rB,EAAWptB,OAClBsB,MAAO,WAEX,CACI5B,KAAM,OACN8B,MAAO4rB,EAAWtpB,KAClBxC,MAAO,WAEX,CACI5B,KAAM,WACN8B,MAAO4rB,EAAW3pB,SAClBnC,MAAO,YsDtHJ+wE,C2BmEgD,CACnDryE,OAAQ8wB,EAAS,2BACjBhtB,KAAMgtB,EAAS,yBACfrtB,SAAUqtB,EAAS,+B3BtEQ5gB,KAAI,SAAAmG,GAAA,IAAG/U,EAAK+U,EAAL/U,MAAO5B,EAAI2W,EAAJ3W,KAAM8B,EAAK6U,EAAL7U,MAAK,MAAQ,CAC5DA,MAAgB,WAAT9B,EAAoBiC,cAACC,IAAmB,IAAMJ,EACrDK,MAAOnC,EACPmjB,MAAO,CACHS,MAAO,CACHhiB,QACAm3D,WAAY,e2BiEpB,CAAC3nC,IAECwhD,EAAqBpuB,iBAA2B,MAChDquB,EAAkBruB,iBAAyB,MAC3CsuB,EAAyBtuB,iBAA6B,MACtDuuB,EAAwBvuB,iBAA8B,MACtDwuB,EAAsBxuB,iBAA4B,MAClDyuB,EAA4BzuB,iBAAkC,MAC9D0uB,EAAsB1uB,iBAA4B,MAAM2J,EAEtBF,mBAGrC,CACC9tC,GAAI,GACJ6zC,SAAU,eACZ5F,EAAA9/C,YAAA6/C,EAAA,GANKglB,EAAY/kB,EAAA,GAAEglB,EAAehlB,EAAA,GAuB9BilB,EAAaruB,mBAAQ,kBAAMlxB,EAAW,UAAS,CAACA,IAChDw/C,EAAiBtuB,mBAAQ,kBAAMlxB,EAAW,YAAW,CAACA,IACtDy/C,EAAgBppB,uBAAY,SAAC9oD,GAAoB,OAAKuyB,GAAQ,SAAAkT,GAAI,OAAAtlC,wBAAA,GAAUslC,GAAI,IAAEzlC,iBAAa,CAACuyB,IAChG4/C,EAAkBxuB,mBAAQ,kBAAMlxB,EAAW,eAAc,CAACA,IAC1D2/C,EAAkBtpB,uBAAY,SAACtpD,EAAqBsB,GACtDyxB,GAAQ,SAAA6wC,GACJ,OAAAjjE,wBAAA,GACOijE,GAAW,IACd7xD,cAAe/R,EACfgS,UAAW1Q,SAGpB,CAACyxB,IAEE8/C,GAAgB1uB,mBAAQ,kB3B9EF,SAAC9yC,EAAgBwb,EAAoCmH,GAA2B,OAAKnzB,EAChH8O,KAAI,SAAAgvB,GAAA,IAAGx/B,EAAIw/B,EAAJx/B,KAAM2B,EAAO69B,EAAP79B,QAASE,EAAU29B,EAAV39B,WAAU,MAAQ,CACrCC,MAAO9B,IAASyB,EACVQ,cAACC,IAAmB,IACpBD,cAAC4oB,KAAO,CAAC85B,QAASj3B,EAAW/rB,GAASsoB,SACpChoB,cAAA,OACIs0D,IAAK7oC,EAAW/rB,GAChBo4B,IAAG,GAAAjrB,OAAK6gB,aAAsB,gCAAA7gB,OAA+BoD,EAAM,KAAApD,OAAI9O,EAAK8yB,cAAa,YAGrG3wB,MAAOnC,EACP6B,iBAEHqiB,QAAO,SAAA2sB,GAAA,IAAGhvC,EAAUgvC,EAAVhvC,WAAU,OAAsB,IAAfA,GAAwBA,IAAegzB,K2BiE/B8+C,CAAiBzhE,EAAQkf,EAAUyD,KAAqB,CAAC3iB,EAAQkf,EAAUyD,IAyC/G,OAvCAsyB,qBAAU,WAAO,IAADysB,EACU,QAAtBA,EAAArB,EAAep+C,eAAO,IAAAy/C,GAAtBA,EAAwB5f,SAAS,CAAE3wD,KAAMwP,EAAUxP,SACpD,CAACwP,IAEJs0C,qBAAU,WAAO,IAAD0sB,EACW,QAAvBA,EAAAhB,EAAgB1+C,eAAO,IAAA0/C,GAAvBA,EAAyB7f,SAAS3yD,KACnC,CAACA,IAEJ8wD,8BAAoB5F,GAAc,iBAAO,CACrCj7B,UAAW,eAAAwiD,EAAAC,EAAAC,EAAAC,EAAA,OAA8C,QAAxCH,EAA2B,QAA3BC,EAACnB,EAAmBz+C,eAAO,IAAA4/C,OAAA,EAA1BA,EAA4BziD,mBAAW,IAAAwiD,MACb,QADsBE,EACnC,QADmCC,EAC1DpB,EAAgB1+C,eAAO,IAAA8/C,OAAA,EAAvBA,EAAyB3iD,mBAAW,IAAA0iD,MAC5CE,cAAe,SAAAh+D,GAAS,IAADi+D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACnBhC,GAAyB,SAAAhtC,GAAG,OAAIA,EAAM,KAAG,IAErCzlC,EAUAkW,EAVAlW,KACAwH,EASA0O,EATA1O,IAAK+L,EASL2C,EATK3C,QAASH,EASd8C,EATc9C,QAASE,EASvB4C,EATuB5C,UACvBO,EAQAqC,EARArC,WAAYI,EAQZiC,EARYjC,eAAgBH,EAQ5BoC,EAR4BpC,eAAgBE,EAQ5CkC,EAR4ClC,iBAC5C3S,EAOA6U,EAPA7U,QACAsT,EAMAuB,EANAvB,MACAP,EAKA8B,EALA9B,eACAG,EAIA2B,EAJA3B,YACAG,EAGAwB,EAHAxB,OACAE,EAEAsB,EAFAtB,IAAKC,EAELqB,EAFKrB,IACLQ,EACAa,EADAb,QAASP,EACToB,EADSpB,SAGa,QAA1Bq/D,EAAAvB,EAAmBz+C,eAAO,IAAAggD,GAA1BA,EAA4BngB,SAAS,CAAExsD,MAAK+L,UAASH,UAASE,cACvC,QAAvB8gE,EAAAvB,EAAgB1+C,eAAO,IAAAigD,GAAvBA,EAAyBpgB,SAAQxyD,wBAAC,GAC3BH,GAAO,IACVwS,aAAYI,iBAAgBH,iBAAgBE,sBAElB,QAA9BqgE,EAAAvB,EAAuB3+C,eAAO,IAAAkgD,GAA9BA,EAAgCrgB,SAAS,CAAEh0D,OAAM2U,UACpB,QAA7B2/D,EAAAvB,EAAsB5+C,eAAO,IAAAmgD,GAA7BA,EAA+BtgB,SAAS,CAAE5/C,mBACf,QAA3BmgE,EAAAvB,EAAoB7+C,eAAO,IAAAogD,GAA3BA,EAA6BvgB,SAASt/C,GACL,QAAjC8/D,EAAAvB,EAA0B9+C,eAAO,IAAAqgD,GAAjCA,EAAmCxgB,SAAS,CAAEz/C,gBACnB,QAA3BkgE,EAAAvB,EAAoB/+C,eAAO,IAAAsgD,GAA3BA,EAA6BzgB,SAAS,CAAEp/C,MAAKC,MAAKQ,UAASP,kBAI5DiW,eAAA,OACHf,UAAW,CAAC,kBAA8B,QAAX9X,EAAmB,YAAc,aAAanD,KAAK,KAAKkb,SAAA,CAEvFhoB,cAACo2D,GAAS,IACVp2D,cAAA,SACAA,cAAC+1D,GAAW,IAEZjtC,eAAA,OAAKf,UAAU,qBAAoBC,SAAA,CAC/BhoB,cAAC8pE,GAAsB,CAAC/hD,UAAU,eAAe7nB,MAAO+P,EAAQ6gD,SA9EnD,SAAC2hB,GAClB9gD,GAAQ,SAAA6wC,GAAgB,IAADkQ,EAAAC,EAAAC,EAAAC,EAAAC,EACbC,EAAU,GAAAlmE,OAAM4lE,GAChBO,EAAoBjqD,GAAiBy5C,EAAauQ,GAEhDh1E,EAAwEi1E,EAAxEj1E,KAAM2U,EAAkEsgE,EAAlEtgE,MAAOD,EAA2DugE,EAA3DvgE,OAAQH,EAAmD0gE,EAAnD1gE,YAAaO,EAAsCmgE,EAAtCngE,SAAUO,EAA4B4/D,EAA5B5/D,QAASjB,EAAmB6gE,EAAnB7gE,eAO7D,OAN8B,QAA9BugE,EAAA7B,EAAuB3+C,eAAO,IAAAwgD,GAA9BA,EAAgC3gB,SAAS,CAAEh0D,OAAM2U,UACtB,QAA3BigE,EAAA5B,EAAoB7+C,eAAO,IAAAygD,GAA3BA,EAA6B5gB,SAASt/C,GACT,QAA7BmgE,EAAA9B,EAAsB5+C,eAAO,IAAA0gD,GAA7BA,EAA+B7gB,SAAS,CAAE5/C,mBACT,QAAjC0gE,EAAA7B,EAA0B9+C,eAAO,IAAA2gD,GAAjCA,EAAmC9gB,SAAS,CAAEz/C,gBACnB,QAA3BwgE,EAAA7B,EAAoB/+C,eAAO,IAAA4gD,GAA3BA,EAA6B/gB,SAAS,CAAE3+C,UAASP,aAE1CmgE,MAkEiFrR,WAAY9K,GAAiB7uC,SACjHhoB,cAAA,QAAAgoB,SAAOmH,EAAS,0BAEpBnvB,cAACyhE,GAAU,CAAC15C,UAAU,aAAa7nB,MAAOsQ,EAAMsgD,SAAUsgB,EAAYzP,WAAY8O,EAAezoD,SAC7FhoB,cAAA,QAAAgoB,SAAOmH,EAAS,wBAEnB0D,GAA6B7yB,cAAC6iE,GAAa,CACxC96C,UAAU,kBACV7nB,MAAOuQ,EACPqgD,SAAUugB,EACV1P,WAAY5K,GAAiB/uC,SAE7BhoB,cAAA,QAAAgoB,SAAOmH,EAAS,6BAIvByD,GAAsB9J,eAAA,OAAKf,UAAU,oBAAmBC,SAAA,CACrDc,eAAA,SAAOf,UAAU,yCAAwCC,SAAA,CACpDmH,EAAS,sBAAsB,IAACnvB,cAACwzD,GAAW,CACzC1nB,QAAS3c,EAAS,6BAG1BnvB,cAACikE,GAAY,CAAC5S,IAAKuf,EACf7d,aAAc3zD,EACd0rD,gBAAiBhb,EACjBghB,SAAUwgB,EACV9lB,UAAWA,EACXF,aAAcA,EACdJ,eAAgBA,OAIxBlrD,cAACkiE,GAAU,CAACC,gBAAiB,SAAA7vD,GAAW,IAAA2gE,EAAA,OAAqC,QAArCA,EAAIjC,EAA0B9+C,eAAO,IAAA+gD,OAAA,EAAjCA,EAAmClhB,SAAS,CAAEz/C,mBAE1FwW,eAAC+gD,GAA6B,CAAC9hD,UAAU,sBAAqBC,SAAA,CAC1DhoB,cAACosE,GAAiB,CAAC/a,IAAKwf,EACpBxJ,aAAc8J,IAElBnxE,cAACm/D,GAAe,CAA6B9N,IAAKif,EAC9ClR,UAAW7yD,GAAagE,GACxB8uD,YAAa1uD,EACboiD,aAAcniD,EACdiiB,0BAA2BA,EAC3Bi+B,SAAU0gB,GALQjB,GAOtBvwE,cAAC0lE,GAAkB,CACf72B,OAAQA,EACR6Q,UAAWA,EACX9sB,mBAAoBA,OAG5B9J,eAAA,OAAKf,UAAU,YAAWC,SAAA,CACtBc,eAAA,OAAKf,UAAU,kBAAiBC,SAAA,CAC5BhoB,cAACyhE,GAAU,CACP15C,UAAU,mCACV7nB,MAAO4Q,EACPggD,SAAUygB,EACV5P,WAAY8P,GAAczpD,SAE1BhoB,cAAA,QAAAgoB,SAAOmH,EAAS,8BAGlBhwB,GAAwB,SAAVoR,GAAoBqiB,IAC7B5yB,cAACqtE,GAAkB,CAAChc,IAAKyf,EACxBl+C,mBAAoBA,EACpBC,0BAA2BA,EAC3Bw0C,aAAc8J,IAGtBnxE,cAACquE,GAAsB,CAAChd,IAAK2f,EAA2B3J,aAAc8J,IAEtEroD,eAAA,OAAAd,SAAA,CACIc,eAAA,OAAKf,UAAU,4BAA2BC,SAAA,CACtChoB,cAACw2D,GAAe,CAACzuC,UAAU,mBAAkBC,SACxCmH,EAAS,wBAEbyD,EAAqB5yB,cAAC4vE,GAAe,IAAM5vE,cAAA,UAC5CA,cAAC03D,GAAU,CACPE,SAAUsZ,EAAahzD,GACvB45C,OAAQoZ,EAAanf,cAG7B/xD,cAACyoE,GAAgB,CAACpX,IAAK0f,EAAqB1J,aAAc8J,OAG9DnxE,cAACgqE,GAAgB,CAAC3Y,IAAK4f,EACnBvxB,UAAWA,EACX9sB,mBAAoBA,EACpBy0C,aAAc8J,OAGtBnxE,cAAA,OAAK+nB,UAAU,mBAAkBC,SAC7BhoB,cAAC0rE,GAAe,CAACra,IAAKsf,EAClB7lB,gBAAiBjb,EACjBhB,OAAQA,EACRhc,0BAA2BA,EAC3Bq4B,eAAgBA,EAChBM,UAAWA,EACXF,aAAcA,gB,0fC7S3B,IAAM4nB,GAAyBzrD,KAAO0rD,OAAMxrD,M,40ECcnD,IAAMyrD,GAA4B3rD,aAAO4rD,KAAP5rD,CAAaE,MAgFlC2rD,GAAiB,SAAH5+D,GAEJ,IADnBya,EAAQza,EAARya,SAEqB48B,EACSC,oBAAS,GAAMiH,EAAA5mD,YAAA0/C,EAAA,GAAtC8I,EAAO5B,EAAA,GAAEsgB,EAAUtgB,EAAA,GAAA/G,EACMF,oBAAS,GAAMG,EAAA9/C,YAAA6/C,EAAA,GAAxCsnB,EAASrnB,EAAA,GAAEsnB,EAAUtnB,EAAA,GAAAG,EACIN,oBAAS,GAAMO,EAAAlgD,YAAAigD,EAAA,GAAxConB,EAASnnB,EAAA,GAAEonB,EAAUpnB,EAAA,GAAAG,EACIV,mBAAyC,IAAGW,EAAAtgD,YAAAqgD,EAAA,GAArEknB,EAAQjnB,EAAA,GAAEknB,EAAWlnB,EAAA,GACtBmnB,EAAoBF,EAASj+D,OALjB,GAOlB,OAAOmT,eAAA4rC,WAAA,CAAA1sC,SAAA,CACHc,eAACsqD,GAAyB,CACtBve,QAASA,EACThsC,MAAOsG,EAAS,0BAChB4kD,cAAe,CACX5hB,SAAU2hB,GAAqBN,GAEnC3vD,SAAU,kBAAM0vD,GAAW,IAC3BS,KAAIjnD,aAAAC,KAAAC,MAAE,SAAAC,IAAA,IAAA+mD,EAAAC,EAAAC,EAAA,OAAAnnD,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGE,OAHFF,EAAAC,KAAA,EAEEkmD,GAAW,GACXnmD,EAAAE,KAAA,EACgCuI,QAAQwY,IAAIqlC,EAASrlE,KAAI,SAAAugB,GAAqB,IAAlBslD,EAAItlD,EAAJslD,KAAMr2E,EAAI+wB,EAAJ/wB,KAC9D,OAAO,IAAIg4B,SAAsC,SAACC,EAASq+C,GACvD,IAAM3iB,EAAS,IAAIC,WACnBD,EAAO3I,OAAS,SAAA94B,GAAiB,IAAdmC,EAAMnC,EAANmC,OACf,GAAKA,EAAL,CAGC,IAEOvU,EAAWuU,EAAXvU,OACR,GAAsB,kBAAXA,EAAX,CAKA,IAAIy2D,EAAel8D,KAAKC,MAAMwF,GAE1BnD,GAAmB45D,KACnBA,EAAer9D,GAAiBq9D,IAGpC,IAAMC,EAAkB35D,GAA0B05D,GAC9CE,EAA4C,KAahD,GAVIA,EAFAd,EAEgBa,EACVv3D,GAAyBoT,GAAWkkD,GAAcrgE,MAAM4J,OACxDy2D,EAGUC,EACVD,EACAr9D,GAAiBmZ,GAAWkkD,GAAcrgE,MAGpD,CAIA,IAAMuF,EAAO,IAAIi7D,KACb,CAAC,GAAD5nE,OAAIuL,KAAK+a,UAAUqhD,KACnB,CAAE51E,KAAM,qBAEZo3B,EAAQ,CAAExc,OAAMzb,cAPZs2E,EAAO,qCAzBPA,EAAO,2BANPA,EAAO,uBAwCf3iB,EAAOgjB,WAAWN,UAEtB,KAAD,EAKA,OApDGH,EAAiB3mD,EAAAM,KAiDjBsmD,EAAY,IAAIS,KACtBV,EAAkB38D,SAAQ,SAAAkf,GAAqB,IAAlBhd,EAAIgd,EAAJhd,KAAMzb,EAAIy4B,EAAJz4B,KAC/Bm2E,EAAUE,KAAKr2E,EAAMyb,MACtB8T,EAAAE,KAAA,EACmB0mD,EAAUU,cAAc,CAC1Ch2E,KAAM,SACP,KAAD,EAFIu1E,EAAO7mD,EAAAM,KAGbrU,GACI,qBACA46D,EACA,mBAEJV,GAAW,GACXF,GAAW,GAAOjmD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAElBlU,QAAQC,MAAKiU,EAAAU,IACbmD,KAAa9X,MAAM,CACf+X,QAASjC,EAAS,yBAClBkC,YAAalC,EAAS,+BAE1BskD,GAAW,GAAO,yBAAAnmD,EAAAY,UAAAhB,EAAA,mBAExBlF,SAAA,CAEFc,eAAA,OAAKf,UAAU,aAAYC,SAAA,CACvBhoB,cAAA,SAAAgoB,SAAO,yCACPhoB,cAAA,OAAAgoB,SACIhoB,cAAA,UACI+nB,UAAWZ,GAAW,gBAAiBusD,EAAY,UAAY,IAC/DrrD,QAAS,kBAAMsrD,GAAW,SAAA1uE,GAAG,OAAKA,MAAK+iB,SAEvChoB,cAAC60E,KAAkB,QAG3B70E,cAAA,SAAAgoB,SAAO,qBAEXc,eAAA,OAAKf,UAAU,aAAYC,SAAA,CACvBhoB,cAAA,SACIpB,KAAK,OACL0yD,OAAO,mBACPwjB,UAAQ,EACRhkB,SAAU,SAAAt7C,GACN,IAAMu/D,EAAgBv/D,EAAE4c,OAAOm/B,MAE/B,GAAIwjB,EAAe,CAGf,IAFA,IAAMC,EAA+C,GAE5CxxC,EAAM,EAAGA,GAAOuxC,EAAcp/D,OAAQ6tB,IAAO,CAClD,IAAMguB,EAAaujB,EAAcE,KAAKzxC,GAClCguB,GAAYwjB,EAAavvC,KAAK,CAAE2uC,KAAM5iB,EAAYzzD,KAAMyzD,EAAWzzD,OAG3E81E,EAAYmB,OAIxBlsD,eAAA,OAAKf,UAAU,WAAUC,SAAA,CACpBmH,EAAS,sCACTqkD,GAAaxzE,cAAA,OAAK+nB,UAAU,cAAaC,SACrCmH,EAAS,wCAEb2kD,GAAqB9zE,cAAA,OAAK+nB,UAAU,UAASC,SACzCmH,EAAS,kCAlIZ,SAqINnvB,cAAA,OAAK+nB,UAAU,YAAWC,SACrB4rD,EAASrlE,KAAI,SAAAgvB,GAAe,IAAZx/B,EAAIw/B,EAAJx/B,KACb,OAAO+qB,eAAA,OAAgBf,UAAU,aAAYC,SAAA,CACzChoB,cAAA,OAAAgoB,SAAMjqB,IACNiC,cAAA,OAAK+nB,UAAU,cAAaC,SACxBhoB,cAACk1E,KAAa,CACV/iB,SAAUqhB,EACVnrD,QAAS,kBAAMwrD,GAAY,SAAAsB,GACvB,OAAOA,EAAQlzD,QAAO,SAAAzT,GAAK,OAAIA,EAAMzQ,OAASA,eAN7CA,cAejCiC,cAAC4oB,KAAO,CAAC85B,QAASvzB,EAAS,0BAA0BnH,SACjDhoB,cAACkzE,GAAsB,CACnBnrD,UAAU,kBACVM,QAAS,kBAAMkrD,GAAW,IAAMvrD,SAEhChoB,cAACo1E,KAAe,Y,w9CCrPhC,IAAMC,GAA8B5tD,aAAO2jD,KAAKE,KAAZ7jD,CAAiBE,MAW/C2tD,GAA+B7tD,aAAO2jD,KAAKE,KAAZ7jD,CAAiBssC,MAQhDwhB,GAAuB9tD,aAAOspC,KAAPtpC,CAAcwsC,MAyC9BuhB,GAAiBnrB,sBAA8C,SAAA31C,EAMzE28C,GAAS,IALRokB,EAAS/gE,EAAT+gE,UACA3wB,EAAcpwC,EAAdowC,eACAC,EAAgBrwC,EAAhBqwC,iBACA3D,EAAS1sC,EAAT0sC,UACAs0B,EAAehhE,EAAfghE,gBAEMvmD,EAAWa,KAAc4lC,EAK3BtjC,GAAW+vC,uBAAW,SAAA55C,GAAA,IAAAktD,EAAAltD,EACtBqK,QACa,MACV,CACHJ,YAHsBijD,EAAXjjD,YAIXD,WAJkCkjD,EAAVljD,WAKxBM,cAJatK,EAAbsK,mBALAL,EAAWkjC,EAAXljC,YACAD,EAAUmjC,EAAVnjC,WACAM,EAAa6iC,EAAb7iC,cASIk1B,EAAa9G,IACjB,EACAC,EACA,CACI2D,mBACAD,iBACA31B,aANA84B,SAUJ5G,EACAD,EADAC,cAEEu0B,EAAYrzB,iBAAO,CACrBszB,gBAAiB9/C,QAAQC,UACzB8/C,iBAAiB,IAClB/pB,EACqCC,oBAAS,GAAMiH,EAAA5mD,YAAA0/C,EAAA,GAAhDgqB,EAAa9iB,EAAA,GAAE+iB,EAAc/iB,EAAA,GAC9BgjB,EAAqB/tB,uBAAY,WACnC8tB,GAAe,KAChB,IACKE,ECrFiB,SAAHxhE,GAQJ,IAPlB+gE,EAAS/gE,EAAT+gE,UACA3wB,EAAcpwC,EAAdowC,eACAzD,EAAa3sC,EAAb2sC,cACAu0B,EAASlhE,EAATkhE,UACA3tB,EAAQvzC,EAARuzC,SACAytB,EAAehhE,EAAfghE,gBACAO,EAAkBvhE,EAAlBuhE,mBAEM9mD,EAAWa,KAEPwyC,EACN9wC,KADAzd,KAEEwe,EAAaH,IAAW,SAAAnG,GAAK,OAAIA,EAAM2G,QAAQL,cAEjDrzB,EAGAojE,EAHApjE,QACArB,EAEAykE,EAFAzkE,KACAoB,EACAqjE,EADArjE,WAEEg3E,EAAc5zB,kBAAO,GAErB3oC,EAAWsuC,uBAAY,WAA0C,IAADxiC,EAAxC9D,EAAsBrL,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAGkc,EAC7C2jD,EAAa/0B,EAAcnvB,QAE3BmkD,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYl4B,YAC1Bo4B,EAA8B,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAY17C,WAAW,MAC3C67C,EAAgC,OAAXF,QAAW,IAAXA,OAAW,EAAXA,EAAa37C,WAAW,MACnD,GAAI07C,GAAcE,GACXD,GAAeE,IACdd,EAEJ,IACQ7zD,IACAy0D,EAAYlpE,MAAQyU,EAAK,GACzBy0D,EAAYjpE,OAASwU,EAAK,IAG9B20D,EAAmB9+C,UACf2+C,EACA,EAAG,EAAGA,EAAWjpE,MAAOipE,EAAWhpE,OACnC,EAAG,EAAGipE,EAAYlpE,MAAOkpE,EAAYjpE,QAGzC,IAAM8P,EAAiBhE,GAAmBnb,GACtC0b,EAAOC,SAASC,cAAc,KAClCF,EAAKG,SAAWsD,EAAc,GAAArQ,OACrBqQ,EAAc,QACjB,WACNzD,EAAKI,KAAOw8D,EAAYn3D,UAAU,aAClCzF,EAAKi3C,QACP,MAAOl7C,GACLkgE,IAGsC,QAA9ChwD,EAAAhM,SAASkM,cAAc,+BAAuB,IAAAF,GAA9CA,EAAgD8wD,UAAU/7D,OAAO,YACjEw7D,MACD,CAAC50B,EAAeo0B,EAAW13E,EAAM00B,EAAYwjD,EAAoBP,IAmHpE,OAvGAxwB,qBAAU,WACN,IAAI0W,GAAW,EAWf,OAVAhT,YAAW,WACP,IAAM1rC,EAAiBhE,GAAmBnb,GAEtC69D,IACAliD,SAASmP,MAAQ3L,EAAc,GAAArQ,OACtBqQ,EAAc,sBACjB,qBAEX,KAEI,WACH0+C,GAAW,KAEhB,CAAC79D,IAEJmnD,qBAAU,WACN,IAAIuxB,EAAmB,WAAO,IAADzgB,EACzB3pC,aAAa+C,QAAQ,YAAahX,KAAK+a,UAAUqvC,IACjDn2C,aAAa+C,QAAQ,eAA6C,QAA/B4mC,EAAEtoC,UAA6BsoC,EAAI,YAI1E,OAFAl8C,OAAOie,iBAAiB,eAAgB0+C,GAEjC,WACH38D,OAAO48D,oBAAoB,eAAgBD,OAInDvxB,qBAAU,WACN,IAAI0W,GAAW,EACX+a,EAAgB,SAAC3O,GAEjB,OADAA,EAAG5jD,iBACI,gEAEX,IAAuB,IAAnB0gC,EAA0B,CAC1B,IAAK,IAAD8xB,EACAvqD,aAAa+C,QAAQ,YAAahX,KAAK+a,UAAUqvC,IACjDn2C,aAAa+C,QAAQ,eAA6C,QAA/BwnD,EAAElpD,UAA6BkpD,EAAI,WACxE,MAAOphE,GAEL,IAAM7U,EAAM,mCACZwwB,KAAak4B,MAAM1oD,GACnBwwB,KAAa9X,MAAM,CACf1Y,MACAywB,QAASjC,EAAS,+BAClBkC,YAAalC,EAAS,qCAY9BpC,aAAAC,KAAAC,MAAC,SAAAC,IAAA,IAAAg0C,EAAA2V,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7/D,EAAAD,EAAA,OAAA6V,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC2C,IAAtB6zB,EAAcnvB,QAClB,CAAD5E,EAAAE,KAAA,SAQT,OAPA1T,OAAOie,iBAAiB,eAAgB4+C,GACA,QAAxCzV,EAAAxnD,SAASu+C,eAAe,wBAAgB,IAAAiJ,GAAxCA,EAA0CsV,UAAU/7D,OAAO,uBACb,QAA9Co8D,EAAAn9D,SAASu+C,eAAe,8BAAsB,IAAA4e,GAA9CA,EAAgDK,aAAa,QAAS,IACxB,QAA9CJ,EAAAp9D,SAASu+C,eAAe,8BAAsB,IAAA6e,GAA9CA,EAAgDI,aAAa,QAAS,kBAEtEtB,EAAU1jD,QAAQ4jD,iBAAkB,EAEpCxoD,EAAAE,KAAA,EACMooD,EAAU1jD,QAAQ2jD,gBAAgB,KAAD,MAEnCja,EAAS,CAADtuC,EAAAE,KAAA,SAC0F,OAAlGooD,EAAU1jD,QAAQ2jD,gBAAkB5tB,EAAS,CAAE9oD,aAAYC,UAAS+3E,WAAY,kBAAMvb,KAAYtuC,EAAAE,KAAA,GAE5FooD,EAAU1jD,QAAQ2jD,gBAAgB,KAAD,GACnCja,IAEMxkD,EAAc7X,wBAAA,GAAQijE,GAAW,IAAErxD,QAAS,GAAIU,eAAgB,KAEzC,kBADvBsF,EAAgBiB,KAAK+a,UAAUlc,GAAiBG,MACfuN,GAAe,OAAQxN,GAEtB,QAAxC4/D,EAAAr9D,SAASu+C,eAAe,wBAAgB,IAAA8e,GAAxCA,EAA0CP,UAAUY,IAAI,uBACV,QAA9CJ,EAAAt9D,SAASu+C,eAAe,8BAAsB,IAAA+e,GAA9CA,EAAgDE,aAAa,QAAS,iBACxB,QAA9CD,EAAAv9D,SAASu+C,eAAe,8BAAsB,IAAAgf,GAA9CA,EAAgDC,aAAa,QAAS,iBACtEp9D,OAAO48D,oBAAoB,eAAgBC,GAC3Cf,EAAU1jD,QAAQ4jD,iBAAkB,EAEhCK,EAAYjkD,UACZikD,EAAYjkD,SAAU,EACtBtY,MAEP,yBAAA0T,EAAAY,UAAAhB,MAjCbH,GAuCJ,OAAO,WACHjT,OAAO48D,oBAAoB,eAAgBC,GAC3C/a,GAAW,MAIZ,CACHsa,OAnHW,SAACt0D,GAA6B,IAADy1D,EACM,QAA9CA,EAAA39D,SAASkM,cAAc,+BAAuB,IAAAyxD,GAA9CA,EAAgDb,UAAUY,IAAI,YAC9D,IAAME,EAAc11D,EAAI+rB,aAAO/rB,QAA4BpL,EAE3DoyC,YAAW,YACmC,IAAtCgtB,EAAU1jD,QAAQ4jD,gBAClBl8D,EAAS09D,GACNnB,EAAYjkD,SAAU,IAC9B,ODoBYqlD,CAAc,CAC7B9B,YACA3wB,iBACAzD,gBACAu0B,YACA3tB,WACAytB,kBACAO,uBAPIC,OAUFt8D,EAAW,SAACgI,GACVm0D,IACAN,EACAtkD,KAAa9X,MAAM,CACf+X,QAAS,+CACTC,YAAa,2DAIrB2kD,GAAe,GACfE,EAAOt0D,MAOX,OAJAsuC,8BAAoBmB,GAAK,iBAAO,CAC5Bz3C,eAGA67D,EAAkB,KACf3sD,eAAA,OAAKf,UAAU,wBAAuBC,SAAA,CACzChoB,cAAA,OAAKke,GAAG,wBACR4K,eAACysD,GAAoB,CAACxtD,UAAU,cAAc7J,GAAG,oBAAoBmK,QAAS,kBAAMzO,KAAWoO,SAAA,CAC3FhoB,cAAC4oB,KAAO,CAAC85B,QAAShwB,EAAc1yB,cAAA00D,WAAA,CAAA1sC,SAAE,sBAAkB,KAAKA,SACrDhoB,cAAA,OAAK+nB,UAAU,eAAcC,SACzBhoB,cAAA,OAAK+nB,UAAU,gBAAeC,SACzB+tD,EACK5mD,EAAS,iCACTA,EAAS,+BAI3BnvB,cAACkrE,KAAQ,CACL/Y,SAAU4jB,EACVhuD,UAAU,uBACV+tC,UAAU,cACVpT,QAAS55B,eAACsiD,KAAI,CAAC/iD,QAAS,SAAA7S,GAAC,OAAIA,EAAE61D,SAAS3nD,mBAAkBsE,SAAA,CACtDhoB,cAACq1E,GAA2B,CAACljB,UAAQ,EAAAnqC,SAAEmH,EAAS,sCAC/C,CACG,CAAEhiB,MAAO,IAAKC,OAAQ,KACtB,CAAED,MAAO,IAAKC,OAAQ,KACtB,CAAED,MAAO,IAAKC,OAAQ,OACxBmB,KAAI,SAAAugB,GAAwB,IAArB3hB,EAAK2hB,EAAL3hB,MAAOC,EAAM0hB,EAAN1hB,OACZ,OAAO0b,eAACwsD,GAA4B,CAChCvtD,UAAW0K,EAAW,KAAOtlB,GAASslB,EAAW,KAAOrlB,EAAS,oBAAsB,GACvFib,QAAS,WACL0K,EAAc,CACVN,WAAY,CAACtlB,EAAOC,KAExBqY,MACFuC,SAAA,CAED7a,EAAM,SAAIC,IAAM,GAAAP,OATwBM,EAAK,KAAAN,OAAIO,UAYtD4a,SAERhoB,cAAA,OAAK+nB,UAAU,gBAAgBM,QAAS,SAAA7S,GAAC,OAAIA,EAAEkO,mBAAkBsE,SAC7DhoB,cAACw3E,KAAY,iB,yaE9J1B,IAAMC,GAAe,SAAH/iE,GAGJ,IAFjBya,EAAQza,EAARya,SACAuoD,EAAUhjE,EAAVgjE,WAEMx5D,EAAK,gBACLy5D,EAA0Bp1B,iBAAyB,MAEzD,OAAOviD,cAAC4oB,KAAO,CAAC85B,QAASvzB,EAAS,yBAAyBnH,SACvDc,eAACoqD,GAAsB,CACnBnrD,UAAU,iCACVM,QAAS,WACL,IAAM+J,EAAS1Y,SAASu+C,eAAe/5C,GACnCkU,GACAA,EAAOs+B,SAEb1oC,SAAA,CAEFhoB,cAAA,SAAOqxD,IAAKsmB,EACR/4E,KAAK,OACLsf,GAAIA,EACJozC,OAAO,mBACPvpC,UAAU,sBACV+oC,SAAU,WAAO,IAAD8mB,EACNhE,EAA0C,QAAlCgE,EAAGD,EAAwBzlD,eAAO,IAAA0lD,OAAA,EAA/BA,EAAiCrmB,MAClD,GAAIqiB,EACA,IAAK,IAAIpwC,EAAM,EAAGA,GAAOowC,EAASj+D,OAAQ6tB,IAAO,CAC7C,IAAMguB,EAAaoiB,EAASqB,KAAKzxC,GACjC,GAAKguB,EAAL,CAEA,IAAME,EAAS,IAAIC,WACnBD,EAAO3I,OAAS,SAAAtgC,GAAiB,IAAd2J,EAAM3J,EAAN2J,OACf,GAAKA,EAAL,CAAoB,IAEZvU,EAAWuU,EAAXvU,OACc,kBAAXA,GACX65D,OAAWlhE,GAAW,EAAOqH,KAEjC6zC,EAAOgjB,WAAWljB,QAKlCxxD,cAAC63E,KAAc,U,IAKgBpwD,aAAO2jD,KAAP3jD,CAAYE,M,i3LC7DhD,IAAMmwD,GAAiCrwD,KAAOC,IAAGC,KAyE9CurD,IAMG6E,GAAiCtwD,KAAOC,IAAGqsC,MAyE3CikB,GAAmBvwD,KAAOC,IAAGusC,MAkB7BgkB,GAAaxwD,KAAOC,IAAGysC,MAcvB+jB,GAAazwD,KAAOS,KAAIk1C,MAIxB+a,GAAgB1wD,KAAOC,IAAG0wD,MAsB1BC,GAAiB5wD,aAAO0wD,GAAP1wD,CAAqB6wD,MAKtCC,GAAc9wD,aAAO0wD,GAAP1wD,CAAqB+wD,M,sEChKhDC,qBAAU,CACNC,WAAY,KAEhB,IAAMC,GAAqB,CACvBC,OAAQ,CAAC,SAAU,aACnBC,OAAQ,CAAC,SAAU,aACnBC,MAAO,CAAC,SAAU,aAClBC,KAAM,CAAC,SAAU,aACjBC,SAAU,CAAC,SAAU,cAGT5lD,GAAqC31B,EAAhB41B,GAAgB51B,EAglBtCw7E,OA/kBf,WAAgB,IAADC,EAAAtjB,EAIPtjC,GAAW+vC,uBAAW,SAAA3tD,GAAA,IAAAykE,EAAAzkE,EAAGoe,QAAWJ,EAAWymD,EAAXzmD,YAA8B,MAAU,CAC5E0mD,SADkED,EAAjBxmD,kBAEjDD,mBAJAA,EAAWkjC,EAAXljC,YACA0mD,EAAQxjB,EAARwjB,SAAQ/iB,EAaR3qC,GAAQ22C,uBAAW,SAAA55C,GAOA,MAChB,CACH8G,aARY9G,EAAZ8G,aASAF,UARS5G,EAAT4G,UASAF,SARQ1G,EAAR0G,SASApB,gBARetF,EAAfsF,gBASAmB,aARYzG,EAAZyG,aASAM,SARQ/G,EAAR+G,SASAI,oBARmBnH,EAAnBmH,yBAdcypD,EAAoBhjB,EAAlC9mC,aACW+pD,EAAiBjjB,EAA5BhnC,UACAF,EAAQknC,EAARlnC,SACApB,EAAesoC,EAAftoC,gBACAmB,EAAYmnC,EAAZnnC,aACUqqD,EAAYljB,EAAtB7mC,SACAI,EAAmBymC,EAAnBzmC,oBAAmBm8B,EAkBmBC,oBAAS,GAAKiH,EAAA5mD,YAAA0/C,EAAA,GAAjDjH,EAAcmO,EAAA,GAAEumB,EAAevmB,EAAA,GAAA/G,EACZF,mBAAS,IAAGG,EAAA9/C,YAAA6/C,EAAA,GAA/B7yC,EAAK8yC,EAAA,GAAEoB,EAAQpB,EAAA,GAAAG,EACcN,mBAA+B,UAASO,EAAAlgD,YAAAigD,EAAA,GAArEE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAAAG,EACEV,mBAAS,GAAEW,EAAAtgD,YAAAqgD,EAAA,GAAtC+sB,EAAS9sB,EAAA,GAAE+sB,EAAY/sB,EAAA,GAAAG,EACgBd,oBAAS,GAAMe,EAAA1gD,YAAAygD,EAAA,GAAtD6sB,EAAe5sB,EAAA,GAAE6sB,EAAkB7sB,EAAA,GAEpC8sB,EAAet3B,iBAA0B,MACzCjB,EAAmBiB,iBAA0B,MAC7ChB,EAAsBgB,iBAA0B,MAChDlB,EAAgBkB,iBAA0B,MAC1Cf,EAAiBe,iBAA0B,MAC3CL,EAAoBK,iBAA0B,MAC9CT,EAAyBS,iBAA0B,MACnDV,EAA0BU,iBAA0B,MACpDJ,EAAgBI,iBAA0B,MAC1Cb,EAAkBa,iBAA0B,MAC5CZ,EAAgBY,iBAA0B,MAC1CP,EAAgBO,iBAA0B,MAC1CR,EAAiBQ,iBAA0B,MAC3CX,EAAoBW,iBAA0B,MAC9Cd,EAAmBc,iBAA0B,MAC7CN,EAAmBM,iBAA0B,MAC7CH,GAAkBG,iBAA0B,MAC5CF,GAAoBE,iBAA0B,MAAM2K,GACtClB,mBAAS,CACzB1K,mBACAC,sBACAF,gBACAG,iBACAU,oBACAJ,yBACAD,0BACAM,gBACAT,kBACAC,gBACAK,gBACAD,iBACAH,oBACAH,mBACAQ,mBACAG,mBACAC,uBAjBGjB,GAkBL/0C,YAAA6gD,GAAA,GAlBc,GAoBV4sB,GAAoBv3B,iBAA0B,MAAM8K,GAEVrB,mBAAS,GAAEsB,GAAAjhD,YAAAghD,GAAA,GAApDtI,GAAgBuI,GAAA,GAAEysB,GAAmBzsB,GAAA,GAE5CpI,qBAAU,WACNq0B,MACD,CAACA,IACJr0B,qBAAU,WACFn3B,GAAiB6B,MACtB,CAAC7B,EAAiB6B,IAErBs1B,qBAAU,WACY,CACd,cACA,iBACA,iBAGM5tC,SAAQ,SAAA0iE,GAAc,IAADC,EAAAC,EAC3BxgE,SAAS9b,KAAK+jB,MAAMw4D,YAAYH,EAA0C,QAAjCC,EAAoB,QAApBC,EAAEhrD,EAAavN,aAAK,IAAAu4D,OAAA,EAAlBA,EAAqBF,UAAU,IAAAC,IAAI,SAEnF,CAAC/qD,IAEJg2B,qBAAU,WAAO,IAADk1B,EACN7mD,EAA2B,QAAxB6mD,EAAG/4B,EAAcnvB,eAAO,IAAAkoD,OAAA,EAArBA,EAAuB1/C,WAAW,MACxC/I,EAAUD,GAAQvB,WAAWwB,QAC/B4B,IACAA,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCtM,EAAIs8B,sBAAwB,OAC5B56B,GAAY1B,KAGa,IAAzB8lD,GAAgCgB,KAAQC,KAAK,CAC7CvK,OAAQ,CACJwK,SAAU,CACN,cACA,sBACA,aACA,yBACA,kBACA,yBACA,SACA,yBACA,mBACA,uBAEJC,KAAM,CAAC,mBAEX3tD,OAAQ,WACJ,IAAM4tD,E/D5HW,WAC7B,IACI,IAAMC,EAAmB5gE,OAAOuS,aAAaC,QAAQ,gBAC/CquD,EAA0B7gE,OAAOuS,aAAaC,QAAQ,aACtDsuD,EAAgBD,EAChBpiE,GAAgBH,KAAKC,MAAMsiE,IAC3B,KAEAE,EAAe,IAAI91D,gBAAgBjL,OAAOkL,SAASC,QAAS2G,IAAI,QACtE,GAAIivD,EAAa,CAAC,IAADC,EAAAC,EASL9mE,EAASmc,GAAWyqD,GAApB5mE,KACA5C,EAAgC4C,EAAhC5C,UAAWU,EAAqBkC,EAArBlC,iBACnB,GAAkB,WAAdV,GAA+C,WAArBU,EAC1B,OAAOqe,GAAWyqD,GAAa5mE,KAGnC,IAAM+mE,EAAYz7E,YAAA,GAAQ0U,GAI1B,MAHkB,YAAd5C,IAAyB2pE,EAAa7pE,QAAgC,QAAzB2pE,EAAgB,OAAbF,QAAa,IAAbA,OAAa,EAAbA,EAAezpE,eAAO,IAAA2pE,IAAI,IACrD,YAArB/oE,IAAgCipE,EAAanpE,eAA8C,QAAhCkpE,EAAgB,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAe/oE,sBAAc,IAAAkpE,IAAI,IAE5FC,EACJ,OAAsB,OAAlBJ,GAA+CltD,WAArBgtD,EAC1BE,EAEJvqE,KACT,MAAOmF,GAEL,OADA4D,QAAQC,MAAM7D,GACPnF,M+DyFuB4qE,GAEtBtpD,EAAQ8oD,GACRjB,GAAgB,IAEpB0B,aAAY,SAAC1wD,EAAY2wD,GACrB/hE,QAAQC,MAAM,mBAAoBmR,EAAY2wD,GAC9ChqD,KAAa9X,MAAM,CACf+X,QAASlB,KAAc,uBAAuB1F,MAGtD4wD,SAAU,WACN7tB,EAASr9B,KAAc,4BACvBspD,GAAgB,QAGzB,CAACH,IAAuB,IAGTgC,GC3MI,SAAH3mE,GAMJ,IALf2kE,EAAoB3kE,EAApB2kE,qBACAiC,EAAQ5mE,EAAR4mE,SACAC,EAAY7mE,EAAZ6mE,aACAC,EAAc9mE,EAAd8mE,eACAC,EAAU/mE,EAAV+mE,WAAUrZ,EAKN1wC,GAAQ2wC,uBAAW,SAAAl2C,GAAK,MAAK,CAC7Blc,OAAQkc,EAAMlY,KAAKhE,OACnB7O,KAAM+qB,EAAMlY,KAAKrD,UAAUxP,UAJ3BA,EAAIghE,EAAJhhE,KACA6O,EAAMmyD,EAANnyD,OAAM87C,EAK8BC,mBAAS,IAAGiH,EAAA5mD,YAAA0/C,EAAA,GAA7C2vB,EAAYzoB,EAAA,GAAE0oB,EAAe1oB,EAAA,GAE9B2oB,EAAWr5B,kBAAO,GAClBs5B,EAAct5B,iBAAO,GAmC3B,OAlCA2C,qBAAU,YAEU,QAAXj1C,GAA6B,QAAT7O,KACG,IAArBw6E,EAAS1pD,SACT2pD,EAAY3pD,SAAW,IACE,IAAzBmnD,IAEHwC,EAAY3pD,SAAW,EACvBypD,EAAgB,GAAD9uE,OAAI6gB,aAAsB,wBACzC6tD,IAEAlB,KAAQC,KAAK,CACTvK,OAAQ,CACJwK,SAAU,CACN,2BACA,oBACA,kBACA,yBAEJC,KAAM,CAAC,uBAEX3tD,OAAQ,WACJ+uD,EAAS1pD,SAAU,EACnBopD,KAEJF,SAAU,WACNQ,EAAS1pD,SAAU,EACnBupD,KAEJP,aAAcM,OAGvB,CAACvrE,EAAQ7O,EAAMi4E,EAAsBiC,EAAUC,EAAcC,EAAgBC,IAEzE,CACHC,gBDuJAI,CAAW,CACXzC,uBACAkC,aAAc,WAAO,IAADQ,EAChBvC,GAAgB,GAChB,IAAMjmD,EAA2B,QAAxBwoD,EAAG16B,EAAcnvB,eAAO,IAAA6pD,OAAA,EAArBA,EAAuBrhD,WAAW,MAC1CnH,IACAA,EAAIsM,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCtM,EAAIs8B,sBAAwB,OAC5B56B,GAAY1B,KAGpB+nD,SAAU,WACN9B,GAAgB,IAEpBiC,WAAY,WACRluB,EAASr9B,KAAc,4BACvBspD,GAAgB,IAEpBgC,eAAgB,SAAChxD,EAAY2wD,GACzB/hE,QAAQC,MAAM,mBAAoBmR,EAAY2wD,GAC9ChqD,KAAa9X,MAAM,CACf+X,QAASlB,KAAc,uBAAuB1F,QAtBtDkxD,aAAYluB,GA2BgBxB,oBAAS,GAAMyB,GAAAphD,YAAAmhD,GAAA,GAAxCioB,GAAShoB,GAAA,GAAEuuB,GAAUvuB,GAAA,GAE5BvI,qBAAU,WACN,IAAM+2B,EAAoBviE,SAAS9b,KAAK44E,UAEpC4C,EAAU6C,EAAkB7E,IAAI,wBAC/B6E,EAAkBxhE,OAAO,0BAC/B,CAAC2+D,IAEJ,IAAM8C,GAAkBh0B,uBAAY,SAACob,GAA0C,IAAxB6Y,EAAU5lE,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,IAAAA,UAAA,GACzD4lE,IAAezpD,GAEnBknD,GAAmB,SAAA30E,GAAG,MAAsB,mBAAXq+D,EAAuBA,GAAUr+D,OACnE,CAACytB,IAEE0pD,GAAoB75B,kBAAO,GAC3B85B,GAAe3iE,SAASu+C,eAAe,qBAC7C/S,qBAAU,WACFm3B,IAAgBltD,IAA0C,IAA9BitD,GAAkBlqD,UAAgD,IAA3BoqD,SACnEF,GAAkBlqD,SAAU,EAE5BoqD,KAAY,CACRC,IAAK,kGACLC,aAAc,CACVF,OACAA,OACAA,KAA2B,CACvBG,YAAa,SACbC,YAAY,IACbC,SAASN,GAAc,CACtBO,UAAWztD,EAAS,kCACpB0tD,UAAW1tD,EAAS,qCACpB2tD,gBAAiB3tD,EAAS,2CAC1B4tD,iBAAiB,EACjBC,WAAW,EACXC,aAAc9tD,EAAS,wCACvB+tD,mBAAoB/tD,EAAS,8CAC7BguD,yBAA0BhuD,EAAS,2CACnCiuD,4BAA6BjuD,EAAS,kDACtCkuD,kBAAmBluD,EAAS,uCAC5BmuD,kBAAmBnuD,EAAS,uCAC5BouD,gBAAiBpuD,EAAS,yCAC1BquD,mBAAoBruD,EAAS,2CAGrCsuD,WAAU,SAACC,GAOP,OALIA,EAAMC,WAAaD,EAAME,UACzBtB,KAAwB,CACpBuB,QAASH,EAAME,WAGhBF,GAGXI,iBAAkB,EAElBC,wBAAyB,CAAC,qBAE1BC,yBAA0B,GAC1BC,yBAA0B,OAGnC,CAAC9uD,EAAUktD,KAEd,IAAM3E,GAAaxvB,uBAAY,SAC3Bw1B,GAGE,IAFFvB,EAAU5lE,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,IAAAA,UAAA,GACV2nE,EAA8B3nE,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,QAAGC,EAEjC,IAAI2lE,GAAezpD,GAAgBwrD,EAAnC,CAEK,OAALR,QAAK,IAALA,KAAOt5D,iBACP,IACI,IAAMiM,EAAW6tD,GAEXpkE,OAAOqkE,OAAOhvD,EAAS,0BACvBwC,EAAUD,GAAQvB,WAAWwB,QAEnC,GAAItB,EAAU,CAAC,IAAD+tD,EAAAC,EAINjuD,GAAWC,GAFLC,EAAW+tD,EAAjBpqE,KACA2J,EAASygE,EAATzgE,UAGAA,GACAuT,KAAalN,KAAK,CACdmN,QAASjC,EAAS,kCAClBkC,YAAalC,EAAS,wCAI9BwC,EAAQrB,GACRypD,IAAoB,SAAAv2C,GAAG,OAAIA,EAAM,KACb,QAApB46C,EAAAvE,EAAa3nD,eAAO,IAAAksD,GAApBA,EAAsBnM,cAAc3hD,GAEpC7K,MAEN,MAAOjQ,GACL4D,QAAQC,MAAM7D,GACd2b,KAAa9X,MAAM,CACf+X,QAASjC,EAAS,8BAClBkC,YAAalC,EAAS,wCAG/B,CAACuD,EAAavD,IAEXmvD,GAAYp2B,uBAAY,SAACw1B,GAAgE,IAAxBvB,EAAU5lE,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,IAAAA,UAAA,GAC7E,IAAI4lE,GAAezpD,EAAnB,CAEK,OAALgrD,QAAK,IAALA,KAAOt5D,iBACP,IACI,IAAMiM,EAAWvW,OAAOqkE,OAAOhvD,EAAS,0BAClCwC,EAAUD,GAAQvB,WAAWwB,QAEnC,GAAItB,EAAU,CAAC,IAADkuD,EAAAC,EAINpuD,GAAWC,EAAUqB,GAAQvB,WAAWlc,MAFlCqc,EAAWkuD,EAAjBvqE,KACA2J,EAAS4gE,EAAT5gE,UAGAA,GACAuT,KAAalN,KAAK,CACdmN,QAASjC,EAAS,kCAClBkC,YAAalC,EAAS,wCAI9BwC,EAAQrB,GACRypD,IAAoB,SAAAv2C,GAAG,OAAIA,EAAM,KACb,QAApB+6C,EAAA1E,EAAa3nD,eAAO,IAAAqsD,GAApBA,EAAsBtM,cAAc3hD,GAEpC7K,MAEN,MAAOjQ,GACL4D,QAAQC,MAAM7D,GACd2b,KAAa9X,MAAM,CACf+X,QAASjC,EAAS,8BAClBkC,YAAalC,EAAS,wCAG/B,CAACuD,EAAavD,IAEXsvD,GAAav2B,uBAAY,SAC3Bw1B,GAUE,IAADgB,EATDvC,EAAU5lE,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,IAAAA,UAAA,GACVqD,EAAQrD,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,IAAAA,UAAA,GACRooE,EAG0DpoE,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAG,SAAAtC,GAAI,MAAK,CAClE2J,WAAW,EACXC,OAAQ5G,GAAiBhD,KAG7B,IAAIkoE,GAAezpD,GAAgB9Y,EAMnC,GAJK,OAAL8jE,QAAK,IAALA,KAAOt5D,iBACY,YAAfooC,IAAyC,IAAb5yC,GAC5BE,OAAO+3C,MAAM1iC,EAAS,0CAEP,WAAfq9B,IAA+C,QAAxBkyB,EAAI7E,EAAa3nD,eAAO,IAAAwsD,OAAA,EAApBA,EAAsBrvD,aACjDvV,OAAO+3C,MAAM1iC,EAAS,4CAI1B,IACI,IAAMkB,EAAWqB,GAAQvB,WAAWlc,KAAK2qE,EAIrCD,EAAUtuD,EAAUixB,EAAiBpvB,SAFrCtU,EAASghE,EAAThhE,UACQihE,EAAcD,EAAtB/gE,OASJ,GANID,GACAuT,KAAalN,KAAK,CACdmN,QAASjC,EAAS,kCAClBkC,YAAalC,EAAS,wCAG1BvV,EAAU,CACV,IAAMJ,EAAO,IAAIi7D,KAAK,CAAC,GAAD5nE,OAAIuL,KAAK+a,UAAU0rD,KAAoB,CAAEjgF,KAAM,qBACrE2a,GACIL,GAAmBmX,EAAStyB,MAC5Byb,EACA,yBAGJM,OAAOqkE,OACHhvD,EAAS,yBAAyB,GAADtiB,OAC9BuL,KAAK+a,UAAU0rD,KAG5B,MAAOrpE,GACL4D,QAAQC,MAAM7D,GACd2b,KAAa9X,MAAM,CACf+X,QAASjC,EAAS,wBAClBkC,YAAalC,EAAS,iCAG/B,CAACuD,EAAavD,EAAUq9B,IAErBsyB,GAAqB52B,uBAAY,SAACw1B,GAAgE,IAADqB,EAAvB5C,EAAU5lE,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,IAAAA,UAAA,GAClF4lE,IAAezpD,IAEd,OAALgrD,QAAK,IAALA,KAAOt5D,iBACkB,QAAzB26D,EAAAjF,GAAkB5nD,eAAO,IAAA6sD,GAAzBA,EAA2BnlE,cAC5B,CAAC8Y,IAEEssD,GAAmBj8B,mBAAQ,WAC7B,MAAO,CACH81B,OAAQ,SAAC6E,GAAsC,OAAKhG,GAAWgG,GAAO,IACtE5E,MAAO,SAAC4E,GAAsC,OAAKY,GAAUZ,GAAO,IACpE9E,OAAQ,SAAC8E,GAAsC,OAAKe,GAAWf,GAAO,IACtE3E,KAAM,kBAAMmD,IAAgB,GAAM,IAClClD,SAAU,SAAC0E,GAAsC,OAAKoB,GAAmBpB,GAAO,OAErF,CAACoB,GAAoBL,GAAY/G,GAAY4G,GAAWpC,KAErD+C,GAAqB/2B,uBAAY,WACnC8zB,IAAW,GACXnqB,MAAM1iC,EAAS,sCAChB,CAACA,IAEE+vD,GAAmBh3B,uBAAY,WACjCwxB,GAAa,SAAAl2C,GAAG,OAAIA,EAAM,KAC1Bu2C,IAAoB,SAAAv2C,GAAG,OAAIA,EAAM,KACjCw4C,IAAW,KACZ,IAEGmD,GAAiEj3B,uBAAY,SAACnH,EAAGyL,GACnFutB,IAAoB,SAAAv2C,GAAG,OAAIA,EAAM,KACjCipB,EAAcD,KACf,IAEG4yB,GAAmBl3B,uBAAY,WACjC6xB,IAAoB,SAAAv2C,GAAG,OAAIA,EAAM,KACjCw4C,IAAW,KACZ,IAEG3sD,GAAYiqD,GAAqBx0B,EACvC,OACI9kD,cAACq/E,WAAO,CAACC,OAAQ3G,GAAoB4G,SAAUP,GAAiBh3D,SAC5Dc,eAAA,OAAK5K,GAAG,MAEJshE,OAAQ,aACRz3D,UAAS,YAAAlb,OAAcqiB,EAAaxC,UACpC/K,MAAKpiB,YAAA,CACD8yD,gBAAgB,QAADxlD,OAAU6gB,aAAsB,wFAC/CtgB,OAAQsZ,KAAmB,yBAA2B,SAClD,CACA,gBAAgB,GAAD7Z,OAAKpP,EAAkB,MACtC,eAAe,GAADoP,OAAKpP,EAAiB,QAE1CuqB,SAAA,CAEDqzD,IAAgBr7E,cAAA,QAAMi2D,IAAI,aAAar3D,KAAK,WAAWib,KAAMwhE,KAC9DvyD,eAAA,OACIf,UAAW,gBACXpG,MAAO,CACH0wC,gBAAgB,QAADxlD,OAAU6gB,aAAsB,4CACjD1F,SAAA,CAEDqH,IAAarvB,cAACg4E,GAAgB,CAACjwD,UAAU,cAAaC,SAClD3O,EAAM1D,OAAS,EACV3V,cAACk4E,GAAU,CAAAlwD,SACR3O,IAEwB,QADhB6/D,EACXhqD,EAAavC,sBAAc,IAAAusD,IAAI,KAGzCpwD,eAAA,OAAKf,UAAS,sBAAAlb,OAAwB4oE,GAAY,iBAAmB,iBAAkBztD,SAAA,CACnFc,eAACgvD,GAA8B,CAAC/vD,UAAU,oBAAmBC,SAAA,CACzDc,eAAA,OAAKf,UAAU,WAAUC,SAAA,CACrBhoB,cAAC4oB,KAAO,CAAC85B,QAAShwB,EAAc1yB,cAAA00D,WAAA,CAAA1sC,SAAE,sBAAkB,KAAKA,SACrDhoB,cAAA,UAAQ+nB,UAAU,+BAA+BM,QAASo2D,GAAWz2D,SAChEmH,EAAS,2BAGlBnvB,cAACkrE,KAAQ,CACLxoB,QAAS1iD,cAACorE,KAAI,CAAC/iD,QAAS,SAAA7S,GAAC,OAAIA,EAAE61D,SAAS3nD,mBAAkBsE,SACrD,CACG,CACInoB,MAAOsvB,EAAS,qCAChBwvD,eAAWnoE,GAEf,CACI3W,MAAOsvB,EAAS,iCAChBwvD,UAAW3hE,KAEjBzO,KAAI,SAAAugB,EAAuB3L,GAAW,IAA/Bw7D,EAAS7vD,EAAT6vD,UAAW9+E,EAAKivB,EAALjvB,MAChB,OAAOG,cAACorE,KAAKE,KAAI,CACbjjD,QAAS,kBAAMo2D,QAAWjoE,GAAW,GAAO,EAAMmoE,IAAW32D,SAE5DnoB,GAAK,GAAAgN,OAHgBsW,SAM1B6E,SAERhoB,cAACkzE,GAAsB,CAACnrD,UAAU,iCAAgCC,SAC9DhoB,cAACuwD,KAAgB,QAGzBvwD,cAAA,UACAA,cAAC4oB,KAAO,CACJ85B,QAAShwB,EACH5J,eAAA,OAAKf,UAAU,SAAQC,SAAA,CACrBhoB,cAAA,OAAAgoB,SAAK,sBACLc,eAAA,OAAAd,SAAA,CAAK,oBAAamH,EAAS,qCAE7B,KAAKnH,SAEXhoB,cAAA,UACI+nB,UAAU,+BACVM,QAASqvD,GAAW1vD,SAEnBmH,EAAS,2BAGlBnvB,cAACy3E,GAAY,CAACC,WAAYA,GAAYvoD,SAAUA,OAEpDnvB,cAACszE,GAAc,CAACnkD,SAAUA,IAC1BnvB,cAACw1E,GAAc,CAACnkB,IAAKyoB,GACjB14B,UAAWA,GACX2D,iBAAkBA,GAClB0wB,UAAWA,GACX3wB,eAAgBA,EAChB4wB,gBAAiBuJ,KAEpBxJ,IAAaz1E,cAAA,OAAKke,GAAG,sBAAsB6J,UAAU,wBAAuBC,SACzEc,eAAA,QAAAd,SAAA,CACKmH,EAAS,qCAAqCnvB,cAAA,SAC9CmvB,EAAS,sCAAsC,IAACnvB,cAACu2D,GAAoB,YAGlFv2D,cAAA,OAAK+nB,UAAU,wBAAuBC,SAClCc,eAACivD,GAA8B,CAAChwD,UAAU,oBAAmBC,SAAA,CACzDhoB,cAAC4oB,KAAO,CAACC,MAAOsG,EAAS,wBAAwBnH,SAC7ChoB,cAACu4E,GAAW,CAACxwD,UAAU,eAAeM,QAAS,WAG3C,GAFgBvO,OAAO2lE,QAAQtwD,EAAS,yBAE3B,CAAC,IAADuwD,EAAAC,EACiBjuD,GAAQvB,WAA1BwB,EAAOguD,EAAPhuD,QAAS1d,EAAI0rE,EAAJ1rE,KACX2rE,EAAcvvE,KACdwvE,EAA4C,QAAhB5rE,EAAKhE,OACjC2vE,EACA72D,GAAiB62D,EAAa,OAEpCjuD,EAAQkuD,GACR9F,IAAoB,SAAAv2C,GAAG,OAAIA,EAAM,KACb,QAApBk8C,EAAA7F,EAAa3nD,eAAO,IAAAwtD,GAApBA,EAAsBzN,cAAc4N,KAE1C73D,SACEhoB,cAAC8/E,KAAa,QAGtB9/E,cAAC4oB,KAAO,CAACC,MAAOC,eAAA,OAAKf,UAAU,SAAQC,SAAA,CAClCmH,EAAS,0BACTuD,EAAc5J,eAAA4rC,WAAA,CAAA1sC,SAAA,CAAEhoB,cAAA,SAAM,uBAAkB,QACtCgoB,SACHhoB,cAACq4E,GAAc,CAACtwD,UAAU,kBAAkBM,QAAS,kBAAM6zD,MAAkBl0D,SACzEhoB,cAAC+/E,KAAc,QAGvB//E,cAAA,UAAQke,GAAG,gBAAsCmzC,IAAKhQ,EAAel0C,MAAOkmB,GAAajmB,OAAQgmB,IAAjEqmD,EAAY,IAE5Cz5E,cAAA,OAAKke,GAAG,sBAAsB8hE,cAAe,SAAAxqE,GAAC,OAAIA,EAAE4O,oBAGpDpkB,cAAA,UAAQke,GAAG,cAA8BmzC,IAAK7P,EAAgBr0C,MAAOkmB,GAAajmB,OAAQgmB,IAA5DqmD,GAC9Bz5E,cAAA,UAAQke,GAAG,aAAamzC,IAAK1P,EAAex0C,MAAOkmB,GAAajmB,OAAQ,MACxEpN,cAAA,UAAQke,GAAG,iBAAiBmzC,IAAKnP,EAAmB/0C,MAAOkmB,GAAajmB,OAAQ,MAChFpN,cAAA,UAAQke,GAAG,sBAAsBmzC,IAAKvP,EAAwB30C,MAAOkmB,GAAajmB,OAAQ,MAC1FpN,cAAA,UAAQke,GAAG,uBAAuBmzC,IAAKxP,EAAyB10C,MAAOkmB,GAAajmB,OAAQ,MAC5FpN,cAAA,UAAQke,GAAG,aAAamzC,IAAKlP,EAAeh1C,MAAOkmB,GAAajmB,OAAQ,OACxEpN,cAAA,UAAQke,GAAG,eAAemzC,IAAK3P,EAAiBv0C,MAAOkmB,GAAajmB,OAAQ,OAC5EpN,cAAA,UAAQke,GAAG,aAAamzC,IAAKrP,EAAe70C,MAAOkmB,GAAajmB,OAAQgmB,KACxEpzB,cAAA,UAAQke,GAAG,cAAcmzC,IAAKtP,EAAgB50C,MAAOkmB,GAAajmB,OAAQgmB,KAC1EpzB,cAAA,UAAQke,GAAG,iBAAiBmzC,IAAKzP,EAAmBz0C,MAAOkmB,GAAajmB,OAAQgmB,KAChFpzB,cAAA,UAAQke,GAAG,gBAAgBmzC,IAAK5P,EAAkBt0C,MAAOkmB,GAAajmB,OAAQgmB,KAC9EpzB,cAAA,UAAQke,GAAG,gBAAgBmzC,IAAKpP,EAAkB90C,MAAOkmB,GAAajmB,OAAQgmB,KAC9EpzB,cAAA,UAAQke,GAAG,eAAemzC,IAAKjP,GAAiBj1C,MAAOkmB,GAAajmB,OAAQgmB,KAC5EpzB,cAAA,UAAQ+nB,UAAU,cAAcspC,IAAK/P,IACrCthD,cAAA,UAAQ+nB,UAAU,cAAcspC,IAAK9P,aAIlC,IAAdlyB,IAAuBrvB,cAACqwE,GAAc,CACnChf,IAAKwoB,EACLhqC,cAAeyR,EAAiBpvB,QAChC4d,iBAAkByR,EAAoBrvB,QACtCg5B,eAAgBg0B,GAChB5zB,aAAc6zB,GACd3zB,UAAW4zB,QAInBp/E,cAACqzE,KAAK,CACFlmE,MAAM,QACN8yE,cAAc,wBACdprB,QAAS8kB,EACTuG,aAAa,EACbr8D,SAAU,kBAAM+1D,GAAmB,IACnChlB,OAAQ,KAAK5sC,SAEbhoB,cAAA,UACIke,GAAG,kBACHmzC,IAAKhP,GACLl1C,MAAOkmB,GACPjmB,OAAQgmB,IAJCqmD,EAAY,MAO7B3wD,eAACmvD,GAAU,CAAClwD,UAAU,QAAOC,SAAA,CAAC,mBACVhoB,cAAA,OAAK83B,IAAI,kCAAkCw8B,IAAI,oBEloBpE6rB,GAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,8BAAqBC,MAAK,SAAA5rE,GAAkD,IAA/C6rE,EAAM7rE,EAAN6rE,OAAQC,EAAM9rE,EAAN8rE,OAAQC,EAAM/rE,EAAN+rE,OAAQC,EAAMhsE,EAANgsE,OAAQC,EAAOjsE,EAAPisE,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OACL7gF,cAACqqB,IAAMy2D,WAAU,CAAA94D,SACbhoB,cAACi5E,GAAG,MAERv/D,SAASu+C,eAAe,SAM5BkoB,O","file":"static/js/main.1e2dd3fc.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary: {\r\n    fit: string,\r\n    full: string,\r\n}) => [\r\n    {\r\n        value: 'fit' as const,\r\n        label: dictionary.fit,\r\n    },\r\n    {\r\n        value: 'full' as const,\r\n        label: dictionary.full,\r\n    },\r\n];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    drawCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    topToPendulumStructure: 210,\r\n    pendulumStructureHeight: 912,\r\n    leftToPendulumStructure: 52,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.057,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    const artSource = normalizedBoundless || body < 100\r\n        ? isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard'\r\n        : isPendulum\r\n            ? text < 100\r\n                ? 'extendedPendulum'\r\n                : pendulum < 100\r\n                    ? 'truePendulum'\r\n                    : 'pendulum'\r\n            : text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n\r\n    return CardArtCanvasCoordinateMap[artSource];\r\n};\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n    },\r\n];\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n    },\r\n];\r\n\r\nexport const StickerList = [\r\n    'no-sticker',\r\n    'gold',\r\n    'silver',\r\n    'beta',\r\n    'holo5',\r\n    'holo4',\r\n    'holo3',\r\n    'holo2',\r\n    'holo1',\r\n    'limited',\r\n    'unlimited',\r\n];","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to ready. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 919.8, trueEdge: 64.5 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n};\r\n\r\nexport const PendulumEffectCoordinate: CoordinateData[] = [\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n];\r\n\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\r\n    tcg: {\r\n        small: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        small: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 255,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n};\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const getFoilList = (dictionary: FoilDictionary) => [\r\n    {\r\n        name: 'normal' as const,\r\n        label: dictionary.normal,\r\n        color: '#747b95',\r\n    },\r\n    {\r\n        name: 'gold' as const,\r\n        label: dictionary.gold,\r\n        color: '#cfa65f',\r\n    },\r\n    {\r\n        name: 'platinum' as const,\r\n        label: dictionary.platinum,\r\n        color: '#b1b1b1',\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    bulletSymbolWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    ordinalFontOffsetY?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 0.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport const DefaultFontDeviation: Required<FontDeviation> = {\r\n    yOffset: 0,\r\n    yRatio: 1,\r\n};\r\nexport type FontDeviation = {\r\n    yRatio?: number,\r\n    yOffset?: number,\r\n};\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    letterDeviationMap?: Record<string, FontDeviation>,\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    headTextGapRatio: 0,\r\n};\r\nconst DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"stone-serif-regular\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nconst DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.5, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\r\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const TCGVanillaTypeStatFontList = [\r\n    { bulletSymbolWidth: 23, fontSize: 21.8, lineHeight: 24.9, lineCount: 6 },\r\n    { bulletSymbolWidth: 23, fontSize: 17.28, lineHeight: 21.5, lineCount: 7 },\r\n    { bulletSymbolWidth: 23, fontSize: 16.28, lineHeight: 18.8, lineCount: 8 },\r\n    { bulletSymbolWidth: 19, fontSize: 14.46, lineHeight: 16.7, lineCount: 9 },\r\n    { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10 },\r\n];\r\n\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    tcg: {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n        ],\r\n    },\r\n    ocg: {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            {\r\n                bulletSymbolWidth: 16,\r\n                fontSize: 22.05,\r\n                lineHeight: 25.2,\r\n                headTextFontRatio: 0.4,\r\n                lineCount: 5,\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 800,\r\n        '2': 850,\r\n        '3': 900,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps',\r\n            font: 'MatrixRegularSmallCaps',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.55,\r\n            fontList: [{\r\n                bulletSymbolWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                i: { yOffset: 1, yRatio: 1.03 },\r\n                ì: { yOffset: 1, yRatio: 1.03 },\r\n                í: { yOffset: 1, yRatio: 1.03 },\r\n                î: { yOffset: 1, yRatio: 1.03 },\r\n                ï: { yOffset: 1, yRatio: 1.03 },\r\n                ĩ: { yOffset: 1, yRatio: 1.03 },\r\n                ī: { yOffset: 1, yRatio: 1.03 },\r\n                ĭ: { yOffset: 1, yRatio: 1.03 },\r\n                į: { yOffset: 1, yRatio: 1.03 },\r\n                ǐ: { yOffset: 1, yRatio: 1.03 },\r\n                ȉ: { yOffset: 1, yRatio: 1.03 },\r\n                ȋ: { yOffset: 1, yRatio: 1.03 },\r\n                ɨ: { yOffset: 1, yRatio: 1.03 },\r\n                ɩ: { yOffset: 1, yRatio: 1.03 },\r\n                ᵹ: { yOffset: 1, yRatio: 1.03 },\r\n                ᵼ: { yOffset: 1, yRatio: 1.03 },\r\n                ᶖ: { yOffset: 1, yRatio: 1.03 },\r\n                ḭ: { yOffset: 1, yRatio: 1.03 },\r\n                ḯ: { yOffset: 1, yRatio: 1.03 },\r\n                ỉ: { yOffset: 1, yRatio: 1.03 },\r\n                ị: { yOffset: 1, yRatio: 1.03 },\r\n                I: { yOffset: 1, yRatio: 1.022 },\r\n                Ì: { yOffset: 1, yRatio: 1.022 },\r\n                Í: { yOffset: 1, yRatio: 1.022 },\r\n                Î: { yOffset: 1, yRatio: 1.022 },\r\n                Ï: { yOffset: 1, yRatio: 1.022 },\r\n                Ĩ: { yOffset: 1, yRatio: 1.022 },\r\n                Ī: { yOffset: 1, yRatio: 1.022 },\r\n                Ĭ: { yOffset: 1, yRatio: 1.022 },\r\n                Į: { yOffset: 1, yRatio: 1.022 },\r\n                İ: { yOffset: 1, yRatio: 1.022 },\r\n                Ɩ: { yOffset: 1, yRatio: 1.022 },\r\n                Ɨ: { yOffset: 1, yRatio: 1.022 },\r\n                Ǐ: { yOffset: 1, yRatio: 1.022 },\r\n                Ȉ: { yOffset: 1, yRatio: 1.022 },\r\n                Ȋ: { yOffset: 1, yRatio: 1.022 },\r\n                Ḭ: { yOffset: 1, yRatio: 1.022 },\r\n                Ḯ: { yOffset: 1, yRatio: 1.022 },\r\n                Ỉ: { yOffset: 1, yRatio: 1.022 },\r\n                Ị: { yOffset: 1, yRatio: 1.022 },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.825,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletSymbolWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            headTextBold: true,\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            fontStyle: 'ocg',\r\n            fontList: [{\r\n                bulletSymbolWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletSymbolWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21,\r\n            lineHeight: 21,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 48%',\r\n            'rgba(239,239,239,1) 52%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);","export const arrowPositionList = [\r\n    { top: 175, left: 55, width: 100, height: 100 },\r\n    { top: 165, left: 323, width: 170, height: 80 },\r\n    { top: 175, left: 655, width: 100, height: 100 },\r\n    { top: 442, left: 45, width: 70, height: 170 },\r\n    { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n    { top: 442, left: 700, width: 70, height: 170 },\r\n    { top: 775, left: 55, width: 100, height: 100 },\r\n    { top: 810, left: 323, width: 170, height: 80 },\r\n    { top: 775, left: 655, width: 100, height: 100 },\r\n];","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?\\\\([\\\\w\\\\W]+\\\\)${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\nexport const TCG_SYMBOL_JOINLIST = '#★@∞';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil } from './foil-finish';\r\nimport { CondenseType } from './font-data-effect';\r\nimport { NO_ICON } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\n\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'fusion',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    } as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    } as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18111996',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'effect',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: 'no-sticker',\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** Or copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './foil-finish';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './regex';","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'link' && checkMonster(card);\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil].value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { Card, getDefaultCardOpacity, getDefaultTextStyle, getEmptyCard } from '../model';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    frame: 'fr',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        font: 'nsft',\r\n        fillStyle: 'nsfs',\r\n        headTextFillStyle: 'nshfs',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetY: 'nssoy',\r\n        shadowOffsetX: 'nssox',\r\n        shadowBlur: 'nssb',\r\n        hasShadow: 'nshs',\r\n        lineColor: 'nslc',\r\n        lineWidth: 'nslw',\r\n        lineOffsetY: 'nsloy',\r\n        lineOffsetX: 'nslox',\r\n        hasOutline: 'nshl',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasGradient: 'nshg',\r\n        preset: 'nspr',\r\n        pattern: 'nspt',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const fullCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                fullCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                fullCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return fullCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const fullCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                fullCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                fullCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return fullCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let fullCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        fullCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        fullCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(fullCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): Card => {\r\n    const migratedCard = {\r\n        ...baseCard,\r\n        ...clone(card)\r\n    };\r\n\r\n    if (migratedCard.effectStyle == null) {\r\n        migratedCard.effectStyle = {\r\n            ...getEmptyCard().effectStyle\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    return migratedCard;\r\n};","export const normalizedCardName = (name: string) => {\r\n    try {\r\n        return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizedCardEffect = (effect: string) => {\r\n    try {\r\n        return effect.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n\r\n    link.download = name;\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n};","import {\r\n    Card,\r\n    CompatibleCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { normalizedCardEffect, normalizedCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: CompatibleCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizedCardName(name);\r\n    const normalizedEffect = normalizedCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizedCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: 'Normal',\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: CompatibleCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter<string>(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontGetter } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-compatible';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    width: 24px;\r\n    height: 24px;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    Icon: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n        >\r\n            <Icon {...iconProps} />{children}\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};","import { Card, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: Card, targetFormat: string): Card => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n    };\r\n};","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = window.localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            window.localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Card, CompatibleCard, getDefaultCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: Card,\r\n    isPartial: boolean,\r\n} => {\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: decodedCard };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any>\r\n            : cardData;\r\n\r\n        if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard, baseCard);\r\n        } else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n    \r\n            decodedCard = migrateCardData(fullCard, baseCard);\r\n        } else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as CompatibleCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: decodedCard,\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): Card => {\r\n    try {\r\n        const localCardVersion = window.localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = window.localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card } = decodeCard(urlCardData);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport type CardStore = {\r\n    card: Card,\r\n    setCard: (cardTransform: Card | ((currentCard: Card) => Card)) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultCard(),\r\n        setCard: cardTransform => {\r\n            if (typeof cardTransform === 'function') set(cur => ({ card: cardTransform(cur.card) }));\r\n            else set({ card: cardTransform });\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    allowHotkey: boolean,\r\n    reduceMotionColor: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(window.localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                window.localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth,\r\n    height = CanvasHeight,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType);\r\n                    }\r\n                } else {\r\n                    await caller(finishType);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x = DEFAULT_SHADOW_OFFSET_X,\r\n    y = DEFAULT_SHADOW_OFFSET_Y,\r\n    blur = DEFAULT_SHADOW_BLUR,\r\n    color = DEFAULT_TEXT_COLOR,\r\n    shadowColor = DEFAULT_SHADOW_COLOR,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n} & CanvasTextStyle) => {\r\n    ctx.shadowOffsetX = x;\r\n    ctx.shadowOffsetY = y;\r\n    ctx.shadowBlur = blur;\r\n    ctx.shadowColor = shadowColor;\r\n    ctx.fillStyle = color;\r\n\r\n    return () => {\r\n        ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { hexToRGBA } from 'src/util';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** @todo Do manual caching really needed? Need proper benchmark for this. */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY);\r\n            resolve(true);\r\n        } else {\r\n            if (imageCacheMap[source]?.error) {\r\n                resolve(true);\r\n                return;\r\n            }\r\n            const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n            const image = imageCached\r\n                ? imageCacheMap[source].image\r\n                : new Image();\r\n\r\n            if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n            image.addEventListener(\r\n                'load',\r\n                () => {\r\n                    const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                    const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n                    ctx.drawImage(image, normalizedX, normalizedY);\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                    resolve(true);\r\n                },\r\n                { once: true },\r\n            );\r\n            image.addEventListener(\r\n                'error',\r\n                () => {\r\n                    imageCacheMap[source].error = true;\r\n                    resolve(false);\r\n                },\r\n                { once: true },\r\n            );\r\n\r\n            if (!imageCached) imageCacheMap[source] = {\r\n                image: image,\r\n                ready: false,\r\n                error: false,\r\n                cache: true,\r\n            };\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n            resolve(true);\r\n        } else {\r\n            if (imageCacheMap[source]?.error) {\r\n                resolve(true);\r\n                return;\r\n            }\r\n            const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n            const image = imageCached\r\n                ? imageCacheMap[source].image\r\n                : new Image();\r\n\r\n            if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n            image.addEventListener(\r\n                'load',\r\n                () => {\r\n                    const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                    const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n                    const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n                    const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n        \r\n                    ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                    resolve(true);\r\n                },\r\n                { once: true },\r\n            );\r\n            image.addEventListener(\r\n                'error',\r\n                () => {\r\n                    imageCacheMap[source].error = true;\r\n                    resolve(false);\r\n                },\r\n                { once: true },\r\n            );\r\n\r\n            if (!imageCached) imageCacheMap[source] = {\r\n                image: image,\r\n                ready: false,\r\n                error: false,\r\n                cache: true,\r\n            };\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    sx, sy,\r\n    dw, dh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n        dw, dh,\r\n    );\r\n};\r\n\r\nexport const drawWithColor = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    color: string,\r\n    sw: number, sh: number,\r\n    dx: number, dy: number,\r\n    cloneCanvasStyle?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n    await drawAsset(clonedCtx, source, 0, 0);\r\n\r\n    const rgbaColor = hexToRGBA(color);\r\n    const imageRasterData = clonedCtx.getImageData(0, 0, sw, sh).data;\r\n\r\n    /** In some rare case, this image need shadow (for example \"LINK\" text).\r\n     * So we apply shadow into the clone node, then DRAW THE IMAGE AGAIN. This time image data will be a combined data from both the original image and the newly applied shadow.\r\n     */\r\n    const resetStyle = setTextStyle({ ctx: clonedCtx, ...cloneCanvasStyle });\r\n    await drawAsset(clonedCtx, source, 0, 0);\r\n    const imageDataWithShadow = clonedCtx.getImageData(0, 0, sw, sh);\r\n    const imageRasterDataWithShadow = imageDataWithShadow.data;\r\n    resetStyle();\r\n\r\n    /** Because the new image data will replace the old one (no blending mode), it will erase the pixel of the current canvas underneath. To solve this we will draw the current canvas into the clone canvas first, before putting new image into it. */\r\n    clonedCtx.clearRect(0, 0, sw, sh);\r\n    clonedCtx.drawImage(canvas, dx, dy, sw, sh, 0, 0, sw, sh);\r\n\r\n    const combinedLayerData = clonedCtx.getImageData(0, 0, sw, sh);\r\n    const combinedLayerRasterData = combinedLayerData.data;\r\n\r\n    for (let pixelCnt = 0; pixelCnt < combinedLayerRasterData.length; pixelCnt += 4) {\r\n        /** If raster data at this pixel have the same coordinate with raster data from the original image, draw it with manipulated color. */\r\n        if (imageRasterData[pixelCnt + 3] > 0) {\r\n            /** Change ratio based on the original color value, compare to pitch black #000000 */\r\n            combinedLayerRasterData[pixelCnt + 0] = rgbaColor[0] * (1 - imageRasterData[pixelCnt + 0] / 255);\r\n            combinedLayerRasterData[pixelCnt + 1] = rgbaColor[1] * (1 - imageRasterData[pixelCnt + 1] / 255);\r\n            combinedLayerRasterData[pixelCnt + 2] = rgbaColor[2] * (1 - imageRasterData[pixelCnt + 2] / 255);\r\n            combinedLayerRasterData[pixelCnt + 3] = 255;\r\n        }\r\n        /** If raster data at this pixel have the same coordinate with raster data from the image with shadow, draw the shadow. */\r\n        else if (imageRasterDataWithShadow[pixelCnt + 3] > 0) {\r\n            const destinationAlpha = imageRasterDataWithShadow[pixelCnt + 3] / 255;\r\n\r\n            combinedLayerRasterData[pixelCnt + 0] = (1 - destinationAlpha) * combinedLayerRasterData[pixelCnt + 0]\r\n                + destinationAlpha * imageRasterDataWithShadow[pixelCnt + 0];\r\n            combinedLayerRasterData[pixelCnt + 1] = (1 - destinationAlpha) * combinedLayerRasterData[pixelCnt + 1]\r\n                + destinationAlpha * imageRasterDataWithShadow[pixelCnt + 1];\r\n            combinedLayerRasterData[pixelCnt + 2] = (1 - destinationAlpha) * combinedLayerRasterData[pixelCnt + 2]\r\n                + destinationAlpha * imageRasterDataWithShadow[pixelCnt + 2];\r\n            combinedLayerRasterData[pixelCnt + 3] = 255;\r\n        }\r\n        /** Otherwise all other pixel belong to the background canvas, and is untouched. */\r\n    }\r\n\r\n    ctx.putImageData(combinedLayerData, dx, dy);\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    DefaultFontDeviation,\r\n    FontDeviation,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n            ? 0.046875\r\n            : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation = {},\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviation,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        yOffset: deviationYOffset = DefaultFontDeviation.yOffset,\r\n        yRatio = DefaultFontDeviation.yRatio,\r\n    } = xRatio < 1 ? {} : deviation;\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    ctx.scale(1, yRatio);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + deviationYOffset) / yRatio,\r\n    });\r\n    ctx.scale(1, 1 / yRatio);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n) => {\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = DefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = DefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius - 1, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n            + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    FontData,\r\n    BULLET_LETTER,\r\n    TCGSymbolLetterRegex,\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    FragmentSplitRegex,\r\n    WholeWordRegex,\r\n    DefaultFontSizeData,\r\n    ST_ICON_SYMBOL,\r\n    TextData,\r\n    NoSpaceRegex,\r\n    LETTER_GAP_RATIO,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    SquareBracketLetterRegex,\r\n    CapitalLetterRegex,\r\n    NumberRegex,\r\n    OCGNoOverheadGapRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    RUBY_REGEX,\r\n    DefaultFontData,\r\n    RUBY_BONUS_RATIO,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NonCompressableRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing = DefaultFontSizeData.letterSpacing,\r\n    format,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN` and `NB_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    debug?: boolean,\r\n}) => {\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const {\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio = DefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = DefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = DefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = DefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(ctx, fragmentEdge, trueBaseline, bulletSymbolWidth, getBulletSpacing(format));\r\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg' ? 2 : 2), /** 2 look a bit better than 1 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= -2 && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[currentLetter],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap[letter],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    OCG_RUBY_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    ocgKeywordDataMap,\r\n    WHOLE_WORD_SOURCE,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    tcgToOCGLetterMap,\r\n    ocgToTCGLetterMap,\r\n    UNCOMPRESSED_SOURCE,\r\n    ocgNumberCircleMap,\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    FLAVOR_CONDITION_SOURCE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END\r\n} from 'src/model';\r\n\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectText = effect;\r\n\r\n    let fullLineList = [];\r\n    const wholeLineRegex = new RegExp(`^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`);\r\n    let materialReplacement;\r\n    let material;\r\n    do {\r\n        materialReplacement = wholeLineRegex.exec(effectText)?.[1];\r\n        material = wholeLineRegex.exec(effectText)?.[2];\r\n\r\n        if (material && materialReplacement) {\r\n            fullLineList.push(material);\r\n            effectText = effectText.replace(materialReplacement, '');\r\n        }\r\n    } while (materialReplacement && material);\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText;\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    return {\r\n        fullLineList,\r\n        effectText,\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is need or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas } from '../canvas-util';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    ctx.fillStyle = lightFooter ? '#ffffff' : '#000000';\r\n    ctx.shadowColor = hasShadow\r\n        ? lightFooter ? '#000000' : '#ffffff'\r\n        : '#000000';\r\n    ctx.shadowOffsetY = 0;\r\n    ctx.shadowOffsetX = 0;\r\n    ctx.shadowBlur = hasShadow ? 3 : 0;\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'];\r\n    const fontData = CreatorFontData[format];\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CanvasConst,\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    TCGVanillaTypeStatFontList,\r\n    DefaultTCGNormalFontData,\r\n} from '../../model';\r\nimport { condense, createFontGetter } from '../../util';\r\nimport { setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicaable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    isNormal,\r\n    statInEffect,\r\n    typeInEffect,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    isNormal: boolean,\r\n}) => {\r\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (statInEffect && typeInEffect && isNormal && format === 'tcg') {\r\n        fontData = DefaultTCGNormalFontData;\r\n        fontData.fontList = TCGVanillaTypeStatFontList;\r\n    }\r\n\r\n    return {\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    fontData = EffectFontData.tcg,\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    fontData?: FontData,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    let effectSizeLevel = 0;\r\n    if (!ctx || !content) return effectSizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const tolerancePerSentence: Record<string, number> = format === 'tcg'\r\n        ? CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n        : {\r\n            '1': 800,\r\n            '2': 800,\r\n            '3': 800,\r\n        };\r\n    const {\r\n        effectText,\r\n        effectFlavorCondition,\r\n        fullLineList,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n    const paragraphList = effectText ? effectText.split('\\n') : [];\r\n\r\n    const { font, fontList } = fontData;\r\n    const yRatio = 1;\r\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\r\n    while (effectSizeLevel < fontList.length) {\r\n        const fontSizeData = fontList[effectSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n        } = sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1];\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 : trueWidthStart;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setStyle(isNormal && format === 'tcg' ? 'italic' : '')\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(font)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData,\r\n            fontLevel: effectSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = condense(\r\n            median => {\r\n                const { currentLineList, currentLineCount } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList,\r\n                    additionalLineCount,\r\n                    format, textData,\r\n                    width,\r\n                });\r\n                lineListWithRatio = currentLineList;\r\n\r\n                if (currentLineCount > lineCount) return false;\r\n                return true;\r\n            },\r\n            200,\r\n        );\r\n\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle });\r\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            (effectiveMedian < tolerantValue)\r\n            && (effectSizeLevel < fontList.length - 1)\r\n        ) {\r\n            effectSizeLevel += 1;\r\n        } else {\r\n            ctx.clearRect(0, 0, CanvasWidth, 1111);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            /** Naturally, non-brekable lines have their own condense ratio. */\r\n            const fullLineListWithRatio = fullLineList.map(line => {\r\n                return {\r\n                    line,\r\n                    isLast: true,\r\n                    effectiveMedian: condense(\r\n                        median => {\r\n                            const { currentLineCount } = createLineList({\r\n                                ctx,\r\n                                median,\r\n                                paragraphList: [line],\r\n                                format, textData,\r\n                                width,\r\n                            });\r\n    \r\n                            if (currentLineCount > 1) return false;\r\n                            return true;\r\n                        },\r\n                    )\r\n                };\r\n            });\r\n\r\n            /** Draw each line based on their token list and corresponding ratio. */\r\n            [\r\n                ...fullLineListWithRatio,\r\n                ...lineListWithRatio,\r\n            ].forEach(({\r\n                line,\r\n                isLast,\r\n                effectiveMedian,\r\n            }) => {\r\n                const xRatio = effectiveMedian / 1000;\r\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width });\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    spaceWidth,\r\n                    textData,\r\n                    format,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            });\r\n\r\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\r\n            if (effectFlavorCondition.length > 0) {\r\n                const internalEffectiveMedian = condense(\r\n                    median => {\r\n                        const { currentLineCount } = createLineList({\r\n                            ctx,\r\n                            median,\r\n                            paragraphList: [effectFlavorCondition],\r\n                            format, textData,\r\n                            width,\r\n                        });\r\n\r\n                        if (currentLineCount > 1) return false;\r\n                        return true;\r\n                    },\r\n                );\r\n                const xRatio = internalEffectiveMedian / 1000;\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                ctx.font = currentFont.setStyle('').getFont();\r\n                let tokenList = tokenizeText(effectFlavorCondition);\r\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n                 * \r\n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n                 * \r\n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n                 * */\r\n                tokenList = tokenList[0] === '\\n'\r\n                    ? tokenList.slice(1)\r\n                    : tokenList;\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    textData,\r\n                    format,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return effectSizeLevel;\r\n};","\r\nimport { CanvasConst } from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithColor } from '../image';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n}) => {\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = typeof star === 'string'\r\n        ? star === '' ? 0 : 1\r\n        : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    return await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async () => {\r\n            offset += (starWidth + startSpacing);\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === 'no-sticker') return Promise.resolve();\r\n    return drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    ctx,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n}) => {\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawAssetWithSize(ctx, `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`, ...coordinate);\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawAssetWithSize(ctx, `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`, ...coordinate);\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    ctx,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1122, 240 - widthOffset, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawAssetWithSize(ctx, `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`, ...coordinate);\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    linkMap: string[],\r\n    cloneCanvasStyle: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || !Array.isArray(linkMap)) return;\r\n\r\n    const color = cloneCanvasStyle.color ?? '#000000';\r\n    await drawWithColor(\r\n        canvas,\r\n        'link/link-text.png',\r\n        color,\r\n        120, 30,\r\n        600, 1080,\r\n        cloneCanvasStyle,\r\n    );\r\n    // await drawAsset(ctx, 'link/link-text.png', 600, 1080);\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = 'bold 26.55px RoGSanSrfStd-Bd';\r\n    ctx.fillText(`${linkMap.length}`, 622.75, 1105);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n};","import {\r\n    arrowPositionList,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardOpacity,\r\n    Foil,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithColor } from '../image';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    topToPendulumStructure,\r\n    pendulumStructureHeight,\r\n    leftToPendulumStructure,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    format,\r\n    hasBackground,\r\n    frame, bottomFrame,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    format: string,\r\n    frame: string, bottomFrame: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    foil: Foil,\r\n    pendulumSize: string,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderType = frameBorderType;\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resultAPI = {\r\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\r\n         * \r\n         *  * Trying to draw only a portion of the image.\r\n         *  * The source image has totally different size compare to the destination boundary.\r\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\r\n         */\r\n        calculateCardArtRedrawCoordination(\r\n            imageCanvas: HTMLCanvasElement,\r\n            customOpacity?: CardOpacity,\r\n            extraHeightRatio = 1,\r\n            customBackgroundType?: BackgroundType,\r\n        ) {\r\n            const normalizedOpacity = customOpacity ?? opacity;\r\n            const {\r\n                body: bodyOpacity\r\n            } = normalizedOpacity;\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\r\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\r\n            const imageScaledRatio = artWidth / imageWidth;\r\n            const sourceOffsetX = bodyOpacity < 100\r\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\r\n            const sourceOffsetY = bodyOpacity < 100\r\n                ? (topToPendulumStructure - artY) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\r\n            const offsetHeight = bodyOpacity < 100\r\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\r\n                : 0;\r\n\r\n            const destinationX = artX + destinationOffsetX;\r\n            const destinationY = artY + destinationOffsetY;\r\n            const destinationWidth = artWidth - destinationOffsetX * 2;\r\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\r\n\r\n            return {\r\n                imageScaledRatio,\r\n                sourceOffsetX,\r\n                sourceOffsetY,\r\n                destinationOffsetX,\r\n                destinationOffsetY,\r\n                offsetHeight,\r\n                destinationX,\r\n                destinationY,\r\n                destinationWidth,\r\n                destinationHeight,\r\n            };\r\n        },\r\n\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: () => {\r\n            if (!artworkCanvas || !ctx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            ctx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                artX, artY,\r\n                artWidth, artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: (\r\n            boundary?: 'pendulum',\r\n        ) => {\r\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n            if (boundary === 'pendulum') {\r\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\r\n\r\n                if (backgroundType === 'full') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        { ...opacity, body: 0 },\r\n                        undefined,\r\n                        'full',\r\n                    );\r\n                } else if (backgroundType === 'fit') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        opacity,\r\n                        undefined,\r\n                        'fit'\r\n                    );\r\n                }\r\n\r\n                const {\r\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\r\n                    offsetHeight: backgroundOffsetHeight,\r\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\r\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\r\n                } = redrawCoordination;\r\n                ctx.drawImage(\r\n                    backgroundCanvas,\r\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\r\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\r\n                    backgroundDestinationX, backgroundDestinationY,\r\n                    backgroundDestinationWidth, backgroundDestinationHeight,\r\n                );\r\n                return;\r\n            }\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                { ...opacity, boundless: true },\r\n                backgroundType,\r\n            );\r\n            ctx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0,\r\n                backgroundWidth, backgroundHeight,\r\n                artX, artY,\r\n                artWidth, artWidth / (backgroundWidth / backgroundHeight)\r\n            );\r\n        },\r\n        drawAttribute: async () => {\r\n            await drawAsset(ctx, `attribute/attr-${format}-${attribute.toLowerCase()}.png`, 678, 55);\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starAlignment,\r\n                style,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n            });\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\r\n        },\r\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n        drawLinkArrowMap: async (linkMap: string[]) => {\r\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n                .map(async entry => {\r\n                    const { left, top, height, width } = arrowPositionList[entry - 1];\r\n                    const isActive = linkMap.includes(`${entry}`);\r\n                    const baseLink = `link/link-inactive-${entry}`;\r\n                    const activeLink = `link/link-active-${entry}`;\r\n                    const coordinate = [left, top, width, height] as const;\r\n\r\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n                    if (isActive) {\r\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n                    } else return;\r\n                })\r\n            );\r\n        },\r\n        drawStatBorder: async (color: string) => {\r\n            await drawWithColor(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                color,\r\n                813, 20,\r\n                0, 1070,\r\n            );\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityName / 100;\r\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityText / 100;\r\n            await drawAsset(\r\n                ctx,\r\n                `background/background-text-${bottomFrame}.png`,\r\n                backgroundEffectBoxX, backgroundEffectBoxY,\r\n            );\r\n            if (withPendulum) {\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            return drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n        },\r\n        drawNameBorder: async () => {\r\n            return nameBorder\r\n                ? drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0)\r\n                : Promise.resolve();\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\r\n            await drawAsset(\r\n                ctx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${foilType}`\r\n                + (artBorder ? '' : '-artless')\r\n                + '.png',\r\n                30, 185,\r\n            );\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied. In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!hasFoil && bottomFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n        },\r\n        drawCardBorder: async () => {\r\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n        },\r\n        drawLinkMapFoil: async (withBorder = artBorder) => {\r\n            await drawAsset(ctx, `link/link-overlay-arrow-${foil}${withBorder ? '' : '-artless'}.png`, 0, 175);\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if (artBorder || nameBorder) await loopFinish(\r\n                ctx,\r\n                'name',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE) {\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n            }\r\n        },\r\n        drawArtFinish: async () => {\r\n            if (applyArtFinish) await loopArtFinish(\r\n                ctx,\r\n                'art',\r\n                async finishType => await drawAsset(\r\n                    ctx,\r\n                    `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\r\n                    artFinishX, artFinishY,\r\n                ),\r\n            );\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        ctx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder) {\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n        },\r\n        drawFrameFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enought to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    trueBaseline: number,\r\n    width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper } = option;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n    if (ctx && cloneCtx && value) {\r\n        const {\r\n            font,\r\n            fillStyle,\r\n            headTextFillStyle,\r\n            shadowBlur,\r\n            hasShadow,\r\n            shadowColor,\r\n            shadowOffsetX,\r\n            shadowOffsetY,\r\n            hasOutline: hasDefaultOutline,\r\n            lineColor,\r\n            lineWidth,\r\n            lineOffsetX,\r\n            lineOffsetY,\r\n            hasGradient,\r\n            gradientAngle,\r\n            gradientColor,\r\n            pattern,\r\n        } = { ...getDefaultNameStyle(), ...style };\r\n        const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n        const hasOutline = hasDefaultOutline;\r\n\r\n        ctx.textAlign = 'left';\r\n        if (hasShadow) {\r\n            ctx.shadowColor = shadowColor;\r\n            ctx.shadowOffsetY = shadowOffsetY;\r\n            ctx.shadowOffsetX = shadowOffsetX;\r\n            ctx.shadowBlur = shadowBlur;\r\n        }\r\n        if (hasDefaultOutline) {\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeStyle = lineColor;\r\n        }\r\n        const fontData = {\r\n            ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n            headTextFillStyle,\r\n        };\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const textData = {\r\n            fontLevel: 0,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        const quoteConvertedValue = normalizeCardText(\r\n            value,\r\n            format,\r\n            { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n        );\r\n\r\n        /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n        const crudeTokenList = format === 'ocg'\r\n            ? [quoteConvertedValue]\r\n            : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n        const fontGetterForWidthCalculating = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const normalStyle = fontGetterForWidthCalculating.getFont();\r\n        const symbolStyle = fontGetterForWidthCalculating\r\n            .setSize(cur => cur * fontData.symbolFontRatio)\r\n            .setStyle('small-caps')\r\n            .setFamily(fontData.symbolFont)\r\n            .getFont();\r\n        let maxAscent = 0;\r\n        let maxDescent = 0;\r\n        crudeTokenList.forEach((cur, index) => {\r\n            ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n            const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n            maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n            maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n        }, 0);\r\n\r\n        ctx.font = normalStyle;\r\n        /** Calculate fitting ratio like normal */\r\n        let actualLineWidth = 0;\r\n        const internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [quoteConvertedValue],\r\n                    format, textData,\r\n                    width,\r\n                });\r\n\r\n                if (currentLineCount > 1) return false;\r\n                actualLineWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n        const xRatio = internalEffectiveMedian / 1000;\r\n        const yRatio = 1;\r\n\r\n        ctx.scale(xRatio, yRatio);\r\n\r\n        /** Calculate gradient and offset based on card's frame. */\r\n        const offsetY = fontData.fontList[0].offsetY ?? DefaultFontSizeData.offsetY;\r\n        const tokenList = tokenizeText(quoteConvertedValue);\r\n        const gradient = actualLineWidth > 0 && hasGradient\r\n            ? getNameGradient(\r\n                ctx,\r\n                gradientAngle,\r\n                parsePalette(gradientColor),\r\n                edge,\r\n                actualLineWidth,\r\n                trueBaseline,\r\n                maxAscent, maxDescent,\r\n            )\r\n            : undefined;\r\n\r\n\r\n        /** First iteration: Draw the card name with color, shadow and gradient */\r\n        ctx.fillStyle = gradient ?? fillStyle;\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            },\r\n        });\r\n\r\n        /** Second iteration, draw pattern, we follow these steps:\r\n         *  * We create a second, temporary canvas node.\r\n         *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n         *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essential \"coating\" the pattern on top of the text, without damaging it's surrounding.\r\n         */\r\n        if (patternImage && cloneNode) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n            await drawAsset(cloneCtx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(cloneCtx, `background/background-name-${frame}.png`, 0, 0);\r\n            cloneCtx.globalCompositeOperation = patternBlendMode;\r\n            await drawAssetWithSize(\r\n                cloneCtx, `finish-name/${patternImage}.png`,\r\n                edge, trueBaseline - maxAscent,\r\n                width,\r\n                maxAscent + maxDescent,\r\n            );\r\n            ctx.globalCompositeOperation = 'source-in';\r\n            ctx.drawImage(cloneNode, 0, 0);\r\n            ctx.scale(xRatio, yRatio);\r\n            ctx.globalCompositeOperation = 'source-over';\r\n\r\n            /** Again, foot text is not affected by pattern, so we draw the whole name again but without the foot text part.\r\n             * \r\n             * Because head text is not affected by shadow and outline, and their color is always solid. When placed on top of the head text with pattern, they will cover the pattern perfectly.\r\n             */\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                textDrawer: () => {},\r\n            });\r\n        }\r\n\r\n        /** Third iteration, we apply \"outline\" to card name. We use stroke method to simulate outline behavior. This is not ideal (like at all), but current canvas has no way to do it properly. */\r\n        if (hasOutline) {\r\n            ctx.globalCompositeOperation = 'destination-over';\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                    ctx.lineJoin = 'round';\r\n                    ctx.strokeText(\r\n                        letter,\r\n                        scaledEdge + lineOffsetX,\r\n                        scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n        const defaultTextStyle = getDefaultNameStyle();\r\n        ctx.fillStyle = defaultTextStyle.fillStyle;\r\n        ctx.shadowColor = defaultTextStyle.shadowColor;\r\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\r\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\r\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\r\n        ctx.lineWidth = defaultTextStyle.lineWidth;\r\n        ctx.strokeStyle = defaultTextStyle.lineColor;\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    }\r\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<string, number> = {\r\n    small: 0,\r\n    medium: 1,\r\n    large: 2,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: 'small' | 'medium' | 'large',\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'];\r\n    const fontData = getTypeAbilityFontData()[format];\r\n    if (metricMethod) fontData.metricMethod = metricMethod;\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: 'small' | 'medium' | 'large',\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -4 : 0;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        await drawAssetWithSize(\r\n            ctx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            image => edge + image.naturalWidth * 0.175 * xRatio + offsetX,\r\n            image => baseline - image.naturalWidth * 0.8 + offsetY,\r\n            image => image.naturalWidth,\r\n            image => image.naturalWidth,\r\n        );\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { fillTextLeftWithSpacing, fillTextRightWithSpacing } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && value) {\r\n        const fontSize = 60.5;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const digitScaleRatio = 0.65;\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline + fontSize);\r\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n    baseline = 1150.93,\r\n    baselineOffset = 0,\r\n    option = { stroke: false },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    const superTextOffset = 7.4;\r\n    ctx.font = 'bold 23.7px palatino-linotype-bold';\r\n\r\n    let left = edge;\r\n    ctx.fillText('1', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, baseline);\r\n    left += ctx.measureText('1').width - 2;\r\n\r\n    ctx.font = 'bold 17.78px palatino-linotype-bold';\r\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = 'bold 22.22px palatino-linotype-bold';\r\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = 'bold 35.73px Matrix-Bold';\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = 'bold 34.74px Matrix-Bold';\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const statWidth = 73.97;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = 'bold 37px matrix';\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = 'bold 34px matrix';\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = '37px MatrixBoldSmallCaps';\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = '37px matrix';\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = '37px MatrixBoldSmallCaps';\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = 'bold 37px matrix';\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: { isPendulum: boolean, isLink: boolean, withShadow: boolean, format: string, lightFooter: boolean }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { isPendulum, isLink, withShadow, format, lightFooter } = option;\r\n    let spacing = 0.175;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.fillStyle = (lightFooter && !isPendulum) ? '#ffffff' : '#000000';\r\n    ctx.shadowColor = withShadow\r\n        ? lightFooter ? '#000000' : '#ffffff'\r\n        : '#000000';\r\n    ctx.shadowOffsetY = 0;\r\n    ctx.shadowOffsetX = 0;\r\n    ctx.shadowBlur = withShadow && !isPendulum ? 3 : 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} 22px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, 66.65 + xOffset, 1105.01 + offsetY);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, 666.56 + xOffset, 872.94 + offsetY);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, 728.78 + xOffset, 871.50 + offsetY);\r\n    }\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinate,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    CardArtCanvasCoordinateMap,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n} from 'src/model';\r\nimport {\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    pendulumSize?: 'medium',\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        drawCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format,\r\n        hasBackground, backgroundType,\r\n        frame, foil, finish, artFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : '/');\r\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n        ? !!(atk || def || (isLink && linkMap.length))\r\n        : isMonster;\r\n    const typeInEffect = cardIcon === 'auto'\r\n        ? isMonster || isSpeedSkill\r\n        : cardIcon !== 'st' || isLink;\r\n\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        pendulumSize = 'medium',\r\n        language,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = frameCanvasRef.current?.getContext('2d');\r\n        const artworkCanvas = artworkCanvasRef.current;\r\n        const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            if (!frameCanvasRef.current || !clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            const fillBaseColor = (x: number, y: number, w: number, h: number) => {\r\n                ctx.fillStyle = hasBackground ? baseFill : DEFAULT_BASE_FILL_COLOR;\r\n                ctx.fillRect(x, y, w, h);\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            /** Base colored background so the card is not see-through even with transparent artwork */\r\n            fillBaseColor(0, 0, CanvasWidth, CanvasHeight);\r\n\r\n            const {\r\n                drawFrame,\r\n                drawCardArt,\r\n                drawBackground,\r\n                drawPendulumScaleIcon,\r\n                drawLinkArrowMap,\r\n                drawStar,\r\n                drawAttribute,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n                drawLinkMapFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n\r\n                calculateCardArtRedrawCoordination,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                format,\r\n                frame, bottomFrame,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            if (backgroundCanvas && ctx) drawBackground();\r\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\r\n                    const {\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\r\n\r\n                    /** To avoid stacking transprency, we clear the area before redrawing */\r\n                    fillBaseColor(\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    );\r\n\r\n                    drawBackground('pendulum');\r\n                    ctx.drawImage(\r\n                        artworkCanvas,\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    );\r\n                }\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n            }\r\n\r\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\r\n            await drawArtFinish();\r\n            await drawArtOverlayFinish();\r\n\r\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                if (isLink) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\r\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\r\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\r\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\r\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                        const {\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        } = calculateCardArtRedrawCoordination(\r\n                            artworkCanvas,\r\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\r\n                            extraHeightRatio,\r\n                        );\r\n    \r\n                        fillBaseColor(\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        );\r\n                        drawBackground('pendulum');\r\n                    }\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (artworkCanvas && ctx) drawCardArt();\r\n                await drawArtOverlayFinish();\r\n\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum && !isLink) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder(resolvedStatTextStyle.color ?? '#000000');\r\n\r\n            /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n            if (!isPendulum && isLink) {\r\n                await drawLinkArrowMap(linkMap);\r\n                await drawLinkMapFoil(false);\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\r\n                await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle);\r\n                resetStyle();\r\n            }\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            if (!isLink) await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            await drawPredefinedMark({\r\n                ctx,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        frame,\r\n        format,\r\n        hasBackground,\r\n        backgroundType,\r\n        attribute,\r\n        bottomFrame,\r\n        foil,\r\n        star,\r\n        starAlignment,\r\n        cardIcon,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        lightFooter,\r\n        linkMap,\r\n        resolvedStatTextStyle,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        pendulumSize,\r\n        statInEffect,\r\n        levelStyle,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            drawScale(ctx, pendulumScaleBlue ?? 0, 84.4, 790);\r\n            drawScale(ctx, pendulumScaleRed ?? 0, 728.0, 790);\r\n        }\r\n    }, [readyToDraw, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\r\n        drawStatText(ctx, 'ATK', 432.10, 1106.494);\r\n        drawStat(ctx, atk, 508.824, 1106.494);\r\n        if (!isLink) {\r\n            drawStatText(ctx, 'DEF', 600.85, 1106.494);\r\n            drawStat(ctx, def, 673.865, 1106.494);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter,\r\n            }\r\n        );\r\n    }, [readyToDraw, format, isLink, isPendulum, lightFooter, setIdCanvasRef, setId, isSpeedSkill, bottomFrame, requireShadow]);\r\n\r\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const endOfPassword = drawPasswordText({\r\n            ctx,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n        });\r\n        if (isFirstEdition) {\r\n            ctx.fillStyle = lightFooter ? '#ffffff' : '#000000';\r\n            const left = isLegacyCard && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(endOfPassword + 14.813, 142.2) - (format === 'ocg' ? 10 : 0);\r\n            const bottom = isLegacyCard && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = isLegacyCard && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter,\r\n            });\r\n            const compactThreshold = format === 'tcg' ? 390 : 350;\r\n            const compactOffset = format === 'tcg' ? 30 : 40;\r\n\r\n            if (isLimitedEdition) {\r\n                await drawLimitedEditionMark({\r\n                    ctx,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        opacity,\r\n        requireShadow,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            return await drawSticker({\r\n                ctx: stickerCanvasRef.current?.getContext('2d'),\r\n                sticker,\r\n            });\r\n        };\r\n    }, [readyToDraw, sticker, stickerCanvasRef]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    isNormal,\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n            });\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : effectIndexSize === 0 ? 'medium' : 'small',\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        typeInEffect,\r\n        statInEffect,\r\n        condenseTolerant,\r\n        effect,\r\n        effectCanvasRef,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                fontData: PendulumEffectFontData[format],\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: PendulumEffectCoordinate,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n            });\r\n        }\r\n    }, [readyToDraw, condenseTolerant, format, isPendulum, pendulumEffectCanvasRef, pendulumEffect, furiganaHelper, resolvedPendulumEffectTextStyle]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n        };\r\n    }, [readyToDraw, finishCanvasRef, loopFinish, name]);\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        const {\r\n            // isRelevant,\r\n            isPendulum = false,\r\n            opacity,\r\n        } = exportProps;\r\n        const canvasRef = drawCanvasRef.current;\r\n        const exportCtx = canvasRef?.getContext('2d');\r\n        /** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not a making a hard impact to the app. */\r\n        const generateLayer = (\r\n            canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n            exportCtx: CanvasRenderingContext2D | null | undefined,\r\n            delayQueue: number = 0,\r\n        ) => {\r\n            return new Promise<boolean>(resolve => {\r\n                setTimeout(() => {\r\n                    if (!canvasLayer.current || !exportCtx) resolve(false);\r\n                    else {\r\n                        try {\r\n                            canvasLayer.current.toBlob(blob => {\r\n                                if (!blob) resolve(false);\r\n                                else {\r\n                                    const url = URL.createObjectURL(blob);\r\n                                    if (!url) resolve(false);\r\n                                    else {\r\n                                        const layer = new Image();\r\n                                        layer.src = url;\r\n                                        layer.onload = () => {\r\n                                            exportCtx.drawImage(layer, 0, 0);\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(true);\r\n                                        };\r\n                                        layer.onerror = () => {\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(false);\r\n                                        };\r\n                                    }\r\n                                }\r\n                            });\r\n                        } catch (e) {\r\n                            console.error(e);\r\n                            resolve(false);\r\n                        }\r\n                    }\r\n                }, delayQueue * 25);\r\n            });\r\n        };\r\n\r\n        if (canvasRef && exportCtx) {\r\n            exportCtx.clearRect(0, 0, CanvasConst.width, CanvasConst.height);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            // await generateLayer(frameCanvas, exportCtx);\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            if (artworkCanvas && exportCtx) {\r\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\r\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n                if (imageHeight > 0) {\r\n                    exportCtx.drawImage(\r\n                        artworkCanvas,\r\n                        0, 0,\r\n                        imageWidth, imageHeight,\r\n                        artX, artY,\r\n                        artWidth, artWidth / (imageWidth / imageHeight),\r\n                    );\r\n                }\r\n            }\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(canvasRef, 0, 0);\r\n        }\r\n    }, [\r\n        language,\r\n        artworkCanvasRef, \r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        drawCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxCanvasRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedStatTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas } from '../canvas-util';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return 0;\r\n\r\n    ctx.fillStyle = lightFooter ? '#ffffff' : '#000000';\r\n    ctx.shadowColor = hasShadow\r\n        ? lightFooter ? '#000000' : '#ffffff'\r\n        : '#000000';\r\n    ctx.shadowOffsetY = 0;\r\n    ctx.shadowOffsetX = 0;\r\n    ctx.shadowBlur = hasShadow ? 3 : 0;\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'];\r\n    const isNumberPassword = /^[0-9]*$/.test(value);\r\n    const fontData = PasswordFontData[format];\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: !isNumberPassword ? 1 : 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return result.tokenEdge;\r\n};","import { Checkbox, Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton, StyledIconButtonContainer } from '../icon-button';\r\nimport { useLanguage } from 'src/service';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / 375;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n\r\n    return {\r\n        ...crop,\r\n        x: x < 0 ? 0 : x,\r\n        y: y < 0 ? 0 : y,\r\n        height: isRatioAcceptable\r\n            ? height\r\n            : width * image.naturalWidth /** Restore original size */\r\n                / ratio /** Get height with corresponding aspect ratio */\r\n                / image.naturalHeight /** Convert back to percent */,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: () => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        // setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const targetFile = e.target.files[0];\r\n            const maxFileSize = 4;\r\n\r\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n                setLoading(true);\r\n                const reader = new FileReader();\r\n                reader.addEventListener('load', () => {\r\n                    if (typeof reader.result === 'string') {\r\n                        setInternalSource(reader.result);\r\n                        setSourceType('offline');\r\n                        setInputMode('offline');\r\n                        onSourceChange('offline', reader.result);\r\n                        setLoading(false);\r\n                    }\r\n                });\r\n                reader.readAsDataURL(targetFile);\r\n            } else {\r\n                onMaxSizeExceeded(maxFileSize);\r\n            }\r\n        } else alert(language['image-cropper.not-found-warning']);\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded();\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={`card-image-cropper ${className}`}>\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{ overlay: isDownloadable\r\n                                    ? language['image-cropper.download']\r\n                                    : language['image-cropper.no-download'] }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                {language['image-cropper.source.online.tooltip']}\r\n                            </Radio.Button>\r\n                            <Tooltip title={<div className=\"image-warning\">\r\n                                {language['image-cropper.offline-warning']}\r\n                            </div>}>\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                        {<div className=\"online-image-tip\">\r\n                            {language['image-cropper.online-tip']}\r\n                        </div>}\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={applyOfflineSource}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                        <hr />\r\n                        {language['image-cropper.offline-warning']}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {beforeCropper}\r\n            <div className=\"card-cropper\">\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <StyledIconButtonContainer className=\"force-fit-toggle\" onClick={() => onForceFitChange(!forceFit)}>\r\n                    <Checkbox checked={forceFit} /> <span>{language['image-cropper.force-fit.label']}</span>\r\n                </StyledIconButtonContainer>}\r\n                {(!hasImage || error) && <Empty description={language['image-cropper.not-found-warning']} image={null} />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        pendingCrop.current = {\r\n                            source: '',\r\n                            crop: null,\r\n                        };\r\n                        setError('Image error');\r\n                        setLoading(false);\r\n                        if (!receivingCanvas) onTainted();\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType);\r\n                            onSourceLoaded();\r\n                        } else {\r\n                            onTainted();\r\n                        }\r\n                        // setCrossOrigin(undefined);\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import { Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport './link-marker.scss';\r\n\r\nexport type LinkMarkChooser = {\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const rotateMap = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <div className=\"link-marker-chooser\">\r\n        <div className=\"title\">\r\n            {language['link-picker.label']}\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip key=\"5\" overlay={language['link-picker.reset.tooltip']}>\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div className={`link-marker-icon link-marker-icon-${index + 1}`} style={{ transform: `rotate(${rotateMap[index]}deg)` }} />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </div>;\r\n};","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport './explanation.scss';\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <ExclamationCircleOutlined className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport './formatting-guide.scss';\r\nimport { useLanguage } from 'src/service';\r\n\r\nconst StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor'> & { className?: string }) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n`;\r\nconst StyledSettingButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .setting-button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon-setting {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon-setting {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"setting-button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import { GithubFilled, BugOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useI18N, useLanguage } from 'src/service';\r\nimport { Radio } from 'antd';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <span className=\"version\">v{process.env.REACT_APP_VERSION ?? 'unknown'}</span>\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nconst StyledAppSettingContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <span className=\"bug-report\">\r\n                    <div id=\"sentry-bug-report\">\r\n                        {language['contributor.bug-report.tooltip']} <BugOutlined />\r\n                    </div>\r\n                </span>\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<div className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </div>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppSettingContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppSettingContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    const language = useLanguage();\r\n\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<div className=\"disclaimer\">\r\n            <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n            <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n            <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n            <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n            <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n            <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n        </div>}\r\n    />;\r\n};","import styled from 'styled-components';\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport { ImageCropper } from './image-cropper';\r\nexport type { ImageCropperRef } from './image-cropper';\r\nexport { LinkMarkChooser } from './link-marker';\r\nexport { Loading } from './loading';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './setting';\r\nexport * from './app-header';","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\r\n    label,\r\n    value,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n                />\r\n                </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img alt={dictionary[nameKey]} src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`} />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\nexport const IconTypeMap: Record<string, { value: string, labelKey: string, fullLabelKey: string, icon: React.ReactNode }> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.label',\r\n        icon: null,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\r\n        />,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);\r\n\r\nexport const StickerButtonList = StickerList.map(name => ({\r\n    label: name === 'no-sticker'\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${name.toLowerCase()}.png`} />,\r\n    value: name,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { AnglePicker, ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n}\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className=\"controls-wrapper gradient-picker-container\">\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <div className=\"angle-picker-container\">\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n                <AnglePicker angle={angle} size={120} setAngle={setAngle} />\r\n            </div>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber, Slider } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={5} xmin={-5}\r\n                ymax={5} ymin={-5}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}: <Slider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n    StyledPickerButton,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [customStyleSignal, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        customStyleSignal();\r\n    }, [customStyleSignal]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={fillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: color.hex }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown color-picker-dropdown\">\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        customStyleSignal();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        customStyleSignal();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: string | number,\r\n    optionList: { label: React.ReactNode, value: string | number, tooltipProps?: React.ComponentProps<typeof Tooltip>, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: string | number) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nexport const RadioTrain = forwardRef<RadioTrainRef, RadioTrain>(({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}, ref) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n});","import { useCard, useSetting } from 'src/service';\r\nimport { RadioTrain } from './radio-train';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n};\r\nexport const FrameTrain = ({\r\n    onSTFrameChange,\r\n}: FrameTrain) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                isPendulum,\r\n                attribute,\r\n                format,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const isST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const newTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            if (isST) onSTFrameChange(newTypeAbility);\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isPendulum: nextFrame === 'link' ? false : isPendulum,\r\n                attribute: isST\r\n                    ? `${nextFrame}`.toUpperCase()\r\n                    : attribute,\r\n                typeAbility: newTypeAbility,\r\n            };\r\n        });\r\n    }, [setCard, onSTFrameChange]);\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n};","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n\r\n                return <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: 375px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(curr => ({\r\n            ...curr,\r\n            backgroundCrop: cropInfo,\r\n        }));\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Slider, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { BackgroundType, getBackgroundTypeList, CardOpacity, DEFAULT_BASE_FILL_COLOR, OpacityList, getDefaultCardOpacity, DefaultColorList } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { ImageCropper } from 'src/component';\r\nimport { RadioTrain } from '../input-train';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        display: inline-flex;\r\n        column-gap: var(--spacing-xs);\r\n        border-right: none;\r\n        padding: var(--spacing-xxs) var(--spacing-xs);\r\n        border-radius: var(--br) 0 0 var(--br);\r\n        box-shadow: var(--bs-input);\r\n        .ant-checkbox-wrapper {\r\n            transform: translateY(-1px); // Alignment\r\n        }\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n        display: grid;\r\n        grid-template-columns: max-content 60px 45px 12px;\r\n        &.inactive {\r\n            .slider-label,\r\n            .ant-slider,\r\n            .slider-padding {\r\n                background-color: var(--main-level-3);\r\n            }\r\n        }\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        user-select: none;\r\n        &:hover {\r\n            box-shadow: 0 0 2px 0 #222222;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        hasBackground,\r\n        backgroundType,\r\n        isPendulum,\r\n        background,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            hasBackground,\r\n            backgroundType,\r\n            background,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        hasBackground,\r\n        backgroundType,\r\n        isPendulum,\r\n        background,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState({ ...getDefaultCardOpacity(), ...defaultValue });\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => ({ ...cur, ...newValue }));\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <Checkbox\r\n                className=\"art-frame\"\r\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                checked={opacity.boundless}\r\n            >\r\n                {language['input.opacity.boundless.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <div key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <div className=\"slider-label\">\r\n                    {type === 'body' && <Popover\r\n                        visible={backgroundInputVisible}\r\n                        destroyTooltipOnHide={false}\r\n                        trigger={['click']}\r\n                        onVisibleChange={setBackgroundInputVisible}\r\n                        overlayClassName={[\r\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                            backgroundInputVisible ? 'picker-visible' : '',\r\n                            backgroundInputHidden ? 'picker-hidden' : '',\r\n                        ].join(' ')}\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledBaseFillPickerContainer\r\n                                className={[\r\n                                    'custom-style-picker',\r\n                                    noBackground ? 'overlay-no-background-image' : ''\r\n                                ].join(' ')}\r\n                            >\r\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                                    <Checkbox\r\n                                        checked={hasBackground}\r\n                                        onChange={e => {\r\n                                            changeHasBackground(e);\r\n                                        }}\r\n                                    >{language['input.background.toggle-label']}</Checkbox>\r\n                                    <br />\r\n                                    <i>{language['input.background.description']}</i>\r\n                                </h3>\r\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                                    <BackgroundInputGroup\r\n                                        ref={backgroundInputRef}\r\n                                        receivingCanvas={receivingCanvas}\r\n                                        onSourceLoaded={onSourceLoaded}\r\n                                        onTainted={onTainted}\r\n                                        onCropChange={onCropChange}\r\n                                        backgroundColor={opacity.baseFill}\r\n                                    >\r\n                                        <div className=\"layout-picker-panel\">\r\n                                            <div className=\"layout-picker-subpanel color-section\">\r\n                                                <h2>{language['input.background-color.label']}</h2>\r\n                                                <CompactPicker\r\n                                                    colors={DefaultColorList}\r\n                                                    color={opacity.baseFill}\r\n                                                    onChangeComplete={color => {\r\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                                <h2>{language['input.background-type.label']}</h2>\r\n                                                <RadioTrain\r\n                                                    onChange={changeBackgroundType}\r\n                                                    optionList={getBackgroundTypeList({\r\n                                                        fit: language['input.background-type.fit.label'],\r\n                                                        full: language['input.background-type.full.label'],\r\n                                                    })}\r\n                                                    value={backgroundType}\r\n                                                />\r\n                                            </div>}\r\n                                        </div>\r\n                                    </BackgroundInputGroup>\r\n                                </div>\r\n                            </StyledBaseFillPickerContainer>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <div\r\n                            className=\"background-preview\"\r\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                        >\r\n                            {hasBackground\r\n                                ? background\r\n                                    ? <img className=\"background-image-preview\" src={background} alt=\"Background\" />\r\n                                    : null\r\n                                : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                        </div>\r\n                    </Popover>}\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </div>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <Slider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </div>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { Input, Popover } from 'antd';\r\nimport { RadioTrain } from '../input-train';\r\nimport { StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { IconTypeList, IconTypeMap, StarButtonList, getSTIconButtonList } from '../const';\r\nimport { checkDarkSynchro, checkXyz } from 'src/util';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 6.5rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    isLink: boolean,\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    isLink,\r\n    isMonster,\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n    const isDarkSynchro = checkDarkSynchro({ frame });\r\n    const isXyz = checkXyz({ frame });\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? IconTypeMap[isMonster\r\n            ? isXyz ? 'rank' : isDarkSynchro ? 'negative-level' : 'level'\r\n            : 'st'\r\n        ]\r\n        : IconTypeMap[cardIcon];\r\n    const iconDropdownText = language[iconTypeData.labelKey];\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledIconDropdown>\r\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\r\n                    return <StyledDropdown.Option key={value}\r\n                        className={value === cardIcon ? 'menu-active' : ''}\r\n                        onClick={() => changeCardIcon(value)}\r\n                    >\r\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                    </StyledDropdown.Option>;\r\n                })}\r\n            </StyledIconDropdown>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return !isLink\r\n        ? iconTypeData.value === 'st'\r\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : <StyledCheckboxStarTrain\r\n                className=\"checkbox-star-train\"\r\n                value={star}\r\n                onChange={changeStar}\r\n                optionList={StarButtonList}\r\n                strict={true}\r\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                    <Input\r\n                        className=\"custom-star-input\"\r\n                        value={typeof star === 'number' ? '' : star}\r\n                        allowClear\r\n                        onChange={changeStar}\r\n                        placeholder={language['input.icon-type.custom.placeholder']}\r\n                    />\r\n                    <RadioTrain\r\n                        value={starAlignment}\r\n                        onChange={changeStarAlignment}\r\n                        optionList={[\r\n                            {\r\n                                value: 'auto',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                                label: <CloseCircleOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'left',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                                label: <AlignLeftOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'center',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                                label: <AlignCenterOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'right',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                                label: <AlignRightOutlined />,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>}\r\n            >\r\n                {DropdownChildren}\r\n            </StyledCheckboxStarTrain>\r\n        : null;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n            cursorOffset = keepInline ? 2 : 3;\r\n            break;\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        rows={9}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { RadioTrain, TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 550px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .frame-auto-checkbox {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton } from 'src/component';\r\nimport { RadioTrain } from '../input-train';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { copyrightMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format },\r\n        getUpdater,\r\n    }) => ({\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                    <IconButton\r\n                    onClick={() => {}}\r\n                        Icon={UnorderedListOutlined}\r\n                    />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser } from 'src/component';\r\nimport { RadioTrain } from '../input-train';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList } from '../const';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    .ant-input-group-addon {\r\n        flex: 0;\r\n    }\r\n    .radio-train-input-group .ant-radio-button-wrapper {\r\n        min-width: unset;\r\n    }\r\n`;\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    isLink: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    isLink,\r\n    showExtraDecorativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish,\r\n            linkMap,\r\n            isPendulum,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(curr => ({\r\n            ...curr,\r\n            artCrop: cropInfo,\r\n        }));\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <StyledImageRadioTrain\r\n                className=\"art-finish-checkbox fill-input-train\"\r\n                value={artFinish}\r\n                onChange={changeArtFinish}\r\n                optionList={ArtFinishButtonList}\r\n            >\r\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\r\n            </StyledImageRadioTrain>\r\n            : null\r\n        }\r\n    >\r\n        {isLink\r\n            ? <LinkMarkChooser defaultValue={linkMap} onChange={changeLinkMap} />\r\n            : <div />}\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizedCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizedCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { RadioTrain } from '../input-train';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { FrameInfoMap } from 'src/model';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { getNavigationProps } from 'src/util';\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\ntype BottomFrameOptionGrid = {\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onChange: (value: string | number) => void,\r\n    onCancel: () => void,\r\n};\r\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\r\n    frameList,\r\n    pendulumFrame,\r\n    onChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => inputRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPendulumFrameContainer\r\n        className=\"pendulum-frame-picker\"\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: frameList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onChange(frameList[focus].value);\r\n            },\r\n            onCancel,\r\n        })}\r\n    >\r\n        <Checkbox ref={inputRef}\r\n            className=\"frame-auto-checkbox\"\r\n            checked={pendulumFrame === 'auto'}\r\n            onChange={e => {\r\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\r\n            }}\r\n        >{language['input.frame.auto']}</Checkbox>\r\n        <RadioTrain\r\n            className=\"frame-radio\"\r\n            value={pendulumFrame}\r\n            onChange={onChange}\r\n            optionList={frameList}\r\n        />\r\n    </StyledPendulumFrameContainer>;\r\n});\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        background-color: var(--main-level-4);\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .joined-row {\r\n        position: 'relative';\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing-lg);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            isPendulum,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [isMirrorScale, setMirrorScale] = useState(true);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n        };\r\n    });\r\n    const changeBottomFrame = (value: string | number) => {\r\n        const normalizedValue = `${value}`;\r\n\r\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\r\n        setCard(currentCard => {\r\n            return { ...currentCard, pendulumFrame: normalizedValue };\r\n        });\r\n    };\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            {frame !== 'link'\r\n                ? <Checkbox\r\n                    className=\"pendulum-checkbox\"\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n                : <div className=\"pendulum-checkbox-placeholder\" />}\r\n            {showCreativeOption && <Popover\r\n                visible={frameDropdownVisible}\r\n                onVisibleChange={setFrameDropdownVisibleVisible}\r\n                trigger={['hover', 'click']}\r\n                placement=\"bottom\"\r\n                overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                content={<div className=\"overlay-event-absorber\">\r\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\r\n                        frameList={frameList}\r\n                        pendulumFrame={pendulumFrame}\r\n                        onCancel={() => {\r\n                            setFrameDropdownVisibleVisible(false);\r\n                            containerRef.current?.focus();\r\n                        }}\r\n                        onChange={changeBottomFrame}\r\n                    />\r\n                </div>}\r\n            >\r\n                <StyledPendulumFrameInputContainer ref={containerRef}\r\n                    className=\"pendulum-frame-input\"\r\n                    tabIndex={0}\r\n                    onKeyDown={e => {\r\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                            setFrameDropdownVisibleVisible(true);\r\n                            /** Popover takes time to mount / become visible */\r\n                            setTimeout(() => {\r\n                                bottomFrameOptionGridRef.current?.focus();\r\n                            }, 200);\r\n\r\n                            return false;\r\n                        }\r\n                    }}\r\n                >\r\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\r\n                    {currentPendulumFrame\r\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\r\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\r\n                </StyledPendulumFrameInputContainer>\r\n            </Popover>}\r\n            {(isPendulum && showCreativeOption)\r\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\r\n                    {language['input.mirror-scale.label']}\r\n                </Checkbox>}\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (isMirrorScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    onChange={e => {\r\n                        if (isMirrorScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    rows={5}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { RadioTrain } from '../input-train';\r\nimport { Explanation, FormattingHelpDrawer } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CondenseType } from 'src/model';\r\nimport { CondenseThresholdButtonList, IconTypeMap } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst StyledPostPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr max-content;\r\n    grid-template-areas:\r\n        \"type-input input-helper\"\r\n        \"condense-input help-button\";\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .input-kanji-helper {\r\n        grid-area: input-helper;\r\n    }\r\n    .type-ability-input {\r\n        grid-area: type-input;\r\n    }\r\n    .condense-input {\r\n        grid-area: condense-input;\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n    &.variant-tcg {\r\n        .type-ability-input {\r\n            grid-column: span 2;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: { typeAbility?: string[] }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon].value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\r\n        <CardTextInput ref={typeAbilityInputRef}\r\n            addonBefore={language[typeLabel]}\r\n            id=\"type-ability\"\r\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n            onChange={changeTypeAbility}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        {isOCG && <Tooltip\r\n            overlay={language['input.furigana-helper.tooltip']}\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n        >\r\n            <Checkbox\r\n                className=\"input-kanji-helper\"\r\n                onChange={toggleFuriganaHelper}\r\n                checked={furiganaHelper}\r\n            >\r\n                {language['input.furigana-helper.label']}\r\n            </Checkbox>\r\n        </Tooltip>}\r\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n            optionList={CondenseThresholdButtonList}\r\n        >\r\n            <span>\r\n                {language['input.condense.label']} <Explanation\r\n                    content={language['input.condense.tooltip']}\r\n                />\r\n            </span>\r\n        </RadioTrain>\r\n        <FormattingHelpDrawer />\r\n    </StyledPostPendulumInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-block {\r\n        height: 17px;\r\n        width: 17px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        outline: none;\r\n        border: var(--bw) solid var(--sub-level-4);\r\n        &.static-block {\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        }\r\n    }\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        gap: 3px;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        padding-left: 3px;\r\n        input {\r\n            width: 58px;\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\ntype InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nconst InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                /** Contrast formula from google \\ :v / */\r\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\r\n                    ? '#000000'\r\n                    : '#FFFFFF';\r\n\r\n                return <div className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\r\n                    {internalValue.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={currentText}\r\n                onChange={e => {\r\n                    setCurrentText(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-preview-section {\r\n        width: 7px;\r\n        height: 28px; // Alignment\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-bottom: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        statTextStyle,\r\n        typeTextStyle,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            statTextStyle,\r\n            typeTextStyle,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        statTextStyle,\r\n        typeTextStyle,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n    })));\r\n\r\n    const styleList = [\r\n        { info: TextStyleInfoMap.effectTextStyle, value: effectTextStyle },\r\n        { info: TextStyleInfoMap.pendulumTextStyle, value: pendulumTextStyle },\r\n        { info: TextStyleInfoMap.statTextStyle, value: statTextStyle },\r\n        { info: TextStyleInfoMap.typeTextStyle, value: typeTextStyle },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value }) => {\r\n                    const { keyName, labelKey } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    {language['input.text-style.shadow.label']}\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            {styleList.map(({ info, value }) => {\r\n                const { keyName } = info;\r\n                const [custom, fillStyle, hasShadow, shadow] = value;\r\n\r\n                return <div key={keyName}\r\n                    className=\"text-style-preview-section\"\r\n                    style={{\r\n                        backgroundColor: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\r\n                        boxShadow: (custom && hasShadow) ? `0 0 0 2px ${shadow} inset` : ''\r\n                    }}\r\n                />;\r\n            })}\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    StandaloneLabel,\r\n} from '../../component';\r\nimport {\r\n    checkLink,\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getAttributeList,\r\n    FinishButtonList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain, RadioTrain } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isPendulum,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isLink = checkLink({ frame });\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={FinishButtonList}\r\n            >\r\n                <span>{language['input.finish.label']}</span>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={language['input.layout.tooltip']}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })} />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                isLink={isLink}\r\n                isMonster={isMonster}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <RadioTrain\r\n                    className=\"fill-input-train attribute-input\"\r\n                    value={attribute}\r\n                    onChange={changeAttribute}\r\n                    optionList={attributeList}\r\n                >\r\n                    <span>{language['input.attribute.label']}</span>\r\n                </RadioTrain>\r\n\r\n                {(isPendulum || frame !== 'link' || showCreativeOption)\r\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                        showCreativeOption={showCreativeOption}\r\n                        showExtraDecorativeOption={showExtraDecorativeOption}\r\n                        onTakePicker={setPickerTarget}\r\n                    />}\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    isLink={isLink}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    border-left: var(--bw) solid var(--sub-level-3);\r\n    &:hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import { Button, Dropdown, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-resolution {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        padding: 4px 15px;\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            transform: translateY(-1px);\r\n        }\r\n    }\r\n    .button-option {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        padding: var(--spacing);\r\n        border-left: var(--bw) solid var(--sub-secondary);\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        .anticon {\r\n            font-size: var(--fs-2xl);\r\n            margin-left: 0;\r\n        }\r\n        &:hover {\r\n            background: #399af9;\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n        },\r\n    );\r\n    const {\r\n        drawCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        drawCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: 'Your card is tainted, you must save manually',\r\n                description: 'Right click the card → Choose \"Save image as...\"',\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\" onClick={() => download()}>\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\">\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                    <StyledDownloadDropdownLabel disabled>{language['button.download.resolution.label']}</StyledDownloadDropdownLabel>\r\n                    {[\r\n                        { width: 549, height: 800 },\r\n                        { width: 561, height: 818 },\r\n                        { width: 813, height: 1185 },\r\n                    ].map(({ width, height }) => {\r\n                        return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                            className={resolution[0] === width && resolution[1] === height ? 'active-resolution' : ''}\r\n                            onClick={() => {\r\n                                updateSetting({\r\n                                    resolution: [width, height],\r\n                                });\r\n                                forceRefocus();\r\n                            }}\r\n                        >\r\n                            {width} × {height}\r\n                        </StyledDownloadDropdownOption>;\r\n                    })}\r\n                </Menu>}\r\n            >\r\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\r\n                    <MenuOutlined />\r\n                </div>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizedCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    drawCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    drawCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n    } = currentCard;\r\n    const pendingSave = useRef(false);\r\n\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = drawCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const cloneCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const cloneCanvasContext = cloneCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && cloneCanvas && cloneCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            try {\r\n                if (size) {\r\n                    cloneCanvas.width = size[0];\r\n                    cloneCanvas.height = size[1];\r\n                }\r\n                /** Resize here */\r\n                cloneCanvasContext.drawImage(\r\n                    drawCanvas,\r\n                    0, 0, drawCanvas.width, drawCanvas.height,\r\n                    0, 0, cloneCanvas.width, cloneCanvas.height,\r\n                );\r\n\r\n                const normalizedName = normalizedCardName(name);\r\n                var link = document.createElement('a');\r\n                link.download = normalizedName\r\n                    ? `${normalizedName}.png`\r\n                    : 'card.png';\r\n                link.href = cloneCanvas.toDataURL('image/png');\r\n                link.click();\r\n            } catch (e) {\r\n                onDownloadError();\r\n            }\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [drawCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const normalizedName = normalizedCardName(name);\r\n\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return 'Leave right now may make you lose unsaved progress, proceed?';\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = drawCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({ isPendulum, opacity, isRelevant: () => relevant });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n    };\r\n};","import { Menu, Dropdown, Tooltip } from 'antd';\r\nimport { useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\n\r\nexport type ImportButton = {\r\n    language: LanguageDataDictionary,\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const ImportButton = ({\r\n    language,\r\n    importData,\r\n}: ImportButton) => {\r\n    const id = 'import-upload';\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Tooltip overlay={language['button.import.tooltip']}>\r\n        <StyledActionIconButton\r\n            className=\"secondary-button import-custom\"\r\n            onClick={() => {\r\n                const target = document.getElementById(id);\r\n                if (target) {\r\n                    target.click();\r\n                }\r\n            }}\r\n        >\r\n            <input ref={ygoCarderImportInputRef}\r\n                type=\"file\"\r\n                id={id}\r\n                accept=\"application/json\"\r\n                className=\"import-upload-input\"\r\n                onChange={() => {\r\n                    const fileList = ygoCarderImportInputRef.current?.files;\r\n                    if (fileList) {\r\n                        for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                            const targetFile = fileList.item(cnt);\r\n                            if (!targetFile) continue;\r\n\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) return;\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') return;\r\n                                importData(undefined, false, result);\r\n                            };\r\n                            reader.readAsText(targetFile);\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n            <UploadOutlined />\r\n        </StyledActionIconButton>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportButton;\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: var(--bw) solid var(--sub-secondary);\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledCardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(var(--translate-ratio)) translateY(var(--translate-ratio)) scale(var(--resize-ratio))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled.div`\r\n    --overlay-size: 51px;\r\n    position: absolute;\r\n    z-index: 101;\r\n    background: var(--main-primary);\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing);\r\n    line-height: 1;\r\n    font-size: var(--fs-3xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-1);\r\n    display: none;\r\n    &:hover {\r\n        background: var(--sub-primary);\r\n    }\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    compressCardData,\r\n    downloadBlob,\r\n    forceRefocus,\r\n    isMobileDevice,\r\n    normalizedCardName,\r\n    ygoCarderToCardMakerData,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ImportButton,\r\n    StyledActionIconButton,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    decodeCard,\r\n    useCard,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Dropdown, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined, DownloadOutlined } from '@ant-design/icons';\r\nimport {\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    StyledCardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\n\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const drawCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        drawCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = drawCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = drawCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        setLightboxVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                beforeSend(event) {\r\n                    // Check if it is an exception, and if so, show the report dialog\r\n                    if (event.exception && event.event_id) {\r\n                        Sentry.showReportDialog({\r\n                            eventId: event.event_id,\r\n                        });\r\n                    }\r\n                    return event;\r\n                  },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const importData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        directData: string | undefined = undefined,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey && !directData) return;\r\n\r\n        event?.preventDefault();\r\n        try {\r\n            const cardData = directData\r\n                ? directData\r\n                : window.prompt(language['prompt.import.message']);\r\n            const setCard = useCard.getState().setCard;\r\n\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(cardData);\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                setCard(decodedCard);\r\n                setImageChangeCount(cnt => cnt + 1);\r\n                cardInputRef.current?.forceCardData(decodedCard);\r\n                /** Allow navigate input panel right away */\r\n                forceRefocus();\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language]);\r\n\r\n    const mergeData = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        try {\r\n            const cardData = window.prompt(language['prompt.import.message']);\r\n            const setCard = useCard.getState().setCard;\r\n\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(cardData, useCard.getState().card);\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                setCard(decodedCard);\r\n                setImageChangeCount(cnt => cnt + 1);\r\n                cardInputRef.current?.forceCardData(decodedCard);\r\n                /** Allow navigate input panel right away */\r\n                forceRefocus();\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        download = false,\r\n        converter: (\r\n            card: Card,\r\n            artRef: HTMLCanvasElement | null,\r\n        ) => ({ isPartial: boolean, result: Record<string, any> }) = card => ({\r\n            isPartial: false,\r\n            result: compressCardData(card),\r\n        }),\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey && !download) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'offline' && download === false) {\r\n            window.alert(language['prompt.export.offline-warning.message']);\r\n        }\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = useCard.getState().card;\r\n            const {\r\n                isPartial,\r\n                result: exportableCard,\r\n            } = converter(cardData, artworkCanvasRef.current);\r\n\r\n            if (isPartial) {\r\n                notification.info({\r\n                    message: language['service.decode.partial.message'],\r\n                    description: language['service.decode.partial.description'],\r\n                });\r\n            }\r\n            if (download) {\r\n                const blob = new Blob([`${JSON.stringify(exportableCard)}`], { type: 'application/json' });\r\n                downloadBlob(\r\n                    normalizedCardName(cardData.name),\r\n                    blob,\r\n                    'application/json',\r\n                );\r\n            } else {\r\n                window.prompt(\r\n                    language['prompt.export.message'],\r\n                    `${JSON.stringify(exportableCard)}`,\r\n                );\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback(() => {\r\n        setCanvasKey(cnt => cnt + 1);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(false);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                className={`language-${languageInfo.codeName}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasConst.height}px`,\r\n                        '--card-width': `${CanvasConst.width}px`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n                                    <button className=\"primary-button export-button\" onClick={exportData}>\r\n                                        {language['button.export.label']}\r\n                                    </button>\r\n                                </Tooltip>\r\n                                <Dropdown \r\n                                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                                        {[\r\n                                            {\r\n                                                label: language['button.export.for-ygocarder.label'],\r\n                                                converter: undefined,\r\n                                            },\r\n                                            {\r\n                                                label: language['button.export.for-other.label'],\r\n                                                converter: ygoCarderToCardMakerData,\r\n                                            },\r\n                                        ].map(({ converter, label }, index) => {\r\n                                            return <Menu.Item key={`${index}`}\r\n                                                onClick={() => exportData(undefined, false, true, converter)}\r\n                                            >\r\n                                                {label}\r\n                                            </Menu.Item>;\r\n                                        })}\r\n                                    </Menu>}\r\n                                >\r\n                                    <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                                        <DownloadOutlined />\r\n                                    </StyledActionIconButton>\r\n                                </Dropdown>\r\n                                <div />\r\n                                <Tooltip\r\n                                    overlay={allowHotkey\r\n                                        ? <div className=\"center\">\r\n                                            <div>Ctrl-E / ⌘-E</div>\r\n                                            <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                                        </div>\r\n                                        : null}\r\n                                >\r\n                                    <button\r\n                                        className=\"primary-button import-button\"\r\n                                        onClick={importData}\r\n                                    >\r\n                                        {language['button.import.label']}\r\n                                    </button>\r\n                                </Tooltip>\r\n                                <ImportButton importData={importData} language={language} />\r\n                            </div>\r\n                            <BatchConverter language={language} />\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\r\n                                <span>\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <div className=\"card-canvas-container\">\r\n                            <StyledCardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <Tooltip title={language['button.reset.tooltip']}>\r\n                                    <ResetButton className=\"reset-button\" onClick={() => {\r\n                                        const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                        if (consent) {\r\n                                            const { setCard, card } = useCard.getState();\r\n                                            const defaultCard = getDefaultCard();\r\n                                            const contextualDefaultCardData = card.format === 'tcg'\r\n                                                ? defaultCard\r\n                                                : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                            setCard(contextualDefaultCardData);\r\n                                            setImageChangeCount(cnt => cnt + 1);\r\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                        }\r\n                                    }}>\r\n                                        <ClearOutlined />\r\n                                    </ResetButton>\r\n                                </Tooltip>\r\n                                <Tooltip title={<div className=\"center\">\r\n                                    {language['button.full-size.label']}\r\n                                    {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                                </div>}>\r\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                        <ZoomInOutlined />\r\n                                    </LightboxButton>\r\n                                </Tooltip>\r\n                                <canvas id=\"export-canvas\" key={canvasKey + 0.1} ref={drawCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\" key={canvasKey} ref={frameCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={CanvasWidth} height={148} />\r\n                                <canvas id=\"cardIconCanvas\" ref={cardIconCanvasRef} width={CanvasWidth} height={222} />\r\n                                <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={CanvasWidth} height={889} />\r\n                                <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={CanvasWidth} height={889} />\r\n                                <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={CanvasWidth} height={1037} />\r\n                                <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={CanvasWidth} height={1111} />\r\n                                <canvas id=\"statCanvas\" ref={statCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"setIdCanvas\" ref={setIdCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"passwordCanvas\" ref={passwordCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"creatorCanvas\" ref={creatorCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"stickerCanvas\" ref={stickerCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"finishCanvas\" ref={finishCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas className=\"crop-canvas\" ref={artworkCanvasRef} />\r\n                                <canvas className=\"crop-canvas\" ref={backgroundCanvasRef} />\r\n                            </StyledCardCanvasGroupContainer>\r\n                        </div>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                {/** Pixel perfect for card image */}\r\n                <Modal\r\n                    width=\"843px\"\r\n                    wrapClassName=\"card-lightbox-overlay\"\r\n                    visible={lightboxVisible}\r\n                    forceRender={true}\r\n                    onCancel={() => setLightboxVisible(false)}\r\n                    footer={null}\r\n                >\r\n                    <canvas key={canvasKey + 0.1}\r\n                        id=\"lightbox-canvas\"\r\n                        ref={lightboxCanvasRef}\r\n                        width={CanvasWidth}\r\n                        height={CanvasHeight}\r\n                    />\r\n                </Modal>\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}